# Define SciTE settings for Lua files.

file.patterns.lua=*.lua

filter.lua=Lua (lua)|$(file.patterns.lua)|

lexer.$(file.patterns.lua)=lua

word.chars.lua=$(chars.alpha)$(chars.numeric)_%
word.characters.$(file.patterns.lua)=$(chars.alpha)$(chars.numeric)_%

keywordclass.lua=and break do else elseif end false for function if continue dict int float\
in local nil not or repeat return then true until while self BeginReloadClass class
keywords.$(file.patterns.lua)=$(keywordclass.lua)

# Basic Functions
keywordclass2.lua=_VERSION assert collectgarbage dofile error gcinfo loadfile loadstring \
print tonumber tostring type unpack

#### Lua 4.0
# Basic Functions
keywordclass2.lua4=_ALERT _ERRORMESSAGE _INPUT _PROMPT _OUTPUT \
_STDERR _STDIN _STDOUT call dostring foreach foreachi getn globals newtype \
rawget rawset require sort tinsert tremove new rnew rinit cinit

# String Manipulation & Mathematical Functions
keywordclass3.lua4=abs acos asin atan atan2 ceil cos deg exp \
floor format frexp gsub ldexp log log10 max min mod rad random randomseed \
sin sqrt strbyte strchar strfind strlen strlower strrep strsub strupper tan

# Input and Output Facilities & System Facilities
keywordclass4.lua4=openfile closefile readfrom writeto appendto \
remove rename flush seek tmpfile tmpname read write \
clock date difftime execute exit getenv setlocale time

#### Lua 5.0
# Basic Functions
keywordclass2.lua5=_G getfenv getmetatable ipairs loadlib next pairs pcall \
rawegal rawget rawset require setfenv setmetatable xpcall \
string table math coroutine io os debug
# I put the library names here, so when highlighted standalone, they are probably variable name from Lua 4.0 times.

# String Manipulation, Table Manipulation, Mathematical Functions (string & table & math)
keywordclass3.lua5=string.byte string.char string.dump string.find string.split string.len \
string.lower string.rep string.sub string.upper string.format string.gfind string.gsub \
table.concat table.foreach table.foreachi table.getn table.sort table.insert table.remove table.setn \
math.abs math.acos math.asin math.atan math.atan2 math.ceil math.cos math.deg math.exp \
math.floor math.frexp math.ldexp math.log math.log10 math.max math.min math.mod \
math.pi math.rad math.random math.randomseed math.sin math.sqrt math.tan \
math.bit_or math.bit_and math.bit_lshift math.bit_rshift math.clamp os.mktime

# Coroutine Manipulation, Input and Output Facilities, System Facilities (coroutine & io & os)
keywordclass4.lua5=coroutine.create coroutine.resume coroutine.status \
coroutine.wrap coroutine.yield \
io.close io.flush io.input io.lines io.open io.output io.read io.tmpfile io.type io.write \
io.stdin io.stdout io.stderr \
os.clock os.date os.difftime os.execute os.exit os.getenv os.remove os.rename \
os.setlocale os.time os.tmpname

# I keep keywords5, 6, 7 & 8 for other libraries
# To make the change from Lua 4 to Lua 5 as smooth as possible, I made these properties
# modular and flexible.
# If you use only Lua 4, you can remove the lua5 keywords.
# If you use only Lua 5, you can either remove the lua4 keywords, or put them
# in another property to highlight them in a warning/error style.
# If you still use both, you can keep them like below, or use separate styles.

keywords2.$(file.patterns.lua)=$(keywordclass2.lua) $(keywordclass2.lua4) $(keywordclass2.lua5)
keywords3.$(file.patterns.lua)=$(keywordclass3.lua4) $(keywordclass3.lua5)
keywords4.$(file.patterns.lua)=$(keywordclass4.lua4) $(keywordclass4.lua5)

#~ statement.indent.$(file.patterns.lua)=5 do else function then
#~ statement.end.$(file.patterns.lua)=5 end until
#~ statement.lookback.$(file.patterns.lua)=20
indent.maintain.$(file.patterns.lua)=1

comment.block.lua=--~
comment.block.at.line.start.lua=1

# Lua styles

#Default
style.lua.32=$(font.code.base),fore:#000000
# White space: Visible only in View Whitespace mode (or if it has a back colour)
style.lua.0=fore:#FF0000
# Block comment (Lua 5.0)
style.lua.1=fore:#007F00,$(font.comment)
# Line comment
style.lua.2=fore:#007F00,$(font.comment)
# Doc comment -- Not used in Lua (yet?)
style.lua.3=$(colour.notused),$(font.notused)
# Number
style.lua.4=$(colour.number)
# Keyword
style.lua.5=fore:#0000ff
# String
style.lua.6=$(colour.string)
# Character
style.lua.7=$(colour.char)
# Literal string
style.lua.8=$(colour.string),$(font.code.comment.box)
# Preprocessor (obsolete in Lua 4.0 and up)
style.lua.9=$(colour.preproc)
# Operators
style.lua.10=$(colour.operator)
# Identifier (everything else...)
style.lua.11=
# End of line where string is not closed
style.lua.12=back:#E0C0E0,eolfilled

# Other keywords (bozo test colors :-)
#style.lua.13=$(style.lua.5),back:#D0FFD0
style.lua.13=fore:#800000,font:Courier New,bold,size:11
#style.lua.14=$(style.lua.5),back:#D0D0FF
style.lua.14=fore:#800000,font:Courier New,bold,size:11
style.lua.15=$(style.lua.5),back:#FFD0D0
style.lua.16=$(style.lua.5),back:#FFD0FF
style.lua.17=$(style.lua.5),back:#FFFFD0
style.lua.18=$(style.lua.5),back:#FFA0A0
style.lua.19=$(style.lua.5),back:#FFD0D0
# Braces are only matched in operator style
braces.lua.style=10

#statement.indent.$(file.patterns.lua)=5 begin declare else elsif exception for if is loop while BeginReloadClass
#statement.end.$(file.patterns.lua)=10 ; EndReloadClass
#statement.lookback.$(file.patterns.lua)=20
#block.start.$(file.patterns.lua)=10 then is BeginReloadClass
#block.end.$(file.patterns.lua)=10 EndReloadClass

#command.compile.*.lua="luac.exe" -o "$(FileName).luc" "$(FileNameExt)"
command.compile.*.lua="lua.exe" "all_t.lua"
command.compile.*.js="node.exe" "E:\MyWork\wg\trunk\run\root\sgl\js\all_t.js"

command.build.*.lua="lua.exe" "all_t.lua" "$(FileNameExt)"
command.build.*.js="node.exe" "E:\MyWork\wg\trunk\run\root\sgl\js\all_t.js" "$(FileNameExt)"
#command.build.*.lua="C:/Python25/pythonw" -u "" "$(FileNameExt)"



# Lua 5.0
command.go.*.lua="lua.exe" "$(FileNameExt)"

# Lua 4.0
#command.go.*.lua=Lua-4.0.exe -c -f "$(FileNameExt)"

# keyword
#"0",            1209,                   VIRTKEY, ALT, NOINVERT
#"1",            1200,                   VIRTKEY, ALT, NOINVERT
#187,            IDM_EXPAND,             VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"2",            1201,                   VIRTKEY, ALT, NOINVERT
#"3",            1202,                   VIRTKEY, ALT, NOINVERT
#"4",            1203,                   VIRTKEY, ALT, NOINVERT
#"5",            1204,                   VIRTKEY, ALT, NOINVERT
#"6",            1205,                   VIRTKEY, ALT, NOINVERT
#"7",            1206,                   VIRTKEY, ALT, NOINVERT
#"8",            1207,                   VIRTKEY, ALT, NOINVERT
#"8",            IDM_VIEWSPACE,          VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"9",            1208,                   VIRTKEY, ALT, NOINVERT
#"9",            IDM_VIEWEOL,            VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"B",            IDM_ABBREV,             VIRTKEY, CONTROL, NOINVERT
#"B",            IDM_BOX_COMMENT,        VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"C",            IDM_COPY,               VIRTKEY, CONTROL, NOINVERT
#"E",            IDM_MATCHBRACE,         VIRTKEY, CONTROL, NOINVERT
#"E",            IDM_SELECTTOBRACE,      VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"F",            IDM_FIND,               VIRTKEY, CONTROL, NOINVERT
#"F",            IDM_FINDINFILES,        VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"G",            IDM_GOTO,               VIRTKEY, CONTROL, NOINVERT
#"H",            IDM_REPLACE,            VIRTKEY, CONTROL, NOINVERT
#"I",            IDM_COMPLETE,           VIRTKEY, CONTROL, NOINVERT
#"I",            IDM_INCSEARCH,          VIRTKEY, CONTROL, ALT, NOINVERT
#"I",            IDM_TABSIZE,            VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"J",            IDM_PREVMATCHPPC,       VIRTKEY, CONTROL, NOINVERT
#"J",            IDM_SELECTTOPREVMATCHPPC, VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"K",            IDM_NEXTMATCHPPC,       VIRTKEY, CONTROL, NOINVERT
#"K",            IDM_SELECTTONEXTMATCHPPC, VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"N",            IDM_NEW,                VIRTKEY, CONTROL, NOINVERT
#"O",            IDM_OPEN,               VIRTKEY, CONTROL, NOINVERT
#"O",            IDM_OPENSELECTED,       VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"P",            IDM_PRINT,              VIRTKEY, CONTROL, NOINVERT
#"P",            IDM_SAVEACOPY,          VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"Q",            IDM_BLOCK_COMMENT,      VIRTKEY, CONTROL, NOINVERT
#"Q",            IDM_STREAM_COMMENT,     VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"R",            IDM_REVERT,             VIRTKEY, CONTROL, NOINVERT
#"R",            IDM_INS_ABBREV,         VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"S",            IDM_SAVE,               VIRTKEY, CONTROL, NOINVERT
#"S",            IDM_SAVEAS,             VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"U",            IDM_LWRCASE,            VIRTKEY, CONTROL, NOINVERT
#"U",            IDM_UPRCASE,            VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#VK_BACK,        IDM_UNDO,               VIRTKEY, ALT, NOINVERT
#VK_BACK,        IDM_REDO,               VIRTKEY, SHIFT, ALT, NOINVERT
#VK_CANCEL,      IDM_STOPEXECUTE,        VIRTKEY, CONTROL, NOINVERT
#VK_F1,          IDM_HELP,               VIRTKEY, NOINVERT
#VK_F11,         IDM_FULLSCREEN,         VIRTKEY, NOINVERT
#VK_F11,         IDM_MONOFONT,           VIRTKEY, CONTROL, NOINVERT
#VK_F2,          IDM_BOOKMARK_NEXT,      VIRTKEY, NOINVERT
#VK_F2,          IDM_BOOKMARK_TOGGLE,    VIRTKEY, CONTROL, NOINVERT
#VK_F2,          IDM_BOOKMARK_NEXT_SELECT, VIRTKEY, ALT, NOINVERT
#VK_F2,          IDM_BOOKMARK_PREV,      VIRTKEY, SHIFT, NOINVERT
#VK_F2,          IDM_BOOKMARK_PREV_SELECT, VIRTKEY, SHIFT, ALT, NOINVERT
#VK_F3,          IDM_FINDNEXT,           VIRTKEY, NOINVERT
#VK_F3,          IDM_FINDNEXTSEL,        VIRTKEY, CONTROL, NOINVERT
#VK_F3,          IDM_FINDNEXTBACK,       VIRTKEY, SHIFT, NOINVERT
#VK_F3,          IDM_FINDNEXTBACKSEL,    VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#VK_F4,          IDM_NEXTMSG,            VIRTKEY, NOINVERT
#VK_F4,          IDM_CLOSE,              VIRTKEY, CONTROL, NOINVERT
#VK_F4,          IDM_PREVMSG,            VIRTKEY, SHIFT, NOINVERT
#VK_F5,          IDM_GO,                 VIRTKEY, NOINVERT
#VK_F5,          IDM_CLEAROUTPUT,        VIRTKEY, SHIFT, NOINVERT
#VK_F6,          IDM_NEXTFILE,           VIRTKEY, NOINVERT
#VK_F6,          IDM_SWITCHPANE,         VIRTKEY, CONTROL, NOINVERT
#VK_F6,          IDM_PREVFILE,           VIRTKEY, SHIFT, NOINVERT
#VK_F6,          IDM_SWITCHPANE,         VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#VK_F7,          IDM_BUILD,              VIRTKEY, NOINVERT
#VK_F7,          IDM_COMPILE,            VIRTKEY, CONTROL, NOINVERT
#VK_F8,          IDM_TOGGLEOUTPUT,       VIRTKEY, NOINVERT
##VK_F8,          IDM_TOGGLEPARAMETERS,   VIRTKEY, SHIFT, NOINVERT
#VK_F9,          IDM_MACROPLAY,          VIRTKEY, NOINVERT
#VK_F9,          IDM_MACRORECORD,        VIRTKEY, CONTROL, NOINVERT
#VK_F9,          IDM_MACROLIST,          VIRTKEY, SHIFT, NOINVERT
#VK_F9,          IDM_MACROSTOPRECORD,    VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#VK_MULTIPLY,    IDM_EXPAND,             VIRTKEY, CONTROL, NOINVERT
#VK_RETURN,      IDM_COMPLETEWORD,       VIRTKEY, CONTROL, NOINVERT
#VK_SPACE,       IDM_COMPLETE,           VIRTKEY, CONTROL, NOINVERT
#VK_SPACE,       IDM_SHOWCALLTIP,        VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#VK_TAB,         IDM_NEXTFILE,           VIRTKEY, CONTROL, NOINVERT
#VK_TAB,         IDM_PREVFILE,           VIRTKEY, SHIFT, CONTROL, 
#												NOINVERT
#"W",            IDM_CLOSE,              VIRTKEY, CONTROL, NOINVERT
#"X",            IDM_CUT,                VIRTKEY, CONTROL, NOINVERT
#"Y",            IDM_REDO,               VIRTKEY, CONTROL, NOINVERT
#"Z",            IDM_UNDO,               VIRTKEY, CONTROL, NOINVERT

command.name.31.* = Reindent Selected Text
command.mode.31.* = subsystem:lua, savebefore:no, groupundo
command.shortcut.31.* = Ctrl+I
command.31.* = indent_selection


