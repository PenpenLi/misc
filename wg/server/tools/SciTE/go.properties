# Define SciTE settings for go files.

filter.go=Python (go)|*.go|

file.patterns.go=*.go

lexer.$(file.patterns.go)=go

keywordclass.go=and assert break class continue del elseif \
else except exec finally for from global if import in is lambda null \
not or pass print raise return try while yield

keywords.$(file.patterns.go)=$(keywordclass.go)

statement.indent.*.go=10 :
statement.end.*.go=
statement.lookback.*.go=0
block.start.*.go=
block.end.*.go=

tab.timmy.whinge.level=1

#fold.comment.go=1
#fold.quotes.go=1

comment.block.go=//~

# Python styles
# White space
style.go.0=fore:#808080
# Comment
style.go.1=fore:#007F00,$(font.comment)
# Number
style.go.2=fore:#007F7F
# String
style.go.3=fore:#7F007F,$(font.monospace)
# Single quoted string
style.go.4=fore:#7F007F,$(font.monospace)
# Keyword
style.go.5=fore:#00007F,bold
# Triple quotes
style.go.6=fore:#7F0000
# Triple double quotes
style.go.7=fore:#7F0000
# Class name definition
style.go.8=fore:#0000FF,bold
# Function or method name definition
style.go.9=fore:#007F7F,bold
# Operators
style.go.10=bold
# Identifiers
style.go.11=
# Comment-blocks
style.go.12=fore:#7F7F7F
# End of line where string is not closed
style.go.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Matched Operators
style.go.34=fore:#0000FF,bold
style.go.35=fore:#FF0000,bold
# Braces are only matched in operator style
braces.go.style=10

if PLAT_WIN
	command.go.*.go="C:/Python25/pythonw" -u "$(FileNameExt)"
	command.go.subsystem.*.go=1
	command.go.*.pyw="C:/Python25/pythonw" -u "$(FileNameExt)"
	command.go.subsystem.*.pyw=1

if PLAT_GTK
	command.go.*.go=go -u $(FileNameExt)

command.name.1.*.go=Syntax Check
command.1.*.go="C:/Python25/go" -c "import py_compile; py_compile.compile(r'$(FilePath)')"
