function IsMiniGame() {
  return void 0 != Laya.Browser.window.wx;
}

function IsSameWeek(t, e) {
  var i = 60 * new Date().getTimezoneOffset();
  t -= i, e -= i;
  var n = Math.floor(t / 86400);
  var s = Math.floor(e / 86400);
  return Math.floor((n + 3) / 7) == Math.floor((s + 3) / 7);
}

function GetResTypeById(t) {
  return [Laya.Loader.TEXT, Laya.Loader.JSON, Laya.Loader.XML, Laya.Loader.BUFFER, Laya.Loader.IMAGE, Laya.Loader.SOUND, Laya.Loader.ATLAS, Laya.Loader.FONT, Laya.Loader.TTF, Laya.Loader.PKM][t];
}

function ConvertFilesToAssets(t) {
  for (var e = [], i = 0; i < t.length; ++i) {
    var n = {};
    n.url = t[i].path, n.type = GetResTypeById(t[i].type), e.push(n);
  }
  return e;
}

function ArrayIndexOf(t, e) {
  for (var i = 0; i < t.length; i++)
    if (t[i] === e) return i;
  return -1;
}

function ArrayRemove(t, e) {
  var i = ArrayIndexOf(t, e);
  i > -1 && t.splice(i, 1);
}

function clone(t) {
  var e;
  if (t instanceof Array) {
    e = [];
    for (var i = t.length; i--;) e[i] = clone(t[i]);
    return e;
  }
  if (t instanceof Object) {
    e = {};
    for (var n in t) e[n] = clone(t[n]);
    return e;
  }
  return t;
}

function StringToIntArray(t) {
  var e = [];
  return t.split(",").forEach(function(t, i, n) {
    /[a-z]/i.test(t) ? e.push(t) : e.push(+t);
  }), e;
}

function AngleToDir(t, e) {
  void 0 === e && (e = 1);
  var i = Math.PI * t / 180;
  return new Laya.Vector3(-Math.cos(i) * e, 0, -Math.sin(i) * e);
}

function DirToAngle(t) {
  return 180 * Math.atan2(-t.z, -t.x) / Math.PI;
}

function ClimpAngle(t) {
  return t < -180 ? t += 360 : t > 180 && (t -= 360), t;
}

function DiffAngle(t, e) {
  var i = Math.abs(t - e);
  return i > 360 && (i = 360 - i), i > 180 && (i = 360 - i), i;
}

function GetRandomInt(t, e) {
  return Math.floor(Math.random() * (e - t + 1) + t);
}

function HttpRequest(t, e, i, n, s, r) {
  var a = new Laya.HttpRequest();
  a.http.timeout = 1e4, a.once(Laya.Event.COMPLETE, null, function(t) {
    4 == a.http.readyState && s.method.apply(s.caller, [t]);
  }), a.once(Laya.Event.ERROR, null, function(t) {
    r.method.apply(r.caller, [t]);
  }), a.send(logic.GameConst.SERVER_URL + t, e, i, n, ["Content-Type", "application/json"]);
}

function HttpPost(t, e, i, n) {
  HttpRequest(t, e = JSON.stringify(e), "post", "json", i, n);
}

function HttpGet(t, e, i) {
  HttpRequest(t, "", "get", "json", e, i);
}

function GetQuery(t) {
  for (var e = new Object(), i = t.split("&"), n = 0; n < i.length; n++) e[i[n].split("=")[0]] = i[n].split("=")[1];
  return e;
}

function WxInitCanvas() {
  if (0 != IsMiniGame()) {
    var t = wx.getOpenDataContext();
    t.canvas.width = Laya.stage.width, t.canvas.height = Laya.stage.height, t.postMessage({
      cmd: "setSize",
      canvasData: {
        width: Laya.stage.width,
        height: Laya.stage.height,
        matrix: Laya.stage._canvasTransform
      },
      isLoad: !1
    });
  }
}

function WxPostRankConfig() {
  if (0 != IsMiniGame()) {
    var t = wx.getOpenDataContext(),
      e = [];
    asgard.data.StaticDataManager.getSheetDatas(data.Post.DATA_TYPE).forEach(function(t) {
      var i = t;
      e[i.Lv] = i.Name;
    }), t.postMessage({
      cmd: "RankConfig",
      config: e,
      isLoad: !1
    }, null, null);
  }
}

function WxGetFriendRankList() {
  if (0 != IsMiniGame()) {
    wx.getOpenDataContext().postMessage({
      cmd: "getRankList",
      isLoad: !1,
      userid: localStorage.getItem("sessionid")
    });
  }
}

function WxShowRank() {
  if (0 != IsMiniGame()) {
    wx.getOpenDataContext().postMessage({
      cmd: "show",
      isLoad: !1,
      userid: localStorage.getItem("sessionid")
    });
  }
}

function WxCloseRank() {
  if (0 != IsMiniGame()) {
    wx.getOpenDataContext().postMessage({
      cmd: "close",
      isLoad: !1,
      userid: localStorage.getItem("sessionid")
    });
  }
}

function WxUpdateFriendRank(t) {
  if (0 != IsMiniGame()) {
    console.log("WxUpdateFriendRank ", t);
    wx.getOpenDataContext().postMessage({
      cmd: "postRank",
      rank: t,
      isLoad: !1,
      userid: localStorage.getItem("sessionid")
    });
  }
}

function WxClearVRank() {
  wx.getOpenDataContext().postMessage({
    type: 7
  });
}

function WxCloseResult() {
  if (IsMiniGame()) {
    wx.getOpenDataContext().postMessage({
      type: 12
    });
  }
}

function navigateToMiniProgram(t, e) {
  if (IsMiniGame()) {
    var i = {
      appId: t,
      path: e,
      extraData: {},
      envVersion: "release",
      success: function(t) {
        console.log("navigateToMiniProgram success");
      },
      fail: function(t) {
        console.log("navigateToMiniProgram fail");
      },
      complete: function(t) {}
    };
    if (wx.navigateToMiniProgram && "function" == typeof wx.navigateToMiniProgram) return wx.navigateToMiniProgram(i);
    i.fail && i.fail("不支持跳转");
  }
}

function openCustomerServiceConversation() {
  if (IsMiniGame()) {
    return wx.openCustomerServiceConversation({});
  }
}

function getLocationFromqqmap(t) {
  IsMiniGame() && wx.getLocationFromqqmap(t);
}

var Laya = window.Laya = function(t, e) {
  var i = {
    __internals: [],
    __packages: {},
    __classmap: {
      Object: Object,
      Function: Function,
      Array: Array,
      String: String
    },
    __sysClass: {
      object: "Object",
      array: "Array",
      string: "String",
      dictionary: "Dictionary"
    },
    __propun: {
      writable: !0,
      enumerable: !1,
      configurable: !0
    },
    __presubstr: String.prototype.substr,
    __substr: function(t, e) {
      return 1 == arguments.length ? i.__presubstr.call(this, t) : i.__presubstr.call(this, t, e > 0 ? e : this.length + e);
    },
    __init: function(t) {
      t.forEach(function(t) {
        t.__init$ && t.__init$();
      });
    },
    __isClass: function(t) {
      return t && (t.__isclass || t == Object || t == String || t == Array);
    },
    __newvec: function(t, e) {
      var i = [];
      i.length = t;
      for (var n = 0; n < t; n++) i[n] = e;
      return i;
    },
    __extend: function(t, e) {
      function n() {
        i.un(this, "constructor", t);
      }
      for (var s in e)
        if (e.hasOwnProperty(s)) {
          var r = Object.getOwnPropertyDescriptor(e, s),
            a = r.get,
            o = r.set;
          a || o ? a && o ? Object.defineProperty(t, s, r) : (a && Object.defineProperty(t, s, a),
            o && Object.defineProperty(t, s, o)) : t[s] = e[s];
        }
      n.prototype = e.prototype, t.prototype = new n(), i.un(t.prototype, "__imps", i.__copy({}, e.prototype.__imps));
    },
    __copy: function(t, e) {
      if (!e) return null;
      t = t || {};
      for (var i in e) t[i] = e[i];
      return t;
    },
    __package: function(e, n) {
      if (!i.__packages[e]) {
        i.__packages[e] = !0;
        var s = t,
          r = e.split(".");
        if (r.length > 1)
          for (var a = 0, o = r.length - 1; a < o; a++) {
            var h = s[r[a]];
            s = h || (s[r[a]] = {});
          }
        s[r[r.length - 1]] || (s[r[r.length - 1]] = n || {});
      }
    },
    __hasOwnProperty: function(t, e) {
      function i(t, e) {
        if (Object.hasOwnProperty.call(e.prototype, t)) return !0;
        var n = e.prototype.__super;
        return null == n ? null : i(t, n);
      }
      return e = e || this, Object.hasOwnProperty.call(e, t) || i(t, e.__class);
    },
    __typeof: function(t, e) {
      if (!t || !e) return !1;
      if (e === String) return "string" == typeof t;
      if (e === Number) return "number" == typeof t;
      if (e.__interface__) e = e.__interface__;
      else if ("string" != typeof e) return t instanceof e;
      return t.__imps && t.__imps[e] || t.__class == e;
    },
    __as: function(t, e) {
      return this.__typeof(t, e) ? t : null;
    },
    __int: function(t) {
      return t ? parseInt(t) : 0;
    },
    interface: function(e, n) {
      i.__package(e, {});
      var s = i.__internals,
        r = s[e] = s[e] || {
          self: e
        };
      if (n) {
        var a = n.split(",");
        r.extend = [];
        for (u = 0; u < a.length; u++) {
          var o = a[u];
          s[o] = s[o] || {
            self: o
          }, r.extend.push(s[o]);
        }
      }
      for (var h = t, l = e.split("."), u = 0; u < l.length - 1; u++) h = h[l[u]];
      h[l[l.length - 1]] = {
        __interface__: e
      };
    },
    class: function(e, n, s, r) {
      if (s && i.__extend(e, s), n)
        if (i.__package(n, e), i.__classmap[n] = e, n.indexOf(".") > 0) {
          if (0 == n.indexOf("laya.")) {
            var a = n.split(".");
            r = r || a[a.length - 1], i[r] && console.log("Warning!,this class[" + r + "] already exist:", i[r]),
              i[r] = e;
          }
        } else "Main" == n ? t.Main = e : (i[n] && console.log("Error!,this class[" + n + "] already exist:", i[n]),
          i[n] = e);
      var o = i.un,
        h = e.prototype;
      o(h, "hasOwnProperty", i.__hasOwnProperty), o(h, "__class", e), o(h, "__super", s),
        o(h, "__className", n), o(e, "__super", s), o(e, "__className", n), o(e, "__isclass", !0),
        o(e, "super", function(t) {
          this.__super.call(t);
        });
    },
    imps: function(t, e) {
      function n(t) {
        var e, r;
        if ((e = i.__internals[t]) && (s[t] = !0, r = e.extend))
          for (var a = 0; a < r.length; a++) n(r[a].self);
      }
      if (!e) return null;
      var s = t.__imps || i.un(t, "__imps", {});
      for (var r in e) n(r);
    },
    superSet: function(t, e, i, n) {
      var s = t.prototype["_$set_" + i];
      s && s.call(e, n);
    },
    superGet: function(t, e, i) {
      var n = t.prototype["_$get_" + i];
      return n ? n.call(e) : null;
    },
    getset: function(t, e, n, s, r) {
      t ? (s && (e["_$GET_" + n] = s), r && (e["_$SET_" + n] = r)) : (s && i.un(e, "_$get_" + n, s),
        r && i.un(e, "_$set_" + n, r)), s && r ? Object.defineProperty(e, n, {
        get: s,
        set: r,
        enumerable: !1,
        configurable: !0
      }) : (s && Object.defineProperty(e, n, {
        get: s,
        enumerable: !1,
        configurable: !0
      }), r && Object.defineProperty(e, n, {
        set: r,
        enumerable: !1,
        configurable: !0
      }));
    },
    static: function(t, e) {
      for (var i = 0, n = e.length; i < n; i += 2) "length" == e[i] ? t.length = e[i + 1].call(t) : function() {
        var n = e[i],
          s = e[i + 1];
        Object.defineProperty(t, n, {
          get: function() {
            return delete this[n], this[n] = s.call(this);
          },
          set: function(t) {
            delete this[n], this[n] = t;
          },
          enumerable: !0,
          configurable: !0
        });
      }();
    },
    un: function(t, e, n) {
      return n || (n = t[e]), i.__propun.value = n, Object.defineProperty(t, e, i.__propun),
        n;
    },
    uns: function(t, e) {
      e.forEach(function(e) {
        i.un(t, e);
      });
    }
  };
  return t.console = t.console || {
    log: function() {}
  }, t.trace = t.console.log, Error.prototype.throwError = function() {
    throw arguments;
  }, Object.defineProperty(Array.prototype, "fixed", {
    enumerable: !1
  }), i;
}(window, document);

! function(t, e, i) {
  i.un, i.uns, i.static, i.class, i.getset, i.__newvec;
}(window, document, Laya),

function(t, e, i) {
  i.un, i.uns;
  var n = i.static,
    s = i.class,
    r = i.getset;
  i.__newvec;
  i.interface("laya.runtime.IMarket"), i.interface("laya.filters.IFilter"), i.interface("laya.display.ILayout"),
    i.interface("laya.resource.IDispose"), i.interface("laya.runtime.IPlatform"), i.interface("laya.resource.IDestroy"),
    i.interface("laya.runtime.IConchNode"), i.interface("laya.filters.IFilterAction"),
    i.interface("laya.runtime.ICPlatformClass"), i.interface("laya.resource.ICreateResource"),
    i.interface("laya.runtime.IConchRenderObject"), i.interface("laya.runtime.IPlatformClass", "laya.runtime.IPlatform");
  var a = function() {
      function e() {}
      return s(e, "laya.utils.RunDriver"), e.FILTER_ACTIONS = [], e.pixelRatio = -1, e._charSizeTestDiv = null,
        e.now = function() {
          return Date.now();
        }, e.getWindow = function() {
          return t;
        }, e.getPixelRatio = function() {
          if (e.pixelRatio < 0) {
            var t = k.context,
              i = t.backingStorePixelRatio || t.webkitBackingStorePixelRatio || t.mozBackingStorePixelRatio || t.msBackingStorePixelRatio || t.oBackingStorePixelRatio || t.backingStorePixelRatio || 1;
            (e.pixelRatio = (k.window.devicePixelRatio || 1) / i) < 1 && (e.pixelRatio = 1);
          }
          return e.pixelRatio;
        }, e.getIncludeStr = function(t) {
          return null;
        }, e.createShaderCondition = function(t) {
          var e = "(function() {return " + t + ";})";
          return i._runScript(e);
        }, e.fontMap = [], e.measureText = function(t, i) {
          var n = e.hanzi.test(t);
          if (n && e.fontMap[i]) return e.fontMap[i];
          var s = k.context;
          s.font = i;
          var r = s.measureText(t);
          return n && (e.fontMap[i] = r), r;
        }, e.getWebGLContext = function(t) {}, e.beginFlush = function() {}, e.endFinish = function() {},
        e.addToAtlas = null, e.flashFlushImage = function(t) {}, e.drawToCanvas = function(t, e, i, n, s, r) {
          var a = vt.create("2D"),
            o = new R(i, n, a);
          return N.renders[e]._fun(t, o, s, r), a;
        }, e.createParticleTemplate2D = null, e.createGLTextur = null, e.createWebGLContext2D = null,
        e.changeWebGLSize = function(t, e) {}, e.createRenderSprite = function(t, e) {
          return new N(t, e);
        }, e.createFilterAction = function(t) {
          return new b();
        }, e.createGraphics = function() {
          return new p();
        }, e.clear = function(t) {
          D._context.ctx.clear();
        }, e.cancelLoadByUrl = function(t) {}, e.clearAtlas = function(t) {}, e.isAtlas = function(t) {
          return !1;
        }, e.addTextureToAtlas = function(t) {}, e.getTexturePixels = function(t, e, i, n, s) {
          return null;
        }, e.skinAniSprite = function() {
          return null;
        }, e.update3DLoop = function() {}, n(e, ["hanzi", function() {
          return this.hanzi = new RegExp("^[一-龥]$");
        }]), e;
    }(),
    o = (r(1, i, "alertGlobalError", null, function(t) {
        var e = 0;
        k.window.onerror = t ? function(t, i, n, s, r) {
          e++ < 5 && r && alert("出错啦，请把此信息截图给研发商\n" + t + "\n" + r.stack || r);
        } : null;
      }), i.init = function(t, e, n) {
        for (var s = [], r = 2, a = arguments.length; r < a; r++) s.push(arguments[r]);
        if (!i._isinit) {
          ArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = i._arrayBufferSlice),
            i._isinit = !0, k.__init__(), O.__init__(), p.__init__(), i.timer = new K(), i.scaleTimer = new K(),
            i.loader = new ot(), Q.__init__();
          for (var r = 0, o = s.length; r < o; r++) s[r].enable && s[r].enable();
          return _.__init__(), c.__init__(), B.__init__(), U.beginCheck(), i._currentStage = i.stage = new mt(),
            i.stage.conchModel && i.stage.conchModel.setRootNode(), i.getUrlPath(), i.render = new D(0, 0),
            i.stage.size(t, e), N.__init__(), m.__init__(), y.instance.__init__(i.stage, D.canvas),
            bt.__init__(), M.autoStopMusic = !0, L.__init__(), D.canvas;
        }
      }, i.getUrlPath = function() {
        var t = k.window.location,
          e = t.pathname;
        e = ":" == e.charAt(2) ? e.substring(1) : e, A.rootPath = A.basePath = A.getPath("file:" == t.protocol ? e : t.protocol + "//" + t.host + t.pathname);
      }, i._arrayBufferSlice = function(t, e) {
        var i = new Uint8Array(this, t, e - t),
          n = new Uint8Array(i.length);
        return n.set(i), n.buffer;
      }, i._runScript = function(t) {
        return k.window["e" + String.fromCharCode(118) + "al"](t);
      }, i.stage = null, i.timer = null, i.scaleTimer = null, i.loader = null, i.version = "1.7.19.1beta",
      i.render = null, i._currentStage = null, i._isinit = !1, i.MiniAdpter = {
        init: function() {
          t.navigator && t.navigator.userAgent && t.navigator.userAgent.indexOf("MiniGame") > -1 && console.error("请先引用小游戏适配库laya.wxmini.js,详细教程：https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0");
        }
      }, n(i, ["conchMarket", function() {
        return this.conchMarket = t.conch ? conchMarket : null;
      }, "PlatformClass", function() {
        return this.PlatformClass = t.PlatformClass;
      }]),
      function() {
        function t() {}
        return s(t, "Config"), t.WebGLTextCacheCount = 500, t.atlasEnable = !1, t.showCanvasMark = !1,
          t.animationInterval = 50, t.isAntialias = !1, t.isAlpha = !1, t.premultipliedAlpha = !0,
          t.isStencil = !0, t.preserveDrawingBuffer = !1, t;
      }()),
    h = function() {
      function t() {
        this._events = null;
      }
      var e;
      s(t, "laya.events.EventDispatcher");
      var i = t.prototype;
      return i.hasListener = function(t) {
        return !!(this._events && this._events[t]);
      }, i.event = function(t, e) {
        if (!this._events || !this._events[t]) return !1;
        var i = this._events[t];
        if (i.run) i.once && delete this._events[t], null != e ? i.runWith(e) : i.run();
        else {
          for (var n = 0, s = i.length; n < s; n++) {
            var r = i[n];
            r && (null != e ? r.runWith(e) : r.run()), r && !r.once || (i.splice(n, 1), n--,
              s--);
          }
          0 === i.length && this._events && delete this._events[t];
        }
        return !0;
      }, i.on = function(t, e, i, n) {
        return this._createListener(t, e, i, n, !1);
      }, i.once = function(t, e, i, n) {
        return this._createListener(t, e, i, n, !0);
      }, i._createListener = function(t, i, n, s, r, a) {
        void 0 === a && (a = !0), a && this.off(t, i, n, r);
        var o = e.create(i || this, n, s, r);
        this._events || (this._events = {});
        var h = this._events;
        return h[t] ? h[t].run ? h[t] = [h[t], o] : h[t].push(o) : h[t] = o, this;
      }, i.off = function(t, e, i, n) {
        if (void 0 === n && (n = !1), !this._events || !this._events[t]) return this;
        var s = this._events[t];
        if (null != i)
          if (s.run) e && s.caller !== e || s.method !== i || n && !s.once || (delete this._events[t],
            s.recover());
          else {
            for (var r = 0, a = 0, o = s.length; a < o; a++) {
              var h = s[a];
              h ? !h || e && h.caller !== e || h.method !== i || n && !h.once || (r++, s[a] = null,
                h.recover()) : r++;
            }
            r === o && delete this._events[t];
          }
        return this;
      }, i.offAll = function(t) {
        var e = this._events;
        if (!e) return this;
        if (t) this._recoverHandlers(e[t]), delete e[t];
        else {
          for (var i in e) this._recoverHandlers(e[i]);
          this._events = null;
        }
        return this;
      }, i._recoverHandlers = function(t) {
        if (t)
          if (t.run) t.recover();
          else
            for (var e = t.length - 1; e > -1; e--) t[e] && (t[e].recover(),
              t[e] = null);
      }, i.isMouseEvent = function(e) {
        return t.MOUSE_EVENTS[e];
      }, t.MOUSE_EVENTS = {
        rightmousedown: !0,
        rightmouseup: !0,
        rightclick: !0,
        mousedown: !0,
        mouseup: !0,
        mousemove: !0,
        mouseover: !0,
        mouseout: !0,
        click: !0,
        doubleclick: !0
      }, t.__init$ = function() {
        Object.defineProperty(laya.events.EventDispatcher.prototype, "_events", {
          enumerable: !1,
          writable: !0
        }), e = function(t) {
          function e(t, i, n, s) {
            e.__super.call(this, t, i, n, s);
          }
          s(e, "", l);
          return e.prototype.recover = function() {
            this._id > 0 && (this._id = 0, e._pool.push(this.clear()));
          }, e.create = function(t, i, n, s) {
            return void 0 === s && (s = !0), e._pool.length ? e._pool.pop().setTo(t, i, n, s) : new e(t, i, n, s);
          }, e._pool = [], e;
        }();
      }, t;
    }(),
    l = function() {
      function t(t, e, i, n) {
        this.once = !1, this._id = 0, void 0 === n && (n = !1), this.setTo(t, e, i, n);
      }
      s(t, "laya.utils.Handler");
      var e = t.prototype;
      return e.setTo = function(e, i, n, s) {
        return this._id = t._gid++, this.caller = e, this.method = i, this.args = n, this.once = s,
          this;
      }, e.run = function() {
        if (null == this.method) return null;
        var t = this._id,
          e = this.method.apply(this.caller, this.args);
        return this._id === t && this.once && this.recover(), e;
      }, e.runWith = function(t) {
        if (null == this.method) return null;
        var e = this._id;
        if (null == t) var i = this.method.apply(this.caller, this.args);
        else i = this.args || t.unshift ? this.args ? this.method.apply(this.caller, this.args.concat(t)) : this.method.apply(this.caller, t) : this.method.call(this.caller, t);
        return this._id === e && this.once && this.recover(), i;
      }, e.clear = function() {
        return this.caller = null, this.method = null, this.args = null, this;
      }, e.recover = function() {
        this._id > 0 && (this._id = 0, t._pool.push(this.clear()));
      }, t.create = function(e, i, n, s) {
        return void 0 === s && (s = !0), t._pool.length ? t._pool.pop().setTo(e, i, n, s) : new t(e, i, n, s);
      }, t._pool = [], t._gid = 1, t;
    }(),
    u = function() {
      function t() {
        this._texture = null, this._fontCharDic = {}, this._fontWidthMap = {}, this._complete = null,
          this._path = null, this._maxWidth = 0, this._spaceWidth = 10, this._padding = null,
          this.fontSize = 12, this.autoScaleSize = !1, this.letterSpacing = 0;
      }
      s(t, "laya.display.BitmapFont");
      var e = t.prototype;
      return e.loadFont = function(t, e) {
        this._path = t, this._complete = e, i.loader.load([{
          url: this._path,
          type: "xml"
        }, {
          url: this._path.replace(".fnt", ".png"),
          type: "image"
        }], l.create(this, this.onLoaded));
      }, e.onLoaded = function() {
        this.parseFont(at.getRes(this._path), at.getRes(this._path.replace(".fnt", ".png"))),
          this._complete && this._complete.runWith(this._texture ? this : null);
      }, e.parseFont = function(t, e) {
        if (null != t && null != e) {
          this._texture = e;
          var i = t.getElementsByTagName("info");
          if (!i[0].getAttributeNode) return this.parseFont2(t, e);
          this.fontSize = parseInt(i[0].getAttributeNode("size").nodeValue);
          var n = i[0].getAttributeNode("padding").nodeValue.split(",");
          this._padding = [parseInt(n[0]), parseInt(n[1]), parseInt(n[2]), parseInt(n[3])];
          var s;
          s = t.getElementsByTagName("char");
          var r = 0;
          for (r = 0; r < s.length; r++) {
            var a = s[r],
              o = parseInt(a.getAttributeNode("id").nodeValue),
              h = parseInt(a.getAttributeNode("xoffset").nodeValue) / 1,
              l = parseInt(a.getAttributeNode("yoffset").nodeValue) / 1,
              u = parseInt(a.getAttributeNode("xadvance").nodeValue) / 1,
              c = new E();
            c.x = parseInt(a.getAttributeNode("x").nodeValue), c.y = parseInt(a.getAttributeNode("y").nodeValue),
              c.width = parseInt(a.getAttributeNode("width").nodeValue), c.height = parseInt(a.getAttributeNode("height").nodeValue);
            var _ = lt.create(e, c.x, c.y, c.width, c.height, h, l);
            this._maxWidth = Math.max(this._maxWidth, u + this.letterSpacing), this._fontCharDic[o] = _,
              this._fontWidthMap[o] = u;
          }
        }
      }, e.parseFont2 = function(t, e) {
        if (null != t && null != e) {
          this._texture = e;
          var i = t.getElementsByTagName("info");
          this.fontSize = parseInt(i[0].attributes.size.nodeValue);
          var n = i[0].attributes.padding.nodeValue.split(",");
          this._padding = [parseInt(n[0]), parseInt(n[1]), parseInt(n[2]), parseInt(n[3])];
          var s = t.getElementsByTagName("char"),
            r = 0;
          for (r = 0; r < s.length; r++) {
            var a = s[r].attributes,
              o = parseInt(a.id.nodeValue),
              h = parseInt(a.xoffset.nodeValue) / 1,
              l = parseInt(a.yoffset.nodeValue) / 1,
              u = parseInt(a.xadvance.nodeValue) / 1,
              c = new E();
            c.x = parseInt(a.x.nodeValue), c.y = parseInt(a.y.nodeValue), c.width = parseInt(a.width.nodeValue),
              c.height = parseInt(a.height.nodeValue);
            var _ = lt.create(e, c.x, c.y, c.width, c.height, h, l);
            this._maxWidth = Math.max(this._maxWidth, u + this.letterSpacing), this._fontCharDic[o] = _,
              this._fontWidthMap[o] = u;
          }
        }
      }, e.getCharTexture = function(t) {
        return this._fontCharDic[t.charCodeAt(0)];
      }, e.destroy = function() {
        if (this._texture) {
          for (var t in this._fontCharDic) {
            var e = this._fontCharDic[t];
            e && e.destroy();
          }
          this._texture.destroy(), this._fontCharDic = null, this._fontWidthMap = null, this._texture = null;
        }
      }, e.setSpaceWidth = function(t) {
        this._spaceWidth = t;
      }, e.getCharWidth = function(t) {
        var e = t.charCodeAt(0);
        return this._fontWidthMap[e] ? this._fontWidthMap[e] + this.letterSpacing : " " == t ? this._spaceWidth + this.letterSpacing : 0;
      }, e.getTextWidth = function(t) {
        for (var e = 0, i = 0, n = t.length; i < n; i++) e += this.getCharWidth(t.charAt(i));
        return e;
      }, e.getMaxWidth = function() {
        return this._maxWidth;
      }, e.getMaxHeight = function() {
        return this.fontSize;
      }, e.drawText = function(t, e, i, n, s, r) {
        var a, o = this.getTextWidth(t),
          h = 0;
        "center" === s && (h = (r - o) / 2), "right" === s && (h = r - o);
        for (var l = 0, u = 0, c = t.length; u < c; u++)(a = this.getCharTexture(t.charAt(u))) && (e.graphics.drawTexture(a, i + l + h, n),
          l += this.getCharWidth(t.charAt(u)));
      }, t;
    }(),
    c = function() {
      function t() {
        this.alpha = 1, this.visible = !0, this.scrollRect = null, this.blendMode = null,
          this._type = 0, this._tf = t._TF_EMPTY;
      }
      s(t, "laya.display.css.Style");
      var e = t.prototype;
      return e.getTransform = function() {
        return this._tf;
      }, e.setTransform = function(e) {
        this._tf = "none" !== e && e ? e : t._TF_EMPTY;
      }, e.setTranslateX = function(e) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.translateX = e;
      }, e.setTranslateY = function(e) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.translateY = e;
      }, e.setScaleX = function(e) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.scaleX = e;
      }, e.setScale = function(e, i) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.scaleX = e, this._tf.scaleY = i;
      }, e.setScaleY = function(e) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.scaleY = e;
      }, e.setRotate = function(e) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.rotate = e;
      }, e.setSkewX = function(e) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.skewX = e;
      }, e.setSkewY = function(e) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.skewY = e;
      }, e.destroy = function() {
        this.scrollRect = null;
      }, e.render = function(t, e, i, n) {}, e.getCSSStyle = function() {
        return tt.EMPTY;
      }, e._enableLayout = function() {
        return !1;
      }, r(0, e, "scaleX", function() {
        return this._tf.scaleX;
      }, function(t) {
        this.setScaleX(t);
      }), r(0, e, "transform", function() {
        return this.getTransform();
      }, function(t) {
        this.setTransform(t);
      }), r(0, e, "translateX", function() {
        return this._tf.translateX;
      }, function(t) {
        this.setTranslateX(t);
      }), r(0, e, "translateY", function() {
        return this._tf.translateY;
      }, function(t) {
        this.setTranslateY(t);
      }), r(0, e, "scaleY", function() {
        return this._tf.scaleY;
      }, function(t) {
        this.setScaleY(t);
      }), r(0, e, "block", function() {
        return 0 != (1 & this._type);
      }), r(0, e, "skewY", function() {
        return this._tf.skewY;
      }, function(t) {
        this.setSkewY(t);
      }), r(0, e, "rotate", function() {
        return this._tf.rotate;
      }, function(t) {
        this.setRotate(t);
      }), r(0, e, "skewX", function() {
        return this._tf.skewX;
      }, function(t) {
        this.setSkewX(t);
      }), r(0, e, "paddingLeft", function() {
        return 0;
      }), r(0, e, "paddingTop", function() {
        return 0;
      }), r(0, e, "absolute", function() {
        return !0;
      }), t.__init__ = function() {
        t._TF_EMPTY = new d(), t.EMPTY = new t();
      }, t.EMPTY = null, t._TF_EMPTY = null, t;
    }(),
    _ = function() {
      function t(e) {
        this._type = 0, this._weight = 0, this._decoration = null, this._text = null, this.indent = 0,
          this._color = V.create(t.defaultColor), this.family = t.defaultFamily, this.stroke = t._STROKE,
          this.size = t.defaultSize, e && e !== t.EMPTY && e.copyTo(this);
      }
      s(t, "laya.display.css.Font");
      var e = t.prototype;
      return e.set = function(t) {
          this._text = null;
          for (var e = t.split(" "), i = 0, n = e.length; i < n; i++) {
            var s = e[i];
            switch (s) {
              case "italic":
                this.italic = !0;
                continue;

              case "bold":
                this.bold = !0;
                continue;
            }
            s.indexOf("px") > 0 && (this.size = parseInt(s), this.family = e[i + 1], i++);
          }
        }, e.toString = function() {
          return this._text = "", this.italic && (this._text += "italic "), this.bold && (this._text += "bold "),
            this._text += this.size + "px " + this.family;
        }, e.copyTo = function(e) {
          e._type = this._type, e._text = this._text, e._weight = this._weight, e._color = this._color,
            e.family = this.family, e.stroke = this.stroke != t._STROKE ? this.stroke.slice() : t._STROKE,
            e.indent = this.indent, e.size = this.size;
        }, r(0, e, "password", function() {
          return 0 != (1024 & this._type);
        }, function(t) {
          t ? this._type |= 1024 : this._type &= -1025;
        }), r(0, e, "color", function() {
          return this._color.strColor;
        }, function(t) {
          this._color = V.create(t);
        }), r(0, e, "italic", function() {
          return 0 != (512 & this._type);
        }, function(t) {
          t ? this._type |= 512 : this._type &= -513;
        }), r(0, e, "bold", function() {
          return 0 != (2048 & this._type);
        }, function(t) {
          t ? this._type |= 2048 : this._type &= -2049;
        }), r(0, e, "weight", function() {
          return "" + this._weight;
        }, function(t) {
          var e = 0;
          switch (t) {
            case "normal":
              break;

            case "bold":
              this.bold = !0, e = 700;
              break;

            case "bolder":
              e = 800;
              break;

            case "lighter":
              e = 100;
              break;

            default:
              e = parseInt(t);
          }
          this._weight = e, this._text = null;
        }), r(0, e, "decoration", function() {
          return this._decoration ? this._decoration.value : "none";
        }, function(t) {
          var e = t.split(" ");
          switch (this._decoration || (this._decoration = {}), e[0]) {
            case "_":
              this._decoration.type = "underline";
              break;

            case "-":
              this._decoration.type = "line-through";
              break;

            case "overline":
              this._decoration.type = "overline";
              break;

            default:
              this._decoration.type = e[0];
          }
          e[1] && (this._decoration.color = V.create(e)), this._decoration.value = t;
        }), t.__init__ = function() {
          t.EMPTY = new t(null);
        }, t.EMPTY = null, t.defaultColor = "#000000", t.defaultSize = 12, t.defaultFamily = "Arial",
        t.defaultFont = "12px Arial", t._STROKE = [0, "#000000"], t._ITALIC = 512, t._PASSWORD = 1024,
        t._BOLD = 2048, t;
    }(),
    d = function() {
      function t() {
        this.translateX = 0, this.translateY = 0, this.scaleX = 1, this.scaleY = 1, this.rotate = 0,
          this.skewX = 0, this.skewY = 0;
      }
      return s(t, "laya.display.css.TransformInfo"), t;
    }(),
    p = function() {
      function e() {
        if (this._one = null, this._cmds = null, this._render = this._renderEmpty, D.isConchNode) {
          this._nativeObj = new t._conchGraphics(), this.id = this._nativeObj.conchID;
        }
      }
      s(e, "laya.display.Graphics");
      var n = e.prototype;
      return n.destroy = function() {
        this.clear(), this._graphicBounds && this._graphicBounds.destroy(), this._graphicBounds = null,
          this._vectorgraphArray = null, this._sp && (this._sp._renderType = 0), this._sp = null;
      }, n.clear = function(t) {
        void 0 === t && (t = !1);
        var i = 0,
          n = 0;
        if (t) {
          var s = this._one;
          if (this._cmds) {
            for (n = this._cmds.length, i = 0; i < n; i++) !(s = this._cmds[i]) || s.callee !== D._context._drawTexture && s.callee !== D._context._drawTextureWithTransform || (s[0] = null,
              e._cache.push(s));
            this._cmds.length = 0;
          } else s && (!s || s.callee !== D._context._drawTexture && s.callee !== D._context._drawTextureWithTransform || (s[0] = null,
            e._cache.push(s)));
        } else this._cmds = null;
        if (this._one = null, this._render = this._renderEmpty, this._sp && (this._sp._renderType &= -514),
          this._repaint(), this._vectorgraphArray) {
          for (i = 0, n = this._vectorgraphArray.length; i < n; i++) q.getInstance().deleteShape(this._vectorgraphArray[i]);
          this._vectorgraphArray.length = 0;
        }
      }, n._clearBoundsCache = function() {
        this._graphicBounds && this._graphicBounds.reset();
      }, n._initGraphicBounds = function() {
        this._graphicBounds || (this._graphicBounds = new f(), this._graphicBounds._graphics = this);
      }, n._repaint = function() {
        this._clearBoundsCache(), this._sp && this._sp.repaint();
      }, n._isOnlyOne = function() {
        return !this._cmds || 0 === this._cmds.length;
      }, n.getBounds = function(t) {
        return void 0 === t && (t = !1), this._initGraphicBounds(), this._graphicBounds.getBounds(t);
      }, n.getBoundPoints = function(t) {
        return void 0 === t && (t = !1), this._initGraphicBounds(), this._graphicBounds.getBoundPoints(t);
      }, n._addCmd = function(t) {
        this._cmds = this._cmds || [], t.callee = t.shift(), this._cmds.push(t);
      }, n.setFilters = function(t) {
        this._saveToCmd(D._context._setFilters, t);
      }, n.drawTexture = function(t, i, n, s, r, a, o) {
        if (void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === r && (r = 0),
          void 0 === o && (o = 1), !t || o < .01) return null;
        s || (s = t.sourceWidth), r || (r = t.sourceHeight), o = o < 0 ? 0 : o > 1 ? 1 : o;
        var h = !D.isWebGL && (k.onFirefox || k.onEdge || k.onIE || k.onSafari) ? .5 : 0,
          l = s / t.sourceWidth,
          u = r / t.sourceHeight;
        if (s = t.width * l, r = t.height * u, t.loaded && (s <= 0 || r <= 0)) return null;
        i += t.offsetX * l, n += t.offsetY * u, this._sp && (this._sp._renderType |= 512);
        var c;
        return i -= h, n -= h, s += 2 * h, r += 2 * h, e._cache.length ? ((c = e._cache.pop())[0] = t,
            c[1] = i, c[2] = n, c[3] = s, c[4] = r, c[5] = a, c[6] = o) : c = [t, i, n, s, r, a, o],
          c.callee = a || 1 != o ? D._context._drawTextureWithTransform : D._context._drawTexture,
          null != this._one || a || 1 != o ? this._saveToCmd(c.callee, c) : (this._one = c,
            this._render = this._renderOneImg), t.loaded || t.once("loaded", this, this._textureLoaded, [t, c]),
          this._repaint(), c;
      }, n.cleanByTexture = function(t, e, i, n, s) {
        if (void 0 === n && (n = 0), void 0 === s && (s = 0), !t) return this.clear();
        if (this._one && this._render === this._renderOneImg) {
          n || (n = t.sourceWidth), s || (s = t.sourceHeight);
          var r = n / t.sourceWidth,
            a = s / t.sourceHeight;
          n = t.width * r, s = t.height * a, e += t.offsetX * r, i += t.offsetY * a, this._one[0] = t,
            this._one[1] = e, this._one[2] = i, this._one[3] = n, this._one[4] = s, this._repaint();
        } else this.clear(), t && this.drawTexture(t, e, i, n, s);
      }, n.drawTextures = function(t, e) {
        t && this._saveToCmd(D._context._drawTextures, [t, e]);
      }, n.fillTexture = function(t, e, i, n, s, r, a) {
        if (void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === r && (r = "repeat"),
          t) {
          var o = [t, e, i, n, s, r, a || T.EMPTY, {}];
          t.loaded || t.once("loaded", this, this._textureLoaded, [t, o]), this._saveToCmd(D._context._fillTexture, o);
        }
      }, n._textureLoaded = function(t, e) {
        e[3] = e[3] || t.width, e[4] = e[4] || t.height, this._repaint();
      }, n.fillCircle = function(t, e, i, n, s, r, a) {
        i.bitmap.enableMerageInAtlas = !1;
        var o = new Float32Array(2 * (a + 1)),
          h = new Float32Array(2 * (a + 1)),
          l = new Uint16Array(3 * a),
          u = 2 * Math.PI / a,
          c = 0;
        o[0] = n, o[1] = s, h[0] = n / i.width, h[1] = s / i.height;
        for (var _ = 2, d = 0; d < a; d++) {
          var p = r * Math.cos(c) + n,
            f = r * Math.sin(c) + s;
          o[_] = p, o[_ + 1] = f, h[_] = p / i.width, h[_ + 1] = f / i.height, c += u, _ += 2;
        }
        for (_ = 0, d = 0; d < a; d++) l[_++] = 0, l[_++] = d + 1, l[_++] = d + 2 >= a + 1 ? 1 : d + 2;
        this.drawTriangles(i, t, e, o, h, l);
      }, n.drawTriangles = function(t, e, i, n, s, r, a, o, h, l) {
        void 0 === o && (o = 1), this._saveToCmd(D._context.drawTriangles, [t, e, i, n, s, r, a, o, h, l]);
      }, n._saveToCmd = function(t, e) {
        return this._sp && (this._sp._renderType |= 512), null == this._one ? (this._one = e,
            this._render = this._renderOne) : (this._sp && (this._sp._renderType &= -2), this._render = this._renderAll,
            0 === (this._cmds || (this._cmds = [])).length && this._cmds.push(this._one), this._cmds.push(e)),
          e.callee = t, this._repaint(), e;
      }, n.clipRect = function(t, e, i, n) {
        this._saveToCmd(D._context._clipRect, [t, e, i, n]);
      }, n.fillText = function(t, e, i, n, s, r, a) {
        void 0 === a && (a = 0), this._saveToCmd(D._context._fillText, [t, e, i, n || _.defaultFont, s, r]);
      }, n.fillBorderText = function(t, e, i, n, s, r, a, o) {
        this._saveToCmd(D._context._fillBorderText, [t, e, i, n || _.defaultFont, s, r, a, o]);
      }, n.strokeText = function(t, e, i, n, s, r, a) {
        this._saveToCmd(D._context._strokeText, [t, e, i, n || _.defaultFont, s, r, a]);
      }, n.alpha = function(t) {
        t = t < 0 ? 0 : t > 1 ? 1 : t, this._saveToCmd(D._context._alpha, [t]);
      }, n.setAlpha = function(t) {
        t = t < 0 ? 0 : t > 1 ? 1 : t, this._saveToCmd(D._context._setAlpha, [t]);
      }, n.transform = function(t, e, i) {
        void 0 === e && (e = 0), void 0 === i && (i = 0), this._saveToCmd(D._context._transform, [t, e, i]);
      }, n.rotate = function(t, e, i) {
        void 0 === e && (e = 0), void 0 === i && (i = 0), this._saveToCmd(D._context._rotate, [t, e, i]);
      }, n.scale = function(t, e, i, n) {
        void 0 === i && (i = 0), void 0 === n && (n = 0), this._saveToCmd(D._context._scale, [t, e, i, n]);
      }, n.translate = function(t, e) {
        this._saveToCmd(D._context._translate, [t, e]);
      }, n.save = function() {
        this._saveToCmd(D._context._save, []);
      }, n.restore = function() {
        this._saveToCmd(D._context._restore, []);
      }, n.replaceText = function(t) {
        this._repaint();
        var e = this._cmds;
        if (e) {
          for (var i = e.length - 1; i > -1; i--)
            if (this._isTextCmd(e[i].callee)) return e[i][0].toUpperCase ? e[i][0] = t : e[i][0].setText(t), !0;
        } else if (this._one && this._isTextCmd(this._one.callee)) return this._one[0].toUpperCase ? this._one[0] = t : this._one[0].setText(t), !0;
        return !1;
      }, n._isTextCmd = function(t) {
        return t === D._context._fillText || t === D._context._fillBorderText || t === D._context._strokeText;
      }, n.replaceTextColor = function(t) {
        this._repaint();
        var e = this._cmds;
        if (e)
          for (var i = e.length - 1; i > -1; i--) this._isTextCmd(e[i].callee) && (e[i][4] = t,
            e[i][0].toUpperCase || (e[i][0].changed = !0));
        else this._one && this._isTextCmd(this._one.callee) && (this._one[4] = t,
          this._one[0].toUpperCase || (this._one[0].changed = !0));
      }, n.loadImage = function(t, e, n, s, r, a) {
        function o(t) {
          t && (h.drawTexture(t, e, n, s, r), null != a && a.call(h._sp, t));
        }
        var h = this;
        void 0 === e && (e = 0), void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === r && (r = 0);
        var u = at.getRes(t);
        u ? o(u) : i.loader.load(t, l.create(null, o), null, "image");
      }, n._renderEmpty = function(t, e, i, n) {}, n._renderAll = function(t, e, i, n) {
        for (var s, r = this._cmds, a = 0, o = r.length; a < o; a++)(s = r[a]).callee.call(e, i, n, s);
      }, n._renderOne = function(t, e, i, n) {
        this._one.callee.call(e, i, n, this._one);
      }, n._renderOneImg = function(t, e, i, n) {
        this._one.callee.call(e, i, n, this._one), 2305 !== t._renderType && (t._renderType |= 1);
      }, n.drawLine = function(t, e, i, n, s, r) {
        void 0 === r && (r = 1);
        var a = 0;
        D.isWebGL && (a = q.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []),
          this._vectorgraphArray.push(a));
        var o = r % 2 == 0 ? 0 : .5,
          h = [t + o, e + o, i + o, n + o, s, r, a];
        this._saveToCmd(D._context._drawLine, h);
      }, n.drawLines = function(t, e, i, n, s) {
        void 0 === s && (s = 1);
        var r = 0;
        if (i && !(i.length < 4)) {
          D.isWebGL && (r = q.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []),
            this._vectorgraphArray.push(r));
          var a = s % 2 == 0 ? 0 : .5,
            o = [t + a, e + a, i, n, s, r];
          this._saveToCmd(D._context._drawLines, o);
        }
      }, n.drawCurves = function(t, e, i, n, s) {
        void 0 === s && (s = 1);
        var r = [t, e, i, n, s];
        this._saveToCmd(D._context._drawCurves, r);
      }, n.drawRect = function(t, e, i, n, s, r, a) {
        void 0 === a && (a = 1);
        var o = r ? a / 2 : 0,
          h = r ? a : 0,
          l = [t + o, e + o, i - h, n - h, s, r, a];
        this._saveToCmd(D._context._drawRect, l);
      }, n.drawCircle = function(t, e, i, n, s, r) {
        void 0 === r && (r = 1);
        var a = s ? r / 2 : 0,
          o = 0;
        D.isWebGL && (o = q.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []),
          this._vectorgraphArray.push(o));
        var h = [t, e, i - a, n, s, r, o];
        this._saveToCmd(D._context._drawCircle, h);
      }, n.drawPie = function(t, e, i, n, s, r, a, o) {
        void 0 === o && (o = 1);
        var h = a ? o / 2 : 0,
          l = a ? o : 0,
          u = 0;
        D.isWebGL && (u = q.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []),
          this._vectorgraphArray.push(u));
        var c = [t + h, e + h, i - l, n, s, r, a, o, u];
        c[3] = $.toRadian(n), c[4] = $.toRadian(s), this._saveToCmd(D._context._drawPie, c);
      }, n.drawPoly = function(t, e, i, n, s, r) {
        void 0 === r && (r = 1);
        var a = 0,
          o = !1;
        D.isWebGL && (a = q.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []),
          this._vectorgraphArray.push(a), o = !(i.length > 6));
        var h = s ? r % 2 == 0 ? 0 : .5 : 0,
          l = [t + h, e + h, i, n, s, r, a, o];
        this._saveToCmd(D._context._drawPoly, l);
      }, n.drawPath = function(t, e, i, n, s) {
        var r = [t, e, i, n, s];
        this._saveToCmd(D._context._drawPath, r);
      }, r(0, n, "cmds", function() {
        return this._cmds;
      }, function(t) {
        this._sp && (this._sp._renderType |= 512), this._cmds = t, this._render = this._renderAll,
          this._repaint();
      }), e.__init__ = function() {
        if (D.isConchNode) {
          for (var t = laya.display.Graphics.prototype, e = k.window.ConchGraphics.prototype, i = ["clear", "destroy", "alpha", "rotate", "transform", "scale", "translate", "save", "restore", "clipRect", "blendMode", "fillText", "fillBorderText", "_fands", "drawRect", "drawCircle", "drawPie", "drawPoly", "drawPath", "drawImageM", "drawLine", "drawLines", "_drawPs", "drawCurves", "replaceText", "replaceTextColor", "_fillImage", "fillTexture", "setSkinMesh", "drawParticle", "drawImageS"], n = 0, s = i.length; n <= s; n++) {
            var r = i[n];
            t[r] = e[r];
          }
          t._saveToCmd = null, e.drawImageS && (t.drawTextures = function(t, e) {
            if (t && t.loaded && t.bitmap && t.source) {
              var i = t.uv,
                n = t.bitmap.width,
                s = t.bitmap.height;
              this.drawImageS(t.bitmap.source, i[0] * n, i[1] * s, (i[2] - i[0]) * n, (i[5] - i[3]) * s, t.offsetX, t.offsetY, t.width, t.height, e);
            }
          }), t.drawTexture = function(t, e, i, n, s, r, a) {
            if (void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === s && (s = 0),
              void 0 === a && (a = 1), t)
              if (t.loaded) {
                if (t.loaded && t.bitmap && t.source && (n || (n = t.sourceWidth), s || (s = t.sourceHeight),
                    a = a < 0 ? 0 : a > 1 ? 1 : a, n = n - t.sourceWidth + t.width, s = s - t.sourceHeight + t.height, !(n <= 0 || s <= 0))) {
                  e += t.offsetX, i += t.offsetY;
                  var o = t.uv,
                    h = t.bitmap.width,
                    l = t.bitmap.height;
                  this.drawImageM(t.bitmap.source, o[0] * h, o[1] * l, (o[2] - o[0]) * h, (o[5] - o[3]) * l, e, i, n, s, r, a),
                    this._repaint();
                }
              } else t.once("loaded", this, function() {
                this.drawTexture(t, e, i, n, s, r);
              });
          }, t.fillTexture = function(t, e, i, n, s, r, a) {
            if (void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === r && (r = "repeat"),
              t && t.loaded) {
              var o, h = D._context.ctx,
                l = t.bitmap.width,
                u = t.bitmap.height,
                c = t.uv;
              o = t.uv != lt.DEF_UV ? h.createPattern(t.bitmap.source, r, c[0] * l, c[1] * u, (c[2] - c[0]) * l, (c[5] - c[3]) * u) : h.createPattern(t.bitmap.source, r);
              var _ = 0,
                d = 0;
              a && (e += a.x % t.width, i += a.y % t.height, _ -= a.x % t.width, d -= a.y % t.height),
                this._fillImage(o, e, i, _, d, n, s);
            }
          };
        }
      }, e._cache = [], e;
    }(),
    f = function() {
      function t() {
        this._cacheBoundsType = !1;
      }
      s(t, "laya.display.GraphicsBounds");
      var e = t.prototype;
      return e.destroy = function() {
        this._graphics = null, this._temp = null, this._rstBoundPoints = null, this._bounds = null;
      }, e.reset = function() {
        this._temp && (this._temp.length = 0);
      }, e.getBounds = function(t) {
        return void 0 === t && (t = !1), (!this._bounds || !this._temp || this._temp.length < 1 || t != this._cacheBoundsType) && (this._bounds = E._getWrapRec(this.getBoundPoints(t), this._bounds)),
          this._cacheBoundsType = t, this._bounds;
      }, e.getBoundPoints = function(t) {
        return void 0 === t && (t = !1), (!this._temp || this._temp.length < 1 || t != this._cacheBoundsType) && (this._temp = this._getCmdPoints(t)),
          this._cacheBoundsType = t, this._rstBoundPoints = $.copyArray(this._rstBoundPoints, this._temp);
      }, e._getCmdPoints = function(e) {
        void 0 === e && (e = !1);
        var i, n = D._context,
          s = this._graphics.cmds;
        if (i = this._temp || (this._temp = []), i.length = 0, s || null == this._graphics._one || (t._tempCmds.length = 0,
            t._tempCmds.push(this._graphics._one), s = t._tempCmds), !s) return i;
        var r;
        (r = t._tempMatrixArrays).length = 0;
        var a = t._initMatrix;
        a.identity();
        for (var o, h, l = t._tempMatrix, u = NaN, c = NaN, _ = NaN, d = NaN, p = NaN, f = NaN, g = 0, m = s.length; g < m; g++)
          if ((o = s[g]).callee) switch (o.callee) {
            case n._save:
            case 7:
              r.push(a), a = a.clone();
              break;

            case n._restore:
            case 8:
              a = r.pop();
              break;

            case n._scale:
            case 5:
              l.identity(), l.translate(-o[2], -o[3]), l.scale(o[0], o[1]), l.translate(o[2], o[3]),
                this._switchMatrix(a, l);
              break;

            case n._rotate:
            case 3:
              l.identity(), l.translate(-o[1], -o[2]), l.rotate(o[0]), l.translate(o[1], o[2]),
                this._switchMatrix(a, l);
              break;

            case n._translate:
            case 6:
              l.identity(), l.translate(o[0], o[1]), this._switchMatrix(a, l);
              break;

            case n._transform:
            case 4:
              l.identity(), l.translate(-o[1], -o[2]), l.concat(o[0]), l.translate(o[1], o[2]),
                this._switchMatrix(a, l);
              break;

            case 16:
            case 24:
              t._addPointArrToRst(i, E._getBoundPointS(o[0], o[1], o[2], o[3]), a);
              break;

            case 17:
              a.copyTo(l), l.concat(o[4]), t._addPointArrToRst(i, E._getBoundPointS(o[0], o[1], o[2], o[3]), l);
              break;

            case n._drawTexture:
              h = o[0], e ? o[3] && o[4] ? t._addPointArrToRst(i, E._getBoundPointS(o[1], o[2], o[3], o[4]), a) : (h = o[0],
                t._addPointArrToRst(i, E._getBoundPointS(o[1], o[2], h.width, h.height), a)) : (u = (o[3] || h.sourceWidth) / h.width,
                c = (o[4] || h.sourceHeight) / h.height, _ = u * h.sourceWidth, d = c * h.sourceHeight,
                p = h.offsetX > 0 ? h.offsetX : 0, f = h.offsetY > 0 ? h.offsetY : 0, p *= u, f *= c,
                t._addPointArrToRst(i, E._getBoundPointS(o[1] - p, o[2] - f, _, d), a));
              break;

            case n._fillTexture:
              o[3] && o[4] ? t._addPointArrToRst(i, E._getBoundPointS(o[1], o[2], o[3], o[4]), a) : (h = o[0],
                t._addPointArrToRst(i, E._getBoundPointS(o[1], o[2], h.width, h.height), a));
              break;

            case n._drawTextureWithTransform:
              var y;
              o[5] ? (a.copyTo(l), l.concat(o[5]), y = l) : y = a, e ? o[3] && o[4] ? t._addPointArrToRst(i, E._getBoundPointS(o[1], o[2], o[3], o[4]), y) : (h = o[0],
                t._addPointArrToRst(i, E._getBoundPointS(o[1], o[2], h.width, h.height), y)) : (h = o[0],
                u = (o[3] || h.sourceWidth) / h.width, c = (o[4] || h.sourceHeight) / h.height,
                _ = u * h.sourceWidth, d = c * h.sourceHeight, p = h.offsetX > 0 ? h.offsetX : 0,
                f = h.offsetY > 0 ? h.offsetY : 0, p *= u, f *= c, t._addPointArrToRst(i, E._getBoundPointS(o[1] - p, o[2] - f, _, d), y));
              break;

            case n._drawRect:
            case 13:
              t._addPointArrToRst(i, E._getBoundPointS(o[0], o[1], o[2], o[3]), a);
              break;

            case n._drawCircle:
            case n._fillCircle:
            case 14:
              t._addPointArrToRst(i, E._getBoundPointS(o[0] - o[2], o[1] - o[2], o[2] + o[2], o[2] + o[2]), a);
              break;

            case n._drawLine:
            case 20:
              t._tempPoints.length = 0;
              var v = NaN;
              v = .5 * o[5], o[0] == o[2] ? t._tempPoints.push(o[0] + v, o[1], o[2] + v, o[3], o[0] - v, o[1], o[2] - v, o[3]) : o[1] == o[3] ? t._tempPoints.push(o[0], o[1] + v, o[2], o[3] + v, o[0], o[1] - v, o[2], o[3] - v) : t._tempPoints.push(o[0], o[1], o[2], o[3]),
                t._addPointArrToRst(i, t._tempPoints, a);
              break;

            case n._drawCurves:
            case 22:
              t._addPointArrToRst(i, w.I.getBezierPoints(o[2]), a, o[0], o[1]);
              break;

            case n._drawPoly:
            case n._drawLines:
            case 18:
              t._addPointArrToRst(i, o[2], a, o[0], o[1]);
              break;

            case n._drawPath:
            case 19:
              t._addPointArrToRst(i, this._getPathPoints(o[2]), a, o[0], o[1]);
              break;

            case n._drawPie:
            case 15:
              t._addPointArrToRst(i, this._getPiePoints(o[0], o[1], o[2], o[3], o[4]), a);
          }
        return i.length > 200 ? i = $.copyArray(i, E._getWrapRec(i)._getBoundPoints()) : i.length > 8 && (i = I.scanPList(i)),
          i;
      }, e._switchMatrix = function(t, e) {
        e.concat(t), e.copyTo(t);
      }, e._getPiePoints = function(e, i, n, s, r) {
        var a = t._tempPoints;
        t._tempPoints.length = 0, a.push(e, i);
        var o = (r - s) % (2 * Math.PI) / 10,
          h = NaN,
          l = s;
        for (h = 0; h <= 10; h++) a.push(e + n * Math.cos(l), i + n * Math.sin(l)), l += o;
        return a;
      }, e._getPathPoints = function(e) {
        var i = 0,
          n = 0,
          s = t._tempPoints;
        s.length = 0, n = e.length;
        var r;
        for (i = 0; i < n; i++)(r = e[i]).length > 1 && (s.push(r[1], r[2]), r.length > 3 && s.push(r[3], r[4]));
        return s;
      }, t._addPointArrToRst = function(e, i, n, s, r) {
        void 0 === s && (s = 0), void 0 === r && (r = 0);
        var a = 0,
          o = 0;
        for (o = i.length, a = 0; a < o; a += 2) t._addPointToRst(e, i[a] + s, i[a + 1] + r, n);
      }, t._addPointToRst = function(t, e, i, n) {
        var s = T.TEMP;
        s.setTo(e || 0, i || 0), n.transformPoint(s), t.push(s.x, s.y);
      }, t._tempPoints = [], t._tempMatrixArrays = [], t._tempCmds = [], n(t, ["_tempMatrix", function() {
        return this._tempMatrix = new C();
      }, "_initMatrix", function() {
        return this._initMatrix = new C();
      }]), t;
    }(),
    g = function() {
      function t() {}
      s(t, "laya.events.Event");
      var e = t.prototype;
      return e.setTo = function(t, e, i) {
          return this.type = t, this.currentTarget = e, this.target = i, this;
        }, e.stopPropagation = function() {
          this._stoped = !0;
        }, r(0, e, "stageY", function() {
          return i.stage.mouseY;
        }), r(0, e, "charCode", function() {
          return this.nativeEvent.charCode;
        }), r(0, e, "touches", function() {
          var t = this.nativeEvent.touches;
          if (t)
            for (var e = i.stage, n = 0, s = t.length; n < s; n++) {
              var r = t[n],
                a = T.TEMP;
              a.setTo(r.clientX, r.clientY), e._canvasTransform.invertTransformPoint(a), e.transform.invertTransformPoint(a),
                r.stageX = a.x, r.stageY = a.y;
            }
          return t;
        }), r(0, e, "keyLocation", function() {
          return this.nativeEvent.keyLocation;
        }), r(0, e, "ctrlKey", function() {
          return this.nativeEvent.ctrlKey;
        }), r(0, e, "altKey", function() {
          return this.nativeEvent.altKey;
        }), r(0, e, "shiftKey", function() {
          return this.nativeEvent.shiftKey;
        }), r(0, e, "stageX", function() {
          return i.stage.mouseX;
        }), t.EMPTY = new t(), t.MOUSE_DOWN = "mousedown", t.MOUSE_UP = "mouseup", t.CLICK = "click",
        t.RIGHT_MOUSE_DOWN = "rightmousedown", t.RIGHT_MOUSE_UP = "rightmouseup", t.RIGHT_CLICK = "rightclick",
        t.MOUSE_MOVE = "mousemove", t.MOUSE_OVER = "mouseover", t.MOUSE_OUT = "mouseout",
        t.MOUSE_WHEEL = "mousewheel", t.ROLL_OVER = "mouseover", t.ROLL_OUT = "mouseout",
        t.DOUBLE_CLICK = "doubleclick", t.CHANGE = "change", t.CHANGED = "changed", t.RESIZE = "resize",
        t.ADDED = "added", t.REMOVED = "removed", t.DISPLAY = "display", t.UNDISPLAY = "undisplay",
        t.ERROR = "error", t.COMPLETE = "complete", t.LOADED = "loaded", t.PROGRESS = "progress",
        t.INPUT = "input", t.RENDER = "render", t.OPEN = "open", t.MESSAGE = "message",
        t.CLOSE = "close", t.KEY_DOWN = "keydown", t.KEY_PRESS = "keypress", t.KEY_UP = "keyup",
        t.FRAME = "enterframe", t.DRAG_START = "dragstart", t.DRAG_MOVE = "dragmove", t.DRAG_END = "dragend",
        t.ENTER = "enter", t.SELECT = "select", t.BLUR = "blur", t.FOCUS = "focus", t.VISIBILITY_CHANGE = "visibilitychange",
        t.FOCUS_CHANGE = "focuschange", t.PLAYED = "played", t.PAUSED = "paused", t.STOPPED = "stopped",
        t.START = "start", t.END = "end", t.ENABLE_CHANGED = "enablechanged", t.ACTIVE_IN_HIERARCHY_CHANGED = "activeinhierarchychanged",
        t.COMPONENT_ADDED = "componentadded", t.COMPONENT_REMOVED = "componentremoved",
        t.LAYER_CHANGED = "layerchanged", t.HIERARCHY_LOADED = "hierarchyloaded", t.RECOVERED = "recovered",
        t.RELEASED = "released", t.LINK = "link", t.LABEL = "label", t.FULL_SCREEN_CHANGE = "fullscreenchange",
        t.DEVICE_LOST = "devicelost", t.MESH_CHANGED = "meshchanged", t.MATERIAL_CHANGED = "materialchanged",
        t.WORLDMATRIX_NEEDCHANGE = "worldmatrixneedchanged", t.ANIMATION_CHANGED = "animationchanged",
        t.TRIGGER_ENTER = "triggerenter", t.TRIGGER_STAY = "triggerstay", t.TRIGGER_EXIT = "triggerexit",
        t.TRAIL_FILTER_CHANGE = "trailfilterchange", t.DOMINO_FILTER_CHANGE = "dominofilterchange",
        t;
    }(),
    m = (function() {
      function t() {}
      s(t, "laya.events.Keyboard"), t.NUMBER_0 = 48, t.NUMBER_1 = 49, t.NUMBER_2 = 50,
        t.NUMBER_3 = 51, t.NUMBER_4 = 52, t.NUMBER_5 = 53, t.NUMBER_6 = 54, t.NUMBER_7 = 55,
        t.NUMBER_8 = 56, t.NUMBER_9 = 57, t.A = 65, t.B = 66, t.C = 67, t.D = 68, t.E = 69,
        t.F = 70, t.G = 71, t.H = 72, t.I = 73, t.J = 74, t.K = 75, t.L = 76, t.M = 77,
        t.N = 78, t.O = 79, t.P = 80, t.Q = 81, t.R = 82, t.S = 83, t.T = 84, t.U = 85,
        t.V = 86, t.W = 87, t.X = 88, t.Y = 89, t.Z = 90, t.F1 = 112, t.F2 = 113, t.F3 = 114,
        t.F4 = 115, t.F5 = 116, t.F6 = 117, t.F7 = 118, t.F8 = 119, t.F9 = 120, t.F10 = 121,
        t.F11 = 122, t.F12 = 123, t.F13 = 124, t.F14 = 125, t.F15 = 126, t.NUMPAD = 21,
        t.NUMPAD_0 = 96, t.NUMPAD_1 = 97, t.NUMPAD_2 = 98, t.NUMPAD_3 = 99, t.NUMPAD_4 = 100,
        t.NUMPAD_5 = 101, t.NUMPAD_6 = 102, t.NUMPAD_7 = 103, t.NUMPAD_8 = 104, t.NUMPAD_9 = 105,
        t.NUMPAD_ADD = 107, t.NUMPAD_DECIMAL = 110, t.NUMPAD_DIVIDE = 111, t.NUMPAD_ENTER = 108,
        t.NUMPAD_MULTIPLY = 106, t.NUMPAD_SUBTRACT = 109, t.SEMICOLON = 186, t.EQUAL = 187,
        t.COMMA = 188, t.MINUS = 189, t.PERIOD = 190, t.SLASH = 191, t.BACKQUOTE = 192,
        t.LEFTBRACKET = 219, t.BACKSLASH = 220, t.RIGHTBRACKET = 221, t.QUOTE = 222, t.ALTERNATE = 18,
        t.BACKSPACE = 8, t.CAPS_LOCK = 20, t.COMMAND = 15, t.CONTROL = 17, t.DELETE = 46,
        t.ENTER = 13, t.ESCAPE = 27, t.PAGE_UP = 33, t.PAGE_DOWN = 34, t.END = 35, t.HOME = 36,
        t.LEFT = 37, t.UP = 38, t.RIGHT = 39, t.DOWN = 40, t.SHIFT = 16, t.SPACE = 32, t.TAB = 9,
        t.INSERT = 45;
    }(), function() {
      function t() {}
      return s(t, "laya.events.KeyBoardManager"), t.__init__ = function() {
        t._addEvent("keydown"), t._addEvent("keypress"), t._addEvent("keyup");
      }, t._addEvent = function(t) {
        k.document.addEventListener(t, function(e) {
          laya.events.KeyBoardManager._dispatch(e, t);
        }, !0);
      }, t._dispatch = function(e, n) {
        if (t.enabled) {
          t._event._stoped = !1, t._event.nativeEvent = e, t._event.keyCode = e.keyCode || e.which || e.charCode,
            "keydown" === n ? t._pressKeys[t._event.keyCode] = !0 : "keyup" === n && (t._pressKeys[t._event.keyCode] = null);
          for (var s = i.stage.focus && null != i.stage.focus.event && i.stage.focus.displayedInStage ? i.stage.focus : i.stage, r = s; r;) r.event(n, t._event.setTo(n, r, s)),
            r = r.parent;
        }
      }, t.hasKeyDown = function(e) {
        return t._pressKeys[e];
      }, t._pressKeys = {}, t.enabled = !0, n(t, ["_event", function() {
        return this._event = new g();
      }]), t;
    }()),
    y = (function() {
      function t() {}
      s(t, "laya.events.KeyLocation"), t.STANDARD = 0, t.LEFT = 1, t.RIGHT = 2, t.NUM_PAD = 3;
    }(), function() {
      function t() {
        this.mouseX = 0, this.mouseY = 0, this.disableMouseEvent = !1, this.mouseDownTime = 0,
          this.mouseMoveAccuracy = 2, this._stage = null, this._target = null, this._lastMoveTimer = 0,
          this._isLeftMouse = !1, this._eventList = [], this._touchIDs = {}, this._id = 1,
          this._tTouchID = 0, this._event = new g(), this._matrix = new C(), this._point = new T(),
          this._rect = new E(), this._prePoint = new T(), this._curTouchID = NaN;
      }
      s(t, "laya.events.MouseManager");
      var e = t.prototype;
      return e.__init__ = function(e, i) {
          var n = this;
          this._stage = e;
          var s = this,
            r = this._eventList;
          i.oncontextmenu = function(e) {
            if (t.enabled) return !1;
          }, i.addEventListener("mousedown", function(e) {
            t.enabled && (k.onIE || e.preventDefault(), r.push(e), s.mouseDownTime = k.now());
          }), i.addEventListener("mouseup", function(e) {
            t.enabled && (e.preventDefault(), r.push(e), s.mouseDownTime = -k.now());
          }, !0), i.addEventListener("mousemove", function(e) {
            if (t.enabled) {
              e.preventDefault();
              var i = k.now();
              if (i - s._lastMoveTimer < 10) return;
              s._lastMoveTimer = i, r.push(e);
            }
          }, !0), i.addEventListener("mouseout", function(e) {
            t.enabled && r.push(e);
          }), i.addEventListener("mouseover", function(e) {
            t.enabled && r.push(e);
          }), i.addEventListener("touchstart", function(e) {
            t.enabled && (r.push(e), t._isFirstTouch || bt.isInputting || e.preventDefault(),
              s.mouseDownTime = k.now());
          }), i.addEventListener("touchend", function(e) {
            t.enabled ? (t._isFirstTouch || bt.isInputting || e.preventDefault(), t._isFirstTouch = !1,
              r.push(e), s.mouseDownTime = -k.now()) : n._curTouchID = NaN;
          }, !0), i.addEventListener("touchmove", function(e) {
            t.enabled && (e.preventDefault(), r.push(e));
          }, !0), i.addEventListener("touchcancel", function(e) {
            t.enabled ? (e.preventDefault(), r.push(e)) : n._curTouchID = NaN;
          }, !0), i.addEventListener("mousewheel", function(e) {
            t.enabled && r.push(e);
          }), i.addEventListener("DOMMouseScroll", function(e) {
            t.enabled && r.push(e);
          });
        }, e.initEvent = function(t, e) {
          this._event._stoped = !1, this._event.nativeEvent = e || t, this._target = null,
            this._point.setTo(t.pageX || t.clientX, t.pageY || t.clientY), this._stage._canvasTransform.invertTransformPoint(this._point),
            this.mouseX = this._point.x, this.mouseY = this._point.y, this._event.touchId = t.identifier || 0,
            this._tTouchID = this._event.touchId;
          var i;
          (i = v.I._event)._stoped = !1, i.nativeEvent = this._event.nativeEvent, i.touchId = this._event.touchId;
        }, e.checkMouseWheel = function(t) {
          this._event.delta = t.wheelDelta ? .025 * t.wheelDelta : -t.detail;
          for (var e = v.I.getLastOvers(), i = 0, n = e.length; i < n; i++) {
            var s = e[i];
            s.event("mousewheel", this._event.setTo("mousewheel", s, this._target));
          }
        }, e.onMouseMove = function(t) {
          v.I.onMouseMove(t, this._tTouchID);
        }, e.onMouseDown = function(t) {
          if (bt.isInputting && i.stage.focus && i.stage.focus.focus && !i.stage.focus.contains(this._target)) {
            var e = i.stage.focus._tf || i.stage.focus,
              n = t._tf || t;
            n instanceof laya.display.Input && n.multiline == e.multiline ? e._focusOut() : e.focus = !1;
          }
          v.I.onMouseDown(t, this._tTouchID, this._isLeftMouse);
        }, e.onMouseUp = function(t) {
          v.I.onMouseUp(t, this._tTouchID, this._isLeftMouse);
        }, e.check = function(t, e, i, n) {
          this._point.setTo(e, i), t.fromParentPoint(this._point), e = this._point.x, i = this._point.y;
          var s = t.scrollRect;
          if (s && (this._rect.setTo(s.x, s.y, s.width, s.height), !this._rect.contains(e, i))) return !1;
          if (!this.disableMouseEvent) {
            if (t.hitTestPrior && !t.mouseThrough && !this.hitTest(t, e, i)) return !1;
            for (var r = t._childs.length - 1; r > -1; r--) {
              var a = t._childs[r];
              if (!a.destroyed && a.mouseEnabled && a.visible && this.check(a, e, i, n)) return !0;
            }
          }
          var o = !(!t.hitTestPrior || t.mouseThrough || this.disableMouseEvent) || this.hitTest(t, e, i);
          return o ? (this._target = t, n.call(this, t)) : n === this.onMouseUp && t === this._stage && (this._target = this._stage,
            n.call(this, this._target)), o;
        }, e.hitTest = function(t, e, i) {
          var n = !1;
          if (t.scrollRect && (e -= t.scrollRect.x, i -= t.scrollRect.y), t.hitArea instanceof laya.utils.HitArea) return t.hitArea.isHit(e, i);
          if (t.width > 0 && t.height > 0 || t.mouseThrough || t.hitArea)
            if (t.mouseThrough) n = t.getGraphicBounds().contains(e, i);
            else {
              var s = this._rect;
              t.hitArea ? s = t.hitArea : s.setTo(0, 0, t.width, t.height), n = s.contains(e, i);
            }
          return n;
        }, e.runEvent = function() {
          var e = this._eventList.length;
          if (e) {
            for (var i, n = 0, s = 0, r = 0; n < e;) {
              var a = this._eventList[n];
              switch ("mousemove" !== a.type && (this._prePoint.x = this._prePoint.y = -1e6),
                a.type) {
                case "mousedown":
                  this._touchIDs[0] = this._id++, t._isTouchRespond ? t._isTouchRespond = !1 : (this._isLeftMouse = 0 === a.button,
                    this.initEvent(a), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseDown));
                  break;

                case "mouseup":
                  this._isLeftMouse = 0 === a.button, this.initEvent(a), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseUp);
                  break;

                case "mousemove":
                  Math.abs(this._prePoint.x - a.clientX) + Math.abs(this._prePoint.y - a.clientY) >= this.mouseMoveAccuracy && (this._prePoint.x = a.clientX,
                    this._prePoint.y = a.clientY, this.initEvent(a), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseMove));
                  break;

                case "touchstart":
                  t._isTouchRespond = !0, this._isLeftMouse = !0;
                  var o = a.changedTouches;
                  for (s = 0, r = o.length; s < r; s++) i = o[s], (t.multiTouchEnabled || isNaN(this._curTouchID)) && (this._curTouchID = i.identifier,
                    this._id % 200 == 0 && (this._touchIDs = {}), this._touchIDs[i.identifier] = this._id++,
                    this.initEvent(i, a), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseDown));
                  break;

                case "touchend":
                case "touchcancel":
                  t._isTouchRespond = !0, this._isLeftMouse = !0;
                  var h = a.changedTouches;
                  for (s = 0, r = h.length; s < r; s++)
                    if (i = h[s], t.multiTouchEnabled || i.identifier == this._curTouchID) {
                      this._curTouchID = NaN, this.initEvent(i, a);
                      this.check(this._stage, this.mouseX, this.mouseY, this.onMouseUp) || this.onMouseUp(null);
                    }
                  break;

                case "touchmove":
                  var l = a.changedTouches;
                  for (s = 0, r = l.length; s < r; s++) i = l[s], (t.multiTouchEnabled || i.identifier == this._curTouchID) && (this.initEvent(i, a),
                    this.check(this._stage, this.mouseX, this.mouseY, this.onMouseMove));
                  break;

                case "wheel":
                case "mousewheel":
                case "DOMMouseScroll":
                  this.checkMouseWheel(a);
                  break;

                case "mouseout":
                  v.I.stageMouseOut();
                  break;

                case "mouseover":
                  this._stage.event("mouseover", this._event.setTo("mouseover", this._stage, this._stage));
              }
              n++;
            }
            this._eventList.length = 0;
          }
        }, t.enabled = !0, t.multiTouchEnabled = !0, t._isTouchRespond = !1, t._isFirstTouch = !0,
        n(t, ["instance", function() {
          return this.instance = new t();
        }]), t;
    }()),
    v = function() {
      function t() {
        this.preOvers = [], this.preDowns = [], this.preRightDowns = [], this.enable = !0,
          this._lastClickTime = 0, this._event = new g();
      }
      s(t, "laya.events.TouchManager");
      var e = t.prototype;
      return e._clearTempArrs = function() {
        t._oldArr.length = 0, t._newArr.length = 0, t._tEleArr.length = 0;
      }, e.getTouchFromArr = function(t, e) {
        var i = 0,
          n = 0;
        n = e.length;
        var s;
        for (i = 0; i < n; i++)
          if ((s = e[i]).id == t) return s;
        return null;
      }, e.removeTouchFromArr = function(t, e) {
        var i = 0;
        for (i = e.length - 1; i >= 0; i--) e[i].id == t && e.splice(i, 1);
      }, e.createTouchO = function(t, e) {
        var i;
        return i = Y.getItem("TouchData") || {}, i.id = e, i.tar = t, i;
      }, e.onMouseDown = function(e, i, n) {
        if (void 0 === n && (n = !1), this.enable) {
          var s, r, a;
          s = this.getTouchFromArr(i, this.preOvers), a = this.getEles(e, null, t._tEleArr),
            s ? s.tar = e : (r = this.createTouchO(e, i), this.preOvers.push(r)), k.onMobile && this.sendEvents(a, "mouseover", i);
          var o;
          o = n ? this.preDowns : this.preRightDowns, (s = this.getTouchFromArr(i, o)) ? s.tar = e : (r = this.createTouchO(e, i),
            o.push(r)), this.sendEvents(a, n ? "mousedown" : "rightmousedown", i), this._clearTempArrs();
        }
      }, e.sendEvents = function(t, e, i) {
        void 0 === i && (i = 0);
        var n = 0,
          s = 0;
        s = t.length, this._event._stoped = !1;
        var r;
        r = t[0];
        var a;
        for (n = 0; n < s; n++) {
          if ((a = t[n]).destroyed) return;
          if (a.event(e, this._event.setTo(e, a, r)), this._event._stoped) break;
        }
      }, e.getEles = function(t, e, i) {
        for (i ? i.length = 0 : i = []; t && t != e;) i.push(t), t = t.parent;
        return i;
      }, e.checkMouseOutAndOverOfMove = function(e, i, n) {
        if (void 0 === n && (n = 0), i != e) {
          var s, r, a = 0,
            o = 0;
          if (i.contains(e)) r = this.getEles(e, i, t._tEleArr), this.sendEvents(r, "mouseover", n);
          else if (e.contains(i)) r = this.getEles(i, e, t._tEleArr),
            this.sendEvents(r, "mouseout", n);
          else {
            (r = t._tEleArr).length = 0;
            var h;
            h = this.getEles(i, null, t._oldArr);
            var l;
            l = this.getEles(e, null, t._newArr), o = h.length;
            var u = 0;
            for (a = 0; a < o; a++) {
              if (s = h[a], (u = l.indexOf(s)) >= 0) {
                l.splice(u, l.length - u);
                break;
              }
              r.push(s);
            }
            r.length > 0 && this.sendEvents(r, "mouseout", n), l.length > 0 && this.sendEvents(l, "mouseover", n);
          }
        }
      }, e.onMouseMove = function(e, i) {
        if (this.enable) {
          var n, s;
          (n = this.getTouchFromArr(i, this.preOvers)) ? (this.checkMouseOutAndOverOfMove(e, n.tar),
            n.tar = e, s = this.getEles(e, null, t._tEleArr)) : (s = this.getEles(e, null, t._tEleArr),
            this.sendEvents(s, "mouseover", i), this.preOvers.push(this.createTouchO(e, i))),
          this.sendEvents(s, "mousemove", i), this._clearTempArrs();
        }
      }, e.getLastOvers = function() {
        return t._tEleArr.length = 0, this.preOvers.length > 0 && this.preOvers[0].tar ? this.getEles(this.preOvers[0].tar, null, t._tEleArr) : (t._tEleArr.push(i.stage),
          t._tEleArr);
      }, e.stageMouseOut = function() {
        var t;
        t = this.getLastOvers(), this.preOvers.length = 0, this.sendEvents(t, "mouseout", 0);
      }, e.onMouseUp = function(e, i, n) {
        if (void 0 === n && (n = !1), this.enable) {
          var s, r, a, o, h, l = 0,
            u = 0,
            c = k.onMobile;
          r = this.getEles(e, null, t._tEleArr), this.sendEvents(r, n ? "mouseup" : "rightmouseup", i);
          var _;
          if (_ = n ? this.preDowns : this.preRightDowns, s = this.getTouchFromArr(i, _)) {
            var d = !1,
              p = k.now();
            if (d = p - this._lastClickTime < 300, this._lastClickTime = p, e == s.tar) h = r;
            else
              for (a = this.getEles(s.tar, null, t._oldArr),
                (h = t._newArr).length = 0, u = a.length, l = 0; l < u; l++) o = a[l], r.indexOf(o) >= 0 && h.push(o);
            h.length > 0 && this.sendEvents(h, n ? "click" : "rightclick", i), n && d && this.sendEvents(h, "doubleclick", i),
              this.removeTouchFromArr(i, _), s.tar = null, Y.recover("TouchData", s);
          } else;
          (s = this.getTouchFromArr(i, this.preOvers)) && c && ((h = this.getEles(s.tar, null, h)) && h.length > 0 && this.sendEvents(h, "mouseout", i),
              this.removeTouchFromArr(i, this.preOvers), s.tar = null, Y.recover("TouchData", s)),
            this._clearTempArrs();
        }
      }, t._oldArr = [], t._newArr = [], t._tEleArr = [], n(t, ["I", function() {
        return this.I = new t();
      }]), t;
    }(),
    x = function() {
      function t() {
        this._action = null;
      }
      s(t, "laya.filters.Filter");
      var e = t.prototype;
      return i.imps(e, {
          "laya.filters.IFilter": !0
        }), e.callNative = function(t) {}, r(0, e, "type", function() {
          return -1;
        }), r(0, e, "action", function() {
          return this._action;
        }), t.BLUR = 16, t.COLOR = 32, t.GLOW = 8, t._filterStart = null, t._filterEnd = null,
        t._EndTarget = null, t._recycleScope = null, t._filter = null, t._useSrc = null,
        t._endSrc = null, t._useOut = null, t._endOut = null, t;
    }(),
    b = function() {
      function t() {
        this.data = null;
      }
      s(t, "laya.filters.ColorFilterAction");
      var e = t.prototype;
      return i.imps(e, {
        "laya.filters.IFilterAction": !0
      }), e.apply = function(t) {
        var e = t.ctx.ctx,
          i = t.ctx.ctx.canvas;
        if (0 == i.width || 0 == i.height) return i;
        for (var n, s = e.getImageData(0, 0, i.width, i.height), r = s.data, a = 0, o = r.length; a < o; a += 4) n = this.getColor(r[a], r[a + 1], r[a + 2], r[a + 3]),
          0 != r[a + 3] && (r[a] = n[0], r[a + 1] = n[1], r[a + 2] = n[2], r[a + 3] = n[3]);
        return e.putImageData(s, 0, 0), t;
      }, e.getColor = function(t, e, i, n) {
        var s = [];
        if (this.data._mat && this.data._alpha) {
          var r = this.data._mat,
            a = this.data._alpha;
          s[0] = r[0] * t + r[1] * e + r[2] * i + r[3] * n + a[0], s[1] = r[4] * t + r[5] * e + r[6] * i + r[7] * n + a[1],
            s[2] = r[8] * t + r[9] * e + r[10] * i + r[11] * n + a[2], s[3] = r[12] * t + r[13] * e + r[14] * i + r[15] * n + a[3];
        }
        return s;
      }, t;
    }(),
    w = (function() {
      function t() {}
      s(t, "laya.maths.Arith"), t.formatR = function(t) {
        return t > Math.PI && (t -= 2 * Math.PI), t < -Math.PI && (t += 2 * Math.PI), t;
      }, t.isPOT = function(t, e) {
        return t > 0 && 0 == (t & t - 1) && e > 0 && 0 == (e & e - 1);
      }, t.setMatToArray = function(t, e) {
        t.a, t.b, t.c, t.d, t.tx, t.ty, e[0] = t.a, e[1] = t.b, e[4] = t.c, e[5] = t.d,
          e[12] = t.tx, e[13] = t.ty;
      };
    }(), function() {
      function t() {
        this._controlPoints = [new T(), new T(), new T()], this._calFun = this.getPoint2;
      }
      s(t, "laya.maths.Bezier");
      var e = t.prototype;
      return e._switchPoint = function(t, e) {
        var i = this._controlPoints.shift();
        i.setTo(t, e), this._controlPoints.push(i);
      }, e.getPoint2 = function(t, e) {
        var i = this._controlPoints[0],
          n = this._controlPoints[1],
          s = this._controlPoints[2],
          r = Math.pow(1 - t, 2) * i.x + 2 * t * (1 - t) * n.x + Math.pow(t, 2) * s.x,
          a = Math.pow(1 - t, 2) * i.y + 2 * t * (1 - t) * n.y + Math.pow(t, 2) * s.y;
        e.push(r, a);
      }, e.getPoint3 = function(t, e) {
        var i = this._controlPoints[0],
          n = this._controlPoints[1],
          s = this._controlPoints[2],
          r = this._controlPoints[3],
          a = Math.pow(1 - t, 3) * i.x + 3 * n.x * t * (1 - t) * (1 - t) + 3 * s.x * t * t * (1 - t) + r.x * Math.pow(t, 3),
          o = Math.pow(1 - t, 3) * i.y + 3 * n.y * t * (1 - t) * (1 - t) + 3 * s.y * t * t * (1 - t) + r.y * Math.pow(t, 3);
        e.push(a, o);
      }, e.insertPoints = function(t, e) {
        var i = NaN,
          n = NaN;
        for (n = 1 / (t = t > 0 ? t : 5), i = 0; i <= 1; i += n) this._calFun(i, e);
      }, e.getBezierPoints = function(t, e, i) {
        void 0 === e && (e = 5), void 0 === i && (i = 2);
        var n = 0,
          s = 0;
        if ((s = t.length) < 2 * (i + 1)) return [];
        var r;
        switch (r = [], i) {
          case 2:
            this._calFun = this.getPoint2;
            break;

          case 3:
            this._calFun = this.getPoint3;
            break;

          default:
            return [];
        }
        for (; this._controlPoints.length <= i;) this._controlPoints.push(new T());
        for (n = 0; n < 2 * i; n += 2) this._switchPoint(t[n], t[n + 1]);
        for (n = 2 * i; n < s; n += 2) this._switchPoint(t[n], t[n + 1]), n / 2 % i == 0 && this.insertPoints(e, r);
        return r;
      }, n(t, ["I", function() {
        return this.I = new t();
      }]), t;
    }()),
    I = function() {
      function t() {}
      return s(t, "laya.maths.GrahamScan"), t.multiply = function(t, e, i) {
          return (t.x - i.x) * (e.y - i.y) - (e.x - i.x) * (t.y - i.y);
        }, t.dis = function(t, e) {
          return (t.x - e.x) * (t.x - e.x) + (t.y - e.y) * (t.y - e.y);
        }, t._getPoints = function(e, i, n) {
          for (void 0 === i && (i = !1), t._mPointList || (t._mPointList = []); t._mPointList.length < e;) t._mPointList.push(new T());
          return n || (n = []), n.length = 0, i ? t.getFrom(n, t._mPointList, e) : t.getFromR(n, t._mPointList, e),
            n;
        }, t.getFrom = function(t, e, i) {
          var n = 0;
          for (n = 0; n < i; n++) t.push(e[n]);
          return t;
        }, t.getFromR = function(t, e, i) {
          var n = 0;
          for (n = 0; n < i; n++) t.push(e.pop());
          return t;
        }, t.pListToPointList = function(e, i) {
          void 0 === i && (i = !1);
          var n = 0,
            s = e.length / 2,
            r = t._getPoints(s, i, t._tempPointList);
          for (n = 0; n < s; n++) r[n].setTo(e[n + n], e[n + n + 1]);
          return r;
        }, t.pointListToPlist = function(e) {
          var i, n = 0,
            s = e.length,
            r = t._temPList;
          for (r.length = 0, n = 0; n < s; n++) i = e[n], r.push(i.x, i.y);
          return r;
        }, t.scanPList = function(e) {
          return $.copyArray(e, t.pointListToPlist(t.scan(t.pListToPointList(e, !0))));
        }, t.scan = function(e) {
          var i, n, s, r = 0,
            a = 0,
            o = 0,
            h = e.length,
            l = {};
          for ((n = t._temArr).length = 0, r = (h = e.length) - 1; r >= 0; r--) s = (i = e[r]).x + "_" + i.y,
            l.hasOwnProperty(s) || (l[s] = !0, n.push(i));
          for (h = n.length, $.copyArray(e, n), r = 1; r < h; r++)(e[r].y < e[o].y || e[r].y == e[o].y && e[r].x < e[o].x) && (o = r);
          for (i = e[0], e[0] = e[o], e[o] = i, r = 1; r < h - 1; r++) {
            for (o = r, a = r + 1; a < h; a++)(t.multiply(e[a], e[o], e[0]) > 0 || 0 == t.multiply(e[a], e[o], e[0]) && t.dis(e[0], e[a]) < t.dis(e[0], e[o])) && (o = a);
            i = e[r], e[r] = e[o], e[o] = i;
          }
          if (n = t._temArr, n.length = 0, e.length < 3) return $.copyArray(n, e);
          for (n.push(e[0], e[1], e[2]), r = 3; r < h; r++) {
            for (; n.length >= 2 && t.multiply(e[r], n[n.length - 1], n[n.length - 2]) >= 0;) n.pop();
            e[r] && n.push(e[r]);
          }
          return n;
        }, t._mPointList = null, t._tempPointList = [], t._temPList = [], t._temArr = [],
        t;
    }(),
    S = function() {
      function t() {}
      return s(t, "laya.maths.MathUtil"), t.subtractVector3 = function(t, e, i) {
        i[0] = t[0] - e[0], i[1] = t[1] - e[1], i[2] = t[2] - e[2];
      }, t.lerp = function(t, e, i) {
        return t * (1 - i) + e * i;
      }, t.scaleVector3 = function(t, e, i) {
        i[0] = t[0] * e, i[1] = t[1] * e, i[2] = t[2] * e;
      }, t.lerpVector3 = function(t, e, i, n) {
        var s = t[0],
          r = t[1],
          a = t[2];
        n[0] = s + i * (e[0] - s), n[1] = r + i * (e[1] - r), n[2] = a + i * (e[2] - a);
      }, t.lerpVector4 = function(t, e, i, n) {
        var s = t[0],
          r = t[1],
          a = t[2],
          o = t[3];
        n[0] = s + i * (e[0] - s), n[1] = r + i * (e[1] - r), n[2] = a + i * (e[2] - a),
          n[3] = o + i * (e[3] - o);
      }, t.slerpQuaternionArray = function(t, e, i, n, s, r, a) {
        var o, h, l, u, c, _ = t[e + 0],
          d = t[e + 1],
          p = t[e + 2],
          f = t[e + 3],
          g = i[n + 0],
          m = i[n + 1],
          y = i[n + 2],
          v = i[n + 3];
        return (h = _ * g + d * m + p * y + f * v) < 0 && (h = -h, g = -g, m = -m, y = -y,
            v = -v), 1 - h > 1e-6 ? (o = Math.acos(h), l = Math.sin(o), u = Math.sin((1 - s) * o) / l,
            c = Math.sin(s * o) / l) : (u = 1 - s, c = s), r[a + 0] = u * _ + c * g, r[a + 1] = u * d + c * m,
          r[a + 2] = u * p + c * y, r[a + 3] = u * f + c * v, r;
      }, t.getRotation = function(t, e, i, n) {
        return Math.atan2(n - e, i - t) / Math.PI * 180;
      }, t.sortBigFirst = function(t, e) {
        return t == e ? 0 : e > t ? 1 : -1;
      }, t.sortSmallFirst = function(t, e) {
        return t == e ? 0 : e > t ? -1 : 1;
      }, t.sortNumBigFirst = function(t, e) {
        return parseFloat(e) - parseFloat(t);
      }, t.sortNumSmallFirst = function(t, e) {
        return parseFloat(t) - parseFloat(e);
      }, t.sortByKey = function(e, i, n) {
        void 0 === i && (i = !1), void 0 === n && (n = !0);
        var s;
        return s = i ? n ? t.sortNumBigFirst : t.sortBigFirst : n ? t.sortNumSmallFirst : t.sortSmallFirst,
          function(t, i) {
            return s(t[e], i[e]);
          };
      }, t;
    }(),
    C = function() {
      function t(t, e, i, n, s, r) {
        this.inPool = !1, this.bTransform = !1, void 0 === t && (t = 1), void 0 === e && (e = 0),
          void 0 === i && (i = 0), void 0 === n && (n = 1), void 0 === s && (s = 0), void 0 === r && (r = 0),
          this.a = t, this.b = e, this.c = i, this.d = n, this.tx = s, this.ty = r, this._checkTransform();
      }
      s(t, "laya.maths.Matrix");
      var e = t.prototype;
      return e.identity = function() {
        return this.a = this.d = 1, this.b = this.tx = this.ty = this.c = 0, this.bTransform = !1,
          this;
      }, e._checkTransform = function() {
        return this.bTransform = 1 !== this.a || 0 !== this.b || 0 !== this.c || 1 !== this.d;
      }, e.setTranslate = function(t, e) {
        return this.tx = t, this.ty = e, this;
      }, e.translate = function(t, e) {
        return this.tx += t, this.ty += e, this;
      }, e.scale = function(t, e) {
        this.a *= t, this.d *= e, this.c *= t, this.b *= e, this.tx *= t, this.ty *= e,
          this.bTransform = !0;
      }, e.rotate = function(t) {
        var e = Math.cos(t),
          i = Math.sin(t),
          n = this.a,
          s = this.c,
          r = this.tx;
        this.a = n * e - this.b * i, this.b = n * i + this.b * e, this.c = s * e - this.d * i,
          this.d = s * i + this.d * e, this.tx = r * e - this.ty * i, this.ty = r * i + this.ty * e,
          this.bTransform = !0;
      }, e.skew = function(t, e) {
        var i = Math.tan(t),
          n = Math.tan(e),
          s = this.a,
          r = this.b;
        return this.a += n * this.c, this.b += n * this.d, this.c += i * s, this.d += i * r,
          this;
      }, e.invertTransformPoint = function(t) {
        var e = this.a,
          i = this.b,
          n = this.c,
          s = this.d,
          r = this.tx,
          a = e * s - i * n,
          o = s / a,
          h = -i / a,
          l = -n / a,
          u = e / a,
          c = (n * this.ty - s * r) / a,
          _ = -(e * this.ty - i * r) / a;
        return t.setTo(o * t.x + l * t.y + c, h * t.x + u * t.y + _);
      }, e.transformPoint = function(t) {
        return t.setTo(this.a * t.x + this.c * t.y + this.tx, this.b * t.x + this.d * t.y + this.ty);
      }, e.transformPointN = function(t) {
        return t.setTo(this.a * t.x + this.c * t.y, this.b * t.x + this.d * t.y);
      }, e.transformPointArray = function(t, e) {
        for (var i = t.length, n = 0; n < i; n += 2) {
          var s = t[n],
            r = t[n + 1];
          e[n] = this.a * s + this.c * r + this.tx, e[n + 1] = this.b * s + this.d * r + this.ty;
        }
        return e;
      }, e.transformPointArrayScale = function(t, e) {
        for (var i = t.length, n = 0; n < i; n += 2) {
          var s = t[n],
            r = t[n + 1];
          e[n] = this.a * s + this.c * r, e[n + 1] = this.b * s + this.d * r;
        }
        return e;
      }, e.getScaleX = function() {
        return 0 === this.b ? this.a : Math.sqrt(this.a * this.a + this.b * this.b);
      }, e.getScaleY = function() {
        return 0 === this.c ? this.d : Math.sqrt(this.c * this.c + this.d * this.d);
      }, e.invert = function() {
        var t = this.a,
          e = this.b,
          i = this.c,
          n = this.d,
          s = this.tx,
          r = t * n - e * i;
        return this.a = n / r, this.b = -e / r, this.c = -i / r, this.d = t / r, this.tx = (i * this.ty - n * s) / r,
          this.ty = -(t * this.ty - e * s) / r, this;
      }, e.setTo = function(t, e, i, n, s, r) {
        return this.a = t, this.b = e, this.c = i, this.d = n, this.tx = s, this.ty = r,
          this;
      }, e.concat = function(t) {
        var e = this.a,
          i = this.c,
          n = this.tx;
        return this.a = e * t.a + this.b * t.c, this.b = e * t.b + this.b * t.d, this.c = i * t.a + this.d * t.c,
          this.d = i * t.b + this.d * t.d, this.tx = n * t.a + this.ty * t.c + t.tx, this.ty = n * t.b + this.ty * t.d + t.ty,
          this;
      }, e.scaleEx = function(t, e) {
        var i = this.a,
          n = this.b,
          s = this.c,
          r = this.d;
        0 !== n || 0 !== s ? (this.a = t * i, this.b = t * n, this.c = e * s, this.d = e * r) : (this.a = t * i,
          this.b = 0 * r, this.c = 0 * i, this.d = e * r), this.bTransform = !0;
      }, e.rotateEx = function(t) {
        var e = Math.cos(t),
          i = Math.sin(t),
          n = this.a,
          s = this.b,
          r = this.c,
          a = this.d;
        0 !== s || 0 !== r ? (this.a = e * n + i * r, this.b = e * s + i * a, this.c = -i * n + e * r,
            this.d = -i * s + e * a) : (this.a = e * n, this.b = i * a, this.c = -i * n, this.d = e * a),
          this.bTransform = !0;
      }, e.clone = function() {
        var e = t.create();
        return e.a = this.a, e.b = this.b, e.c = this.c, e.d = this.d, e.tx = this.tx, e.ty = this.ty,
          e.bTransform = this.bTransform, e;
      }, e.copyTo = function(t) {
        return t.a = this.a, t.b = this.b, t.c = this.c, t.d = this.d, t.tx = this.tx, t.ty = this.ty,
          t.bTransform = this.bTransform, t;
      }, e.toString = function() {
        return this.a + "," + this.b + "," + this.c + "," + this.d + "," + this.tx + "," + this.ty;
      }, e.destroy = function() {
        if (!this.inPool) {
          var e = t._cache;
          this.inPool = !0, e._length || (e._length = 0), e[e._length++] = this, this.a = this.d = 1,
            this.b = this.c = this.tx = this.ty = 0, this.bTransform = !1;
        }
      }, t.mul = function(t, e, i) {
        var n = t.a,
          s = t.b,
          r = t.c,
          a = t.d,
          o = t.tx,
          h = t.ty,
          l = e.a,
          u = e.b,
          c = e.c,
          _ = e.d,
          d = e.tx,
          p = e.ty;
        return 0 !== u || 0 !== c ? (i.a = n * l + s * c, i.b = n * u + s * _, i.c = r * l + a * c,
          i.d = r * u + a * _, i.tx = l * o + c * h + d, i.ty = u * o + _ * h + p) : (i.a = n * l,
          i.b = s * _, i.c = r * l, i.d = a * _, i.tx = l * o + d, i.ty = _ * h + p), i;
      }, t.mul16 = function(t, e, i) {
        var n = t.a,
          s = t.b,
          r = t.c,
          a = t.d,
          o = t.tx,
          h = t.ty,
          l = e.a,
          u = e.b,
          c = e.c,
          _ = e.d,
          d = e.tx,
          p = e.ty;
        return 0 !== u || 0 !== c ? (i[0] = n * l + s * c, i[1] = n * u + s * _, i[4] = r * l + a * c,
            i[5] = r * u + a * _, i[12] = l * o + c * h + d, i[13] = u * o + _ * h + p) : (i[0] = n * l,
            i[1] = s * _, i[4] = r * l, i[5] = a * _, i[12] = l * o + d, i[13] = _ * h + p),
          i;
      }, t.mulPre = function(t, e, i, n, s, r, a, o) {
        var h = t.a,
          l = t.b,
          u = t.c,
          c = t.d,
          _ = t.tx,
          d = t.ty;
        return 0 !== i || 0 !== n ? (o.a = h * e + l * n, o.b = h * i + l * s, o.c = u * e + c * n,
          o.d = u * i + c * s, o.tx = e * _ + n * d + r, o.ty = i * _ + s * d + a) : (o.a = h * e,
          o.b = l * s, o.c = u * e, o.d = c * s, o.tx = e * _ + r, o.ty = s * d + a), o;
      }, t.mulPos = function(t, e, i, n, s, r, a, o) {
        var h = t.a,
          l = t.b,
          u = t.c,
          c = t.d,
          _ = t.tx,
          d = t.ty;
        return 0 !== l || 0 !== u ? (o.a = e * h + i * u, o.b = e * l + i * c, o.c = n * h + s * u,
          o.d = n * l + s * c, o.tx = h * r + u * a + _, o.ty = l * r + c * a + d) : (o.a = e * h,
          o.b = i * c, o.c = n * h, o.d = s * c, o.tx = h * r + _, o.ty = c * a + d), o;
      }, t.preMul = function(t, e, i) {
        var n = t.a,
          s = t.b,
          r = t.c,
          a = t.d,
          o = e.a,
          h = e.b,
          l = e.c,
          u = e.d,
          c = e.tx,
          _ = e.ty;
        return i.a = o * n, i.b = i.c = 0, i.d = u * a, i.tx = c * n + t.tx, i.ty = _ * a + t.ty,
          0 === h && 0 === l && 0 === s && 0 === r || (i.a += h * r, i.d += l * s, i.b += o * s + h * a,
            i.c += l * n + u * r, i.tx += _ * r, i.ty += c * s), i;
      }, t.preMulXY = function(t, e, i, n) {
        var s = t.a,
          r = t.b,
          a = t.c,
          o = t.d;
        return n.a = s, n.b = r, n.c = a, n.d = o, n.tx = e * s + t.tx + i * a, n.ty = i * o + t.ty + e * r,
          n;
      }, t.create = function() {
        var e = t._cache,
          i = e._length ? e[--e._length] : new t();
        return i.inPool = !1, i;
      }, t.EMPTY = new t(), t.TEMP = new t(), t._cache = [], t;
    }(),
    T = function() {
      function t(t, e) {
        void 0 === t && (t = 0), void 0 === e && (e = 0), this.x = t, this.y = e;
      }
      s(t, "laya.maths.Point");
      var e = t.prototype;
      return e.setTo = function(t, e) {
        return this.x = t, this.y = e, this;
      }, e.distance = function(t, e) {
        return Math.sqrt((this.x - t) * (this.x - t) + (this.y - e) * (this.y - e));
      }, e.toString = function() {
        return this.x + "," + this.y;
      }, e.normalize = function() {
        var t = Math.sqrt(this.x * this.x + this.y * this.y);
        if (t > 0) {
          var e = 1 / t;
          this.x *= e, this.y *= e;
        }
      }, t.TEMP = new t(), t.EMPTY = new t(), t;
    }(),
    E = function() {
      function t(t, e, i, n) {
        void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0),
          this.x = t, this.y = e, this.width = i, this.height = n;
      }
      s(t, "laya.maths.Rectangle");
      var e = t.prototype;
      return e.setTo = function(t, e, i, n) {
        return this.x = t, this.y = e, this.width = i, this.height = n, this;
      }, e.copyFrom = function(t) {
        return this.x = t.x, this.y = t.y, this.width = t.width, this.height = t.height,
          this;
      }, e.contains = function(t, e) {
        return !(this.width <= 0 || this.height <= 0) && (t >= this.x && t < this.right && e >= this.y && e < this.bottom);
      }, e.intersects = function(t) {
        return !(t.x > this.x + this.width || t.x + t.width < this.x || t.y > this.y + this.height || t.y + t.height < this.y);
      }, e.intersection = function(e, i) {
        return this.intersects(e) ? (i || (i = new t()), i.x = Math.max(this.x, e.x), i.y = Math.max(this.y, e.y),
          i.width = Math.min(this.right, e.right) - i.x, i.height = Math.min(this.bottom, e.bottom) - i.y,
          i) : null;
      }, e.union = function(e, i) {
        return i || (i = new t()), this.clone(i), e.width <= 0 || e.height <= 0 ? i : (i.addPoint(e.x, e.y),
          i.addPoint(e.right, e.bottom), this);
      }, e.clone = function(e) {
        return e || (e = new t()), e.x = this.x, e.y = this.y, e.width = this.width, e.height = this.height,
          e;
      }, e.toString = function() {
        return this.x + "," + this.y + "," + this.width + "," + this.height;
      }, e.equals = function(t) {
        return !(!t || t.x !== this.x || t.y !== this.y || t.width !== this.width || t.height !== this.height);
      }, e.addPoint = function(t, e) {
        return this.x > t && (this.width += this.x - t, this.x = t), this.y > e && (this.height += this.y - e,
            this.y = e), this.width < t - this.x && (this.width = t - this.x), this.height < e - this.y && (this.height = e - this.y),
          this;
      }, e._getBoundPoints = function() {
        var e = t._temB;
        return e.length = 0, 0 == this.width || 0 == this.height ? e : (e.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height),
          e);
      }, e.isEmpty = function() {
        return this.width <= 0 || this.height <= 0;
      }, r(0, e, "right", function() {
        return this.x + this.width;
      }), r(0, e, "bottom", function() {
        return this.y + this.height;
      }), t._getBoundPointS = function(e, i, n, s) {
        var r = t._temA;
        return r.length = 0, 0 == n || 0 == s ? r : (r.push(e, i, e + n, i, e, i + s, e + n, i + s),
          r);
      }, t._getWrapRec = function(e, i) {
        if (!e || e.length < 1) return i ? i.setTo(0, 0, 0, 0) : t.TEMP.setTo(0, 0, 0, 0);
        i = i || new t();
        var n, s, r, a, o, h = e.length,
          l = T.TEMP;
        for (r = o = -(s = a = 99999), n = 0; n < h; n += 2) l.x = e[n], l.y = e[n + 1],
          s = s < l.x ? s : l.x, a = a < l.y ? a : l.y, r = r > l.x ? r : l.x, o = o > l.y ? o : l.y;
        return i.setTo(s, a, r - s, o - a);
      }, t.EMPTY = new t(), t.TEMP = new t(), t._temB = [], t._temA = [], t;
    }(),
    M = function() {
      function t() {}
      return s(t, "laya.media.SoundManager"), r(1, t, "useAudioMusic", function() {
          return t._useAudioMusic;
        }, function(e) {
          t._useAudioMusic = e, t._musicClass = e ? et : null;
        }), r(1, t, "autoStopMusic", function() {
          return t._autoStopMusic;
        }, function(e) {
          i.stage.off("blur", null, t._stageOnBlur), i.stage.off("focus", null, t._stageOnFocus),
            i.stage.off("visibilitychange", null, t._visibilityChange), t._autoStopMusic = e,
            e && (i.stage.on("blur", null, t._stageOnBlur), i.stage.on("focus", null, t._stageOnFocus),
              i.stage.on("visibilitychange", null, t._visibilityChange));
        }), r(1, t, "muted", function() {
          return t._muted;
        }, function(e) {
          e != t._muted && (e && t.stopAllSound(), t.musicMuted = e, t._muted = e);
        }), r(1, t, "musicMuted", function() {
          return t._musicMuted;
        }, function(e) {
          e != t._musicMuted && (e ? (t._tMusic && t._musicChannel && !t._musicChannel.isStopped ? t._musicChannel.pause() : t._musicChannel = null,
            t._musicMuted = e) : (t._musicMuted = e, t._tMusic && t._musicChannel && t._musicChannel.resume()));
        }), r(1, t, "soundMuted", function() {
          return t._soundMuted;
        }, function(e) {
          t._soundMuted = e;
        }), t.addChannel = function(e) {
          t._channels.indexOf(e) >= 0 || t._channels.push(e);
        }, t.removeChannel = function(e) {
          var i = 0;
          for (i = t._channels.length - 1; i >= 0; i--) t._channels[i] == e && t._channels.splice(i, 1);
        }, t.disposeSoundIfNotUsed = function(e) {
          var i = 0;
          for (i = t._channels.length - 1; i >= 0; i--)
            if (t._channels[i].url == e) return;
          t.destroySound(e);
        }, t._visibilityChange = function() {
          i.stage.isVisibility ? t._stageOnFocus() : t._stageOnBlur();
        }, t._stageOnBlur = function() {
          t._isActive = !1, t._musicChannel && (t._musicChannel.isStopped || (t._blurPaused = !0,
            t._musicChannel.pause())), t.stopAllSound(), i.stage.once("mousedown", null, t._stageOnFocus);
        }, t._recoverWebAudio = function() {
          st.ctx && "running" != st.ctx.state && st.ctx.resume && st.ctx.resume();
        }, t._stageOnFocus = function() {
          t._isActive = !0, t._recoverWebAudio(), i.stage.off("mousedown", null, t._stageOnFocus),
            t._blurPaused && t._musicChannel && t._musicChannel.isStopped && (t._blurPaused = !1,
              t._musicChannel.resume());
        }, t.playSound = function(e, n, s, r, a) {
          if (void 0 === n && (n = 1), void 0 === a && (a = 0), !t._isActive || !e) return null;
          if (t._muted) return null;
          if (t._recoverWebAudio(), (e = A.formatURL(e)) == t._tMusic) {
            if (t._musicMuted) return null;
          } else {
            if (D.isConchApp) {
              var o = $.getFileExtension(e);
              if ("wav" != o && "ogg" != o) return alert("The sound only supports wav or ogg format,for optimal performance reason,please refer to the official website document."),
                null;
            }
            if (t._soundMuted) return null;
          }
          var h;
          h = i.loader.getRes(e), r || (r = t._soundClass), h || ((h = new r()).load(e), at.cacheRes(e, h));
          var l;
          return (l = h.play(a, n)) ? (l.url = e, l.volume = e == t._tMusic ? t.musicVolume : t.soundVolume,
            l.completeHandler = s, l) : null;
        }, t.destroySound = function(t) {
          var e = i.loader.getRes(t);
          e && (at.clearRes(t), e.dispose());
        }, t.playMusic = function(e, i, n, s) {
          return void 0 === i && (i = 0), void 0 === s && (s = 0), e = A.formatURL(e), t._tMusic = e,
            t._musicChannel && t._musicChannel.stop(), t._musicChannel = t.playSound(e, i, n, t._musicClass, s);
        }, t.stopSound = function(e) {
          e = A.formatURL(e);
          var i, n = 0;
          for (n = t._channels.length - 1; n >= 0; n--)(i = t._channels[n]).url == e && i.stop();
        }, t.stopAll = function() {
          t._tMusic = null;
          var e = 0;
          for (e = t._channels.length - 1; e >= 0; e--) t._channels[e].stop();
        }, t.stopAllSound = function() {
          var e, i = 0;
          for (i = t._channels.length - 1; i >= 0; i--)(e = t._channels[i]).url != t._tMusic && e.stop();
        }, t.stopMusic = function() {
          t._musicChannel && t._musicChannel.stop(), t._tMusic = null;
        }, t.setSoundVolume = function(e, i) {
          if (i) i = A.formatURL(i), t._setVolume(i, e);
          else {
            t.soundVolume = e;
            var n, s = 0;
            for (s = t._channels.length - 1; s >= 0; s--)(n = t._channels[s]).url != t._tMusic && (n.volume = e);
          }
        }, t.setMusicVolume = function(e) {
          t.musicVolume = e, t._setVolume(t._tMusic, e);
        }, t._setVolume = function(e, i) {
          e = A.formatURL(e);
          var n, s = 0;
          for (s = t._channels.length - 1; s >= 0; s--)(n = t._channels[s]).url == e && (n.volume = i);
        }, t.musicVolume = 1, t.soundVolume = 1, t.playbackRate = 1, t._useAudioMusic = !0,
        t._muted = !1, t._soundMuted = !1, t._musicMuted = !1, t._tMusic = null, t._musicChannel = null,
        t._channels = [], t._autoStopMusic = !1, t._blurPaused = !1, t._isActive = !0, t._soundClass = null,
        t._musicClass = null, t.autoReleaseSound = !0, t;
    }(),
    L = function() {
      function e() {}
      var i;
      return s(e, "laya.net.LocalStorage"), e.__init__ = function() {
        e._baseClass || (e._baseClass = i, i.init()), e.items = e._baseClass.items, e.support = e._baseClass.support;
      }, e.setItem = function(t, i) {
        e._baseClass.setItem(t, i);
      }, e.getItem = function(t) {
        return e._baseClass.getItem(t);
      }, e.setJSON = function(t, i) {
        e._baseClass.setJSON(t, i);
      }, e.getJSON = function(t) {
        return e._baseClass.getJSON(t);
      }, e.removeItem = function(t) {
        e._baseClass.removeItem(t);
      }, e.clear = function() {
        e._baseClass.clear();
      }, e._baseClass = null, e.items = null, e.support = !1, e.__init$ = function() {
        i = function() {
          function e() {}
          return s(e, ""), e.init = function() {
            try {
              e.items = t.localStorage, e.setItem("laya", "1"), e.removeItem("laya"), e.support = !0;
            } catch (t) {}
            e.support || console.log("LocalStorage is not supprot or browser is private mode.");
          }, e.setItem = function(t, i) {
            try {
              e.support && e.items.setItem(t, i);
            } catch (t) {
              console.warn("set localStorage failed", t);
            }
          }, e.getItem = function(t) {
            return e.support ? e.items.getItem(t) : null;
          }, e.setJSON = function(t, i) {
            try {
              e.support && e.items.setItem(t, JSON.stringify(i));
            } catch (t) {
              console.warn("set localStorage failed", t);
            }
          }, e.getJSON = function(t) {
            return JSON.parse(e.support ? e.items.getItem(t) : null);
          }, e.removeItem = function(t) {
            e.support && e.items.removeItem(t);
          }, e.clear = function() {
            e.support && e.items.clear();
          }, e.items = null, e.support = !1, e;
        }();
      }, e;
    }(),
    P = (function() {
      function t() {}
      s(t, "laya.net.ResourceVersion"), t.enable = function(e, n, s) {
        void 0 === s && (s = 2), laya.net.ResourceVersion.type = s, i.loader.load(e, l.create(null, t.onManifestLoaded, [n]), null, "json"),
          A.customFormat = t.addVersionPrefix;
      }, t.onManifestLoaded = function(e, i) {
        t.manifest = i, e.run(), i || console.warn("资源版本清单文件不存在，不使用资源版本管理。忽略ERR_FILE_NOT_FOUND错误。");
      }, t.addVersionPrefix = function(e) {
        return t.manifest && t.manifest[e] ? 2 == t.type ? t.manifest[e] : t.manifest[e] + "/" + e : e;
      }, t.FOLDER_VERSION = 1, t.FILENAME_VERSION = 2, t.manifest = null, t.type = 1;
    }(), function() {
      function t() {
        this.fontName = null, this.complete = null, this.err = null, this._fontTxt = null,
          this._url = null, this._div = null, this._txtWidth = NaN, this._http = null;
      }
      s(t, "laya.net.TTFLoader");
      var e = t.prototype;
      return e.load = function(t) {
        this._url = t;
        var e = t.split(".ttf")[0].split("/");
        this.fontName = e[e.length - 1], k.window.conch ? this._loadConch() : k.window.FontFace ? this._loadWithFontFace() : this._loadWithCSS();
      }, e._loadConch = function() {
        this._http = new rt(), this._http.on("error", this, this._onErr), this._http.on("complete", this, this._onHttpLoaded),
          this._http.send(this._url, null, "get", "arraybuffer");
      }, e._onHttpLoaded = function(t) {
        k.window.conch.setFontFaceFromBuffer(this.fontName, t), this._clearHttp(), this._complete();
      }, e._clearHttp = function() {
        this._http && (this._http.off("error", this, this._onErr), this._http.off("complete", this, this._onHttpLoaded),
          this._http = null);
      }, e._onErr = function() {
        this._clearHttp(), this.err && (this.err.runWith("fail:" + this._url), this.err = null);
      }, e._complete = function() {
        i.timer.clear(this, this._complete), i.timer.clear(this, this._checkComplete), this._div && this._div.parentNode && (this._div.parentNode.removeChild(this._div),
          this._div = null), this.complete && (this.complete.runWith(this), this.complete = null);
      }, e._checkComplete = function() {
        a.measureText("LayaTTFFont", this._fontTxt).width != this._txtWidth && this._complete();
      }, e._loadWithFontFace = function() {
        var t = new k.window.FontFace(this.fontName, "url('" + this._url + "')");
        k.window.document.fonts.add(t);
        var e = this;
        t.loaded.then(function() {
          e._complete();
        }), t.load();
      }, e._createDiv = function() {
        this._div = k.createElement("div"), this._div.innerHTML = "laya";
        var t = this._div.style;
        t.fontFamily = this.fontName, t.position = "absolute", t.left = "-100px", t.top = "-100px",
          k.document.body.appendChild(this._div);
      }, e._loadWithCSS = function() {
        var t = this,
          e = k.createElement("style");
        e.type = "text/css", k.document.body.appendChild(e), e.textContent = "@font-face { font-family:'" + this.fontName + "'; src:url('" + this._url + "');}",
          this._fontTxt = "40px " + this.fontName, this._txtWidth = a.measureText("LayaTTFFont", this._fontTxt).width;
        var n = this;
        e.onload = function() {
          i.timer.once(1e4, n, t._complete);
        }, i.timer.loop(20, this, this._checkComplete), this._createDiv();
      }, t._testString = "LayaTTFFont", t;
    }()),
    A = function() {
      function t(e) {
        this._url = null, this._path = null, this._url = t.formatURL(e), this._path = t.getPath(e);
      }
      s(t, "laya.net.URL");
      var e = t.prototype;
      return r(0, e, "path", function() {
        return this._path;
      }), r(0, e, "url", function() {
        return this._url;
      }), t.formatURL = function(e, i) {
        if (!e) return "null path";
        if (e.indexOf(":") > 0) return e;
        null != t.customFormat && (e = t.customFormat(e, i));
        var n = e.charAt(0);
        if ("." === n) return t.formatRelativePath((i || t.basePath) + e);
        if ("~" === n) return t.rootPath + e.substring(1);
        if ("d" === n) {
          if (0 === e.indexOf("data:image")) return e;
        } else if ("/" === n) return e;
        return (i || t.basePath) + e;
      }, t.formatRelativePath = function(t) {
        for (var e = t.split("/"), i = 0, n = e.length; i < n; i++) ".." == e[i] && (e.splice(i - 1, 2),
          i -= 2);
        return e.join("/");
      }, t.isAbsolute = function(t) {
        return t.indexOf(":") > 0 || "/" == t.charAt(0);
      }, t.getPath = function(t) {
        var e = t.lastIndexOf("/");
        return e > 0 ? t.substr(0, e + 1) : "";
      }, t.getFileName = function(t) {
        var e = t.lastIndexOf("/");
        return e > 0 ? t.substr(e + 1) : t;
      }, t.version = {}, t.basePath = "", t.rootPath = "", t.customFormat = function(e) {
        var i = t.version[e];
        return !D.isConchApp && i && (e += "?v=" + i), e;
      }, t;
    }(),
    D = function() {
      function e(t, n) {
        function s() {
          i.stage._loop(), k.window.requestAnimationFrame(s);
        }
        this._timeId = 0;
        var r = e._mainCanvas.source.style;
        r.position = "absolute", r.top = r.left = "0px", r.background = "#000000", e._mainCanvas.source.id = "layaCanvas";
        var a = laya.renders.Render.isWebGL;
        e._mainCanvas.source.width = t, e._mainCanvas.source.height = n, a && e.WebGL.init(e._mainCanvas, t, n),
          k.container.appendChild(e._mainCanvas.source), (e._context = new R(t, n, a ? null : e._mainCanvas)).ctx.setIsMainContext(),
          k.window.requestAnimationFrame(s), i.stage.on("visibilitychange", this, this._onVisibilitychange);
      }
      s(e, "laya.renders.Render");
      var n = e.prototype;
      return n._onVisibilitychange = function() {
          i.stage.isVisibility ? 0 != this._timeId && k.window.clearInterval(this._timeId) : this._timeId = k.window.setInterval(this._enterFrame, 1e3);
        }, n._enterFrame = function(t) {
          i.stage._loop();
        }, r(1, e, "context", function() {
          return e._context;
        }), r(1, e, "canvas", function() {
          return e._mainCanvas.source;
        }), e._context = null, e._mainCanvas = null, e.WebGL = null, e.isConchNode = !1,
        e.isConchApp = !1, e.isConchWebGL = !1, e.isWebGL = !1, e.is3DMode = !1, e.optimizeTextureMemory = function(t, e) {
          return !0;
        }, e.__init$ = function() {
          t.ConchRenderType = t.ConchRenderType || 1, t.ConchRenderType |= t.conch ? 4 : 0,
            e.isConchNode = 5 == (5 & t.ConchRenderType), e.isConchApp = 4 == (4 & t.ConchRenderType),
            e.isConchWebGL = 6 == t.ConchRenderType;
        }, e;
    }(),
    R = function() {
      function t(e, i, n) {
        this.x = 0, this.y = 0, this._drawTexture = function(t, e, i) {
          i[0].loaded && this.ctx.drawTexture(i[0], i[1], i[2], i[3], i[4], t, e);
        }, this._fillTexture = function(t, e, i) {
          i[0].loaded && this.ctx.fillTexture(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6], i[7]);
        }, this._drawTextureWithTransform = function(t, e, i) {
          i[0].loaded && this.ctx.drawTextureWithTransform(i[0], i[1], i[2], i[3], i[4], i[5], t, e, i[6]);
        }, this._fillQuadrangle = function(t, e, i) {
          this.ctx.fillQuadrangle(i[0], i[1], i[2], i[3], i[4]);
        }, this._drawRect = function(t, e, i) {
          var n = this.ctx;
          null != i[4] && (n.fillStyle = i[4], n.fillRect(t + i[0], e + i[1], i[2], i[3], null)),
            null != i[5] && (n.strokeStyle = i[5], n.lineWidth = i[6], n.strokeRect(t + i[0], e + i[1], i[2], i[3], i[6]));
        }, this._drawPie = function(t, e, i) {
          var n = this.ctx;
          D.isWebGL && n.setPathId(i[8]), n.beginPath(), D.isWebGL ? (n.movePath(i[0] + t, i[1] + e),
              n.moveTo(0, 0)) : n.moveTo(t + i[0], e + i[1]), n.arc(t + i[0], e + i[1], i[2], i[3], i[4]),
            n.closePath(), this._fillAndStroke(i[5], i[6], i[7], !0);
        }, this._clipRect = function(t, e, i) {
          this.ctx.clipRect(t + i[0], e + i[1], i[2], i[3]);
        }, this._fillRect = function(t, e, i) {
          this.ctx.fillRect(t + i[0], e + i[1], i[2], i[3], i[4]);
        }, this._drawCircle = function(e, i, n) {
          var s = this.ctx;
          D.isWebGL && s.setPathId(n[6]), X.drawCall++, s.beginPath(), D.isWebGL && s.movePath(n[0] + e, n[1] + i),
            s.arc(n[0] + e, n[1] + i, n[2], 0, t.PI2), s.closePath(), this._fillAndStroke(n[3], n[4], n[5], !0);
        }, this._fillCircle = function(e, i, n) {
          X.drawCall++;
          var s = this.ctx;
          s.beginPath(), s.fillStyle = n[3], s.arc(n[0] + e, n[1] + i, n[2], 0, t.PI2), s.fill();
        }, this._setShader = function(t, e, i) {
          this.ctx.setShader(i[0]);
        }, this._drawLine = function(t, e, i) {
          var n = this.ctx;
          D.isWebGL && n.setPathId(i[6]), n.beginPath(), n.strokeStyle = i[4], n.lineWidth = i[5],
            D.isWebGL ? (n.movePath(t, e), n.moveTo(i[0], i[1]), n.lineTo(i[2], i[3])) : (n.moveTo(t + i[0], e + i[1]),
              n.lineTo(t + i[2], e + i[3])), n.stroke();
        }, this._drawLines = function(t, e, i) {
          var n = this.ctx;
          D.isWebGL && n.setPathId(i[5]), n.beginPath(), t += i[0], e += i[1], D.isWebGL && n.movePath(t, e),
            n.strokeStyle = i[3], n.lineWidth = i[4];
          var s = i[2],
            r = 2,
            a = s.length;
          if (D.isWebGL)
            for (n.moveTo(s[0], s[1]); r < a;) n.lineTo(s[r++], s[r++]);
          else
            for (n.moveTo(t + s[0], e + s[1]); r < a;) n.lineTo(t + s[r++], e + s[r++]);
          n.stroke();
        }, this._drawLinesWebGL = function(t, e, i) {
          this.ctx.drawLines(t + this.x + i[0], e + this.y + i[1], i[2], i[3], i[4]);
        }, this._drawCurves = function(t, e, i) {
          this.ctx.drawCurves(t, e, i);
        }, this._draw = function(t, e, i) {
          i[0].call(null, this, t, e);
        }, this._transformByMatrix = function(t, e, i) {
          this.ctx.transformByMatrix(i[0]);
        }, this._setTransform = function(t, e, i) {
          this.ctx.setTransform(i[0], i[1], i[2], i[3], i[4], i[5]);
        }, this._setTransformByMatrix = function(t, e, i) {
          this.ctx.setTransformByMatrix(i[0]);
        }, this._save = function(t, e, i) {
          this.ctx.save();
        }, this._restore = function(t, e, i) {
          this.ctx.restore();
        }, this._translate = function(t, e, i) {
          this.ctx.translate(i[0], i[1]);
        }, this._transform = function(t, e, i) {
          this.ctx.translate(i[1] + t, i[2] + e);
          var n = i[0];
          this.ctx.transform(n.a, n.b, n.c, n.d, n.tx, n.ty), this.ctx.translate(-t - i[1], -e - i[2]);
        }, this._rotate = function(t, e, i) {
          this.ctx.translate(i[1] + t, i[2] + e), this.ctx.rotate(i[0]), this.ctx.translate(-t - i[1], -e - i[2]);
        }, this._scale = function(t, e, i) {
          this.ctx.translate(i[2] + t, i[3] + e), this.ctx.scale(i[0], i[1]), this.ctx.translate(-t - i[2], -e - i[3]);
        }, this._alpha = function(t, e, i) {
          this.ctx.globalAlpha *= i[0];
        }, this._setAlpha = function(t, e, i) {
          this.ctx.globalAlpha = i[0];
        }, this._fillText = function(t, e, i) {
          this.ctx.fillText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5]);
        }, this._strokeText = function(t, e, i) {
          this.ctx.strokeText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6]);
        }, this._fillBorderText = function(t, e, i) {
          this.ctx.fillBorderText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6], i[7]);
        }, this._blendMode = function(t, e, i) {
          this.ctx.globalCompositeOperation = i[0];
        }, this._beginClip = function(t, e, i) {
          this.ctx.beginClip && this.ctx.beginClip(t + i[0], e + i[1], i[2], i[3]);
        }, this._setIBVB = function(t, e, i) {
          this.ctx.setIBVB(i[0] + t, i[1] + e, i[2], i[3], i[4], i[5], i[6], i[7]);
        }, this._fillTrangles = function(t, e, i) {
          this.ctx.fillTrangles(i[0], i[1] + t, i[2] + e, i[3], i[4]);
        }, this._drawPath = function(t, e, i) {
          var n = this.ctx;
          D.isWebGL && n.setPathId(-1), n.beginPath(), t += i[0], e += i[1], D.isWebGL && n.movePath(t, e);
          for (var s = i[2], r = 0, a = s.length; r < a; r++) {
            var o = s[r];
            switch (o[0]) {
              case "moveTo":
                D.isWebGL ? n.moveTo(o[1], o[2]) : n.moveTo(t + o[1], e + o[2]);
                break;

              case "lineTo":
                D.isWebGL ? n.lineTo(o[1], o[2]) : n.lineTo(t + o[1], e + o[2]);
                break;

              case "arcTo":
                D.isWebGL ? n.arcTo(o[1], o[2], o[3], o[4], o[5]) : n.arcTo(t + o[1], e + o[2], t + o[3], e + o[4], o[5]);
                break;

              case "closePath":
                n.closePath();
            }
          }
          var h = i[3];
          null != h && (n.fillStyle = h.fillStyle, n.fill());
          var l = i[4];
          null != l && (n.strokeStyle = l.strokeStyle, n.lineWidth = l.lineWidth || 1, n.lineJoin = l.lineJoin,
            n.lineCap = l.lineCap, n.miterLimit = l.miterLimit, n.stroke());
        }, this.drawPoly = function(t, e, i) {
          this.ctx.drawPoly(t + this.x + i[0], e + this.y + i[1], i[2], i[3], i[4], i[5], i[6]);
        }, this._drawPoly = function(t, e, i) {
          var n = this.ctx,
            s = i[2],
            r = 2,
            a = s.length;
          if (D.isWebGL)
            for (n.setPathId(i[6]), n.beginPath(), t += i[0], e += i[1], n.movePath(t, e),
              n.moveTo(s[0], s[1]); r < a;) n.lineTo(s[r++], s[r++]);
          else
            for (n.beginPath(),
              t += i[0], e += i[1], n.moveTo(t + s[0], e + s[1]); r < a;) n.lineTo(t + s[r++], e + s[r++]);
          n.closePath(), this._fillAndStroke(i[3], i[4], i[5], i[7]);
        }, this._drawSkin = function(t, e, i) {
          var n = i[0];
          if (n) {
            var s = this.ctx;
            n.render(s, t, e);
          }
        }, this._drawParticle = function(t, e, i) {
          this.ctx.drawParticle(t + this.x, e + this.y, i[0]);
        }, this._setFilters = function(t, e, i) {
          this.ctx.setFilters(i);
        }, n ? this.ctx = n.getContext("2d") : (n = vt.create("3D"), this.ctx = a.createWebGLContext2D(n),
          n._setContext(this.ctx)), n.size(e, i), this.canvas = n;
      }
      s(t, "laya.renders.RenderContext");
      var e = t.prototype;
      return e.destroy = function() {
        this.canvas && (this.canvas.destroy(), this.canvas = null, this.ctx = null), this.ctx && (this.ctx.destroy(),
          this.ctx = null);
      }, e.drawTexture = function(t, e, i, n, s) {
        t.loaded && this.ctx.drawTexture(t, e, i, n, s, this.x, this.y);
      }, e._drawTextures = function(t, e, i) {
        i[0].loaded && this.ctx.drawTextures(i[0], i[1], t + this.x, e + this.y);
      }, e.drawTextureWithTransform = function(t, e, i, n, s, r, a) {
        t.loaded && this.ctx.drawTextureWithTransform(t, e, i, n, s, r, this.x, this.y, a);
      }, e.fillQuadrangle = function(t, e, i, n, s) {
        this.ctx.fillQuadrangle(t, e, i, n, s);
      }, e.drawCanvas = function(t, e, i, n, s) {
        this.ctx.drawCanvas(t, e + this.x, i + this.y, n, s);
      }, e.drawRect = function(t, e, i, n, s, r) {
        void 0 === r && (r = 1);
        var a = this.ctx;
        a.strokeStyle = s, a.lineWidth = r, a.strokeRect(t + this.x, e + this.y, i, n, r);
      }, e._fillAndStroke = function(t, e, i, n) {
        void 0 === n && (n = !1);
        var s = this.ctx;
        null != t && (s.fillStyle = t, D.isWebGL ? s.fill(n) : s.fill()), null != e && i > 0 && (s.strokeStyle = e,
          s.lineWidth = i, s.stroke());
      }, e.clipRect = function(t, e, i, n) {
        this.ctx.clipRect(t + this.x, e + this.y, i, n);
      }, e.fillRect = function(t, e, i, n, s) {
        this.ctx.fillRect(t + this.x, e + this.y, i, n, s);
      }, e.drawCircle = function(e, i, n, s, r) {
        void 0 === r && (r = 1), X.drawCall++;
        var a = this.ctx;
        a.beginPath(), a.strokeStyle = s, a.lineWidth = r, a.arc(e + this.x, i + this.y, n, 0, t.PI2),
          a.stroke();
      }, e.drawTriangles = function(t, e, i) {
        if (D.isWebGL) this.ctx.drawTriangles(i[0], t + i[1], e + i[2], i[3], i[4], i[5], i[6], i[7], i[8], i[9]);
        else {
          var n = i[5],
            s = 0,
            r = n.length,
            a = this.ctx;
          for (s = 0; s < r; s += 3) {
            var o = 2 * n[s],
              h = 2 * n[s + 1],
              l = 2 * n[s + 2];
            a.drawTriangle(i[0], i[3], i[4], o, h, l, i[6], !0);
          }
        }
      }, e.fillCircle = function(e, i, n, s) {
        X.drawCall++;
        var r = this.ctx;
        r.beginPath(), r.fillStyle = s, r.arc(e + this.x, i + this.y, n, 0, t.PI2), r.fill();
      }, e.setShader = function(t) {
        this.ctx.setShader(t);
      }, e.drawLine = function(t, e, i, n, s, r) {
        void 0 === r && (r = 1);
        var a = this.ctx;
        a.beginPath(), a.strokeStyle = s, a.lineWidth = r, a.moveTo(this.x + t, this.y + e),
          a.lineTo(this.x + i, this.y + n), a.stroke();
      }, e.clear = function() {
        this.ctx.clear();
      }, e.transformByMatrix = function(t) {
        this.ctx.transformByMatrix(t);
      }, e.setTransform = function(t, e, i, n, s, r) {
        this.ctx.setTransform(t, e, i, n, s, r);
      }, e.setTransformByMatrix = function(t) {
        this.ctx.setTransformByMatrix(t);
      }, e.save = function() {
        this.ctx.save();
      }, e.restore = function() {
        this.ctx.restore();
      }, e.translate = function(t, e) {
        this.ctx.translate(t, e);
      }, e.transform = function(t, e, i, n, s, r) {
        this.ctx.transform(t, e, i, n, s, r);
      }, e.rotate = function(t) {
        this.ctx.rotate(t);
      }, e.scale = function(t, e) {
        this.ctx.scale(t, e);
      }, e.alpha = function(t) {
        this.ctx.globalAlpha *= t;
      }, e.setAlpha = function(t) {
        this.ctx.globalAlpha = t;
      }, e.fillWords = function(t, e, i, n, s, r) {
        void 0 === r && (r = 0), this.ctx.fillWords(t, e, i, n, s, r);
      }, e.fillBorderWords = function(t, e, i, n, s, r, a) {
        this.ctx.fillBorderWords(t, e, i, n, s, r, a);
      }, e.fillText = function(t, e, i, n, s, r) {
        this.ctx.fillText(t, e + this.x, i + this.y, n, s, r);
      }, e.strokeText = function(t, e, i, n, s, r, a) {
        this.ctx.strokeText(t, e + this.x, i + this.y, n, s, r, a);
      }, e.blendMode = function(t) {
        this.ctx.globalCompositeOperation = t;
      }, e.flush = function() {
        this.ctx.flush && this.ctx.flush();
      }, e.addRenderObject = function(t) {
        this.ctx.addRenderObject(t);
      }, e.beginClip = function(t, e, i, n) {
        this.ctx.beginClip && this.ctx.beginClip(t, e, i, n);
      }, e.endClip = function() {
        this.ctx.endClip && this.ctx.endClip();
      }, e.fillTrangles = function(t, e, i) {
        this.ctx.fillTrangles(i[0], i[1], i[2], i[3], i.length > 4 ? i[4] : null);
      }, t.PI2 = 2 * Math.PI, t;
    }(),
    N = function() {
      function t(e, i) {
        switch (this._next = i || t.NORENDER, e) {
          case 0:
            return void(this._fun = this._no);

          case 1:
            return void(this._fun = this._image);

          case 2:
            return void(this._fun = this._alpha);

          case 4:
            return void(this._fun = this._transform);

          case 8:
            return void(this._fun = this._blend);

          case 16:
            return void(this._fun = this._canvas);

          case 64:
            return void(this._fun = this._mask);

          case 128:
            return void(this._fun = this._clip);

          case 256:
            return void(this._fun = this._style);

          case 512:
            return void(this._fun = this._graphics);

          case 2048:
            return void(this._fun = this._childs);

          case 1024:
            return void(this._fun = this._custom);

          case 513:
          case 517:
            return void(this._fun = this._image2);

          case 32:
            return void(this._fun = x._filter);

          case 69905:
            return void(this._fun = t._initRenderFun);
        }
        this.onCreate(e);
      }
      s(t, "laya.renders.RenderSprite");
      var e = t.prototype;
      return e.onCreate = function(t) {}, e._style = function(t, e, i, n) {
          t._style.render(t, e, i, n);
          var s = this._next;
          s._fun.call(s, t, e, i, n);
        }, e._no = function(t, e, i, n) {}, e._custom = function(t, e, i, n) {
          t.customRender(e, i, n);
          var s = t._style._tf;
          this._next._fun.call(this._next, t, e, i - s.translateX, n - s.translateY);
        }, e._clip = function(e, i, n, s) {
          var r = this._next;
          if (r != t.NORENDER) {
            var a = e._style.scrollRect;
            i.ctx.save(), i.ctx.clipRect(n, s, a.width, a.height), r._fun.call(r, e, i, n - a.x, s - a.y),
              i.ctx.restore();
          }
        }, e._blend = function(t, e, i, n) {
          var s = t._style;
          s.blendMode && (e.ctx.globalCompositeOperation = s.blendMode);
          var r = this._next;
          r._fun.call(r, t, e, i, n), e.ctx.globalCompositeOperation = "source-over";
        }, e._mask = function(t, e, i, n) {
          var s = this._next;
          s._fun.call(s, t, e, i, n);
          var r = t.mask;
          r && (e.ctx.globalCompositeOperation = "destination-in", (r.numChildren > 0 || !r.graphics._isOnlyOne()) && (r.cacheAsBitmap = !0),
            r.render(e, i - t.pivotX, n - t.pivotY)), e.ctx.globalCompositeOperation = "source-over";
        }, e._graphics = function(t, e, i, n) {
          var s = t._style._tf;
          t._graphics && t._graphics._render(t, e, i - s.translateX, n - s.translateY);
          var r = this._next;
          r._fun.call(r, t, e, i, n);
        }, e._image = function(t, e, i, n) {
          var s = t._style;
          e.ctx.drawTexture2(i, n, s._tf.translateX, s._tf.translateY, t.transform, s.alpha, s.blendMode, t._graphics._one);
        }, e._image2 = function(t, e, i, n) {
          var s = t._style._tf;
          e.ctx.drawTexture2(i, n, s.translateX, s.translateY, t.transform, 1, null, t._graphics._one);
        }, e._alpha = function(t, e, i, n) {
          var s;
          if ((s = t._style.alpha) > .01 || t._needRepaint()) {
            var r = e.ctx.globalAlpha;
            e.ctx.globalAlpha *= s;
            var a = this._next;
            a._fun.call(a, t, e, i, n), e.ctx.globalAlpha = r;
          }
        }, e._transform = function(e, i, n, s) {
          var r = e.transform,
            a = this._next;
          r && a != t.NORENDER ? (i.save(), i.transform(r.a, r.b, r.c, r.d, r.tx + n, r.ty + s),
            a._fun.call(a, e, i, 0, 0), i.restore()) : a._fun.call(a, e, i, n, s);
        }, e._childs = function(t, e, i, n) {
          var s = t._style,
            r = s._tf;
          if (i = i - r.translateX + s.paddingLeft, n = n - r.translateY + s.paddingTop, s._calculation) {
            var a = t._getWords();
            if (a) {
              var o = s;
              o && (o.stroke ? e.fillBorderWords(a, i, n, o.font, o.color, o.strokeColor, o.stroke) : e.fillWords(a, i, n, o.font, o.color, "none" != o.textDecoration && o.underLine ? 1 : 0));
            }
          }
          var h, l = t._childs,
            u = l.length;
          if (t.viewport || t.optimizeScrollRect && t._style.scrollRect) {
            var c = t.viewport || t._style.scrollRect,
              _ = c.x,
              d = c.y,
              p = c.right,
              f = c.bottom,
              g = NaN,
              m = NaN;
            for (y = 0; y < u; ++y)(h = l[y]).visible && (g = h._x) < p && g + h.width > _ && (m = h._y) < f && m + h.height > d && h.render(e, i, n);
          } else
            for (var y = 0; y < u; ++y)(h = l[y])._style.visible && h.render(e, i, n);
        }, e._canvas = function(t, e, i, n) {
          var s = t._$P.cacheCanvas;
          if (s) {
            "bitmap" === s.type ? X.canvasBitmap++ : X.canvasNormal++;
            var r = s.ctx;
            if (t._needRepaint() || !r) this._canvas_repaint(t, e, i, n);
            else {
              var a = s._cacheRec;
              e.drawCanvas(r.canvas, i + a.x, n + a.y, a.width, a.height);
            }
          } else this._next._fun.call(this._next, t, e, i, n);
        }, e._canvas_repaint = function(t, e, n, s) {
          var r = t._$P.cacheCanvas,
            a = this._next;
          if (r) {
            var o, h, l, u, c = r.ctx,
              _ = t._needRepaint() || !c,
              d = r.type;
            if ("bitmap" === d ? X.canvasBitmap++ : X.canvasNormal++, _) {
              r._cacheRec || (r._cacheRec = new E());
              var p, f;
              D.isWebGL && "bitmap" !== d ? r._cacheRec.setTo(-t.pivotX, -t.pivotY, 1, 1) : ((u = t.getSelfBounds()).x = u.x - t.pivotX,
                u.y = u.y - t.pivotY, u.x = u.x - 16, u.y = u.y - 16, u.width = u.width + 32, u.height = u.height + 32,
                u.x = Math.floor(u.x + n) - n, u.y = Math.floor(u.y + s) - s, u.width = Math.floor(u.width),
                u.height = Math.floor(u.height), r._cacheRec.copyFrom(u)), u = r._cacheRec;
              var g = D.isWebGL ? 1 : k.pixelRatio * i.stage.clientScaleX,
                m = D.isWebGL ? 1 : k.pixelRatio * i.stage.clientScaleY;
              if (!D.isWebGL) {
                var y, v = 1,
                  x = 1;
                for (y = t; y && y != i.stage;) v *= y.scaleX, x *= y.scaleY, y = y.parent;
                D.isWebGL ? (v < 1 && (g *= v), x < 1 && (m *= x)) : (v > 1 && (g *= v), x > 1 && (m *= x));
              }
              if (t.scrollRect) {
                var b = t.scrollRect;
                u.x -= b.x, u.y -= b.y;
              }
              if (p = u.width * g, f = u.height * m, h = u.x, l = u.y, D.isWebGL && "bitmap" === d && (p > 2048 || f > 2048)) return console.warn("cache bitmap size larger than 2048,cache ignored"),
                r.ctx && (Y.recover("RenderContext", r.ctx), r.ctx.canvas.size(0, 0), r.ctx = null),
                void a._fun.call(a, t, e, n, s);
              c || (c = r.ctx = Y.getItem("RenderContext") || new R(p, f, vt.create("AUTO"))),
                c.ctx.sprite = t, (o = c.canvas).clear(), (o.width != p || o.height != f) && o.size(p, f),
                "bitmap" === d ? o.context.asBitmap = !0 : "normal" === d && (o.context.asBitmap = !1);
              var w;
              if (1 != g || 1 != m) {
                var I = c.ctx;
                I.save(), I.scale(g, m), !D.isConchWebGL && D.isConchApp && (w = t._$P.cf) && I.setFilterMatrix && I.setFilterMatrix(w._mat, w._alpha),
                  a._fun.call(a, t, c, -h, -l), I.restore(), D.isConchApp && !D.isConchWebGL || t._applyFilters();
              } else I = c.ctx, !D.isConchWebGL && D.isConchApp && (w = t._$P.cf) && I.setFilterMatrix && I.setFilterMatrix(w._mat, w._alpha),
                a._fun.call(a, t, c, -h, -l), D.isConchApp && !D.isConchWebGL || t._applyFilters();
              t._$P.staticCache && (r.reCache = !1), X.canvasReCache++;
            } else h = (u = r._cacheRec).x, l = u.y, o = c.canvas;
            e.drawCanvas(o, n + h, s + l, u.width, u.height);
          } else a._fun.call(a, t, c, n, s);
        }, t.__init__ = function() {
          var e, i = 0,
            n = 0;
          for (e = a.createRenderSprite(69905, null), n = t.renders.length = 4096, i = 0; i < n; i++) t.renders[i] = e;
          t.renders[0] = a.createRenderSprite(0, null),
            function(e, i) {
              for (var n = 0, s = 0; s < e.length; s++) n |= e[s], t.renders[n] = i;
            }([1, 512, 4, 2], new t(1, null)), t.renders[513] = a.createRenderSprite(513, null),
            t.renders[517] = new t(517, null);
        }, t._initRenderFun = function(e, i, n, s) {
          var r = e._renderType;
          (t.renders[r] = t._getTypeRender(r))._fun(e, i, n, s);
        }, t._getTypeRender = function(t) {
          for (var e = null, i = 2048; i > 1;) i & t && (e = a.createRenderSprite(i, e)),
            i >>= 1;
          return e;
        }, t.IMAGE = 1, t.ALPHA = 2, t.TRANSFORM = 4, t.BLEND = 8, t.CANVAS = 16, t.FILTERS = 32,
        t.MASK = 64, t.CLIP = 128, t.STYLE = 256, t.GRAPHICS = 512, t.CUSTOM = 1024, t.CHILDS = 2048,
        t.INIT = 69905, t.renders = [], t.NORENDER = new t(0, null), t;
    }(),
    O = function() {
      function t() {
        this._repaint = !1;
      }
      s(t, "laya.resource.Context");
      var e = t.prototype;
      return e.replaceReset = function() {
        var e = 0,
          i = 0;
        i = t.replaceKeys.length;
        var n;
        for (e = 0; e < i; e++) n = t.replaceKeys[e], this[t.newKeys[e]] = this[n];
      }, e.replaceResotre = function() {
        this.__restore(), this.__reset();
      }, e.setIsMainContext = function() {}, e.drawTextures = function(t, e, i, n) {
        X.drawCall += e.length / 2;
        for (var s = t.width, r = t.height, a = 0, o = e.length; a < o; a += 2) this.drawTexture(t, e[a], e[a + 1], s, r, i, n);
      }, e.drawCanvas = function(t, e, i, n, s) {
        X.drawCall++, this.drawImage(t.source, e, i, n, s);
      }, e.fillRect = function(t, e, i, n, s) {
        X.drawCall++, s && (this.fillStyle = s), this.__fillRect(t, e, i, n);
      }, e.fillText = function(t, e, i, n, s, r) {
        X.drawCall++, arguments.length > 3 && null != n && (this.font = n, this.fillStyle = s,
          this.textAlign = r, this.textBaseline = "top"), this.__fillText(t, e, i);
      }, e.fillBorderText = function(t, e, i, n, s, r, a, o) {
        X.drawCall++, this.font = n, this.fillStyle = s, this.textBaseline = "top", this.strokeStyle = r,
          this.lineWidth = a, this.textAlign = o, this.__strokeText(t, e, i), this.__fillText(t, e, i);
      }, e.strokeText = function(t, e, i, n, s, r, a) {
        X.drawCall++, arguments.length > 3 && null != n && (this.font = n, this.strokeStyle = s,
          this.lineWidth = r, this.textAlign = a, this.textBaseline = "top"), this.__strokeText(t, e, i);
      }, e.transformByMatrix = function(t) {
        this.transform(t.a, t.b, t.c, t.d, t.tx, t.ty);
      }, e.setTransformByMatrix = function(t) {
        this.setTransform(t.a, t.b, t.c, t.d, t.tx, t.ty);
      }, e.clipRect = function(t, e, i, n) {
        X.drawCall++, this.beginPath(), this.rect(t, e, i, n), this.clip();
      }, e.drawTexture = function(t, e, i, n, s, r, a) {
        X.drawCall++;
        var o = t.uv,
          h = t.bitmap.width,
          l = t.bitmap.height;
        this.drawImage(t.source, o[0] * h, o[1] * l, (o[2] - o[0]) * h, (o[5] - o[3]) * l, e + r, i + a, n, s);
      }, e.drawTextureWithTransform = function(t, e, i, n, s, r, a, o, h) {
        X.drawCall++;
        var l = t.uv,
          u = t.bitmap.width,
          c = t.bitmap.height;
        this.save(), 1 != h && (this.globalAlpha *= h), r ? (this.transform(r.a, r.b, r.c, r.d, r.tx + a, r.ty + o),
            this.drawImage(t.source, l[0] * u, l[1] * c, (l[2] - l[0]) * u, (l[5] - l[3]) * c, e, i, n, s)) : this.drawImage(t.source, l[0] * u, l[1] * c, (l[2] - l[0]) * u, (l[5] - l[3]) * c, e + a, i + o, n, s),
          this.restore();
      }, e.drawTexture2 = function(t, e, i, n, s, r, a, o) {
        var h = o[0];
        if (h.loaded && h.bitmap && h.source) {
          X.drawCall++;
          var l = 1 !== r;
          if (l) {
            var u = this.globalAlpha;
            this.globalAlpha *= r;
          }
          var c = h.uv,
            _ = h.bitmap.width,
            d = h.bitmap.height;
          s ? (this.save(), this.transform(s.a, s.b, s.c, s.d, s.tx + t, s.ty + e), this.drawImage(h.source, c[0] * _, c[1] * d, (c[2] - c[0]) * _, (c[5] - c[3]) * d, o[1] - i, o[2] - n, o[3], o[4]),
              this.restore()) : this.drawImage(h.source, c[0] * _, c[1] * d, (c[2] - c[0]) * _, (c[5] - c[3]) * d, o[1] - i + t, o[2] - n + e, o[3], o[4]),
            l && (this.globalAlpha = u);
        }
      }, e.fillTexture = function(t, e, i, n, s, r, a, o) {
        if (!o.pat) {
          if (t.uv != lt.DEF_UV) {
            var h = new vt("2D");
            h.getContext("2d"), h.size(t.width, t.height), h.context.drawTexture(t, 0, 0, t.width, t.height, 0, 0),
              t = new lt(h);
          }
          o.pat = this.createPattern(t.bitmap.source, r);
        }
        var l = e,
          u = i,
          c = 0,
          _ = 0;
        a && (l += a.x % t.width, u += a.y % t.height, c -= a.x % t.width, _ -= a.y % t.height),
          this.translate(l, u), this.fillRect(c, _, n, s, o.pat), this.translate(-l, -u);
      }, e.drawTriangle = function(t, e, i, n, s, r, a, o) {
        var h = t.bitmap,
          l = h.source,
          u = t.width,
          c = t.height,
          _ = h.width,
          d = h.height,
          p = i[n] * _,
          f = i[s] * _,
          g = i[r] * _,
          m = i[n + 1] * d,
          y = i[s + 1] * d,
          v = i[r + 1] * d,
          x = e[n],
          b = e[s],
          w = e[r],
          I = e[n + 1],
          S = e[s + 1],
          C = e[r + 1];
        if (o) {
          var T = (x + b + w) / 3,
            E = (I + S + C) / 3,
            M = x - T,
            L = I - E,
            P = Math.sqrt(M * M + L * L);
          x = T + M / P * (P + 1), I = E + L / P * (P + 1), L = S - E, b = T + (M = b - T) / (P = Math.sqrt(M * M + L * L)) * (P + 1),
            S = E + L / P * (P + 1), L = C - E, w = T + (M = w - T) / (P = Math.sqrt(M * M + L * L)) * (P + 1),
            C = E + L / P * (P + 1);
        }
        this.save(), a && this.transform(a.a, a.b, a.c, a.d, a.tx, a.ty), this.beginPath(),
          this.moveTo(x, I), this.lineTo(b, S), this.lineTo(w, C), this.closePath(), this.clip();
        var A = 1 / (p * y + m * g + f * v - y * g - m * f - p * v),
          D = x * y + m * w + b * v - y * w - m * b - x * v,
          R = p * b + x * g + f * w - b * g - x * f - p * w,
          N = p * y * w + m * b * g + x * f * v - x * y * g - m * f * w - p * b * v,
          O = I * y + m * C + S * v - y * C - m * S - I * v,
          B = p * S + I * g + f * C - S * g - I * f - p * C,
          k = p * y * C + m * S * g + I * f * v - I * y * g - m * f * C - p * S * v;
        this.transform(D * A, O * A, R * A, B * A, N * A, k * A), this.drawImage(l, t.uv[0] * _, t.uv[1] * d, u, c, t.uv[0] * _, t.uv[1] * d, u, c),
          this.restore();
      }, e.flush = function() {
        return 0;
      }, e.fillWords = function(t, e, i, n, s, r) {
        n && (this.font = n), s && (this.fillStyle = s);
        this.textBaseline = "top", this.textAlign = "left";
        for (var a = 0, o = t.length; a < o; a++) {
          var h = t[a];
          if (this.__fillText(h.char, h.x + e, h.y + i), 1 === r) {
            var l = h.height,
              u = .5 * h.style.letterSpacing;
            u || (u = 0), this.beginPath(), this.strokeStyle = s, this.lineWidth = 1, this.moveTo(e + h.x - u + .5, i + h.y + l + .5),
              this.lineTo(e + h.x + h.width + u + .5, i + h.y + l + .5), this.stroke();
          }
        }
      }, e.fillBorderWords = function(t, e, i, n, s, r, a) {
        n && (this.font = n), s && (this.fillStyle = s), this.textBaseline = "top", this.lineWidth = a,
          this.textAlign = "left", this.strokeStyle = r;
        for (var o = 0, h = t.length; o < h; o++) {
          var l = t[o];
          this.__strokeText(l.char, l.x + e, l.y + i), this.__fillText(l.char, l.x + e, l.y + i);
        }
      }, e.destroy = function() {
        this.canvas.width = this.canvas.height = 0;
      }, e.clear = function() {
        this.clearRect(0, 0, this._canvas.width, this._canvas.height), this._repaint = !1;
      }, e.drawCurves = function(t, e, i) {
        this.beginPath(), this.strokeStyle = i[3], this.lineWidth = i[4];
        var n = i[2];
        t += i[0], e += i[1], this.moveTo(t + n[0], e + n[1]);
        for (var s = 2, r = n.length; s < r;) this.quadraticCurveTo(t + n[s++], e + n[s++], t + n[s++], e + n[s++]);
        this.stroke();
      }, t.__init__ = function(t) {
        var e = laya.resource.Context.prototype;
        if (!(t = t || CanvasRenderingContext2D.prototype).inited) {
          t.inited = !0, t.__fillText = t.fillText, t.__fillRect = t.fillRect, t.__strokeText = t.strokeText;
          ["drawTextures", "drawTriangle", "fillWords", "fillBorderWords", "setIsMainContext", "fillRect", "strokeText", "fillTexture", "fillText", "transformByMatrix", "setTransformByMatrix", "clipRect", "drawTexture", "drawTexture2", "drawTextureWithTransform", "flush", "clear", "destroy", "drawCanvas", "fillBorderText", "drawCurves"].forEach(function(i) {
            t[i] = e[i];
          });
        }
      }, t.replaceCanvasGetSet = function(t, e) {
        var i = Object.getOwnPropertyDescriptor(t, e);
        if (!i || !i.configurable) return !1;
        var n, s = {};
        for (n in i) "set" != n && (s[n] = i[n]);
        var r = i.set;
        return s.set = function(t) {
          r.call(this, t);
          var e = this.getContext("2d");
          e && "__reset" in e && e.__reset();
        }, Object.defineProperty(t, e, s), !0;
      }, t.replaceGetSet = function(e, i) {
        var n = Object.getOwnPropertyDescriptor(e, i);
        if (!n || !n.configurable) return !1;
        var s, r = {};
        for (s in n) "set" != s && (r[s] = n[s]);
        var a = n.set,
          o = "___" + i + "__";
        return t.newKeys.push(o), r.set = function(t) {
          t != this[o] && (this[o] = t, a.call(this, t));
        }, Object.defineProperty(e, i, r), !0;
      }, t._default = new t(), t.newKeys = [], n(t, ["replaceKeys", function() {
        return this.replaceKeys = ["font", "fillStyle", "textBaseline"];
      }]), t;
    }(),
    B = function() {
      function t(e) {
        this._id = 0, this._name = null, this._resources = null, this._memorySize = 0, this._garbageCollectionRate = NaN,
          this._isOverflow = !1, this.autoRelease = !1, this.autoReleaseMaxSize = 0, this._id = ++t._uniqueIDCounter,
          this._name = e || "Content Manager", t._isResourceManagersSorted = !1, this._memorySize = 0,
          this._isOverflow = !1, this.autoRelease = !1, this.autoReleaseMaxSize = 536870912,
          this._garbageCollectionRate = .2, t._resourceManagers.push(this), this._resources = [];
      }
      s(t, "laya.resource.ResourceManager");
      var e = t.prototype;
      return i.imps(e, {
          "laya.resource.IDispose": !0
        }), e.getResourceByIndex = function(t) {
          return this._resources[t];
        }, e.getResourcesLength = function() {
          return this._resources.length;
        }, e.addResource = function(t) {
          t.resourceManager && t.resourceManager.removeResource(t);
          return -1 === this._resources.indexOf(t) && (t._resourceManager = this, this._resources.push(t),
            this.addSize(t.memorySize), !0);
        }, e.removeResource = function(t) {
          var e = this._resources.indexOf(t);
          return -1 !== e && (this._resources.splice(e, 1), t._resourceManager = null, this._memorySize -= t.memorySize, !0);
        }, e.unload = function() {
          for (var t = this._resources.slice(0, this._resources.length), e = 0; e < t.length; e++) {
            t[e].destroy();
          }
          t.length = 0;
        }, e.dispose = function() {
          if (this === t._systemResourceManager) throw new Error("systemResourceManager不能被释放！");
          t._resourceManagers.splice(t._resourceManagers.indexOf(this), 1), t._isResourceManagersSorted = !1;
          for (var e = this._resources.slice(0, this._resources.length), i = 0; i < e.length; i++) {
            var n = e[i];
            n.resourceManager.removeResource(n), n.destroy();
          }
          e.length = 0;
        }, e.addSize = function(t) {
          t && (this.autoRelease && t > 0 && this._memorySize + t > this.autoReleaseMaxSize && this.garbageCollection((1 - this._garbageCollectionRate) * this.autoReleaseMaxSize),
            this._memorySize += t);
        }, e.garbageCollection = function(t) {
          var e = this._resources;
          (e = e.slice()).sort(function(t, e) {
            if (!t || !e) throw new Error("a或b不能为空！");
            return t.released && e.released ? 0 : t.released ? 1 : e.released ? -1 : t._lastUseFrameCount - e._lastUseFrameCount;
          });
          for (var i = X.loopCount, n = 0, s = e.length; n < s; n++) {
            var r = e[n];
            if (!(i - r._lastUseFrameCount > 1)) return void(this._memorySize >= t && (this._isOverflow = !0));
            if (r.releaseResource(), this._memorySize < t) return void(this._isOverflow = !1);
          }
        }, r(0, e, "id", function() {
          return this._id;
        }), r(0, e, "name", function() {
          return this._name;
        }, function(e) {
          !e && "" === e || this._name === e || (this._name = e, t._isResourceManagersSorted = !1);
        }), r(0, e, "memorySize", function() {
          return this._memorySize;
        }), r(1, t, "systemResourceManager", function() {
          return t._systemResourceManager;
        }), t.__init__ = function() {
          t.currentResourceManager = t.systemResourceManager;
        }, t.getLoadedResourceManagerByIndex = function(e) {
          return t._resourceManagers[e];
        }, t.getLoadedResourceManagersCount = function() {
          return t._resourceManagers.length;
        }, t.recreateContentManagers = function(e) {
          void 0 === e && (e = !1);
          for (var i = t.currentResourceManager, n = 0; n < t._resourceManagers.length; n++) {
            t.currentResourceManager = t._resourceManagers[n];
            for (var s = 0; s < t.currentResourceManager._resources.length; s++) t.currentResourceManager._resources[s].releaseResource(e),
              t.currentResourceManager._resources[s].activeResource(e);
          }
          t.currentResourceManager = i;
        }, t.releaseContentManagers = function(e) {
          void 0 === e && (e = !1);
          for (var i = t.currentResourceManager, n = 0; n < t._resourceManagers.length; n++) {
            t.currentResourceManager = t._resourceManagers[n];
            for (var s = 0; s < t.currentResourceManager._resources.length; s++) {
              var r = t.currentResourceManager._resources[s];
              !r.released && r.releaseResource(e);
            }
          }
          t.currentResourceManager = i;
        }, t._uniqueIDCounter = 0, t._isResourceManagersSorted = !1, t._resourceManagers = [],
        n(t, ["_systemResourceManager", function() {
          return this._systemResourceManager = new t("System Resource Manager");
        }, "currentResourceManager", function() {
          return this.currentResourceManager = t._systemResourceManager;
        }]), t;
    }(),
    k = (function() {
      function t() {}
      s(t, "laya.system.System"), t.changeDefinition = function(t, e) {
        i[t] = e;
        var n = t + "=classObj";
        i._runScript(n);
      }, t.__init__ = function() {
        D.isConchApp && (conch.disableConchResManager(), conch.disableConchAutoRestoreLostedDevice());
      };
    }(), function() {
      function n() {}
      return s(n, "laya.utils.Browser"), r(1, n, "pixelRatio", function() {
          return n.__init__(), n.userAgent.indexOf("Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)") > -1 ? 2 : a.getPixelRatio();
        }), r(1, n, "height", function() {
          return n.__init__(), (i.stage && i.stage.canvasRotation ? n.clientWidth : n.clientHeight) * n.pixelRatio;
        }), r(1, n, "clientWidth", function() {
          return n.__init__(), n.window.innerWidth || n.document.body.clientWidth;
        }), r(1, n, "window", function() {
          return n.__init__(), n._window;
        }), r(1, n, "clientHeight", function() {
          return n.__init__(), n.window.innerHeight || n.document.body.clientHeight || n.document.documentElement.clientHeight;
        }), r(1, n, "width", function() {
          return n.__init__(), (i.stage && i.stage.canvasRotation ? n.clientHeight : n.clientWidth) * n.pixelRatio;
        }), r(1, n, "container", function() {
          return n.__init__(), n._container || ((n._container = n.createElement("div")).id = "layaContainer",
            n.document.body.appendChild(n._container)), n._container;
        }, function(t) {
          n._container = t;
        }), r(1, n, "document", function() {
          return n.__init__(), n._document;
        }), n.__init__ = function() {
          if (!n._window) {
            n._window = a.getWindow(), n._document = n.window.document, n._window.addEventListener("message", function(t) {
              laya.utils.Browser._onMessage(t);
            }, !1), n.document.__createElement = n.document.createElement, t.requestAnimationFrame = t.requestAnimationFrame || t.webkitRequestAnimationFrame || t.mozRequestAnimationFrame || t.oRequestAnimationFrame || t.msRequestAnimationFrame || function(e) {
              return t.setTimeout(e, 1e3 / 60);
            };
            var i = t.document.body.style;
            i["-webkit-user-select"] = "none", i["-webkit-tap-highlight-color"] = "rgba(200,200,200,0)",
              n.userAgent = n.window.navigator.userAgent, n.onIOS = !!(n.u = n.userAgent).match(/\(i[^;]+;(U;)? CPU.+Mac OS X/),
              n.onMobile = n.u.indexOf("Mobile") > -1, n.onIPhone = n.u.indexOf("iPhone") > -1,
              n.onMac = n.u.indexOf("Mac OS X") > -1, n.onIPad = n.u.indexOf("iPad") > -1, n.onAndroid = n.u.indexOf("Android") > -1 || n.u.indexOf("Adr") > -1,
              n.onWP = n.u.indexOf("Windows Phone") > -1, n.onQQBrowser = n.u.indexOf("QQBrowser") > -1,
              n.onMQQBrowser = n.u.indexOf("MQQBrowser") > -1 || n.u.indexOf("Mobile") > -1 && n.u.indexOf("QQ") > -1,
              n.onIE = !!n.window.ActiveXObject || "ActiveXObject" in n.window, n.onWeiXin = n.u.indexOf("MicroMessenger") > -1,
              n.onPC = !n.onMobile, n.onSafari = n.u.indexOf("Safari") > -1, n.onFirefox = n.u.indexOf("Firefox") > -1,
              n.onEdge = n.u.indexOf("Edge") > -1, n.onMiniGame = n.u.indexOf("MiniGame") > -1,
              n.onLimixiu = n.u.indexOf("limixiu") > -1, n.httpProtocol = "http:" == n.window.location.protocol,
              n.onMiniGame && null == n.window.focus && console.error("请先初始化小游戏适配库，详细教程https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0"),
              n.webAudioEnabled = !!(n.window.AudioContext || n.window.webkitAudioContext || n.window.mozAudioContext),
              n.soundType = n.webAudioEnabled ? "WEBAUDIOSOUND" : "AUDIOSOUND", nt = n.webAudioEnabled ? st : et,
              n.webAudioEnabled && st.initWebAudio(), et._initMusicAudio(), n.enableTouch = "ontouchstart" in t || t.DocumentTouch && e instanceof DocumentTouch,
              t.focus(), M._soundClass = nt, M._musicClass = et, D._mainCanvas = D._mainCanvas || vt.create("2D"),
              n.canvas || (n.canvas = vt.create("2D"), n.context = n.canvas.getContext("2d"));
          }
        }, n._onMessage = function(t) {
          if (t.data && "size" == t.data.name) {
            if (n.window.innerWidth = t.data.width, n.window.innerHeight = t.data.height, n.window.__innerHeight = t.data.clientHeight, !n.document.createEvent) return void console.warn("no document.createEvent");
            var e = n.document.createEvent("HTMLEvents");
            return e.initEvent("resize", !1, !1), void n.window.dispatchEvent(e);
          }
        }, n.createElement = function(t) {
          return n.__init__(), n.document.__createElement(t);
        }, n.getElementById = function(t) {
          return n.__init__(), n.document.getElementById(t);
        }, n.removeElement = function(t) {
          t && t.parentNode && t.parentNode.removeChild(t);
        }, n.now = function() {
          return a.now();
        }, n._window = null, n._document = null, n._container = null, n.userAgent = null,
        n.u = null, n.onIOS = !1, n.onMac = !1, n.onMobile = !1, n.onIPhone = !1, n.onIPad = !1,
        n.onAndroid = !1, n.onWP = !1, n.onQQBrowser = !1, n.onMQQBrowser = !1, n.onSafari = !1,
        n.onFirefox = !1, n.onEdge = !1, n.onIE = !1, n.onWeiXin = !1, n.onMiniGame = !1,
        n.onLimixiu = !1, n.onPC = !1, n.httpProtocol = !1, n.webAudioEnabled = !1, n.soundType = null,
        n.enableTouch = !1, n.canvas = null, n.context = null, n.__init$ = function() {},
        n;
    }()),
    F = function() {
      function t(t) {
        this._xd_ = !0, this._allocated_ = 8, this._pos_ = 0, this._length = 0, t ? (this._u8d_ = new Uint8Array(t),
          this._d_ = new DataView(this._u8d_.buffer), this._length = this._d_.byteLength) : this.___resizeBuffer(this._allocated_);
      }
      s(t, "laya.utils.Byte");
      var e = t.prototype;
      return e.___resizeBuffer = function(t) {
          try {
            var e = new Uint8Array(t);
            null != this._u8d_ && (this._u8d_.length <= t ? e.set(this._u8d_) : e.set(this._u8d_.subarray(0, t))),
              this._u8d_ = e, this._d_ = new DataView(e.buffer);
          } catch (e) {
            throw "___resizeBuffer err:" + t;
          }
        }, e.getString = function() {
          return this.rUTF(this.getUint16());
        }, e.getFloat32Array = function(t, e) {
          var i = t + e;
          i = i > this._length ? this._length : i;
          var n = new Float32Array(this._d_.buffer.slice(t, i));
          return this._pos_ = i, n;
        }, e.getUint8Array = function(t, e) {
          var i = t + e;
          i = i > this._length ? this._length : i;
          var n = new Uint8Array(this._d_.buffer.slice(t, i));
          return this._pos_ = i, n;
        }, e.getInt16Array = function(t, e) {
          var i = t + e;
          i = i > this._length ? this._length : i;
          var n = new Int16Array(this._d_.buffer.slice(t, i));
          return this._pos_ = i, n;
        }, e.getFloat32 = function() {
          if (this._pos_ + 4 > this._length) throw "getFloat32 error - Out of bounds";
          var t = this._d_.getFloat32(this._pos_, this._xd_);
          return this._pos_ += 4, t;
        }, e.getFloat64 = function() {
          if (this._pos_ + 8 > this._length) throw "getFloat64 error - Out of bounds";
          var t = this._d_.getFloat64(this._pos_, this._xd_);
          return this._pos_ += 8, t;
        }, e.writeFloat32 = function(t) {
          this.ensureWrite(this._pos_ + 4), this._d_.setFloat32(this._pos_, t, this._xd_),
            this._pos_ += 4;
        }, e.writeFloat64 = function(t) {
          this.ensureWrite(this._pos_ + 8), this._d_.setFloat64(this._pos_, t, this._xd_),
            this._pos_ += 8;
        }, e.getInt32 = function() {
          if (this._pos_ + 4 > this._length) throw "getInt32 error - Out of bounds";
          var t = this._d_.getInt32(this._pos_, this._xd_);
          return this._pos_ += 4, t;
        }, e.getUint32 = function() {
          if (this._pos_ + 4 > this._length) throw "getUint32 error - Out of bounds";
          var t = this._d_.getUint32(this._pos_, this._xd_);
          return this._pos_ += 4, t;
        }, e.writeInt32 = function(t) {
          this.ensureWrite(this._pos_ + 4), this._d_.setInt32(this._pos_, t, this._xd_), this._pos_ += 4;
        }, e.writeUint32 = function(t) {
          this.ensureWrite(this._pos_ + 4), this._d_.setUint32(this._pos_, t, this._xd_),
            this._pos_ += 4;
        }, e.getInt16 = function() {
          if (this._pos_ + 2 > this._length) throw "getInt16 error - Out of bounds";
          var t = this._d_.getInt16(this._pos_, this._xd_);
          return this._pos_ += 2, t;
        }, e.getUint16 = function() {
          if (this._pos_ + 2 > this._length) throw "getUint16 error - Out of bounds";
          var t = this._d_.getUint16(this._pos_, this._xd_);
          return this._pos_ += 2, t;
        }, e.writeUint16 = function(t) {
          this.ensureWrite(this._pos_ + 2), this._d_.setUint16(this._pos_, t, this._xd_),
            this._pos_ += 2;
        }, e.writeInt16 = function(t) {
          this.ensureWrite(this._pos_ + 2), this._d_.setInt16(this._pos_, t, this._xd_), this._pos_ += 2;
        }, e.getUint8 = function() {
          if (this._pos_ + 1 > this._length) throw "getUint8 error - Out of bounds";
          return this._d_.getUint8(this._pos_++);
        }, e.writeUint8 = function(t) {
          this.ensureWrite(this._pos_ + 1), this._d_.setUint8(this._pos_, t), this._pos_++;
        }, e._getUInt8 = function(t) {
          return this._d_.getUint8(t);
        }, e._getUint16 = function(t) {
          return this._d_.getUint16(t, this._xd_);
        }, e._getMatrix = function() {
          return new C(this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32());
        }, e.rUTF = function(t) {
          for (var e = "", i = this._pos_ + t, n = 0, s = String.fromCharCode, r = this._u8d_; this._pos_ < i;)(n = r[this._pos_++]) < 128 ? 0 != n && (e += s(n)) : e += s(n < 224 ? (63 & n) << 6 | 127 & r[this._pos_++] : n < 240 ? (31 & n) << 12 | (127 & r[this._pos_++]) << 6 | 127 & r[this._pos_++] : (15 & n) << 18 | (127 & r[this._pos_++]) << 12 | r[this._pos_++] << 6 & 127 | 127 & r[this._pos_++]),
            0;
          return e;
        }, e.getCustomString = function(t) {
          for (var e = "", i = 0, n = 0, s = String.fromCharCode, r = this._u8d_; t > 0;)
            if ((n = r[this._pos_]) < 128) e += s(n),
              this._pos_++, t--;
            else
              for (i = n - 128, this._pos_++, t -= i; i > 0;) n = r[this._pos_++],
                e += s(r[this._pos_++] << 8 | n), i--;
          return e;
        }, e.clear = function() {
          this._pos_ = 0, this.length = 0;
        }, e.__getBuffer = function() {
          return this._d_.buffer;
        }, e.writeUTFBytes = function(t) {
          for (var e = 0, i = (t += "").length; e < i; e++) {
            var n = t.charCodeAt(e);
            n <= 127 ? this.writeByte(n) : n <= 2047 ? (this.ensureWrite(this._pos_ + 2), this._u8d_.set([192 | n >> 6, 128 | 63 & n], this._pos_),
              this._pos_ += 2) : n <= 65535 ? (this.ensureWrite(this._pos_ + 3), this._u8d_.set([224 | n >> 12, 128 | n >> 6 & 63, 128 | 63 & n], this._pos_),
              this._pos_ += 3) : (this.ensureWrite(this._pos_ + 4), this._u8d_.set([240 | n >> 18, 128 | n >> 12 & 63, 128 | n >> 6 & 63, 128 | 63 & n], this._pos_),
              this._pos_ += 4);
          }
        }, e.writeUTFString = function(t) {
          var e = this.pos;
          this.writeUint16(1), this.writeUTFBytes(t);
          var i = this.pos - e - 2;
          if (i >= 65536) throw "writeUTFString byte len more than 65536";
          this._d_.setUint16(e, i, this._xd_);
        }, e.readUTFString = function() {
          return this.readUTFBytes(this.getUint16());
        }, e.getUTFString = function() {
          return this.readUTFString();
        }, e.readUTFBytes = function(t) {
          if (void 0 === t && (t = -1), 0 == t) return "";
          var e = this.bytesAvailable;
          if (t > e) throw "readUTFBytes error - Out of bounds";
          return t = t > 0 ? t : e, this.rUTF(t);
        }, e.getUTFBytes = function(t) {
          return void 0 === t && (t = -1), this.readUTFBytes(t);
        }, e.writeByte = function(t) {
          this.ensureWrite(this._pos_ + 1), this._d_.setInt8(this._pos_, t), this._pos_ += 1;
        }, e.readByte = function() {
          if (this._pos_ + 1 > this._length) throw "readByte error - Out of bounds";
          return this._d_.getInt8(this._pos_++);
        }, e.getByte = function() {
          return this.readByte();
        }, e.ensureWrite = function(t) {
          this._length < t && (this._length = t), this._allocated_ < t && (this.length = t);
        }, e.writeArrayBuffer = function(t, e, i) {
          if (void 0 === e && (e = 0), void 0 === i && (i = 0), e < 0 || i < 0) throw "writeArrayBuffer error - Out of bounds";
          0 == i && (i = t.byteLength - e), this.ensureWrite(this._pos_ + i);
          var n = new Uint8Array(t);
          this._u8d_.set(n.subarray(e, e + i), this._pos_), this._pos_ += i;
        }, r(0, e, "buffer", function() {
          var t = this._d_.buffer;
          return t.byteLength == this.length ? t : t.slice(0, this.length);
        }), r(0, e, "endian", function() {
          return this._xd_ ? "littleEndian" : "bigEndian";
        }, function(t) {
          this._xd_ = "littleEndian" == t;
        }), r(0, e, "length", function() {
          return this._length;
        }, function(t) {
          this._allocated_ < t ? this.___resizeBuffer(this._allocated_ = Math.floor(Math.max(t, 2 * this._allocated_))) : this._allocated_ > t && this.___resizeBuffer(this._allocated_ = t),
            this._length = t;
        }), r(0, e, "pos", function() {
          return this._pos_;
        }, function(t) {
          this._pos_ = t;
        }), r(0, e, "bytesAvailable", function() {
          return this._length - this._pos_;
        }), t.getSystemEndian = function() {
          if (!t._sysEndian) {
            var e = new ArrayBuffer(2);
            new DataView(e).setInt16(0, 256, !0), t._sysEndian = 256 === new Int16Array(e)[0] ? "littleEndian" : "bigEndian";
          }
          return t._sysEndian;
        }, t.BIG_ENDIAN = "bigEndian", t.LITTLE_ENDIAN = "littleEndian", t._sysEndian = null,
        t;
    }(),
    U = function() {
      function t() {}
      return s(t, "laya.utils.CacheManager"), t.regCacheByFunction = function(e, i) {
        t.unRegCacheByFunction(e, i);
        var n;
        n = {
          tryDispose: e,
          getCacheList: i
        }, t._cacheList.push(n);
      }, t.unRegCacheByFunction = function(e, i) {
        var n = 0,
          s = 0;
        for (s = t._cacheList.length, n = 0; n < s; n++)
          if (t._cacheList[n].tryDispose == e && t._cacheList[n].getCacheList == i) return void t._cacheList.splice(n, 1);
      }, t.forceDispose = function() {
        var e = 0,
          i = t._cacheList.length;
        for (e = 0; e < i; e++) t._cacheList[e].tryDispose(!0);
      }, t.beginCheck = function(e) {
        void 0 === e && (e = 15e3), i.timer.loop(e, null, t._checkLoop);
      }, t.stopCheck = function() {
        i.timer.clear(null, t._checkLoop);
      }, t._checkLoop = function() {
        var e = t._cacheList;
        if (!(e.length < 1)) {
          var i = k.now(),
            n = 0,
            s = 0;
          for (s = n = e.length; n > 0 && (t._index++, t._index = t._index % s, e[t._index].tryDispose(!1), !(k.now() - i > t.loopTimeLimit));) n--;
        }
      }, t.loopTimeLimit = 2, t._cacheList = [], t._index = 0, t;
    }(),
    G = function() {
      function t() {}
      return s(t, "laya.utils.ClassUtils"), t.regClass = function(e, i) {
        t._classMap[e] = i;
      }, t.getRegClass = function(e) {
        return t._classMap[e];
      }, t.getInstance = function(e) {
        var i = t.getClass(e);
        return i ? new i() : (console.warn("[error] Undefined class:", e), null);
      }, t.createByJson = function(e, i, n, s, r) {
        "string" == typeof e && (e = JSON.parse(e));
        var a = e.props;
        if (!i && !(i = r ? r.runWith(e) : t.getInstance(a.runtime || e.type))) return null;
        var o = e.child;
        if (o)
          for (var h = 0, l = o.length; h < l; h++) {
            var u = o[h];
            if ("render" !== u.props.name && "render" !== u.props.renderType || !i._$set_itemRender)
              if ("Graphic" == u.type) t.addGraphicsToSprite(u, i);
              else if (t.isDrawType(u.type)) t.addGraphicToSprite(u, i, !0);
            else {
              var c = t.createByJson(u, null, n, s, r);
              "Script" == u.type ? c.hasOwnProperty("owner") ? c.owner = i : c.hasOwnProperty("target") && (c.target = i) : "mask" == u.props.renderType ? i.mask = c : i.addChild(c);
            } else i.itemRender = u;
          }
        if (a)
          for (var _ in a) {
            var d = a[_];
            "var" === _ && n ? n[d] = i : d instanceof Array && "function" == typeof i[_] ? i[_].apply(i, d) : i[_] = d;
          }
        return s && e.customProps && s.runWith([i, e]), i.created && i.created(), i;
      }, t.addGraphicsToSprite = function(e, i) {
        var n;
        if ((n = e.child) && !(n.length < 1)) {
          var s;
          s = t._getGraphicsFromSprite(e, i);
          var r = 0,
            a = 0;
          e.props && (r = t._getObjVar(e.props, "x", 0), a = t._getObjVar(e.props, "y", 0)),
            0 != r && 0 != a && s.translate(r, a);
          var o = 0,
            h = 0;
          for (h = n.length, o = 0; o < h; o++) t._addGraphicToGraphics(n[o], s);
          0 != r && 0 != a && s.translate(-r, -a);
        }
      }, t.addGraphicToSprite = function(e, i, n) {
        void 0 === n && (n = !1);
        var s;
        s = n ? t._getGraphicsFromSprite(e, i) : i.graphics, t._addGraphicToGraphics(e, s);
      }, t._getGraphicsFromSprite = function(t, e) {
        var i;
        if (!t || !t.props) return e.graphics;
        var n;
        switch (n = t.props.renderType) {
          case "hit":
          case "unHit":
            var s;
            e.hitArea || (e.hitArea = new W()), (s = e.hitArea)[n] || (s[n] = new p()), i = s[n];
        }
        return i || (i = e.graphics), i;
      }, t._getTransformData = function(e) {
        var i;
        (e.hasOwnProperty("pivotX") || e.hasOwnProperty("pivotY")) && (i = i || new C()).translate(-t._getObjVar(e, "pivotX", 0), -t._getObjVar(e, "pivotY", 0));
        var n = t._getObjVar(e, "scaleX", 1),
          s = t._getObjVar(e, "scaleY", 1),
          r = t._getObjVar(e, "rotation", 0);
        t._getObjVar(e, "skewX", 0), t._getObjVar(e, "skewY", 0);
        return 1 == n && 1 == s && 0 == r || ((i = i || new C()).scale(n, s), i.rotate(.0174532922222222 * r)),
          i;
      }, t._addGraphicToGraphics = function(e, i) {
        var n;
        if (n = e.props) {
          var s;
          if (s = t.DrawTypeDic[e.type]) {
            var r;
            r = i;
            var a, o = t._getParams(n, s[1], s[2], s[3]);
            ((a = t._tM) || 1 != t._alpha) && (r.save(), a && r.transform(a), 1 != t._alpha && r.alpha(t._alpha)),
            r[s[0]].apply(r, o), (a || 1 != t._alpha) && r.restore();
          }
        }
      }, t._adptLineData = function(t) {
        return t[2] = parseFloat(t[0]) + parseFloat(t[2]), t[3] = parseFloat(t[1]) + parseFloat(t[3]),
          t;
      }, t._adptTextureData = function(t) {
        return t[0] = at.getRes(t[0]), t;
      }, t._adptLinesData = function(e) {
        return e[2] = t._getPointListByStr(e[2]), e;
      }, t.isDrawType = function(e) {
        return "Image" != e && t.DrawTypeDic.hasOwnProperty(e);
      }, t._getParams = function(e, i, n, s) {
        void 0 === n && (n = 0);
        var r;
        (r = t._temParam).length = i.length;
        var a = 0,
          o = 0;
        for (o = i.length, a = 0; a < o; a++) r[a] = t._getObjVar(e, i[a][0], i[a][1]);
        t._alpha = t._getObjVar(e, "alpha", 1);
        var h;
        return (h = t._getTransformData(e)) ? (n || (n = 0), h.translate(r[n], r[n + 1]),
          r[n] = r[n + 1] = 0, t._tM = h) : t._tM = null, s && t[s] && (r = t[s](r)), r;
      }, t._getPointListByStr = function(t) {
        var e, i = 0,
          n = 0;
        for (n = (e = t.split(",")).length, i = 0; i < n; i++) e[i] = parseFloat(e[i]);
        return e;
      }, t._getObjVar = function(t, e, i) {
        return t.hasOwnProperty(e) ? t[e] : i;
      }, t._temParam = [], t._classMap = {
        Sprite: "laya.display.Sprite",
        Text: "laya.display.Text",
        Animation: "laya.display.Animation",
        Skeleton: "laya.ani.bone.Skeleton",
        Particle2D: "laya.particle.Particle2D",
        div: "laya.html.dom.HTMLDivElement",
        p: "laya.html.dom.HTMLElement",
        img: "laya.html.dom.HTMLImageElement",
        span: "laya.html.dom.HTMLElement",
        br: "laya.html.dom.HTMLBrElement",
        style: "laya.html.dom.HTMLStyleElement",
        font: "laya.html.dom.HTMLElement",
        a: "laya.html.dom.HTMLElement",
        "#text": "laya.html.dom.HTMLElement"
      }, t.getClass = function(e) {
        var n = t._classMap[e] || e;
        return "string" == typeof n ? i.__classmap[n] : n;
      }, t._tM = null, t._alpha = NaN, n(t, ["DrawTypeDic", function() {
        return this.DrawTypeDic = {
          Rect: ["drawRect", [
            ["x", 0],
            ["y", 0],
            ["width", 0],
            ["height", 0],
            ["fillColor", null],
            ["lineColor", null],
            ["lineWidth", 1]
          ]],
          Circle: ["drawCircle", [
            ["x", 0],
            ["y", 0],
            ["radius", 0],
            ["fillColor", null],
            ["lineColor", null],
            ["lineWidth", 1]
          ]],
          Pie: ["drawPie", [
            ["x", 0],
            ["y", 0],
            ["radius", 0],
            ["startAngle", 0],
            ["endAngle", 0],
            ["fillColor", null],
            ["lineColor", null],
            ["lineWidth", 1]
          ]],
          Image: ["drawTexture", [
            ["x", 0],
            ["y", 0],
            ["width", 0],
            ["height", 0]
          ]],
          Texture: ["drawTexture", [
            ["skin", null],
            ["x", 0],
            ["y", 0],
            ["width", 0],
            ["height", 0]
          ], 1, "_adptTextureData"],
          FillTexture: ["fillTexture", [
            ["skin", null],
            ["x", 0],
            ["y", 0],
            ["width", 0],
            ["height", 0],
            ["repeat", null]
          ], 1, "_adptTextureData"],
          FillText: ["fillText", [
            ["text", ""],
            ["x", 0],
            ["y", 0],
            ["font", null],
            ["color", null],
            ["textAlign", null]
          ], 1],
          Line: ["drawLine", [
            ["x", 0],
            ["y", 0],
            ["toX", 0],
            ["toY", 0],
            ["lineColor", null],
            ["lineWidth", 0]
          ], 0, "_adptLineData"],
          Lines: ["drawLines", [
            ["x", 0],
            ["y", 0],
            ["points", ""],
            ["lineColor", null],
            ["lineWidth", 0]
          ], 0, "_adptLinesData"],
          Curves: ["drawCurves", [
            ["x", 0],
            ["y", 0],
            ["points", ""],
            ["lineColor", null],
            ["lineWidth", 0]
          ], 0, "_adptLinesData"],
          Poly: ["drawPoly", [
            ["x", 0],
            ["y", 0],
            ["points", ""],
            ["fillColor", null],
            ["lineColor", null],
            ["lineWidth", 1]
          ], 0, "_adptLinesData"]
        };
      }]), t;
    }(),
    V = function() {
      function t(e) {
        if (this._color = [], "string" == typeof e) {
          this.strColor = e, null === e && (e = "#000000"), "#" == e.charAt(0) && (e = e.substr(1));
          var i = e.length;
          if (3 == i || 4 == i) {
            for (var n = "", s = 0; s < i; s++) n += e[s] + e[s];
            e = n;
          }
          var r = this.numColor = parseInt(e, 16);
          if (8 == e.length) return void(this._color = [parseInt(e.substr(0, 2), 16) / 255, ((16711680 & r) >> 16) / 255, ((65280 & r) >> 8) / 255, (255 & r) / 255]);
        } else r = this.numColor = e, this.strColor = $.toHexColor(r);
        this._color = [((16711680 & r) >> 16) / 255, ((65280 & r) >> 8) / 255, (255 & r) / 255, 1],
          this._color.__id = ++t._COLODID;
      }
      return s(t, "laya.utils.Color"), t._initDefault = function() {
        t._DEFAULT = {};
        for (var e in t._COLOR_MAP) t._SAVE[e] = t._DEFAULT[e] = new t(t._COLOR_MAP[e]);
        return t._DEFAULT;
      }, t._initSaveMap = function() {
        t._SAVE_SIZE = 0, t._SAVE = {};
        for (var e in t._DEFAULT) t._SAVE[e] = t._DEFAULT[e];
      }, t.create = function(e) {
        var i = t._SAVE[e + ""];
        return null != i ? i : (t._SAVE_SIZE < 1e3 || t._initSaveMap(), t._SAVE[e + ""] = new t(e));
      }, t._SAVE = {}, t._SAVE_SIZE = 0, t._COLOR_MAP = {
        white: "#FFFFFF",
        red: "#FF0000",
        green: "#00FF00",
        blue: "#0000FF",
        black: "#000000",
        yellow: "#FFFF00",
        gray: "#AAAAAA"
      }, t._DEFAULT = t._initDefault(), t._COLODID = 1, t;
    }(),
    H = (function() {
      function t() {
        this._values = [], this._keys = [];
      }
      s(t, "laya.utils.Dictionary");
      var e = t.prototype;
      e.set = function(t, e) {
        var i = this.indexOf(t);
        i >= 0 ? this._values[i] = e : (this._keys.push(t), this._values.push(e));
      }, e.indexOf = function(t) {
        var e = this._keys.indexOf(t);
        return e >= 0 ? e : (t = "string" == typeof t ? Number(t) : "number" == typeof t ? t.toString() : t,
          this._keys.indexOf(t));
      }, e.get = function(t) {
        var e = this.indexOf(t);
        return e < 0 ? null : this._values[e];
      }, e.remove = function(t) {
        var e = this.indexOf(t);
        return e >= 0 && (this._keys.splice(e, 1), this._values.splice(e, 1), !0);
      }, e.clear = function() {
        this._values.length = 0, this._keys.length = 0;
      }, r(0, e, "values", function() {
        return this._values;
      }), r(0, e, "keys", function() {
        return this._keys;
      });
    }(), function() {
      function t() {
        this.ratio = .92, this.maxOffset = 60, this._dragging = !1, this._clickOnly = !0;
      }
      s(t, "laya.utils.Dragging");
      var e = t.prototype;
      return e.start = function(t, e, n, s, r, a, o, h) {
        void 0 === h && (h = .92), this.clearTimer(), this.target = t, this.area = e, this.hasInertia = n,
          this.elasticDistance = e ? s : 0, this.elasticBackTime = r, this.data = a, this._disableMouseEvent = o,
          this.ratio = h, 1 != t.globalScaleX || 1 != t.globalScaleY ? this._parent = t.parent : this._parent = i.stage,
          this._clickOnly = !0, this._dragging = !0, this._elasticRateX = this._elasticRateY = 1,
          this._lastX = this._parent.mouseX, this._lastY = this._parent.mouseY, i.stage.on("mouseup", this, this.onStageMouseUp),
          i.stage.on("mouseout", this, this.onStageMouseUp), i.timer.frameLoop(1, this, this.loop);
      }, e.clearTimer = function() {
        i.timer.clear(this, this.loop), i.timer.clear(this, this.tweenMove), this._tween && (this._tween.recover(),
          this._tween = null);
      }, e.stop = function() {
        this._dragging && (y.instance.disableMouseEvent = !1, i.stage.off("mouseup", this, this.onStageMouseUp),
          i.stage.off("mouseout", this, this.onStageMouseUp), this._dragging = !1, this.target && this.area && this.backToArea(),
          this.clear());
      }, e.loop = function() {
        var t = this._parent.getMousePoint(),
          e = t.x,
          n = t.y,
          s = e - this._lastX,
          r = n - this._lastY;
        if (this._clickOnly) {
          if (!(Math.abs(s * i.stage._canvasTransform.getScaleX()) > 1 || Math.abs(r * i.stage._canvasTransform.getScaleY()) > 1)) return;
          this._clickOnly = !1, this._offsets || (this._offsets = []), this._offsets.length = 0,
            this.target.event("dragstart", this.data), y.instance.disableMouseEvent = this._disableMouseEvent,
            this.target._set$P("$_MOUSEDOWN", !1);
        } else this._offsets.push(s, r);
        0 === s && 0 === r || (this._lastX = e, this._lastY = n, this.target.x += s * this._elasticRateX,
          this.target.y += r * this._elasticRateY, this.area && this.checkArea(), this.target.event("dragmove", this.data));
      }, e.checkArea = function() {
        if (this.elasticDistance <= 0) this.backToArea();
        else {
          if (this.target.x < this.area.x) var t = this.area.x - this.target.x;
          else t = this.target.x > this.area.x + this.area.width ? this.target.x - this.area.x - this.area.width : 0;
          if (this._elasticRateX = Math.max(0, 1 - t / this.elasticDistance), this.target.y < this.area.y) var e = this.area.y - this.target.y;
          else e = this.target.y > this.area.y + this.area.height ? this.target.y - this.area.y - this.area.height : 0;
          this._elasticRateY = Math.max(0, 1 - e / this.elasticDistance);
        }
      }, e.backToArea = function() {
        this.target.x = Math.min(Math.max(this.target.x, this.area.x), this.area.x + this.area.width),
          this.target.y = Math.min(Math.max(this.target.y, this.area.y), this.area.y + this.area.height);
      }, e.onStageMouseUp = function(t) {
        if (y.instance.disableMouseEvent = !1, i.stage.off("mouseup", this, this.onStageMouseUp),
          i.stage.off("mouseout", this, this.onStageMouseUp), i.timer.clear(this, this.loop), !this._clickOnly && this.target)
          if (this.hasInertia) {
            this._offsets.length < 1 && this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY),
              this._offsetX = this._offsetY = 0;
            for (var e = this._offsets.length, n = Math.min(e, 6), s = this._offsets.length - n, r = e - 1; r > s; r--) this._offsetY += this._offsets[r--],
              this._offsetX += this._offsets[r];
            this._offsetX = this._offsetX / n * 2, this._offsetY = this._offsetY / n * 2, Math.abs(this._offsetX) > this.maxOffset && (this._offsetX = this._offsetX > 0 ? this.maxOffset : -this.maxOffset),
              Math.abs(this._offsetY) > this.maxOffset && (this._offsetY = this._offsetY > 0 ? this.maxOffset : -this.maxOffset),
              i.timer.frameLoop(1, this, this.tweenMove);
          } else this.elasticDistance > 0 ? this.checkElastic() : this.clear();
      }, e.checkElastic = function() {
        var t = NaN,
          e = NaN;
        if (this.target.x < this.area.x ? t = this.area.x : this.target.x > this.area.x + this.area.width && (t = this.area.x + this.area.width),
          this.target.y < this.area.y ? e = this.area.y : this.target.y > this.area.y + this.area.height && (e = this.area.y + this.area.height),
          isNaN(t) && isNaN(e)) this.clear();
        else {
          var i = {};
          isNaN(t) || (i.x = t), isNaN(e) || (i.y = e), this._tween = j.to(this.target, i, this.elasticBackTime, z.sineOut, l.create(this, this.clear), 0, !1, !1);
        }
      }, e.tweenMove = function() {
        this._offsetX *= this.ratio * this._elasticRateX, this._offsetY *= this.ratio * this._elasticRateY,
          this.target.x += this._offsetX, this.target.y += this._offsetY, this.area && this.checkArea(),
          this.target.event("dragmove", this.data), (Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1 || this._elasticRateX < .5 || this._elasticRateY < .5) && (i.timer.clear(this, this.tweenMove),
            this.elasticDistance > 0 ? this.checkElastic() : this.clear());
      }, e.clear = function() {
        if (this.target) {
          this.clearTimer();
          var t = this.target;
          this.target = null, this._parent = null, t.event("dragend", this.data);
        }
      }, t;
    }()),
    z = function() {
      function t() {}
      return s(t, "laya.utils.Ease"), t.linearNone = function(t, e, i, n) {
        return i * t / n + e;
      }, t.linearIn = function(t, e, i, n) {
        return i * t / n + e;
      }, t.linearInOut = function(t, e, i, n) {
        return i * t / n + e;
      }, t.linearOut = function(t, e, i, n) {
        return i * t / n + e;
      }, t.bounceIn = function(e, i, n, s) {
        return n - t.bounceOut(s - e, 0, n, s) + i;
      }, t.bounceInOut = function(e, i, n, s) {
        return e < .5 * s ? .5 * t.bounceIn(2 * e, 0, n, s) + i : .5 * t.bounceOut(2 * e - s, 0, n, s) + .5 * n + i;
      }, t.bounceOut = function(t, e, i, n) {
        return (t /= n) < 1 / 2.75 ? i * (7.5625 * t * t) + e : t < 2 / 2.75 ? i * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + e : t < 2.5 / 2.75 ? i * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + e : i * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + e;
      }, t.backIn = function(t, e, i, n, s) {
        return void 0 === s && (s = 1.70158), i * (t /= n) * t * ((s + 1) * t - s) + e;
      }, t.backInOut = function(t, e, i, n, s) {
        return void 0 === s && (s = 1.70158), (t /= .5 * n) < 1 ? .5 * i * (t * t * ((1 + (s *= 1.525)) * t - s)) + e : i / 2 * ((t -= 2) * t * ((1 + (s *= 1.525)) * t + s) + 2) + e;
      }, t.backOut = function(t, e, i, n, s) {
        return void 0 === s && (s = 1.70158), i * ((t = t / n - 1) * t * ((s + 1) * t + s) + 1) + e;
      }, t.elasticIn = function(e, i, n, s, r, a) {
        void 0 === r && (r = 0), void 0 === a && (a = 0);
        var o;
        return 0 == e ? i : 1 == (e /= s) ? i + n : (a || (a = .3 * s), !r || n > 0 && r < n || n < 0 && r < -n ? (r = n,
          o = a / 4) : o = a / t.PI2 * Math.asin(n / r), -r * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * s - o) * t.PI2 / a) + i);
      }, t.elasticInOut = function(e, i, n, s, r, a) {
        void 0 === r && (r = 0), void 0 === a && (a = 0);
        var o;
        return 0 == e ? i : 2 == (e /= .5 * s) ? i + n : (a || (a = s * (.3 * 1.5)), !r || n > 0 && r < n || n < 0 && r < -n ? (r = n,
          o = a / 4) : o = a / t.PI2 * Math.asin(n / r), e < 1 ? r * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * s - o) * t.PI2 / a) * -.5 + i : r * Math.pow(2, -10 * (e -= 1)) * Math.sin((e * s - o) * t.PI2 / a) * .5 + n + i);
      }, t.elasticOut = function(e, i, n, s, r, a) {
        void 0 === r && (r = 0), void 0 === a && (a = 0);
        var o;
        return 0 == e ? i : 1 == (e /= s) ? i + n : (a || (a = .3 * s), !r || n > 0 && r < n || n < 0 && r < -n ? (r = n,
          o = a / 4) : o = a / t.PI2 * Math.asin(n / r), r * Math.pow(2, -10 * e) * Math.sin((e * s - o) * t.PI2 / a) + n + i);
      }, t.strongIn = function(t, e, i, n) {
        return i * (t /= n) * t * t * t * t + e;
      }, t.strongInOut = function(t, e, i, n) {
        return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t * t + e : .5 * i * ((t -= 2) * t * t * t * t + 2) + e;
      }, t.strongOut = function(t, e, i, n) {
        return i * ((t = t / n - 1) * t * t * t * t + 1) + e;
      }, t.sineInOut = function(t, e, i, n) {
        return .5 * -i * (Math.cos(Math.PI * t / n) - 1) + e;
      }, t.sineIn = function(e, i, n, s) {
        return -n * Math.cos(e / s * t.HALF_PI) + n + i;
      }, t.sineOut = function(e, i, n, s) {
        return n * Math.sin(e / s * t.HALF_PI) + i;
      }, t.quintIn = function(t, e, i, n) {
        return i * (t /= n) * t * t * t * t + e;
      }, t.quintInOut = function(t, e, i, n) {
        return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t * t + e : .5 * i * ((t -= 2) * t * t * t * t + 2) + e;
      }, t.quintOut = function(t, e, i, n) {
        return i * ((t = t / n - 1) * t * t * t * t + 1) + e;
      }, t.quartIn = function(t, e, i, n) {
        return i * (t /= n) * t * t * t + e;
      }, t.quartInOut = function(t, e, i, n) {
        return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t + e : .5 * -i * ((t -= 2) * t * t * t - 2) + e;
      }, t.quartOut = function(t, e, i, n) {
        return -i * ((t = t / n - 1) * t * t * t - 1) + e;
      }, t.cubicIn = function(t, e, i, n) {
        return i * (t /= n) * t * t + e;
      }, t.cubicInOut = function(t, e, i, n) {
        return (t /= .5 * n) < 1 ? .5 * i * t * t * t + e : .5 * i * ((t -= 2) * t * t + 2) + e;
      }, t.cubicOut = function(t, e, i, n) {
        return i * ((t = t / n - 1) * t * t + 1) + e;
      }, t.quadIn = function(t, e, i, n) {
        return i * (t /= n) * t + e;
      }, t.quadInOut = function(t, e, i, n) {
        return (t /= .5 * n) < 1 ? .5 * i * t * t + e : .5 * -i * (--t * (t - 2) - 1) + e;
      }, t.quadOut = function(t, e, i, n) {
        return -i * (t /= n) * (t - 2) + e;
      }, t.expoIn = function(t, e, i, n) {
        return 0 == t ? e : i * Math.pow(2, 10 * (t / n - 1)) + e - .001 * i;
      }, t.expoInOut = function(t, e, i, n) {
        return 0 == t ? e : t == n ? e + i : (t /= .5 * n) < 1 ? .5 * i * Math.pow(2, 10 * (t - 1)) + e : .5 * i * (2 - Math.pow(2, -10 * --t)) + e;
      }, t.expoOut = function(t, e, i, n) {
        return t == n ? e + i : i * (1 - Math.pow(2, -10 * t / n)) + e;
      }, t.circIn = function(t, e, i, n) {
        return -i * (Math.sqrt(1 - (t /= n) * t) - 1) + e;
      }, t.circInOut = function(t, e, i, n) {
        return (t /= .5 * n) < 1 ? .5 * -i * (Math.sqrt(1 - t * t) - 1) + e : .5 * i * (Math.sqrt(1 - (t -= 2) * t) + 1) + e;
      }, t.circOut = function(t, e, i, n) {
        return i * Math.sqrt(1 - (t = t / n - 1) * t) + e;
      }, t.HALF_PI = .5 * Math.PI, t.PI2 = 2 * Math.PI, t;
    }(),
    W = function() {
      function t() {
        this._hit = null, this._unHit = null;
      }
      s(t, "laya.utils.HitArea");
      var e = t.prototype;
      return e.isHit = function(e, i) {
        return !!t.isHitGraphic(e, i, this.hit) && !t.isHitGraphic(e, i, this.unHit);
      }, e.contains = function(t, e) {
        return this.isHit(t, e);
      }, r(0, e, "hit", function() {
        return this._hit || (this._hit = new p()), this._hit;
      }, function(t) {
        this._hit = t;
      }), r(0, e, "unHit", function() {
        return this._unHit || (this._unHit = new p()), this._unHit;
      }, function(t) {
        this._unHit = t;
      }), t.isHitGraphic = function(e, i, n) {
        if (!n) return !1;
        var s;
        if (!(s = n.cmds) && n._one && ((s = t._cmds).length = 1, s[0] = n._one), !s) return !1;
        var r = 0,
          a = 0;
        a = s.length;
        var o;
        for (r = 0; r < a; r++)
          if (o = s[r]) {
            var h = D._context;
            switch (o.callee) {
              case h._translate:
              case 6:
                e -= o[0], i -= o[1];
            }
            if (t.isHitCmd(e, i, o)) return !0;
          }
        return !1;
      }, t.isHitCmd = function(e, i, n) {
        if (!n) return !1;
        var s = D._context,
          r = !1;
        switch (n.callee) {
          case s._drawRect:
          case 13:
            t._rec.setTo(n[0], n[1], n[2], n[3]), r = t._rec.contains(e, i);
            break;

          case s._drawCircle:
          case s._fillCircle:
          case 14:
            r = (e -= n[0]) * e + (i -= n[1]) * i < n[2] * n[2];
            break;

          case s._drawPoly:
          case 18:
            e -= n[0], i -= n[1], r = t.ptInPolygon(e, i, n[2]);
        }
        return r;
      }, t.ptInPolygon = function(e, i, n) {
        var s;
        (s = t._ptPoint).setTo(e, i);
        var r = 0,
          a = NaN,
          o = NaN,
          h = NaN,
          l = NaN,
          u = 0;
        u = n.length;
        for (var c = 0; c < u; c += 2)
          if (a = n[c], o = n[c + 1], h = n[(c + 2) % u], l = n[(c + 3) % u],
            o != l && !(s.y < Math.min(o, l) || s.y >= Math.max(o, l))) {
            (s.y - o) * (h - a) / (l - o) + a > s.x && r++;
          }
        return r % 2 == 1;
      }, t._cmds = [], n(t, ["_rec", function() {
        return this._rec = new E();
      }, "_ptPoint", function() {
        return this._ptPoint = new T();
      }]), t;
    }(),
    Y = (function() {
      function t(e, i, n, s) {
        this.char = e, this.charNum = e.charCodeAt(0), this._x = this._y = 0, this.width = i,
          this.height = n, this.style = s, this.isWord = !t._isWordRegExp.test(e);
      }
      s(t, "laya.utils.HTMLChar");
      var e = t.prototype;
      i.imps(e, {
        "laya.display.ILayout": !0
      }), e.setSprite = function(t) {
        this._sprite = t;
      }, e.getSprite = function() {
        return this._sprite;
      }, e._isChar = function() {
        return !0;
      }, e._getCSSStyle = function() {
        return this.style;
      }, r(0, e, "width", function() {
        return this._w;
      }, function(t) {
        this._w = t;
      }), r(0, e, "x", function() {
        return this._x;
      }, function(t) {
        this._sprite && (this._sprite.x = t), this._x = t;
      }), r(0, e, "y", function() {
        return this._y;
      }, function(t) {
        this._sprite && (this._sprite.y = t), this._y = t;
      }), r(0, e, "height", function() {
        return this._h;
      }, function(t) {
        this._h = t;
      }), t._isWordRegExp = new RegExp("[\\w.]", "");
    }(), function() {
      function t() {}
      s(t, "laya.utils.Log"), t.enable = function() {
        t._logdiv || (t._logdiv = k.window.document.createElement("div"), k.window.document.body.appendChild(t._logdiv),
          t._logdiv.style.cssText = "pointer-events:none;border:white;overflow:hidden;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;");
      }, t.toggle = function() {
        var e = t._logdiv.style;
        "1px" == e.width ? e.width = e.height = "50%" : e.width = e.height = "1px";
      }, t.print = function(e) {
        t._logdiv && (t._count >= t.maxCount && t.clear(), t._count++, t._logdiv.innerText += e + "\n",
          t._logdiv.scrollTop = t._logdiv.scrollHeight);
      }, t.clear = function() {
        t._logdiv.innerText = "", t._count = 0;
      }, t._logdiv = null, t._count = 0, t.maxCount = 20;
    }(), function() {
      function t() {}
      s(t, "laya.utils.Mouse"), r(1, t, "cursor", function() {
        return t._style.cursor;
      }, function(e) {
        t._style.cursor = e;
      }), t.hide = function() {
        "none" != t.cursor && (t._preCursor = t.cursor, t.cursor = "none");
      }, t.show = function() {
        "none" == t.cursor && (t.cursor = t._preCursor ? t._preCursor : "auto");
      }, t._preCursor = null, n(t, ["_style", function() {
        return this._style = k.document.body.style;
      }]);
    }(), function() {
      function t() {}
      return s(t, "laya.utils.Pool"), t.getPoolBySign = function(e) {
        return t._poolDic[e] || (t._poolDic[e] = []);
      }, t.clearBySign = function(e) {
        t._poolDic[e] && (t._poolDic[e].length = 0);
      }, t.recover = function(e, i) {
        i.__InPool || (i.__InPool = !0, t.getPoolBySign(e).push(i));
      }, t.getItemByClass = function(e, i) {
        var n = t.getPoolBySign(e),
          s = n.length ? n.pop() : new i();
        return s.__InPool = !1, s;
      }, t.getItemByCreateFun = function(e, i) {
        var n = t.getPoolBySign(e),
          s = n.length ? n.pop() : i();
        return s.__InPool = !1, s;
      }, t.getItem = function(e) {
        var i = t.getPoolBySign(e),
          n = i.length ? i.pop() : null;
        return n && (n.__InPool = !1), n;
      }, t._poolDic = {}, t.InPoolSign = "__InPool", t;
    }()),
    X = (function() {
      function t() {
        this.sign = null, this.maxCount = 1e3;
      }
      s(t, "laya.utils.PoolCache");
      var e = t.prototype;
      e.getCacheList = function() {
        return Y.getPoolBySign(this.sign);
      }, e.tryDispose = function(t) {
        var e;
        (e = Y.getPoolBySign(this.sign)).length > this.maxCount && e.splice(this.maxCount, e.length - this.maxCount);
      }, t.addPoolCacheManager = function(e, i) {
        void 0 === i && (i = 100);
        var n;
        (n = new t()).sign = e, n.maxCount = i, U.regCacheByFunction($.bind(n.tryDispose, n), $.bind(n.getCacheList, n));
      };
    }(), function() {
      function t() {}
      return s(t, "laya.utils.Stat"), r(1, t, "onclick", null, function(e) {
          t._sp && t._sp.on("click", t._sp, e), t._canvas && (t._canvas.source.onclick = e,
            t._canvas.source.style.pointerEvents = "");
        }), t.show = function(e, i) {
          void 0 === e && (e = 0), void 0 === i && (i = 0), !D.isConchApp || D.isConchWebGL ? (D.isConchWebGL || k.onMiniGame || k.onLimixiu || (t._useCanvas = !0),
            t._show = !0, t._fpsData.length = 60, t._view[0] = {
              title: "FPS(Canvas)",
              value: "_fpsStr",
              color: "yellow",
              units: "int"
            }, t._view[1] = {
              title: "Sprite",
              value: "_spriteStr",
              color: "white",
              units: "int"
            }, t._view[2] = {
              title: "DrawCall",
              value: "drawCall",
              color: "white",
              units: "int"
            }, t._view[3] = {
              title: "CurMem",
              value: "currentMemorySize",
              color: "yellow",
              units: "M"
            }, D.isWebGL ? (t._view[4] = {
              title: "Shader",
              value: "shaderCall",
              color: "white",
              units: "int"
            }, D.is3DMode ? (t._view[0].title = "FPS(3D)", t._view[5] = {
              title: "TriFaces",
              value: "trianglesFaces",
              color: "white",
              units: "int"
            }, t._view[6] = {
              title: "treeNodeColl",
              value: "treeNodeCollision",
              color: "white",
              units: "int"
            }, t._view[7] = {
              title: "treeSpriteColl",
              value: "treeSpriteCollision",
              color: "white",
              units: "int"
            }) : (t._view[0].title = "FPS(WebGL)", t._view[5] = {
              title: "Canvas",
              value: "_canvasStr",
              color: "white",
              units: "int"
            })) : t._view[4] = {
              title: "Canvas",
              value: "_canvasStr",
              color: "white",
              units: "int"
            }, t._useCanvas ? t.createUIPre(e, i) : t.createUI(e, i), t.enable()) : k.window.conch.showFPS && k.window.conch.showFPS(e, i);
        }, t.createUIPre = function(e, i) {
          var n = k.pixelRatio;
          t._width = 130 * n, t._vx = 75 * n, t._height = n * (12 * t._view.length + 3 * n) + 4,
            t._fontSize = 12 * n;
          for (var s = 0; s < t._view.length; s++) t._view[s].x = 4, t._view[s].y = s * t._fontSize + 2 * n;
          t._canvas || ((t._canvas = new vt("2D")).size(t._width, t._height), (t._ctx = t._canvas.getContext("2d")).textBaseline = "top",
              t._ctx.font = t._fontSize + "px Sans-serif", t._canvas.source.style.cssText = "pointer-events:none;background:rgba(150,150,150,0.8);z-index:100000;position: absolute;direction:ltr;left:" + e + "px;top:" + i + "px;width:" + t._width / n + "px;height:" + t._height / n + "px;"),
            t._first = !0, t.loop(), t._first = !1, k.container.appendChild(t._canvas.source);
        }, t.createUI = function(e, i) {
          var n = t._sp,
            s = k.pixelRatio;
          n || (n = new ct(), (t._leftText = new gt()).pos(5, 5), t._leftText.color = "#ffffff",
            n.addChild(t._leftText), (t._txt = new gt()).pos(80 * s, 5), t._txt.color = "#ffffff",
            n.addChild(t._txt), t._sp = n), n.pos(e, i);
          for (var r = "", a = 0; a < t._view.length; a++) {
            r += t._view[a].title + "\n";
          }
          t._leftText.text = r;
          var o = 138 * s,
            h = s * (12 * t._view.length + 3 * s) + 4;
          t._txt.fontSize = t._fontSize * s, t._leftText.fontSize = t._fontSize * s, n.size(o, h),
            n.graphics.clear(), n.graphics.setAlpha(.5), n.graphics.drawRect(0, 0, o, h, "#999999"),
            n.graphics.setAlpha(1), t.loop();
        }, t.enable = function() {
          i.timer.frameLoop(1, t, t.loop);
        }, t.hide = function() {
          t._show = !1, i.timer.clear(t, t.loop), t._canvas && k.removeElement(t._canvas.source);
        }, t.clear = function() {
          t.trianglesFaces = t.drawCall = t.shaderCall = t.spriteCount = t.spriteRenderUseCacheCount = t.treeNodeCollision = t.treeSpriteCollision = t.canvasNormal = t.canvasBitmap = t.canvasReCache = 0;
        }, t.loop = function() {
          t._count++;
          var e = k.now();
          if (!(e - t._timer < 1e3)) {
            var i = t._count;
            if (t.FPS = Math.round(1e3 * i / (e - t._timer)), t._show) {
              t.trianglesFaces = Math.round(t.trianglesFaces / i), t._useCanvas ? (t.drawCall = Math.round(t.drawCall / i) - 2,
                  t.shaderCall = Math.round(t.shaderCall / i), t.spriteCount = Math.round(t.spriteCount / i) - 1) : (t.drawCall = Math.round(t.drawCall / i) - 2,
                  t.shaderCall = Math.round(t.shaderCall / i) - 4, t.spriteCount = Math.round(t.spriteCount / i) - 4),
                t.spriteRenderUseCacheCount = Math.round(t.spriteRenderUseCacheCount / i), t.canvasNormal = Math.round(t.canvasNormal / i),
                t.canvasBitmap = Math.round(t.canvasBitmap / i), t.canvasReCache = Math.ceil(t.canvasReCache / i),
                t.treeNodeCollision = Math.round(t.treeNodeCollision / i), t.treeSpriteCollision = Math.round(t.treeSpriteCollision / i);
              var n = t.FPS > 0 ? Math.floor(1e3 / t.FPS).toString() : " ";
              t._fpsStr = t.FPS + (t.renderSlow ? " slow" : "") + " " + n, t._spriteStr = t.spriteCount + (t.spriteRenderUseCacheCount ? "/" + t.spriteRenderUseCacheCount : ""),
                t._canvasStr = t.canvasReCache + "/" + t.canvasNormal + "/" + t.canvasBitmap, t.currentMemorySize = B.systemResourceManager.memorySize,
                t._useCanvas ? t.renderInfoPre() : t.renderInfo(), t.clear();
            }
            t._count = 0, t._timer = e;
          }
        }, t.renderInfoPre = function() {
          if (t._canvas) {
            var e = t._ctx;
            e.clearRect(t._first ? 0 : t._vx, 0, t._width, t._height);
            for (var i = 0; i < t._view.length; i++) {
              var n = t._view[i];
              t._first && (e.fillStyle = "white", e.fillText(n.title, n.x, n.y, null, null, null)),
                e.fillStyle = n.color;
              var s = t[n.value];
              "M" == n.units && (s = Math.floor(s / 1048576 * 100) / 100 + " M"), e.fillText(s + "", n.x + t._vx, n.y, null, null, null);
            }
          }
        }, t.renderInfo = function() {
          for (var e = "", i = 0; i < t._view.length; i++) {
            var n = t._view[i],
              s = t[n.value];
            "M" == n.units && (s = Math.floor(s / 1048576 * 100) / 100 + " M"), "K" == n.units && (s = Math.floor(s / 1024 * 100) / 100 + " K"),
              e += s + "\n";
          }
          t._txt.text = e;
        }, t.FPS = 0, t.loopCount = 0, t.shaderCall = 0, t.drawCall = 0, t.trianglesFaces = 0,
        t.spriteCount = 0, t.spriteRenderUseCacheCount = 0, t.treeNodeCollision = 0, t.treeSpriteCollision = 0,
        t.canvasNormal = 0, t.canvasBitmap = 0, t.canvasReCache = 0, t.renderSlow = !1,
        t.currentMemorySize = 0, t._fpsStr = null, t._canvasStr = null, t._spriteStr = null,
        t._fpsData = [], t._timer = 0, t._count = 0, t._view = [], t._fontSize = 12, t._txt = null,
        t._leftText = null, t._sp = null, t._show = !1, t._useCanvas = !1, t._canvas = null,
        t._ctx = null, t._first = !1, t._vx = NaN, t._width = 0, t._height = 100, t;
    }()),
    K = (function() {
      function t() {
        this._strsToID = {}, this._idToStrs = [], this._length = 0;
      }
      s(t, "laya.utils.StringKey");
      var e = t.prototype;
      e.add = function(t) {
        var e = this._strsToID[t];
        return null != e ? e : (this._idToStrs[this._length] = t, this._strsToID[t] = this._length++);
      }, e.getID = function(t) {
        var e = this._strsToID[t];
        return null == e ? -1 : e;
      }, e.getName = function(t) {
        var e = this._idToStrs[t];
        return null == e ? void 0 : e;
      };
    }(), function() {
      function t() {
        this._delta = 0, this.scale = 1, this.currFrame = 0, this._mid = 1, this._map = [],
          this._laters = [], this._handlers = [], this._temp = [], this._count = 0, this.currTimer = this._now(),
          this._lastTimer = this._now(), this._init();
      }
      var e;
      s(t, "laya.utils.Timer");
      var n = t.prototype;
      return n._init = function() {
        i.timer && i.timer.frameLoop(1, this, this._update);
      }, n._now = function() {
        return Date.now();
      }, n._update = function() {
        if (this.scale <= 0) this._lastTimer = this._now();
        else {
          var t = this.currFrame = this.currFrame + this.scale,
            e = this._now();
          this._delta = (e - this._lastTimer) * this.scale;
          var i = this.currTimer = this.currTimer + this._delta;
          this._lastTimer = e;
          var n = this._handlers;
          for (this._count = 0, a = 0, o = n.length; a < o; a++)
            if (null !== (h = n[a]).method) {
              var s = h.userFrame ? t : i;
              if (s >= h.exeTime)
                if (h.repeat)
                  if (h.jumpFrame)
                    for (; s >= h.exeTime;) h.exeTime += h.delay,
                      h.run(!1);
                  else h.exeTime += h.delay, h.run(!1), s > h.exeTime && (h.exeTime += Math.ceil((s - h.exeTime) / h.delay) * h.delay);
              else h.run(!0);
            } else this._count++;
          (this._count > 30 || t % 200 == 0) && this._clearHandlers();
          for (var r = this._laters, a = 0, o = r.length - 1; a <= o; a++) {
            var h = r[a];
            null !== h.method && (this._map[h.key] = null, h.run(!1)), this._recoverHandler(h),
              a === o && (o = r.length - 1);
          }
          r.length = 0;
        }
      }, n._clearHandlers = function() {
        for (var t = this._handlers, e = 0, i = t.length; e < i; e++) {
          var n = t[e];
          null !== n.method ? this._temp.push(n) : this._recoverHandler(n);
        }
        this._handlers = this._temp, this._temp = t, this._temp.length = 0;
      }, n._recoverHandler = function(e) {
        this._map[e.key] == e && (this._map[e.key] = null), e.clear(), t._pool.push(e);
      }, n._create = function(i, n, s, r, a, o, h) {
        if (!s) return a.apply(r, o), null;
        if (h) {
          var l = this._getHandler(r, a);
          if (l) return l.repeat = n, l.userFrame = i, l.delay = s, l.caller = r, l.method = a,
            l.args = o, l.exeTime = s + (i ? this.currFrame : this.currTimer + this._now() - this._lastTimer),
            l;
        }
        return l = t._pool.length > 0 ? t._pool.pop() : new e(), l.repeat = n, l.userFrame = i,
          l.delay = s, l.caller = r, l.method = a, l.args = o, l.exeTime = s + (i ? this.currFrame : this.currTimer + this._now() - this._lastTimer) + 1,
          this._indexHandler(l), this._handlers.push(l), l;
      }, n._indexHandler = function(t) {
        var e = t.caller,
          i = t.method,
          n = e ? e.$_GID || (e.$_GID = $.getGID()) : 0,
          s = i.$_TID || (i.$_TID = 1e5 * this._mid++);
        t.key = n + s, this._map[t.key] = t;
      }, n.once = function(t, e, i, n, s) {
        void 0 === s && (s = !0), this._create(!1, !1, t, e, i, n, s);
      }, n.loop = function(t, e, i, n, s, r) {
        void 0 === s && (s = !0), void 0 === r && (r = !1);
        var a = this._create(!1, !0, t, e, i, n, s);
        a && (a.jumpFrame = r);
      }, n.frameOnce = function(t, e, i, n, s) {
        void 0 === s && (s = !0), this._create(!0, !1, t, e, i, n, s);
      }, n.frameLoop = function(t, e, i, n, s) {
        void 0 === s && (s = !0), this._create(!0, !0, t, e, i, n, s);
      }, n.toString = function() {
        return "callLater:" + this._laters.length + " handlers:" + this._handlers.length + " pool:" + t._pool.length;
      }, n.clear = function(t, e) {
        var i = this._getHandler(t, e);
        i && (this._map[i.key] = null, i.key = 0, i.clear());
      }, n.clearAll = function(t) {
        if (t)
          for (var e = 0, i = this._handlers.length; e < i; e++) {
            var n = this._handlers[e];
            n.caller === t && (this._map[n.key] = null, n.key = 0, n.clear());
          }
      }, n._getHandler = function(t, e) {
        var i = t ? t.$_GID || (t.$_GID = $.getGID()) : 0,
          n = e.$_TID || (e.$_TID = 1e5 * this._mid++);
        return this._map[i + n];
      }, n.callLater = function(i, n, s) {
        if (null == this._getHandler(i, n)) {
          if (t._pool.length) var r = t._pool.pop();
          else r = new e();
          r.caller = i, r.method = n, r.args = s, this._indexHandler(r), this._laters.push(r);
        }
      }, n.runCallLater = function(t, e) {
        var i = this._getHandler(t, e);
        i && null != i.method && (this._map[i.key] = null, i.run(!0));
      }, n.runTimer = function(t, e) {
        this.runCallLater(t, e);
      }, r(0, n, "delta", function() {
        return this._delta;
      }), t._pool = [], t.__init$ = function() {
        e = function() {
          function t() {
            this.key = 0, this.repeat = !1, this.delay = 0, this.userFrame = !1, this.exeTime = 0,
              this.caller = null, this.method = null, this.args = null, this.jumpFrame = !1;
          }
          s(t, "");
          var e = t.prototype;
          return e.clear = function() {
            this.caller = null, this.method = null, this.args = null;
          }, e.run = function(t) {
            var e = this.caller;
            if (e && e.destroyed) return this.clear();
            var i = this.method,
              n = this.args;
            t && this.clear(), null != i && (n ? i.apply(e, n) : i.call(e));
          }, t;
        }();
      }, t;
    }()),
    j = function() {
      function t() {
        this.gid = 0;
      }
      s(t, "laya.utils.Tween");
      var e = t.prototype;
      return e.to = function(t, e, i, n, s, r, a) {
        return void 0 === r && (r = 0), void 0 === a && (a = !1), this._create(t, e, i, n, s, r, a, !0, !1, !0);
      }, e.from = function(t, e, i, n, s, r, a) {
        return void 0 === r && (r = 0), void 0 === a && (a = !1), this._create(t, e, i, n, s, r, a, !1, !1, !0);
      }, e._create = function(e, n, s, r, a, o, h, l, u, c) {
        if (!e) throw new Error("Tween:target is null");
        this._target = e, this._duration = s, this._ease = r || n.ease || t.easeNone, this._complete = a || n.complete,
          this._delay = o, this._props = [], this._usedTimer = 0, this._startTimer = k.now(),
          this._usedPool = u, this._delayParam = null, this.update = n.update;
        var _ = e.$_GID || (e.$_GID = $.getGID());
        return t.tweenMap[_] ? (h && t.clearTween(e), t.tweenMap[_].push(this)) : t.tweenMap[_] = [this],
          c ? o <= 0 ? this.firstStart(e, n, l) : (this._delayParam = [e, n, l], i.scaleTimer.once(o, this, this.firstStart, this._delayParam)) : this._initProps(e, n, l),
          this;
      }, e.firstStart = function(t, e, i) {
        this._delayParam = null, t.destroyed ? this.clear() : (this._initProps(t, e, i),
          this._beginLoop());
      }, e._initProps = function(t, e, i) {
        for (var n in e)
          if ("number" == typeof t[n]) {
            var s = i ? t[n] : e[n],
              r = i ? e[n] : t[n];
            this._props.push([n, s, r - s]), i || (t[n] = s);
          }
      }, e._beginLoop = function() {
        i.scaleTimer.frameLoop(1, this, this._doEase);
      }, e._doEase = function() {
        this._updateEase(k.now());
      }, e._updateEase = function(e) {
        var i = this._target;
        if (i) {
          if (i.destroyed) return t.clearTween(i);
          var n = this._usedTimer = e - this._startTimer - this._delay;
          if (!(n < 0)) {
            if (n >= this._duration) return this.complete();
            for (var s = n > 0 ? this._ease(n, 0, 1, this._duration) : 0, r = this._props, a = 0, o = r.length; a < o; a++) {
              var h = r[a];
              i[h[0]] = h[1] + s * h[2];
            }
            this.update && this.update.run();
          }
        }
      }, e.complete = function() {
        if (this._target) {
          i.scaleTimer.runTimer(this, this.firstStart);
          for (var t = this._target, e = this._props, n = this._complete, s = 0, r = e.length; s < r; s++) {
            var a = e[s];
            t[a[0]] = a[1] + a[2];
          }
          this.update && this.update.run(), this.clear(), n && n.run();
        }
      }, e.pause = function() {
        i.scaleTimer.clear(this, this._beginLoop), i.scaleTimer.clear(this, this._doEase),
          i.scaleTimer.clear(this, this.firstStart);
        var t = NaN;
        (t = k.now() - this._startTimer - this._delay) < 0 && (this._usedTimer = t);
      }, e.setStartTime = function(t) {
        this._startTimer = t;
      }, e.clear = function() {
        this._target && (this._remove(), this._clear());
      }, e._clear = function() {
        this.pause(), i.scaleTimer.clear(this, this.firstStart), this._complete = null,
          this._target = null, this._ease = null, this._props = null, this._delayParam = null,
          this._usedPool && (this.update = null, Y.recover("tween", this));
      }, e.recover = function() {
        this._usedPool = !0, this._clear();
      }, e._remove = function() {
        var e = t.tweenMap[this._target.$_GID];
        if (e)
          for (var i = 0, n = e.length; i < n; i++)
            if (e[i] === this) {
              e.splice(i, 1);
              break;
            }
      }, e.restart = function() {
        if (this.pause(), this._usedTimer = 0, this._startTimer = k.now(), this._delayParam) i.scaleTimer.once(this._delay, this, this.firstStart, this._delayParam);
        else {
          for (var t = this._props, e = 0, n = t.length; e < n; e++) {
            var s = t[e];
            this._target[s[0]] = s[1];
          }
          i.scaleTimer.once(this._delay, this, this._beginLoop);
        }
      }, e.resume = function() {
        this._usedTimer >= this._duration || (this._startTimer = k.now() - this._usedTimer - this._delay,
          this._delayParam ? this._usedTimer < 0 ? i.scaleTimer.once(-this._usedTimer, this, this.firstStart, this._delayParam) : this.firstStart.apply(this, this._delayParam) : this._beginLoop());
      }, r(0, e, "progress", null, function(t) {
        var e = t * this._duration;
        this._startTimer = k.now() - this._delay - e;
      }), t.to = function(e, i, n, s, r, a, o, h) {
        return void 0 === a && (a = 0), void 0 === o && (o = !1), void 0 === h && (h = !0),
          Y.getItemByClass("tween", t)._create(e, i, n, s, r, a, o, !0, h, !0);
      }, t.from = function(e, i, n, s, r, a, o, h) {
        return void 0 === a && (a = 0), void 0 === o && (o = !1), void 0 === h && (h = !0),
          Y.getItemByClass("tween", t)._create(e, i, n, s, r, a, o, !1, h, !0);
      }, t.clearAll = function(e) {
        if (e && e.$_GID) {
          var i = t.tweenMap[e.$_GID];
          if (i) {
            for (var n = 0, s = i.length; n < s; n++) i[n]._clear();
            i.length = 0;
          }
        }
      }, t.clear = function(t) {
        t.clear();
      }, t.clearTween = function(e) {
        t.clearAll(e);
      }, t.easeNone = function(t, e, i, n) {
        return i * t / n + e;
      }, t.tweenMap = {}, t;
    }(),
    $ = function() {
      function t() {}
      return s(t, "laya.utils.Utils"), t.toRadian = function(e) {
          return e * t._pi2;
        }, t.toAngle = function(e) {
          return e * t._pi;
        }, t.toHexColor = function(t) {
          if (t < 0 || isNaN(t)) return null;
          for (var e = t.toString(16); e.length < 6;) e = "0" + e;
          return "#" + e;
        }, t.getGID = function() {
          return t._gid++;
        }, t.concatArray = function(t, e) {
          if (!e) return t;
          if (!t) return e;
          var i = 0,
            n = e.length;
          for (i = 0; i < n; i++) t.push(e[i]);
          return t;
        }, t.clearArray = function(t) {
          return t ? (t.length = 0, t) : t;
        }, t.copyArray = function(t, e) {
          if (t || (t = []), !e) return t;
          t.length = e.length;
          var i = 0,
            n = e.length;
          for (i = 0; i < n; i++) t[i] = e[i];
          return t;
        }, t.getGlobalRecByPoints = function(t, e, i, n, s) {
          var r;
          r = new T(e, i), r = t.localToGlobal(r);
          var a;
          return a = new T(n, s), a = t.localToGlobal(a), E._getWrapRec([r.x, r.y, a.x, a.y]);
        }, t.getGlobalPosAndScale = function(e) {
          return t.getGlobalRecByPoints(e, 0, 0, 1, 1);
        }, t.bind = function(t, e) {
          return t.bind(e);
        }, t.measureText = function(t, e) {
          return a.measureText(t, e);
        }, t.updateOrder = function(t) {
          if (!t || t.length < 2) return !1;
          for (var e, i = 1, n = 0, s = t.length, r = NaN; i < s;) {
            for (e = t[n = i], r = t[n]._zOrder; --n > -1 && t[n]._zOrder > r;) t[n + 1] = t[n];
            t[n + 1] = e, i++;
          }
          var a = e.parent.conchModel;
          if (a)
            if (null != a.updateZOrder) a.updateZOrder();
            else {
              for (i = 0; i < s; i++) a.removeChild(t[i].conchModel);
              for (i = 0; i < s; i++) a.addChildAt(t[i].conchModel, i);
            }
          return !0;
        }, t.transPointList = function(t, e, i) {
          var n = 0,
            s = t.length;
          for (n = 0; n < s; n += 2) t[n] += e, t[n + 1] += i;
        }, t.parseInt = function(t, e) {
          void 0 === e && (e = 0);
          var i = k.window.parseInt(t, e);
          return isNaN(i) ? 0 : i;
        }, t.getFileExtension = function(e) {
          t._extReg.lastIndex = e.lastIndexOf(".");
          var i = t._extReg.exec(e);
          return i && i.length > 1 ? i[1].toLowerCase() : null;
        }, t.getTransformRelativeToWindow = function(t, e, n) {
          var s = i.stage,
            r = laya.utils.Utils.getGlobalPosAndScale(t),
            a = s._canvasTransform.clone(),
            o = a.tx,
            h = a.ty;
          a.rotate(-Math.PI / 180 * i.stage.canvasDegree), a.scale(i.stage.clientScaleX, i.stage.clientScaleY);
          var l = i.stage.canvasDegree % 180 != 0,
            u = NaN,
            c = NaN;
          l ? (u = n + r.y, c = e + r.x, u *= a.d, c *= a.a, 90 == i.stage.canvasDegree ? (u = o - u,
            c += h) : (u += o, c = h - c)) : (u = e + r.x, c = n + r.y, u *= a.a, c *= a.d,
            u += o, c += h);
          var _ = NaN,
            d = NaN;
          return l ? (_ = a.d * r.height, d = a.a * r.width) : (_ = a.a * r.width, d = a.d * r.height), {
            x: u,
            y: c,
            scaleX: _,
            scaleY: d
          };
        }, t.fitDOMElementInArea = function(e, n, s, r, a, o) {
          e._fitLayaAirInitialized || (e._fitLayaAirInitialized = !0, e.style.transformOrigin = e.style.webKittransformOrigin = "left top",
            e.style.position = "absolute");
          var h = t.getTransformRelativeToWindow(n, s, r);
          e.style.transform = e.style.webkitTransform = "scale(" + h.scaleX + "," + h.scaleY + ") rotate(" + i.stage.canvasDegree + "deg)",
            e.style.width = a + "px", e.style.height = o + "px", e.style.left = h.x + "px",
            e.style.top = h.y + "px";
        }, t.isOkTextureList = function(t) {
          if (!t) return !1;
          var e, i = 0,
            n = t.length;
          for (i = 0; i < n; i++)
            if (!(e = t[i]) || !e.source) return !1;
          return !0;
        }, t.isOKCmdList = function(t) {
          if (!t) return !1;
          var e, i, n = 0,
            s = t.length,
            r = D._context;
          for (n = 0; n < s; n++) switch ((e = t[n]).callee) {
            case r._drawTexture:
            case r._fillTexture:
            case r._drawTextureWithTransform:
              if (!(i = e[0]) || !i.source) return !1;
          }
          return !0;
        }, t._gid = 1, t._pi = 180 / Math.PI, t._pi2 = Math.PI / 180, t._extReg = /\.(\w+)\??/g,
        t.parseXMLFromString = function(t) {
          var e;
          if (t = t.replace(/>\s+</g, "><"), (e = new DOMParser().parseFromString(t, "text/xml")).firstChild.textContent.indexOf("This page contains the following errors") > -1) throw new Error(e.firstChild.firstChild.textContent);
          return e;
        }, t;
    }(),
    q = function() {
      function t() {
        this.useDic = {}, this.shapeDic = {}, this.shapeLineDic = {}, this._id = 0, this._checkKey = !1,
          this._freeIdArray = [], D.isWebGL && U.regCacheByFunction($.bind(this.startDispose, this), $.bind(this.getCacheList, this));
      }
      s(t, "laya.utils.VectorGraphManager");
      var e = t.prototype;
      return e.getId = function() {
        return this._id++;
      }, e.addShape = function(t, e) {
        this.shapeDic[t] = e, this.useDic[t] || (this.useDic[t] = !0);
      }, e.addLine = function(t, e) {
        this.shapeLineDic[t] = e, this.shapeLineDic[t] || (this.shapeLineDic[t] = !0);
      }, e.getShape = function(t) {
        this._checkKey && null != this.useDic[t] && (this.useDic[t] = !0);
      }, e.deleteShape = function(t) {
        this.shapeDic[t] && (this.shapeDic[t] = null, delete this.shapeDic[t]), this.shapeLineDic[t] && (this.shapeLineDic[t] = null,
          delete this.shapeLineDic[t]), null != this.useDic[t] && delete this.useDic[t];
      }, e.getCacheList = function() {
        var t, e = [];
        for (t in this.shapeDic) e.push(this.shapeDic[t]);
        for (t in this.shapeLineDic) e.push(this.shapeLineDic[t]);
        return e;
      }, e.startDispose = function(t) {
        var e;
        for (e in this.useDic) this.useDic[e] = !1;
        this._checkKey = !0;
      }, e.endDispose = function() {
        if (this._checkKey) {
          var t;
          for (t in this.useDic) this.useDic[t] || this.deleteShape(t);
          this._checkKey = !1;
        }
      }, t.getInstance = function() {
        return t.instance = t.instance || new t();
      }, t.instance = null, t;
    }(),
    Q = function() {
      function t() {
        this._obj = null, this._obj = t.supportWeakMap ? new k.window.WeakMap() : {}, t.supportWeakMap || t._maps.push(this);
      }
      s(t, "laya.utils.WeakObject");
      var e = t.prototype;
      return e.set = function(e, i) {
        if (null != e)
          if (t.supportWeakMap) {
            var n = e;
            "string" != typeof e && "number" != typeof e || (n = t._keys[e]) || (n = t._keys[e] = {
              k: e
            }), this._obj.set(n, i);
          } else "string" == typeof e || "number" == typeof e ? this._obj[e] = i : (e.$_GID || (e.$_GID = $.getGID()),
            this._obj[e.$_GID] = i);
      }, e.get = function(e) {
        if (null == e) return null;
        if (t.supportWeakMap) {
          var i = "string" == typeof e || "number" == typeof e ? t._keys[e] : e;
          return i ? this._obj.get(i) : null;
        }
        return "string" == typeof e || "number" == typeof e ? this._obj[e] : this._obj[e.$_GID];
      }, e.del = function(e) {
        if (null != e)
          if (t.supportWeakMap) {
            var i = "string" == typeof e || "number" == typeof e ? t._keys[e] : e;
            if (!i) return;
            this._obj.delete(i);
          } else "string" == typeof e || "number" == typeof e ? delete this._obj[e] : delete this._obj[this._obj.$_GID];
      }, e.has = function(e) {
        if (null == e) return !1;
        if (t.supportWeakMap) {
          var i = "string" == typeof e || "number" == typeof e ? t._keys[e] : e;
          return this._obj.has(i);
        }
        return "string" == typeof e || "number" == typeof e ? null != this._obj[e] : null != this._obj[this._obj.$_GID];
      }, t.__init__ = function() {
        (t.supportWeakMap = null != k.window.WeakMap) || i.timer.loop(t.delInterval, null, t.clearCache);
      }, t.clearCache = function() {
        for (var e = 0, i = t._maps.length; e < i; e++) {
          t._maps[e]._obj = {};
        }
      }, t.supportWeakMap = !1, t.delInterval = 3e5, t._keys = {}, t._maps = [], n(t, ["I", function() {
        return this.I = new t();
      }]), t;
    }(),
    Z = function() {
      function t() {
        this.id = NaN, this.save = [], this.toUpperCase = null, this.changed = !1, this._text = null;
      }
      s(t, "laya.utils.WordText");
      var e = t.prototype;
      return e.setText = function(t) {
        this.changed = !0, this._text = t;
      }, e.toString = function() {
        return this._text;
      }, e.charCodeAt = function(t) {
        return this._text ? this._text.charCodeAt(t) : NaN;
      }, e.charAt = function(t) {
        return this._text ? this._text.charAt(t) : null;
      }, r(0, e, "length", function() {
        return this._text ? this._text.length : 0;
      }), t;
    }(),
    J = function(t) {
      function e() {
        this._bits = 0, this._displayedInStage = !1, this._parent = null, this.conchModel = null,
          this.name = "", this._destroyed = !1, e.__super.call(this), this._childs = e.ARRAY_EMPTY,
          this._$P = e.PROP_EMPTY, this.timer = i.scaleTimer, this.conchModel = D.isConchNode ? this.createConchModel() : null;
      }
      s(e, "laya.display.Node", h);
      var n = e.prototype;
      return n._setBit = function(t, e) {
          if (1 == t) {
            this._getBit(t) != e && this._updateDisplayedInstage();
          }
          e ? this._bits |= t : this._bits &= ~t;
        }, n._getBit = function(t) {
          return 0 != (this._bits & t);
        }, n._setUpNoticeChain = function() {
          this._getBit(1) && this._setUpNoticeType(1);
        }, n._setUpNoticeType = function(t) {
          var e = this;
          for (e._setBit(t, !0), e = e.parent; e;) {
            if (e._getBit(t)) return;
            e._setBit(t, !0), e = e.parent;
          }
        }, n.on = function(t, e, i, n) {
          return "display" !== t && "undisplay" !== t || this._getBit(1) || this._setUpNoticeType(1),
            this._createListener(t, e, i, n, !1);
        }, n.once = function(t, e, i, n) {
          return "display" !== t && "undisplay" !== t || this._getBit(1) || this._setUpNoticeType(1),
            this._createListener(t, e, i, n, !0);
        }, n.createConchModel = function() {
          return null;
        }, n.destroy = function(t) {
          void 0 === t && (t = !0), this._destroyed = !0, this._parent && this._parent.removeChild(this),
            this._childs && (t ? this.destroyChildren() : this.removeChildren()), this._childs = null,
            this._$P = null, this.offAll(), this.timer.clearAll(this);
        }, n.destroyChildren = function() {
          if (this._childs)
            for (var t = this._childs.length - 1; t > -1; t--) this._childs[t].destroy(!0);
        }, n.addChild = function(t) {
          if (!t || this.destroyed || t === this) return t;
          if (t.zOrder && this._set$P("hasZorder", !0), t._parent === this) {
            var i = this.getChildIndex(t);
            i !== this._childs.length - 1 && (this._childs.splice(i, 1), this._childs.push(t),
              this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, this._childs.length - 1)),
              this._childChanged());
          } else t.parent && t.parent.removeChild(t), this._childs === e.ARRAY_EMPTY && (this._childs = []),
            this._childs.push(t), this.conchModel && this.conchModel.addChildAt(t.conchModel, this._childs.length - 1),
            t.parent = this, this._childChanged();
          return t;
        }, n.addChildren = function(t) {
          for (var e = arguments, i = 0, n = e.length; i < n;) this.addChild(e[i++]);
        }, n.addChildAt = function(t, i) {
          if (!t || this.destroyed || t === this) return t;
          if (t.zOrder && this._set$P("hasZorder", !0), i >= 0 && i <= this._childs.length) {
            if (t._parent === this) {
              var n = this.getChildIndex(t);
              this._childs.splice(n, 1), this._childs.splice(i, 0, t), this.conchModel && (this.conchModel.removeChild(t.conchModel),
                this.conchModel.addChildAt(t.conchModel, i)), this._childChanged();
            } else t.parent && t.parent.removeChild(t), this._childs === e.ARRAY_EMPTY && (this._childs = []),
              this._childs.splice(i, 0, t), this.conchModel && this.conchModel.addChildAt(t.conchModel, i),
              t.parent = this;
            return t;
          }
          throw new Error("appendChildAt:The index is out of bounds");
        }, n.getChildIndex = function(t) {
          return this._childs.indexOf(t);
        }, n.getChildByName = function(t) {
          var e = this._childs;
          if (e)
            for (var i = 0, n = e.length; i < n; i++) {
              var s = e[i];
              if (s.name === t) return s;
            }
          return null;
        }, n._get$P = function(t) {
          return this._$P[t];
        }, n._set$P = function(t, i) {
          return this.destroyed || (this._$P === e.PROP_EMPTY && (this._$P = {}), this._$P[t] = i),
            i;
        }, n.getChildAt = function(t) {
          return this._childs[t];
        }, n.setChildIndex = function(t, e) {
          var i = this._childs;
          if (e < 0 || e >= i.length) throw new Error("setChildIndex:The index is out of bounds.");
          var n = this.getChildIndex(t);
          if (n < 0) throw new Error("setChildIndex:node is must child of this object.");
          return i.splice(n, 1), i.splice(e, 0, t), this.conchModel && (this.conchModel.removeChild(t.conchModel),
            this.conchModel.addChildAt(t.conchModel, e)), this._childChanged(), t;
        }, n._childChanged = function(t) {}, n.removeChild = function(t) {
          if (!this._childs) return t;
          var e = this._childs.indexOf(t);
          return this.removeChildAt(e);
        }, n.removeSelf = function() {
          return this._parent && this._parent.removeChild(this), this;
        }, n.removeChildByName = function(t) {
          var e = this.getChildByName(t);
          return e && this.removeChild(e), e;
        }, n.removeChildAt = function(t) {
          var e = this.getChildAt(t);
          return e && (this._childs.splice(t, 1), this.conchModel && this.conchModel.removeChild(e.conchModel),
            e.parent = null), e;
        }, n.removeChildren = function(t, i) {
          if (void 0 === t && (t = 0), void 0 === i && (i = 2147483647), this._childs && this._childs.length > 0) {
            var n = this._childs;
            if (0 === t && i >= a) {
              var s = n;
              this._childs = e.ARRAY_EMPTY;
            } else s = n.splice(t, i - t);
            for (var r = 0, a = s.length; r < a; r++) s[r].parent = null, this.conchModel && this.conchModel.removeChild(s[r].conchModel);
          }
          return this;
        }, n.replaceChild = function(t, e) {
          var i = this._childs.indexOf(e);
          return i > -1 ? (this._childs.splice(i, 1, t), this.conchModel && (this.conchModel.removeChild(e.conchModel),
              this.conchModel.addChildAt(t.conchModel, i)), e.parent = null, t.parent = this,
            t) : null;
        }, n._updateDisplayedInstage = function() {
          var t;
          t = this;
          var e = i.stage;
          for (this._displayedInStage = !1; t;) {
            if (t._getBit(1)) {
              this._displayedInStage = t._displayedInStage;
              break;
            }
            if (t == e || t._displayedInStage) {
              this._displayedInStage = !0;
              break;
            }
            t = t.parent;
          }
        }, n._setDisplay = function(t) {
          this._displayedInStage !== t && (this._displayedInStage = t, t ? this.event("display") : this.event("undisplay"));
        }, n._displayChild = function(t, e) {
          var i = t._childs;
          if (i)
            for (var n = 0, s = i.length; n < s; n++) {
              var r = i[n];
              r._getBit(1) && (r._childs.length > 0 ? this._displayChild(r, e) : r._setDisplay(e));
            }
          t._setDisplay(e);
        }, n.contains = function(t) {
          if (t === this) return !0;
          for (; t;) {
            if (t.parent === this) return !0;
            t = t.parent;
          }
          return !1;
        }, n.timerLoop = function(t, e, i, n, s, r) {
          void 0 === s && (s = !0), void 0 === r && (r = !1), this.timer.loop(t, e, i, n, s, r);
        }, n.timerOnce = function(t, e, i, n, s) {
          void 0 === s && (s = !0), this.timer._create(!1, !1, t, e, i, n, s);
        }, n.frameLoop = function(t, e, i, n, s) {
          void 0 === s && (s = !0), this.timer._create(!0, !0, t, e, i, n, s);
        }, n.frameOnce = function(t, e, i, n, s) {
          void 0 === s && (s = !0), this.timer._create(!0, !1, t, e, i, n, s);
        }, n.clearTimer = function(t, e) {
          this.timer.clear(t, e);
        }, r(0, n, "numChildren", function() {
          return this._childs.length;
        }), r(0, n, "destroyed", function() {
          return this._destroyed;
        }), r(0, n, "parent", function() {
          return this._parent;
        }, function(t) {
          this._parent !== t && (t ? (this._parent = t, this.event("added"), this._getBit(1) && (this._setUpNoticeChain(),
            t.displayedInStage && this._displayChild(this, !0)), t._childChanged(this)) : (this.event("removed"),
            this._parent._childChanged(), this._getBit(1) && this._displayChild(this, !1), this._parent = t));
        }), r(0, n, "displayedInStage", function() {
          return this._getBit(1) ? this._displayedInStage : (this._setUpNoticeType(1), this._displayedInStage);
        }), e.ARRAY_EMPTY = [], e.PROP_EMPTY = {}, e.NOTICE_DISPLAY = 1, e.MOUSEENABLE = 2,
        e;
    }(),
    tt = function(t) {
      function e(t) {
        this._bgground = null, this._border = null, this._rect = null, this.underLine = 0,
          this.lineHeight = 0, e.__super.call(this), this._padding = e._PADDING, this._spacing = e._SPACING,
          this._aligns = e._ALIGNS, this._font = _.EMPTY, this._ower = t;
      }
      s(e, "laya.display.css.CSSStyle", t);
      var i = e.prototype;
      return i.destroy = function() {
          this._ower = null, this._font = null, this._rect = null;
        }, i.inherit = function(t) {
          this._font = t._font, this._spacing = t._spacing === e._SPACING ? e._SPACING : t._spacing.slice(),
            this.lineHeight = t.lineHeight;
        }, i._widthAuto = function() {
          return 0 != (262144 & this._type);
        }, i.widthed = function(t) {
          return 0 != (8 & this._type);
        }, i._calculation = function(t, e) {
          function i(t, e, i) {
            return t * i[0] + e * i[1] + i[2];
          }

          function n(t) {
            var e = r.width,
              n = s.width;
            a.width && (s.width = i(e, n, a.width)), a.height && (s.height = i(e, n, a.height)),
              a.left && (s.x = i(e, n, a.left)), a.top && (s.y = i(e, n, a.top));
          }
          if (e.indexOf("%") < 0) return !1;
          var s = this._ower,
            r = s.parent,
            a = this._rect;
          null === a && (r._getCSSStyle()._type |= 524288, r.on("resize", this, n), this._rect = a = {
            input: {}
          });
          var o = e.split(" ");
          return o[0] = parseFloat(o[0]) / 100, 1 == o.length ? o[1] = o[2] = 0 : (o[1] = parseFloat(o[1]) / 100,
            o[2] = parseFloat(o[2])), a[t] = o, a.input[t] = e, n(), !0;
        }, i.heighted = function(t) {
          return 0 != (8192 & this._type);
        }, i.size = function(t, e) {
          var i = this._ower,
            n = !1; -
          1 !== t && t != this._ower.width && (this._type |= 8, this._ower.width = t, n = !0), -1 !== e && e != this._ower.height && (this._type |= 8192, this._ower.height = e,
            n = !0), n && (i._layoutLater(), 524288 & this._type && i.event("resize", this));
        }, i._getAlign = function() {
          return this._aligns[0];
        }, i._getValign = function() {
          return this._aligns[1];
        }, i._getCssFloat = function() {
          return 0 != (32768 & this._type) ? 32768 : 0;
        }, i._createFont = function() {
          return 4096 & this._type ? this._font : (this._type |= 4096, this._font = new _(this._font));
        }, i.render = function(t, e, i, n) {
          var s = t.width,
            r = t.height;
          i -= t.pivotX, n -= t.pivotY, this._bgground && null != this._bgground.color && e.ctx.fillRect(i, n, s, r, this._bgground.color),
            this._border && this._border.color && e.drawRect(i, n, s, r, this._border.color.strColor, this._border.size);
        }, i.getCSSStyle = function() {
          return this;
        }, i.cssText = function(t) {
          this.attrs(e.parseOneCSS(t, ";"));
        }, i.attrs = function(t) {
          if (t)
            for (var e = 0, i = t.length; e < i; e++) {
              var n = t[e];
              this[n[0]] = n[1];
            }
        }, i.setTransform = function(t) {
          "none" === t ? this._tf = c._TF_EMPTY : this.attrs(e.parseOneCSS(t, ","));
        }, i.translate = function(t, e) {
          this._tf === c._TF_EMPTY && (this._tf = new d()), this._tf.translateX = t, this._tf.translateY = e;
        }, i.scale = function(t, e) {
          this._tf === c._TF_EMPTY && (this._tf = new d()), this._tf.scaleX = t, this._tf.scaleY = e;
        }, i._enableLayout = function() {
          return 0 == (2 & this._type) && 0 == (4 & this._type);
        }, r(0, i, "block", t.prototype._$get_block, function(t) {
          t ? this._type |= 1 : this._type &= -2;
        }), r(0, i, "valign", function() {
          return e._valigndef[this._aligns[1]];
        }, function(t) {
          this._aligns === e._ALIGNS && (this._aligns = [0, 0, 0]), this._aligns[1] = e._valigndef[t];
        }), r(0, i, "height", null, function(t) {
          if (this._type |= 8192, "string" == typeof t) {
            if (this._calculation("height", t)) return;
            t = parseInt(t);
          }
          this.size(-1, t);
        }), r(0, i, "width", null, function(t) {
          if (this._type |= 8, "string" == typeof t) {
            var e = t.indexOf("auto");
            if (e >= 0 && (this._type |= 262144, t = t.substr(0, e)), this._calculation("width", t)) return;
            t = parseInt(t);
          }
          this.size(t, -1);
        }), r(0, i, "fontWeight", function() {
          return this._font.weight;
        }, function(t) {
          this._createFont().weight = t;
        }), r(0, i, "left", null, function(t) {
          var e = this._ower;
          if ("string" == typeof t) {
            if ("center" === t ? t = "50% -50% 0" : "right" === t && (t = "100% -100% 0"), this._calculation("left", t)) return;
            t = parseInt(t);
          }
          e.x = t;
        }), r(0, i, "_translate", null, function(t) {
          this.translate(t[0], t[1]);
        }), r(0, i, "absolute", function() {
          return 0 != (4 & this._type);
        }), r(0, i, "top", null, function(t) {
          var e = this._ower;
          if ("string" == typeof t) {
            if ("middle" === t ? t = "50% -50% 0" : "bottom" === t && (t = "100% -100% 0"),
              this._calculation("top", t)) return;
            t = parseInt(t);
          }
          e.y = t;
        }), r(0, i, "align", function() {
          return e._aligndef[this._aligns[0]];
        }, function(t) {
          this._aligns === e._ALIGNS && (this._aligns = [0, 0, 0]), this._aligns[0] = e._aligndef[t];
        }), r(0, i, "bold", function() {
          return this._font.bold;
        }, function(t) {
          this._createFont().bold = t;
        }), r(0, i, "padding", function() {
          return this._padding;
        }, function(t) {
          this._padding = t;
        }), r(0, i, "leading", function() {
          return this._spacing[1];
        }, function(t) {
          "string" == typeof t && (t = parseInt(t + "")), this._spacing === e._SPACING && (this._spacing = [0, 0]),
            this._spacing[1] = t;
        }), r(0, i, "lineElement", function() {
          return 0 != (65536 & this._type);
        }, function(t) {
          t ? this._type |= 65536 : this._type &= -65537;
        }), r(0, i, "cssFloat", function() {
          return 0 != (32768 & this._type) ? "right" : "left";
        }, function(t) {
          this.lineElement = !1, "right" === t ? this._type |= 32768 : this._type &= -32769;
        }), r(0, i, "textDecoration", function() {
          return this._font.decoration;
        }, function(t) {
          this._createFont().decoration = t;
        }), r(0, i, "whiteSpace", function() {
          return 131072 & this._type ? "nowrap" : "";
        }, function(t) {
          "nowrap" === t && (this._type |= 131072), "none" === t && (this._type &= -131073);
        }), r(0, i, "background", null, function(t) {
          t ? (this._bgground || (this._bgground = {}), this._bgground.color = t, this._ower.conchModel && this._ower.conchModel.bgColor(t),
            this._type |= 16384, this._ower._renderType |= 256) : this._bgground = null;
        }), r(0, i, "wordWrap", function() {
          return 0 == (131072 & this._type);
        }, function(t) {
          t ? this._type &= -131073 : this._type |= 131072;
        }), r(0, i, "color", function() {
          return this._font.color;
        }, function(t) {
          this._createFont().color = t;
        }), r(0, i, "password", function() {
          return this._font.password;
        }, function(t) {
          this._createFont().password = t;
        }), r(0, i, "backgroundColor", function() {
          return this._bgground ? this._bgground.color : null;
        }, function(t) {
          "none" === t ? this._bgground = null : (this._bgground || (this._bgground = {}),
              this._bgground.color = t), this._ower.conchModel && this._ower.conchModel.bgColor(t),
            this._ower._renderType |= 256;
        }), r(0, i, "font", function() {
          return this._font.toString();
        }, function(t) {
          this._createFont().set(t);
        }), r(0, i, "weight", null, function(t) {
          this._createFont().weight = t;
        }), r(0, i, "letterSpacing", function() {
          return this._spacing[0];
        }, function(t) {
          "string" == typeof t && (t = parseInt(t + "")), this._spacing === e._SPACING && (this._spacing = [0, 0]),
            this._spacing[0] = t;
        }), r(0, i, "fontSize", function() {
          return this._font.size;
        }, function(t) {
          this._createFont().size = t;
        }), r(0, i, "italic", function() {
          return this._font.italic;
        }, function(t) {
          this._createFont().italic = t;
        }), r(0, i, "fontFamily", function() {
          return this._font.family;
        }, function(t) {
          this._createFont().family = t;
        }), r(0, i, "stroke", function() {
          return this._font.stroke[0];
        }, function(t) {
          this._createFont().stroke === _._STROKE && (this._font.stroke = [0, "#000000"]),
            this._font.stroke[0] = t;
        }), r(0, i, "strokeColor", function() {
          return this._font.stroke[1];
        }, function(t) {
          this._createFont().stroke === _._STROKE && (this._font.stroke = [0, "#000000"]),
            this._font.stroke[1] = t;
        }), r(0, i, "border", function() {
          return this._border ? this._border.value : "";
        }, function(t) {
          if ("none" != t) {
            this._border || (this._border = {}), this._border.value = t;
            var e = t.split(" ");
            if (this._border.color = V.create(e[e.length - 1]), 1 == e.length) return this._border.size = 1,
              void(this._border.type = "solid");
            var i = 0;
            e[0].indexOf("px") > 0 ? (this._border.size = parseInt(e[0]), i++) : this._border.size = 1,
              this._border.type = e[i], this._ower._renderType |= 256;
          } else this._border = null;
        }), r(0, i, "borderColor", function() {
          return this._border && this._border.color ? this._border.color.strColor : null;
        }, function(t) {
          t ? (this._border || (this._border = {
              size: 1,
              type: "solid"
            }), this._border.color = null == t ? null : V.create(t), this._ower.conchModel && this._ower.conchModel.border(this._border.color.strColor),
            this._ower._renderType |= 256) : this._border = null;
        }), r(0, i, "position", function() {
          return 4 & this._type ? "absolute" : "";
        }, function(t) {
          "absolute" == t ? this._type |= 4 : this._type &= -5;
        }), r(0, i, "display", null, function(t) {
          switch (t) {
            case "":
              this._type &= -3, this.visible = !0;
              break;

            case "none":
              this._type |= 2, this.visible = !1, this._ower._layoutLater();
          }
        }), r(0, i, "paddingLeft", function() {
          return this.padding[3];
        }), r(0, i, "paddingTop", function() {
          return this.padding[0];
        }), r(0, i, "_scale", null, function(t) {
          this._ower.scale(t[0], t[1]);
        }), r(0, i, "_rotate", null, function(t) {
          this._ower.rotation = t;
        }), e.parseOneCSS = function(t, i) {
          for (var n, s = [], r = t.split(i), a = 0, o = r.length; a < o; a++) {
            var h = r[a],
              l = h.indexOf(":"),
              u = h.substr(0, l).replace(/^\s+|\s+$/g, "");
            if (0 != u.length) {
              var c = h.substr(l + 1).replace(/^\s+|\s+$/g, ""),
                _ = [u, c];
              switch (u) {
                case "italic":
                case "bold":
                  _[1] = "true" == c;
                  break;

                case "line-height":
                  _[0] = "lineHeight", _[1] = parseInt(c);
                  break;

                case "font-size":
                  _[0] = "fontSize", _[1] = parseInt(c);
                  break;

                case "padding":
                  (n = c.split(" ")).length > 1 || (n[1] = n[2] = n[3] = n[0]), _[1] = [parseInt(n[0]), parseInt(n[1]), parseInt(n[2]), parseInt(n[3])];
                  break;

                case "rotate":
                  _[0] = "_rotate", _[1] = parseFloat(c);
                  break;

                case "scale":
                  n = c.split(" "), _[0] = "_scale", _[1] = [parseFloat(n[0]), parseFloat(n[1])];
                  break;

                case "translate":
                  n = c.split(" "), _[0] = "_translate", _[1] = [parseInt(n[0]), parseInt(n[1])];
                  break;

                default:
                  (_[0] = e._CSSTOVALUE[u]) || (_[0] = u);
              }
              s.push(_);
            }
          }
          return s;
        }, e.parseCSS = function(t, i) {
          for (var n; null != (n = e._parseCSSRegExp.exec(t));) e.styleSheets[n[1]] = e.parseOneCSS(n[2], ";");
        }, e.EMPTY = new e(null), e._CSSTOVALUE = {
          "letter-spacing": "letterSpacing",
          "line-spacing": "lineSpacing",
          "white-space": "whiteSpace",
          "line-height": "lineHeight",
          "scale-x": "scaleX",
          "scale-y": "scaleY",
          "translate-x": "translateX",
          "translate-y": "translateY",
          "font-family": "fontFamily",
          "font-weight": "fontWeight",
          "vertical-align": "valign",
          "text-decoration": "textDecoration",
          "background-color": "backgroundColor",
          "border-color": "borderColor",
          float: "cssFloat"
        }, e._parseCSSRegExp = new RegExp("([.#]\\w+)\\s*{([\\s\\S]*?)}", "g"), e._aligndef = {
          left: 0,
          center: 1,
          right: 2,
          0: "left",
          1: "center",
          2: "right"
        }, e._valigndef = {
          top: 0,
          middle: 1,
          bottom: 2,
          0: "top",
          1: "middle",
          2: "bottom"
        }, e.styleSheets = {}, e.ALIGN_CENTER = 1, e.ALIGN_RIGHT = 2, e.VALIGN_MIDDLE = 1,
        e.VALIGN_BOTTOM = 2, e._CSS_BLOCK = 1, e._DISPLAY_NONE = 2, e._ABSOLUTE = 4, e._WIDTH_SET = 8,
        e._PADDING = [0, 0, 0, 0], e._RECT = [-1, -1, -1, -1], e._SPACING = [0, 0],
        e._ALIGNS = [0, 0, 0], e.ADDLAYOUTED = 512, e._NEWFONT = 4096, e._HEIGHT_SET = 8192,
        e._BACKGROUND_SET = 16384, e._FLOAT_RIGHT = 32768, e._LINE_ELEMENT = 65536, e._NOWARP = 131072,
        e._WIDTHAUTO = 262144, e._LISTERRESZIE = 524288, e;
    }(c),
    et = function(t) {
      function e() {
        this.url = null, this.audio = null, this.loaded = !1, e.__super.call(this);
      }
      s(e, "laya.media.h5audio.AudioSound", h);
      var i = e.prototype;
      return i.dispose = function() {
        var t = e._audioCache[this.url];
        t && (t.src = "", delete e._audioCache[this.url]);
      }, i.load = function(t) {
        function i() {
          s(), a.loaded = !0, a.event("complete");
        }

        function n() {
          r.load = null, s(), a.event("error");
        }

        function s() {
          r.removeEventListener("canplaythrough", i), r.removeEventListener("error", n);
        }
        t = A.formatURL(t), this.url = t;
        var r;
        if (t == M._tMusic ? (e._initMusicAudio(), (r = e._musicAudio).src != t && (e._audioCache[r.src] = null,
            r = null)) : r = e._audioCache[t], r && r.readyState >= 2) this.event("complete");
        else {
          r || (t == M._tMusic ? (e._initMusicAudio(), r = e._musicAudio) : r = k.createElement("audio"),
            e._audioCache[t] = r, r.src = t), r.addEventListener("canplaythrough", i), r.addEventListener("error", n);
          var a = this;
          this.audio = r, r.load ? r.load() : n();
        }
      }, i.play = function(t, i) {
        if (void 0 === t && (t = 0), void 0 === i && (i = 0), !this.url) return null;
        var n;
        if (!(n = this.url == M._tMusic ? e._musicAudio : e._audioCache[this.url])) return null;
        var s;
        s = Y.getItem("audio:" + this.url), D.isConchApp ? s || ((s = k.createElement("audio")).src = this.url) : this.url == M._tMusic ? (e._initMusicAudio(),
          (s = e._musicAudio).src = this.url) : s = s || n.cloneNode(!0);
        var r = new _t(s);
        return r.url = this.url, r.loops = i, r.startTime = t, r.play(), M.addChannel(r),
          r;
      }, r(0, i, "duration", function() {
        var t;
        return (t = e._audioCache[this.url]) ? t.duration : 0;
      }), e._initMusicAudio = function() {
        e._musicAudio || (e._musicAudio || (e._musicAudio = k.createElement("audio")), D.isConchApp || k.document.addEventListener("mousedown", e._makeMusicOK));
      }, e._makeMusicOK = function() {
        k.document.removeEventListener("mousedown", e._makeMusicOK), e._musicAudio.src ? e._musicAudio.play() : (e._musicAudio.src = "",
          e._musicAudio.load());
      }, e._audioCache = {}, e._musicAudio = null, e;
    }(),
    it = function(t) {
      function e() {
        this.url = null, this.loops = 0, this.startTime = NaN, this.isStopped = !1, this.completeHandler = null,
          e.__super.call(this);
      }
      s(e, "laya.media.SoundChannel", h);
      var i = e.prototype;
      return i.play = function() {}, i.stop = function() {}, i.pause = function() {},
        i.resume = function() {}, i.__runComplete = function(t) {
          t && t.run();
        }, r(0, i, "volume", function() {
          return 1;
        }, function(t) {}), r(0, i, "position", function() {
          return 0;
        }), r(0, i, "duration", function() {
          return 0;
        }), e;
    }(),
    nt = function(t) {
      function e() {
        e.__super.call(this);
      }
      s(e, "laya.media.Sound", h);
      var i = e.prototype;
      return i.load = function(t) {}, i.play = function(t, e) {
        return void 0 === t && (t = 0), void 0 === e && (e = 0), null;
      }, i.dispose = function() {}, r(0, i, "duration", function() {
        return 0;
      }), e;
    }(),
    st = function(t) {
      function e() {
        this.url = null, this.loaded = !1, this.data = null, this.audioBuffer = null, this.__toPlays = null,
          this._disposed = !1, e.__super.call(this);
      }
      s(e, "laya.media.webaudio.WebAudioSound", h);
      var i = e.prototype;
      return i.load = function(t) {
          var i = this;
          if (t = A.formatURL(t), this.url = t, this.audioBuffer = e._dataCache[t], this.audioBuffer) this._loaded(this.audioBuffer);
          else if (e.e.on("loaded:" + t, this, this._loaded),
            e.e.on("err:" + t, this, this._err), !e.__loadingSound[t]) {
            e.__loadingSound[t] = !0;
            var n = new k.window.XMLHttpRequest();
            n.open("GET", t, !0), n.responseType = "arraybuffer", n.onload = function() {
              i._disposed ? i._removeLoadEvents() : (i.data = n.response, e.buffs.push({
                buffer: i.data,
                url: i.url
              }), e.decode());
            }, n.onerror = function(t) {
              i._err();
            }, n.send();
          }
        }, i._err = function() {
          this._removeLoadEvents(), e.__loadingSound[this.url] = !1, this.event("error");
        }, i._loaded = function(t) {
          this._removeLoadEvents(), this._disposed || (this.audioBuffer = t, e._dataCache[this.url] = this.audioBuffer,
            this.loaded = !0, this.event("complete"));
        }, i._removeLoadEvents = function() {
          e.e.off("loaded:" + this.url, this, this._loaded), e.e.off("err:" + this.url, this, this._err);
        }, i.__playAfterLoaded = function() {
          if (this.__toPlays) {
            var t, e = 0,
              i = 0;
            i = (t = this.__toPlays).length;
            var n;
            for (e = 0; e < i; e++)(n = t[e])[2] && !n[2].isStopped && this.play(n[0], n[1], n[2]);
            this.__toPlays.length = 0;
          }
        }, i.play = function(t, e, i) {
          return void 0 === t && (t = 0), void 0 === e && (e = 0), i = i || new dt(), this.audioBuffer || this.url && (this.__toPlays || (this.__toPlays = []),
              this.__toPlays.push([t, e, i]), this.once("complete", this, this.__playAfterLoaded),
              this.load(this.url)), i.url = this.url, i.loops = e, i.audioBuffer = this.audioBuffer,
            i.startTime = t, i.play(), M.addChannel(i), i;
        }, i.dispose = function() {
          this._disposed = !0, delete e._dataCache[this.url], delete e.__loadingSound[this.url],
            this.audioBuffer = null, this.data = null, this.__toPlays = [];
        }, r(0, i, "duration", function() {
          return this.audioBuffer ? this.audioBuffer.duration : 0;
        }), e.decode = function() {
          e.buffs.length <= 0 || e.isDecoding || (e.isDecoding = !0, e.tInfo = e.buffs.shift(),
            e.ctx.decodeAudioData(e.tInfo.buffer, e._done, e._fail));
        }, e._done = function(t) {
          e.e.event("loaded:" + e.tInfo.url, t), e.isDecoding = !1, e.decode();
        }, e._fail = function() {
          e.e.event("err:" + e.tInfo.url, null), e.isDecoding = !1, e.decode();
        }, e._playEmptySound = function() {
          if (null != e.ctx) {
            var t = e.ctx.createBufferSource();
            t.buffer = e._miniBuffer, t.connect(e.ctx.destination), t.start(0, 0, 0);
          }
        }, e._unlock = function() {
          e._unlocked || (e._playEmptySound(), "running" == e.ctx.state && (k.document.removeEventListener("mousedown", e._unlock, !0),
            k.document.removeEventListener("touchend", e._unlock, !0), e._unlocked = !0));
        }, e.initWebAudio = function() {
          "running" != e.ctx.state && (e._unlock(), k.document.addEventListener("mousedown", e._unlock, !0),
            k.document.addEventListener("touchend", e._unlock, !0));
        }, e._dataCache = {}, e.buffs = [], e.isDecoding = !1, e._unlocked = !1, e.tInfo = null,
        e.__loadingSound = {}, n(e, ["window", function() {
          return this.window = k.window;
        }, "webAudioEnabled", function() {
          return this.webAudioEnabled = e.window.AudioContext || e.window.webkitAudioContext || e.window.mozAudioContext;
        }, "ctx", function() {
          return this.ctx = e.webAudioEnabled ? new(e.window.AudioContext || e.window.webkitAudioContext || e.window.mozAudioContext)() : void 0;
        }, "_miniBuffer", function() {
          return this._miniBuffer = e.ctx.createBuffer(1, 1, 22050);
        }, "e", function() {
          return this.e = new h();
        }]), e;
    }(),
    rt = function(t) {
      function e() {
        this._responseType = null, this._data = null, e.__super.call(this), this._http = new k.window.XMLHttpRequest();
      }
      s(e, "laya.net.HttpRequest", h);
      var i = e.prototype;
      return i.send = function(t, e, i, n, s) {
        void 0 === i && (i = "get"), void 0 === n && (n = "text"), this._responseType = n,
          this._data = null;
        var r = this,
          a = this._http;
        if (a.open(i, t, !0), s)
          for (var o = 0; o < s.length; o++) a.setRequestHeader(s[o++], s[o]);
        else D.isConchApp || (e && "string" != typeof e ? a.setRequestHeader("Content-Type", "application/json") : a.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"));
        a.responseType = "arraybuffer" !== n ? "text" : "arraybuffer", a.onerror = function(t) {
          r._onError(t);
        }, a.onabort = function(t) {
          r._onAbort(t);
        }, a.onprogress = function(t) {
          r._onProgress(t);
        }, a.onload = function(t) {
          r._onLoad(t);
        }, a.send(e);
      }, i._onProgress = function(t) {
        t && t.lengthComputable && this.event("progress", t.loaded / t.total);
      }, i._onAbort = function(t) {
        this.error("Request was aborted by user");
      }, i._onError = function(t) {
        this.error("Request failed Status:" + this._http.status + " text:" + this._http.statusText);
      }, i._onLoad = function(t) {
        var e = this._http,
          i = void 0 !== e.status ? e.status : 200;
        200 === i || 204 === i || 0 === i ? this.complete() : this.error("[" + e.status + "]" + e.statusText + ":" + e.responseURL);
      }, i.error = function(t) {
        this.clear(), this.event("error", t);
      }, i.complete = function() {
        this.clear();
        var t = !0;
        try {
          "json" === this._responseType ? this._data = JSON.parse(this._http.responseText) : "xml" === this._responseType ? this._data = $.parseXMLFromString(this._http.responseText) : this._data = this._http.response || this._http.responseText;
        } catch (e) {
          t = !1, this.error(e.message);
        }
        t && this.event("complete", this._data instanceof Array ? [this._data] : this._data);
      }, i.clear = function() {
        var t = this._http;
        t.onerror = t.onabort = t.onprogress = t.onload = null;
      }, r(0, i, "url", function() {
        return this._http.responseURL;
      }), r(0, i, "http", function() {
        return this._http;
      }), r(0, i, "data", function() {
        return this._data;
      }), e;
    }(),
    at = function(t) {
      function e() {
        this._data = null, this._class = null, this._url = null, this._type = null, this._cache = !1,
          this._http = null, this._customParse = !1, e.__super.call(this);
      }
      s(e, "laya.net.Loader", h);
      var n = e.prototype;
      return n.load = function(t, i, n, s, r) {
          if (void 0 === n && (n = !0), void 0 === r && (r = !1), this._url = t, 0 === t.indexOf("data:image") ? this._type = i = "image" : (this._type = i || (i = this.getTypeFromUrl(t)),
              t = A.formatURL(t)), this._cache = n, this._data = null, !r && e.loadedMap[t]) return this._data = e.loadedMap[t],
            this.event("progress", 1), void this.event("complete", this._data);
          if (s && e.setGroup(t, s), null != e.parserMap[i]) return this._customParse = !0,
            void(e.parserMap[i] instanceof laya.utils.Handler ? e.parserMap[i].runWith(this) : e.parserMap[i].call(null, this));
          if ("image" === i || "htmlimage" === i || "nativeimage" === i) return this._loadImage(t);
          if ("sound" === i) return this._loadSound(t);
          if ("ttf" === i) return this._loadTTF(t);
          var a;
          switch (i) {
            case "atlas":
            case "plf":
              a = "json";
              break;

            case "font":
              a = "xml";
              break;

            case "pkm":
              a = "arraybuffer";
              break;

            default:
              a = i;
          }
          e.preLoadedMap[t] ? this.onLoaded(e.preLoadedMap[t]) : (this._http || (this._http = new rt(),
            this._http.on("progress", this, this.onProgress), this._http.on("error", this, this.onError),
            this._http.on("complete", this, this.onLoaded)), this._http.send(t, null, "get", a));
        }, n.getTypeFromUrl = function(t) {
          var i = $.getFileExtension(t);
          return i ? e.typeMap[i] : (console.warn("Not recognize the resources suffix", t),
            "text");
        }, n._loadTTF = function(t) {
          t = A.formatURL(t);
          var e = new P();
          e.complete = l.create(this, this.onLoaded), e.load(t);
        }, n._loadImage = function(t) {
          function i() {
            n.onload = null, n.onerror = null, delete e.imgCache[t];
          }
          t = A.formatURL(t);
          var n, s = this,
            r = function() {
              i(), s.onLoaded(n);
            },
            a = function() {
              i(), s.event("error", "Load image failed");
            };
          "nativeimage" === this._type ? ((n = new k.window.Image()).crossOrigin = "", n.onload = r,
            n.onerror = a, n.src = t, e.imgCache[t] = n) : new wt.create(t, {
            onload: r,
            onerror: a,
            onCreate: function(i) {
              n = i, e.imgCache[t] = i;
            }
          });
        }, n._loadSound = function(t) {
          function e() {
            i.offAll();
          }
          var i = new M._soundClass(),
            n = this;
          i.on("complete", this, function() {
            e(), n.onLoaded(i);
          }), i.on("error", this, function() {
            e(), i.dispose(), n.event("error", "Load sound failed");
          }), i.load(t);
        }, n.onProgress = function(t) {
          "atlas" === this._type ? this.event("progress", .3 * t) : this.event("progress", t);
        }, n.onError = function(t) {
          this.event("error", t);
        }, n.onLoaded = function(t) {
          var i = this._type;
          if ("plf" == i) this.parsePLFData(t), this.complete(t);
          else if ("image" === i) {
            var n = new lt(t);
            n.url = this._url, this.complete(n);
          } else if ("sound" === i || "htmlimage" === i || "nativeimage" === i) this.complete(t);
          else if ("atlas" === i) {
            if (!t.src && !t._setContext) {
              if (!this._data) {
                if (this._data = t, t.meta && t.meta.image)
                  for (var s = t.meta.image.split(","), r = this._url.indexOf("/") >= 0 ? "/" : "\\", a = this._url.lastIndexOf(r), o = a >= 0 ? this._url.substr(0, a + 1) : "", h = 0, l = s.length; h < l; h++) s[h] = o + s[h];
                else s = [this._url.replace(".json", ".png")];
                s.reverse(), t.toLoads = s, t.pics = [];
              }
              return this.event("progress", .3 + 1 / s.length * .6), this._loadImage(s.pop());
            }
            if (this._data.pics.push(t), this._data.toLoads.length > 0) return this.event("progress", .3 + 1 / this._data.toLoads.length * .6),
              this._loadImage(this._data.toLoads.pop());
            var c = this._data.frames,
              _ = this._url.split("?")[0],
              d = this._data.meta && this._data.meta.prefix ? this._data.meta.prefix : _.substring(0, _.lastIndexOf(".")) + "/",
              p = this._data.pics,
              f = A.formatURL(this._url),
              g = e.atlasMap[f] || (e.atlasMap[f] = []);
            g.dir = d;
            var m = 1;
            if (this._data.meta && this._data.meta.scale && 1 != this._data.meta.scale) {
              m = parseFloat(this._data.meta.scale);
              for (var y in c) {
                var v = c[y],
                  x = p[v.frame.idx ? v.frame.idx : 0],
                  b = A.formatURL(d + y);
                x.scaleRate = m, e.cacheRes(b, lt.create(x, v.frame.x, v.frame.y, v.frame.w, v.frame.h, v.spriteSourceSize.x, v.spriteSourceSize.y, v.sourceSize.w, v.sourceSize.h)),
                  e.loadedMap[b].url = b, g.push(b);
              }
            } else
              for (y in c) x = p[(v = c[y]).frame.idx ? v.frame.idx : 0], b = A.formatURL(d + y),
                e.cacheRes(b, lt.create(x, v.frame.x, v.frame.y, v.frame.w, v.frame.h, v.spriteSourceSize.x, v.spriteSourceSize.y, v.sourceSize.w, v.sourceSize.h)),
                e.loadedMap[b].url = b, g.push(b);
            delete this._data.pics, this.complete(this._data);
          } else if ("font" == i) {
            if (!t.src) return this._data = t, this.event("progress", .5), this._loadImage(this._url.replace(".fnt", ".png"));
            var w = new u();
            w.parseFont(this._data, t);
            var I = this._url.split(".fnt")[0].split("/"),
              S = I[I.length - 1];
            gt.registerBitmapFont(S, w), this._data = w, this.complete(this._data);
          } else if ("pkm" == i) {
            var C = wt.create(t, this._url),
              T = new lt(C);
            T.url = this._url, this.complete(T);
          } else this.complete(t);
        }, n.parsePLFData = function(t) {
          var i, n, s;
          for (i in t) switch (s = t[i], i) {
            case "json":
            case "text":
              for (n in s) e.preLoadedMap[A.formatURL(n)] = s[n];
              break;

            default:
              for (n in s) e.preLoadedMap[A.formatURL(n)] = s[n];
          }
        }, n.complete = function(t) {
          this._data = t, this._customParse ? this.event("loaded", t instanceof Array ? [t] : t) : (e._loaders.push(this),
            e._isWorking || e.checkNext());
        }, n.endLoad = function(t) {
          t && (this._data = t), this._cache && e.cacheRes(this._url, this._data), this.event("progress", 1),
            this.event("complete", this.data instanceof Array ? [this.data] : this.data);
        }, r(0, n, "url", function() {
          return this._url;
        }), r(0, n, "data", function() {
          return this._data;
        }), r(0, n, "cache", function() {
          return this._cache;
        }), r(0, n, "type", function() {
          return this._type;
        }), e.checkNext = function() {
          e._isWorking = !0;
          for (var t = k.now(); e._startIndex < e._loaders.length;)
            if (k.now(), e._loaders[e._startIndex].endLoad(),
              e._startIndex++, k.now() - t > e.maxTimeOut) return console.warn("loader callback cost a long time:" + (k.now() - t) + " url=" + e._loaders[e._startIndex - 1].url),
              void i.timer.frameOnce(1, null, e.checkNext);
          e._loaders.length = 0, e._startIndex = 0, e._isWorking = !1;
        }, e.clearRes = function(t, i) {
          void 0 === i && (i = !1), t = A.formatURL(t);
          var n = e.getAtlas(t);
          if (n) {
            for (var s = 0, r = n.length; s < r; s++) {
              var a = n[s],
                o = e.getRes(a);
              delete e.loadedMap[a], o && o.destroy(i);
            }
            n.length = 0, delete e.atlasMap[t], delete e.loadedMap[t];
          } else {
            var h = e.loadedMap[t];
            h && (delete e.loadedMap[t], h instanceof laya.resource.Texture && h.bitmap && h.destroy(i));
          }
        }, e.clearTextureRes = function(t) {
          t = A.formatURL(t);
          var e = laya.net.Loader.getAtlas(t),
            i = e && e.length > 0 ? laya.net.Loader.getRes(e[0]) : laya.net.Loader.getRes(t);
          i && i.bitmap && (D.isConchApp ? i.bitmap.source.releaseTexture && i.bitmap.source.releaseTexture() : null == i.bitmap._atlaser && i.bitmap.releaseResource(!0));
        }, e.getRes = function(t) {
          return e.loadedMap[A.formatURL(t)];
        }, e.getAtlas = function(t) {
          return e.atlasMap[A.formatURL(t)];
        }, e.cacheRes = function(t, i) {
          t = A.formatURL(t), null != e.loadedMap[t] ? console.warn("Resources already exist,is repeated loading:", t) : e.loadedMap[t] = i;
        }, e.setGroup = function(t, i) {
          e.groupMap[i] || (e.groupMap[i] = []), e.groupMap[i].push(t);
        }, e.clearResByGroup = function(t) {
          if (e.groupMap[t]) {
            var i = e.groupMap[t],
              n = 0,
              s = i.length;
            for (n = 0; n < s; n++) e.clearRes(i[n]);
            i.length = 0;
          }
        }, e.TEXT = "text", e.JSON = "json", e.XML = "xml", e.BUFFER = "arraybuffer", e.IMAGE = "image",
        e.SOUND = "sound", e.ATLAS = "atlas", e.FONT = "font", e.TTF = "ttf", e.PLF = "plf",
        e.PKM = "pkm", e.typeMap = {
          png: "image",
          jpg: "image",
          jpeg: "image",
          txt: "text",
          json: "json",
          xml: "xml",
          als: "atlas",
          atlas: "atlas",
          mp3: "sound",
          ogg: "sound",
          wav: "sound",
          part: "json",
          fnt: "font",
          pkm: "pkm",
          ttf: "ttf",
          plf: "plf"
        }, e.parserMap = {}, e.groupMap = {}, e.maxTimeOut = 100, e.loadedMap = {}, e.preLoadedMap = {},
        e.atlasMap = {}, e._loaders = [], e._isWorking = !1, e._startIndex = 0, e.imgCache = {},
        e;
    }(),
    ot = function(t) {
      function e() {
        this.retryNum = 1, this.retryDelay = 0, this.maxLoader = 5, this._loaders = [],
          this._loaderCount = 0, this._resInfos = [], this._infoPool = [], this._maxPriority = 5,
          this._failRes = {}, e.__super.call(this);
        for (var t = 0; t < this._maxPriority; t++) this._resInfos[t] = [];
      }
      var r;
      s(e, "laya.net.LoaderManager", h);
      var a = e.prototype;
      return a.create = function(t, e, i, n, s, r, a, o) {
        if (void 0 === r && (r = 1), void 0 === a && (a = !0), t instanceof Array) {
          var h = t,
            u = h.length,
            c = 0;
          if (i) var _ = l.create(i.caller, i.method, i.args, !1);
          for (var d = 0; d < u; d++) {
            var p = h[d];
            "string" == typeof p && (p = h[d] = {
              url: p
            }), p.progress = 0;
          }
          for (d = 0; d < u; d++) {
            p = h[d];
            var f = i ? l.create(null, function(t, e) {
                t.progress = e;
                for (var i = 0, n = 0; n < u; n++) i += h[n].progress;
                var s = i / u;
                _.runWith(s);
              }, [p], !1) : null,
              g = i || e ? l.create(null, function(t, i) {
                c++, t.progress = 1, c === u && e && e.run();
              }, [p]) : null;
            this._create(p.url, g, f, p.clas || n, p.params || s, p.priority || r, a, p.group || o);
          }
          return !0;
        }
        return this._create(t, e, i, n, s, r, a, o);
      }, a._create = function(t, n, s, r, a, o, h, u) {
        void 0 === o && (o = 1), void 0 === h && (h = !0);
        var c = A.formatURL(t),
          _ = this.getRes(c);
        if (_) !_.hasOwnProperty("loaded") || _.loaded ? (s && s.runWith(1), n && n.run()) : n && i.loader._createListener(t, n.caller, n.method, n.args, !0, !1);
        else {
          var d = $.getFileExtension(t),
            p = e.createMap[d];
          if (!p) throw new Error("LoaderManager:unknown file(" + t + ") extension with: " + d + ".");
          r || (r = p[0]);
          var f = p[1];
          "atlas" == d ? this.load(t, n, s, f, o, h) : (r === lt && (f = "htmlimage"), (_ = r ? new r() : null).hasOwnProperty("_loaded") && (_._loaded = !1),
            _._setUrl(t), u && _._setGroup(u), this._createLoad(_, t, l.create(null, function(e) {
              _ && !_.destroyed && e && _.onAsynLoaded.call(_, t, e, a), n && n.run(), i.loader.event(t);
            }), s, f, o, !1, u, !0), h && this.cacheRes(c, _));
        }
        return _;
      }, a.load = function(t, n, s, a, o, h, l, u) {
        var c = this;
        if (void 0 === o && (o = 1), void 0 === h && (h = !0), void 0 === u && (u = !1),
          t instanceof Array) return this._loadAssets(t, n, s, a, o, h, l);
        var _ = at.getRes(t);
        if (null != _) i.timer.frameOnce(1, null, function() {
          s && s.runWith(1), n && n.runWith(_), c._loaderCount || c.event("complete");
        });
        else {
          var d = e._resMap[t];
          d ? (n && d._createListener("complete", n.caller, n.method, n.args, !1, !1), s && d._createListener("progress", s.caller, s.method, s.args, !1, !1)) : ((d = this._infoPool.length ? this._infoPool.pop() : new r()).url = t,
            d.type = a, d.cache = h, d.group = l, d.ignoreCache = u, n && d.on("complete", n.caller, n.method, n.args),
            s && d.on("progress", s.caller, s.method, s.args), e._resMap[t] = d, o = o < this._maxPriority ? o : this._maxPriority - 1,
            this._resInfos[o].push(d), this._next());
        }
        return this;
      }, a._createLoad = function(t, n, s, a, o, h, l, u, c) {
        var _ = this;
        if (void 0 === h && (h = 1), void 0 === l && (l = !0), void 0 === c && (c = !1),
          n instanceof Array) return this._loadAssets(n, s, a, o, h, l, u);
        var d = at.getRes(n);
        if (null != d) i.timer.frameOnce(1, null, function() {
          a && a.runWith(1), s && s.runWith(d), _._loaderCount || _.event("complete");
        });
        else {
          var p = e._resMap[n];
          p ? (s && p._createListener("complete", s.caller, s.method, s.args, !1, !1), a && p._createListener("progress", a.caller, a.method, a.args, !1, !1)) : ((p = this._infoPool.length ? this._infoPool.pop() : new r()).url = n,
            p.clas = t, p.type = o, p.cache = l, p.group = u, p.ignoreCache = c, s && p.on("complete", s.caller, s.method, s.args),
            a && p.on("progress", a.caller, a.method, a.args), e._resMap[n] = p, h = h < this._maxPriority ? h : this._maxPriority - 1,
            this._resInfos[h].push(p), this._next());
        }
        return this;
      }, a._next = function() {
        if (!(this._loaderCount >= this.maxLoader)) {
          for (var t = 0; t < this._maxPriority; t++)
            for (var e = this._resInfos[t]; e.length > 0;) {
              var i = e.shift();
              if (i) return this._doLoad(i);
            }
          this._loaderCount || this.event("complete");
        }
      }, a._doLoad = function(t) {
        function e(e) {
          i.offAll(), i._data = null, i._customParse = !1, n._loaders.push(i), n._endLoad(t, e instanceof Array ? [e] : e),
            n._loaderCount--, n._next();
        }
        this._loaderCount++;
        var i = this._loaders.length ? this._loaders.pop() : new at();
        i.on("complete", null, e), i.on("progress", null, function(e) {
          t.event("progress", e);
        }), i.on("error", null, function(t) {
          e(null);
        });
        var n = this;
        i._class = t.clas, i.load(t.url, t.type, t.cache, t.group, t.ignoreCache);
      }, a._endLoad = function(t, n) {
        var s = t.url;
        if (null == n) {
          var r = this._failRes[s] || 0;
          if (r < this.retryNum) return console.warn("[warn]Retry to load:", s), this._failRes[s] = r + 1,
            void i.timer.once(this.retryDelay, this, this._addReTry, [t], !1);
          console.warn("[error]Failed to load:", s), this.event("error", s);
        }
        this._failRes[s] && (this._failRes[s] = 0), delete e._resMap[s], t.event("complete", n),
          t.offAll(), this._infoPool.push(t);
      }, a._addReTry = function(t) {
        this._resInfos[this._maxPriority - 1].push(t), this._next();
      }, a.clearRes = function(t, e) {
        void 0 === e && (e = !1), at.clearRes(t, e);
      }, a.getRes = function(t) {
        return at.getRes(t);
      }, a.cacheRes = function(t, e) {
        at.cacheRes(t, e);
      }, a.clearTextureRes = function(t) {
        at.clearTextureRes(t);
      }, a.setGroup = function(t, e) {
        at.setGroup(t, e);
      }, a.clearResByGroup = function(t) {
        at.clearResByGroup(t);
      }, a.clearUnLoaded = function() {
        for (var t = 0; t < this._maxPriority; t++) {
          for (var i = this._resInfos[t], n = i.length - 1; n > -1; n--) {
            var s = i[n];
            s && (s.offAll(), this._infoPool.push(s));
          }
          i.length = 0;
        }
        this._loaderCount = 0, e._resMap = {};
      }, a.cancelLoadByUrls = function(t) {
        if (t)
          for (var e = 0, i = t.length; e < i; e++) this.cancelLoadByUrl(t[e]);
      }, a.cancelLoadByUrl = function(t) {
        for (var i = 0; i < this._maxPriority; i++)
          for (var n = this._resInfos[i], s = n.length - 1; s > -1; s--) {
            var r = n[s];
            r && r.url === t && (n[s] = null, r.offAll(), this._infoPool.push(r));
          }
        e._resMap[t] && delete e._resMap[t];
      }, a._loadAssets = function(t, e, i, n, s, r, a) {
        void 0 === s && (s = 1), void 0 === r && (r = !0);
        for (var o = t.length, h = 0, u = 0, c = [], _ = !0, d = 0; d < o; d++) {
          var p = t[d];
          "string" == typeof p && (p = {
            url: p,
            type: n,
            size: 1,
            priority: s
          }), p.size || (p.size = 1), p.progress = 0, u += p.size, c.push(p);
          var f = i ? l.create(null, function(t, e) {
              if (null != i) {
                t.progress = e;
                for (var n = 0, s = 0; s < c.length; s++) {
                  var r = c[s];
                  n += r.size * r.progress;
                }
                var a = n / u;
                i.runWith(a);
              }
            }, [p], !1) : null,
            g = e || i ? l.create(null, function(t, i) {
              h++, t.progress = 1, i || (_ = !1), h === o && e && e.runWith(_);
            }, [p]) : null;
          this.load(p.url, g, f, p.type, p.priority || 1, r, p.group || a);
        }
        return this;
      }, e.cacheRes = function(t, e) {
        at.cacheRes(t, e);
      }, e._resMap = {}, n(e, ["createMap", function() {
        return this.createMap = {
          atlas: [null, "atlas"]
        };
      }]), e.__init$ = function() {
        r = function(t) {
          function e() {
            this.url = null, this.type = null, this.cache = !1, this.group = null, this.ignoreCache = !1,
              this.clas = null, e.__super.call(this);
          }
          return s(e, "", h), e;
        }();
      }, e;
    }(),
    ht = (function(t) {
      function e(t) {
        e.__super.call(this), t || (t = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0]),
          this._mat = new Float32Array(16), this._alpha = new Float32Array(4);
        for (var i = 0, n = 0, s = 0; s < 20; s++) s % 5 != 4 ? this._mat[i++] = t[s] : this._alpha[n++] = t[s];
        this._action = a.createFilterAction(32), this._action.data = this;
      }
      s(e, "laya.filters.ColorFilter", x);
      var n = e.prototype;
      i.imps(n, {
        "laya.filters.IFilter": !0
      }), n.callNative = function(t) {
        t._$P.cf = this;
        t.conchModel && t.conchModel.setFilterMatrix && t.conchModel.setFilterMatrix(this._mat, this._alpha);
      }, r(0, n, "type", function() {
        return 32;
      }), r(0, n, "action", function() {
        return this._action;
      });
    }(), function(t) {
      function e(t, i, n) {
        this._endian = null, this._stamp = NaN, this._socket = null, this._connected = !1,
          this._addInputPosition = 0, this._input = null, this._output = null, this.timeout = 0,
          this.objectEncoding = 0, this.disableInput = !1, this._byteClass = null, this.protocols = [],
          void 0 === i && (i = 0), e.__super.call(this), this._byteClass = n || F, this.endian = "bigEndian",
          this.timeout = 2e4, this._addInputPosition = 0, t && i > 0 && i < 65535 && this.connect(t, i);
      }
      s(e, "laya.net.Socket", h);
      var i = e.prototype;
      i.connect = function(t, e) {
        var i = "ws://" + t + ":" + e;
        i = "https:" == k.window.location.protocol ? "wss://" + t + ":" + e : "ws://" + t + ":" + e,
          this.connectByUrl(i);
      }, i.connectByUrl = function(t) {
        var e = this;
        null != this._socket && this.close(), this._socket && this.cleanSocket(), this.protocols && 0 != this.protocols.length ? this._socket = new k.window.WebSocket(t, this.protocols) : this._socket = new k.window.WebSocket(t),
          this._socket.binaryType = "arraybuffer", this._output = new this._byteClass(), this._output.endian = this.endian,
          this._input = new this._byteClass(), this._input.endian = this.endian, this._addInputPosition = 0,
          this._socket.onopen = function(t) {
            e._onOpen(t);
          }, this._socket.onmessage = function(t) {
            e._onMessage(t);
          }, this._socket.onclose = function(t) {
            e._onClose(t);
          }, this._socket.onerror = function(t) {
            e._onError(t);
          };
      }, i.cleanSocket = function() {
        try {
          this._socket.close();
        } catch (t) {}
        this._connected = !1, this._socket.onopen = null, this._socket.onmessage = null,
          this._socket.onclose = null, this._socket.onerror = null, this._socket = null;
      }, i.close = function() {
        if (null != this._socket) try {
          this._socket.close();
        } catch (t) {}
      }, i._onOpen = function(t) {
        this._connected = !0, this.event("open", t);
      }, i._onMessage = function(t) {
        if (t && t.data) {
          var e = t.data;
          if (this.disableInput && e) this.event("message", e);
          else {
            this._input.length > 0 && this._input.bytesAvailable < 1 && (this._input.clear(),
              this._addInputPosition = 0);
            var i = this._input.pos;
            !this._addInputPosition && (this._addInputPosition = 0), this._input.pos = this._addInputPosition,
              e && ("string" == typeof e ? this._input.writeUTFBytes(e) : this._input.writeArrayBuffer(e),
                this._addInputPosition = this._input.pos, this._input.pos = i), this.event("message", e);
          }
        }
      }, i._onClose = function(t) {
        this._connected = !1, this.event("close", t);
      }, i._onError = function(t) {
        this.event("error", t);
      }, i.send = function(t) {
        this._socket.send(t);
      }, i.flush = function() {
        if (this._output && this._output.length > 0) {
          var t;
          try {
            this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length));
          } catch (e) {
            t = e;
          }
          this._output.endian = this.endian, this._output.clear(), t && this.event("error", t);
        }
      }, r(0, i, "input", function() {
        return this._input;
      }), r(0, i, "output", function() {
        return this._output;
      }), r(0, i, "connected", function() {
        return this._connected;
      }), r(0, i, "endian", function() {
        return this._endian;
      }, function(t) {
        this._endian = t, null != this._input && (this._input.endian = t), null != this._output && (this._output.endian = t);
      }), e.LITTLE_ENDIAN = "littleEndian", e.BIG_ENDIAN = "bigEndian";
    }(), function(t) {
      function e() {
        this.worker = null, e.__super.call(this);
        var t = this;
        this.worker = new k.window.Worker(e.workerPath), this.worker.onmessage = function(e) {
          t.workerMessage(e.data);
        };
      }
      s(e, "laya.net.WorkerLoader", h);
      var i = e.prototype;
      i.workerMessage = function(t) {
          if (t) switch (t.type) {
            case "Image":
              this.imageLoaded(t);
              break;

            case "Msg":
              this.event("image_msg", t.msg);
          }
        }, i.imageLoaded = function(t) {
          if (t && t.buffer && t.buffer.length < 10) return e._enable = !1, this._myTrace("buffer lost when postmessage ,disable workerloader"),
            this.event(t.url, null), void this.event("image_err", t.url + "\n" + t.msg);
          if (!t.dataType) return this.event(t.url, null), void this.event("image_err", t.url + "\n" + t.msg);
          var i, n, s;
          switch (t.dataType) {
            case "buffer":
              (s = (n = (i = new vt("2D")).source.getContext("2d")).createImageData(t.width, t.height)).data.set(t.buffer),
                i.size(s.width, s.height), n.putImageData(s, 0, 0), i.memorySize = 0;
              break;

            case "imagedata":
              n = (i = new vt("2D")).source.getContext("2d"), s = t.imagedata, i.size(s.width, s.height),
                n.putImageData(s, 0, 0), s = t.imagedata, i.memorySize = 0;
              break;

            case "imageBitmap":
              s = t.imageBitmap, D.isWebGL ? i = s : (n = (i = new vt("2D")).source.getContext("2d"),
                i.size(s.width, s.height), n.drawImage(s, 0, 0), i.src = t.url);
          }
          D.isWebGL && (i = new laya.webgl.resource.WebGLImage(i, t.url)), this.event(t.url, i);
        }, i._myTrace = function(t) {
          var e = arguments,
            i = [],
            n = 0,
            s = e.length;
          for (n = 0; n < s; n++) i.push(e[n]);
          this.event("image_msg", i.join(" "));
        }, i.loadImage = function(t) {
          var e;
          (e = {}).type = "load", e.url = t, this.worker.postMessage(e);
        }, i._loadImage = function(t) {
          var i = this;
          if (!e._enable || t.toLowerCase().indexOf(".png") < 0) e._preLoadFun.call(i, t);
          else {
            t = A.formatURL(t);
            var n = function(s) {
              laya.net.WorkerLoader.I.off(t, i, n), s ? i.onLoaded(s) : e._preLoadFun.call(i, t);
            };
            laya.net.WorkerLoader.I.on(t, i, n), laya.net.WorkerLoader.I.loadImage(t);
          }
        }, r(1, e, "enable", function() {
          return e._enable;
        }, function(t) {
          e.disableJSDecode && !k.window.createImageBitmap || (e._enable = t) && null == e._preLoadFun && (e._enable = e.__init__());
        }), e.__init__ = function() {
          return null == e._preLoadFun && (!!k.window.Worker && (e._preLoadFun = at.prototype._loadImage,
            at.prototype._loadImage = e.prototype._loadImage, e.I || (e.I = new e()), !0));
        }, e.workerSupported = function() {
          return !!k.window.Worker;
        }, e.IMAGE_LOADED = "image_loaded", e.IMAGE_ERR = "image_err", e.IMAGE_MSG = "image_msg",
        e.I = null, e._preLoadFun = null, e._enable = !1, e.workerPath = "libs/worker.js",
        e.disableJSDecode = !0;
    }(), function(t) {
      function e() {
        e.__super.call(this), this._$1__id = ++e._uniqueIDCounter, this.__loaded = !0, this._destroyed = !1,
          this._referenceCount = 0, e._idResourcesMap[this.id] = this, this._released = !0,
          this.lock = !1, this._memorySize = 0, this._lastUseFrameCount = -1, B.currentResourceManager && B.currentResourceManager.addResource(this);
      }
      s(e, "laya.resource.Resource", h);
      var n = e.prototype;
      return i.imps(n, {
          "laya.resource.ICreateResource": !0,
          "laya.resource.IDispose": !0
        }), n._setUrl = function(t) {
          if (this._url !== t) {
            var i;
            this._url && ((i = e._urlResourcesMap[this._url]).splice(i.indexOf(this), 1), 0 === i.length && delete e._urlResourcesMap[this._url]),
              t && ((i = e._urlResourcesMap[t]) || (e._urlResourcesMap[t] = i = []), i.push(this)),
              this._url = t;
          }
        }, n._getGroup = function() {
          return this._group;
        }, n._setGroup = function(t) {
          if (this._group !== t) {
            var i;
            this._group && ((i = e._groupResourcesMap[this._group]).splice(i.indexOf(this), 1),
              0 === i.length && delete e._groupResourcesMap[this._group]), t && ((i = e._groupResourcesMap[t]) || (e._groupResourcesMap[t] = i = []),
              i.push(this)), this._group = t;
          }
        }, n._addReference = function() {
          this._referenceCount++;
        }, n._removeReference = function() {
          this._referenceCount--;
        }, n._clearReference = function() {
          this._referenceCount = 0;
        }, n._endLoaded = function() {
          this.__loaded = !0, this.event("loaded", this);
        }, n.recreateResource = function() {
          this.completeCreate();
        }, n.disposeResource = function() {}, n.activeResource = function(t) {
          void 0 === t && (t = !1), this._lastUseFrameCount = X.loopCount, !this._destroyed && this.__loaded && (this._released || t) && this.recreateResource();
        }, n.releaseResource = function(t) {
          return void 0 === t && (t = !1), !(!t && this.lock) && (!(this._released && !t) && (this.disposeResource(),
            this._released = !0, this._lastUseFrameCount = -1, this.event("released", this), !0));
        }, n.onAsynLoaded = function(t, e, i) {
          throw new Error("Resource: must override this function!");
        }, n.destroy = function() {
          if (!this._destroyed) {
            null !== this._resourceManager && this._resourceManager.removeResource(this), this._destroyed = !0,
              this.lock = !1, this.releaseResource(), delete e._idResourcesMap[this.id];
            var t;
            this._url && ((t = e._urlResourcesMap[this._url]) && (t.splice(t.indexOf(this), 1),
                0 === t.length && delete e._urlResourcesMap[this.url]), at.clearRes(this._url),
              this.__loaded || a.cancelLoadByUrl(this._url)), this._group && ((t = e._groupResourcesMap[this._group]).splice(t.indexOf(this), 1),
              0 === t.length && delete e._groupResourcesMap[this.url]);
          }
        }, n.completeCreate = function() {
          this._released = !1, this.event("recovered", this);
        }, n.dispose = function() {
          this.destroy();
        }, r(0, n, "memorySize", function() {
          return this._memorySize;
        }, function(t) {
          var e = t - this._memorySize;
          this._memorySize = t, this.resourceManager && this.resourceManager.addSize(e);
        }), r(0, n, "_loaded", null, function(t) {
          this.__loaded = t;
        }), r(0, n, "loaded", function() {
          return this.__loaded;
        }), r(0, n, "id", function() {
          return this._$1__id;
        }), r(0, n, "destroyed", function() {
          return this._destroyed;
        }), r(0, n, "group", function() {
          return this._getGroup();
        }, function(t) {
          this._setGroup(t);
        }), r(0, n, "resourceManager", function() {
          return this._resourceManager;
        }), r(0, n, "url", function() {
          return this._url;
        }), r(0, n, "released", function() {
          return this._released;
        }), r(0, n, "referenceCount", function() {
          return this._referenceCount;
        }), e.getResourceByID = function(t) {
          return e._idResourcesMap[t];
        }, e.getResourceByURL = function(t, i) {
          return void 0 === i && (i = 0), e._urlResourcesMap[t][i];
        }, e.getResourceCountByURL = function(t) {
          return e._urlResourcesMap[t].length;
        }, e.destroyUnusedResources = function(t) {
          var i;
          if (t) {
            var n = e._groupResourcesMap[t];
            if (n)
              for (var s = n.slice(), r = 0, a = s.length; r < a; r++)(i = s[r]).lock || 0 !== i._referenceCount || i.destroy();
          } else
            for (var o in e._idResourcesMap)(i = e._idResourcesMap[o]).lock || 0 !== i._referenceCount || i.destroy();
        }, e._uniqueIDCounter = 0, e._idResourcesMap = {}, e._urlResourcesMap = {}, e._groupResourcesMap = {},
        e;
    }()),
    lt = function(e) {
      function n(t, e) {
        this.offsetX = 0, this.offsetY = 0, this.sourceWidth = 0, this.sourceHeight = 0,
          this._w = 0, this._h = 0, this._uvID = 0, this._atlasID = -1, this.scaleRate = 1,
          n.__super.call(this), t && null != t._addReference && t._addReference(), this.setTo(t, e);
      }
      s(n, "laya.resource.Texture", h);
      var o = n.prototype;
      return o._setUrl = function(t) {
          this.url = t;
        }, o.setTo = function(e, i) {
          if (e instanceof t.HTMLElement) {
            var s = vt.create("2D", e);
            this.bitmap = s;
          } else this.bitmap = e;
          if (this.uv = i || n.DEF_UV, e) {
            this._w = e.width, this._h = e.height, this.sourceWidth = this.sourceWidth || this._w,
              this.sourceHeight = this.sourceHeight || this._h, this._loaded = this._w > 0;
            var r = this;
            if (this._loaded) a.addToAtlas && a.addToAtlas(r);
            else {
              var o = e;
              o instanceof laya.resource.HTMLImage && o.image && o.image.addEventListener("load", function(t) {
                a.addToAtlas && a.addToAtlas(r);
              }, !1);
            }
          }
        }, o.active = function() {
          this.bitmap && this.bitmap.activeResource();
        }, o.destroy = function(t) {
          if (void 0 === t && (t = !1), this.bitmap && this.bitmap.referenceCount > 0) {
            var e = this.bitmap;
            t ? (D.isConchApp && e.source && e.source.conchDestroy && this.bitmap.source.conchDestroy(),
                this.bitmap = null, e.dispose(), e._clearReference()) : (e._removeReference(), 0 == e.referenceCount && (D.isConchApp && e.source && e.source.conchDestroy && this.bitmap.source.conchDestroy(),
                this.bitmap = null, e.dispose())), this.url && this === i.loader.getRes(this.url) && i.loader.clearRes(this.url, t),
              this._loaded = !1;
          }
        }, o.load = function(t) {
          var e = this;
          this._loaded = !1, t = A.customFormat(t);
          var i = this.bitmap || (this.bitmap = wt.create(t));
          i && i._addReference();
          var n = this;
          i.onload = function() {
            i.onload = null, n._loaded = !0, e.sourceWidth = e._w = i.width, e.sourceHeight = e._h = i.height,
              n.event("loaded", this), a.addToAtlas && a.addToAtlas(n);
          };
        }, o.addTextureToAtlas = function(t) {
          a.addTextureToAtlas(this);
        }, o.getPixels = function(t, e, i, n) {
          if (D.isConchApp) {
            var s = this.bitmap;
            if (s.source && s.source.getImageData) {
              var r = s.source.getImageData(t, e, i, n),
                o = new Uint8Array(r);
              return Array.from(o);
            }
            return null;
          }
          if (D.isWebGL) return a.getTexturePixels(this, t, e, i, n);
          k.canvas.size(i, n), k.canvas.clear(), k.context.drawTexture(this, -t, -e, this.width, this.height, 0, 0);
          return k.context.getImageData(0, 0, i, n).data;
        }, o.onAsynLoaded = function(t, e) {
          e && e._addReference(), this.setTo(e, this.uv);
        }, r(0, o, "source", function() {
          return this.bitmap ? (this.bitmap.activeResource(), this.bitmap.source) : null;
        }), r(0, o, "loaded", function() {
          return this._loaded;
        }), r(0, o, "released", function() {
          return !this.bitmap || this.bitmap.released;
        }), r(0, o, "width", function() {
          return this._w ? this._w : this.uv && this.uv !== n.DEF_UV ? (this.uv[2] - this.uv[0]) * this.bitmap.width : this.bitmap.width;
        }, function(t) {
          this._w = t, this.sourceWidth || (this.sourceWidth = t);
        }), r(0, o, "repeat", function() {
          return !D.isWebGL || !this.bitmap || this.bitmap.repeat;
        }, function(t) {
          t && D.isWebGL && this.bitmap && (this.bitmap.repeat = t, t && (this.bitmap.enableMerageInAtlas = !1));
        }), r(0, o, "height", function() {
          return this._h ? this._h : this.uv && this.uv !== n.DEF_UV ? (this.uv[5] - this.uv[1]) * this.bitmap.height : this.bitmap.height;
        }, function(t) {
          this._h = t, this.sourceHeight || (this.sourceHeight = t);
        }), r(0, o, "isLinearSampling", function() {
          return !D.isWebGL || 9728 != this.bitmap.minFifter;
        }, function(t) {
          !t && D.isWebGL && (t || -1 != this.bitmap.minFifter || -1 != this.bitmap.magFifter || (this.bitmap.minFifter = 9728,
            this.bitmap.magFifter = 9728, this.bitmap.enableMerageInAtlas = !1));
        }), n.moveUV = function(t, e, i) {
          for (var n = 0; n < 8; n += 2) i[n] += t, i[n + 1] += e;
          return i;
        }, n.create = function(t, e, i, s, r, o, h, l, u) {
          void 0 === o && (o = 0), void 0 === h && (h = 0), void 0 === l && (l = 0), void 0 === u && (u = 0);
          var c = t instanceof laya.resource.Texture,
            _ = c ? t.uv : n.DEF_UV,
            d = c ? t.bitmap : t,
            p = a.isAtlas(d);
          if (p) {
            var f = d._atlaser,
              g = t._atlasID;
            if (-1 == g) throw new Error("create texture error");
            d = f._inAtlasTextureBitmapValue[g], _ = f._inAtlasTextureOriUVValue[g];
          }
          var m = new n(d, null);
          d.width && e + s > d.width && (s = d.width - e), d.height && i + r > d.height && (r = d.height - i),
            m.width = s, m.height = r, m.offsetX = o, m.offsetY = h, m.sourceWidth = l || s,
            m.sourceHeight = u || r;
          var y = 1 / d.width,
            v = 1 / d.height;
          e *= y, i *= v, s *= y, r *= v;
          var x = m.uv[0],
            b = m.uv[1],
            w = m.uv[4],
            I = m.uv[5],
            S = w - x,
            C = I - b,
            T = n.moveUV(_[0], _[1], [e, i, e + s, i, e + s, i + r, e, i + r]);
          m.uv = [x + T[0] * S, b + T[1] * C, w - (1 - T[2]) * S, b + T[3] * C, w - (1 - T[4]) * S, I - (1 - T[5]) * C, x + T[6] * S, I - (1 - T[7]) * C],
            p && m.addTextureToAtlas();
          var E = d.scaleRate;
          return E && 1 != E ? (m.sourceWidth /= E, m.sourceHeight /= E, m.width /= E, m.height /= E,
            m.scaleRate = E, m.offsetX /= E, m.offsetY /= E) : m.scaleRate = 1, m;
        }, n.createFromTexture = function(t, e, i, s, r) {
          var a = t.scaleRate;
          1 != a && (e *= a, i *= a, s *= a, r *= a);
          var o = E.TEMP.setTo(e - t.offsetX, i - t.offsetY, s, r),
            h = o.intersection(n._rect1.setTo(0, 0, t.width, t.height), n._rect2);
          if (!h) return null;
          var l = n.create(t, h.x, h.y, h.width, h.height, h.x - o.x, h.y - o.y, s, r);
          return l.bitmap._removeReference(), l;
        }, n.DEF_UV = [0, 0, 1, 0, 1, 1, 0, 1], n.INV_UV = [0, 1, 1, 1, 1, 0, 0, 0],
        n._rect1 = new E(), n._rect2 = new E(), n;
    }(),
    ut = function(t) {
      function e() {
        this._labelDic = null, this._tweenDic = {}, this._tweenDataList = [], this._endTweenDataList = null,
          this._currTime = 0, this._lastTime = 0, this._startTime = 0, this._index = 0, this._gidIndex = 0,
          this._firstTweenDic = {}, this._startTimeSort = !1, this._endTimeSort = !1, this._loopKey = !1,
          this.scale = 1, this._frameRate = 60, this._frameIndex = 0, this._total = 0, e.__super.call(this);
      }
      var n;
      s(e, "laya.utils.TimeLine", h);
      var a = e.prototype;
      return a.to = function(t, e, i, n, s) {
        return void 0 === s && (s = 0), this._create(t, e, i, n, s, !0);
      }, a.from = function(t, e, i, n, s) {
        return void 0 === s && (s = 0), this._create(t, e, i, n, s, !1);
      }, a._create = function(t, e, i, s, r, a) {
        var o = Y.getItemByClass("tweenData", n);
        return o.isTo = a, o.type = 0, o.target = t, o.duration = i, o.data = e, o.startTime = this._startTime + r,
          o.endTime = o.startTime + o.duration, o.ease = s, this._startTime = Math.max(o.endTime, this._startTime),
          this._tweenDataList.push(o), this._startTimeSort = !0, this._endTimeSort = !0, this;
      }, a.addLabel = function(t, e) {
        var i = Y.getItemByClass("tweenData", n);
        return i.type = 1, i.data = t, i.endTime = i.startTime = this._startTime + e, this._labelDic || (this._labelDic = {}),
          this._labelDic[t] = i, this._tweenDataList.push(i), this;
      }, a.removeLabel = function(t) {
        if (this._labelDic && this._labelDic[t]) {
          var e = this._labelDic[t];
          if (e) {
            var i = this._tweenDataList.indexOf(e);
            i > -1 && this._tweenDataList.splice(i, 1);
          }
          delete this._labelDic[t];
        }
      }, a.gotoTime = function(t) {
        if (null != this._tweenDataList && 0 != this._tweenDataList.length) {
          var e, i;
          for (var n in this._firstTweenDic)
            if (i = this._firstTweenDic[n])
              for (var s in i) i.diyTarget.hasOwnProperty(s) && (i.diyTarget[s] = i[s]);
          for (n in this._tweenDic)(e = this._tweenDic[n]).clear(), delete this._tweenDic[n];
          this._index = 0, this._gidIndex = 0, this._currTime = t, this._lastTime = k.now();
          var r;
          null == this._endTweenDataList || this._endTimeSort ? (this._endTimeSort = !1, this._endTweenDataList = r = this._tweenDataList.concat(),
            r.sort(function(t, e) {
              return t.endTime > e.endTime ? 1 : t.endTime < e.endTime ? -1 : 0;
            })) : r = this._endTweenDataList;
          for (var a, o = 0, h = r.length; o < h; o++)
            if (0 == (a = r[o]).type) {
              if (!(t >= a.endTime)) break;
              this._index = Math.max(this._index, o + 1);
              var u = a.data;
              if (a.isTo)
                for (var c in u) a.target[c] = u[c];
            }
          for (o = 0, h = this._tweenDataList.length; o < h; o++) 0 == (a = this._tweenDataList[o]).type && t >= a.startTime && t < a.endTime && (this._index = Math.max(this._index, o + 1),
            this._gidIndex++, (e = Y.getItemByClass("tween", j))._create(a.target, a.data, a.duration, a.ease, l.create(this, this._animComplete, [this._gidIndex]), 0, !1, a.isTo, !0, !1),
            e.setStartTime(this._currTime - (t - a.startTime)), e._updateEase(this._currTime),
            e.gid = this._gidIndex, this._tweenDic[this._gidIndex] = e);
        }
      }, a.gotoLabel = function(t) {
        if (null != this._labelDic) {
          var e = this._labelDic[t];
          e && this.gotoTime(e.startTime);
        }
      }, a.pause = function() {
        i.timer.clear(this, this._update);
      }, a.resume = function() {
        this.play(this._currTime, this._loopKey);
      }, a.play = function(t, e) {
        if (void 0 === t && (t = 0), void 0 === e && (e = !1), this._tweenDataList) {
          if (this._startTimeSort) {
            this._startTimeSort = !1, this._tweenDataList.sort(function(t, e) {
              return t.startTime > e.startTime ? 1 : t.startTime < e.startTime ? -1 : 0;
            });
            for (var n = 0, s = this._tweenDataList.length; n < s; n++) {
              var r = this._tweenDataList[n];
              if (null != r && 0 == r.type) {
                var a = r.target,
                  o = a.$_GID || (a.$_GID = $.getGID()),
                  h = null;
                null == this._firstTweenDic[o] ? ((h = {}).diyTarget = a, this._firstTweenDic[o] = h) : h = this._firstTweenDic[o];
                for (var l in r.data) null == h[l] && (h[l] = a[l]);
              }
            }
          }
          "string" == typeof t ? this.gotoLabel(t) : this.gotoTime(t), this._loopKey = e,
            this._lastTime = k.now(), i.timer.frameLoop(1, this, this._update);
        }
      }, a._update = function() {
        if (this._currTime >= this._startTime) {
          if (!this._loopKey) {
            for (var t in this._tweenDic)(s = this._tweenDic[t]).complete();
            return this._complete(), void this.pause();
          }
          if (this._complete(), !this._tweenDataList) return;
          this.gotoTime(0);
        }
        var e = k.now(),
          i = e - this._lastTime,
          n = this._currTime += i * this.scale;
        this._lastTime = e;
        for (t in this._tweenDic)(s = this._tweenDic[t])._updateEase(n);
        var s;
        if (0 != this._tweenDataList.length && this._index < this._tweenDataList.length) {
          var r = this._tweenDataList[this._index];
          n >= r.startTime && (this._index++, 0 == r.type ? (this._gidIndex++, (s = Y.getItemByClass("tween", j))._create(r.target, r.data, r.duration, r.ease, l.create(this, this._animComplete, [this._gidIndex]), 0, !1, r.isTo, !0, !1),
            s.setStartTime(n), s.gid = this._gidIndex, this._tweenDic[this._gidIndex] = s, s._updateEase(n)) : this.event("label", r.data));
        }
      }, a._animComplete = function(t) {
        this._tweenDic[t] && delete this._tweenDic[t];
      }, a._complete = function() {
        this.event("complete");
      }, a.reset = function() {
        var t;
        if (this._labelDic)
          for (t in this._labelDic) delete this._labelDic[t];
        for (t in this._tweenDic) this._tweenDic[t].clear(), delete this._tweenDic[t];
        for (t in this._firstTweenDic) delete this._firstTweenDic[t];
        if (this._endTweenDataList = null, this._tweenDataList && this._tweenDataList.length) {
          var e = 0,
            n = 0;
          for (n = this._tweenDataList.length, e = 0; e < n; e++) this._tweenDataList[e] && this._tweenDataList[e].destroy();
        }
        this._tweenDataList.length = 0, this._currTime = 0, this._lastTime = 0, this._startTime = 0,
          this._index = 0, this._gidIndex = 0, this.scale = 1, i.timer.clear(this, this._update);
      }, a.destroy = function() {
        this.reset(), this._labelDic = null, this._tweenDic = null, this._tweenDataList = null,
          this._firstTweenDic = null;
      }, r(0, a, "index", function() {
        return this._frameIndex;
      }, function(t) {
        this._frameIndex = t, this.gotoTime(this._frameIndex / this._frameRate * 1e3);
      }), r(0, a, "total", function() {
        return this._total = Math.floor(this._startTime / 1e3 * this._frameRate), this._total;
      }), e.to = function(t, i, n, s, r) {
        return void 0 === r && (r = 0), new e().to(t, i, n, s, r);
      }, e.from = function(t, i, n, s, r) {
        return void 0 === r && (r = 0), new e().from(t, i, n, s, r);
      }, e.__init$ = function() {
        n = function() {
          function t() {
            this.type = 0, this.isTo = !0, this.startTime = NaN, this.endTime = NaN, this.target = null,
              this.duration = NaN, this.ease = null, this.data = null;
          }
          s(t, "");
          return t.prototype.destroy = function() {
            this.target = null, this.ease = null, this.data = null, this.isTo = !0, this.type = 0,
              Y.recover("tweenData", this);
          }, t;
        }();
      }, e;
    }(),
    ct = function(e) {
      function o() {
        this._transform = null, this._tfChanged = !1, this._x = 0, this._y = 0, this._width = 0,
          this._height = 0, this._repaint = 1, this._mouseEnableState = 0, this._zOrder = 0,
          this._graphics = null, this._renderType = 0, this._optimizeScrollRect = !1, this._texture = null,
          this.mouseThrough = !1, this.autoSize = !1, this.hitTestPrior = !1, this.viewport = null,
          o.__super.call(this), this._style = c.EMPTY;
      }
      s(o, "laya.display.Sprite", e);
      var h = o.prototype;
      return i.imps(h, {
        "laya.display.ILayout": !0
      }), h.createConchModel = function() {
        return new ConchNode();
      }, h.destroy = function(t) {
        void 0 === t && (t = !0), this._releaseMem(), e.prototype.destroy.call(this, t),
          this._style && this._style.destroy(), this._transform && this._transform.destroy(),
          this._transform = null, this._style = null, this._graphics = null;
      }, h.updateZOrder = function() {
        $.updateOrder(this._childs) && this.repaint();
      }, h.reCache = function() {
        this._$P.cacheCanvas && (this._$P.cacheCanvas.reCache = !0), this._repaint = 1;
      }, h.setBounds = function(t) {
        this._set$P("uBounds", t);
      }, h.getBounds = function() {
        return this._$P.mBounds || this._set$P("mBounds", new E()), E._getWrapRec(this._boundPointsToParent(), this._$P.mBounds);
      }, h.getSelfBounds = function() {
        return this._$P.uBounds ? this._$P.uBounds : (this._$P.mBounds || this._set$P("mBounds", new E()),
          E._getWrapRec(this._getBoundPointsM(!1), this._$P.mBounds));
      }, h._boundPointsToParent = function(t) {
        void 0 === t && (t = !1);
        var e = 0,
          i = 0;
        this._style && (e = this._style._tf.translateX, i = this._style._tf.translateY,
          t = t || 0 !== this._style._tf.rotate, this._style.scrollRect && (e += this._style.scrollRect.x,
            i += this._style.scrollRect.y));
        var n = this._getBoundPointsM(t);
        if (!n || n.length < 1) return n;
        if (8 != n.length && (n = t ? I.scanPList(n) : E._getWrapRec(n, E.TEMP)._getBoundPoints()), !this.transform) return $.transPointList(n, this._x - e, this._y - i), n;
        var s = T.TEMP,
          r = 0,
          a = n.length;
        for (r = 0; r < a; r += 2) s.x = n[r], s.y = n[r + 1], this.toParentPoint(s), n[r] = s.x,
          n[r + 1] = s.y;
        return n;
      }, h.getGraphicBounds = function(t) {
        return void 0 === t && (t = !1), this._graphics ? this._graphics.getBounds(t) : E.TEMP.setTo(0, 0, 0, 0);
      }, h._getBoundPointsM = function(t) {
        if (void 0 === t && (t = !1), this._$P.uBounds) return this._$P.uBounds._getBoundPoints();
        if (this._$P.temBM || this._set$P("temBM", []), this.scrollRect) {
          var e = $.clearArray(this._$P.temBM),
            i = E.TEMP;
          return i.copyFrom(this.scrollRect), $.concatArray(e, i._getBoundPoints()), e;
        }
        for (var n, s, r, a = this._graphics ? this._graphics.getBoundPoints() : $.clearArray(this._$P.temBM), o = 0, h = (r = this._childs).length; o < h; o++)(n = r[o]) instanceof laya.display.Sprite && 1 == n.visible && (s = n._boundPointsToParent(t)) && (a = a ? $.concatArray(a, s) : s);
        return a;
      }, h.getStyle = function() {
        return this._style === c.EMPTY && (this._style = new c()), this._style;
      }, h.setStyle = function(t) {
        this._style = t;
      }, h._adjustTransform = function() {
        this._tfChanged = !1;
        var t, e = this._style._tf,
          i = e.scaleX,
          n = e.scaleY;
        if (e.rotate || 1 !== i || 1 !== n || e.skewX || e.skewY) {
          (t = this._transform || (this._transform = C.create())).bTransform = !0;
          var s = .0174532922222222 * (e.rotate - e.skewX),
            r = .0174532922222222 * (e.rotate + e.skewY),
            a = Math.cos(r),
            o = Math.sin(r),
            h = Math.sin(s),
            l = Math.cos(s);
          return t.a = i * a, t.b = i * o, t.c = -n * h, t.d = n * l, t.tx = t.ty = 0, t;
        }
        return this._transform && this._transform.destroy(), this._transform = null, this._renderType &= -5,
          t;
      }, h.pos = function(t, e, i) {
        if (void 0 === i && (i = !1), this._x !== t || this._y !== e) {
          if (this.destroyed) return this;
          if (i) {
            this._x = t, this._y = e, this.conchModel && this.conchModel.pos(this._x, this._y);
            var n = this._parent;
            n && 0 === n._repaint && (n._repaint = 1, n.parentRepaint()), this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1,
              this._$P.maskParent.parentRepaint());
          } else this.x = t, this.y = e;
        }
        return this;
      }, h.pivot = function(t, e) {
        return this.pivotX = t, this.pivotY = e, this;
      }, h.size = function(t, e) {
        return this.width = t, this.height = e, this;
      }, h.scale = function(t, e, i) {
        void 0 === i && (i = !1);
        var n = this.getStyle(),
          s = n._tf;
        if (s.scaleX != t || s.scaleY != e) {
          if (this.destroyed) return this;
          if (i) {
            n.setScale(t, e), this._tfChanged = !0, this.conchModel && this.conchModel.scale(t, e),
              this._renderType |= 4;
            var r = this._parent;
            r && 0 === r._repaint && (r._repaint = 1, r.parentRepaint());
          } else this.scaleX = t, this.scaleY = e;
        }
        return this;
      }, h.skew = function(t, e) {
        return this.skewX = t, this.skewY = e, this;
      }, h.render = function(t, e, i) {
        X.spriteCount++, N.renders[this._renderType]._fun(this, t, e + this._x, i + this._y),
          this._repaint = 0;
      }, h.drawToCanvas = function(t, e, i, n) {
        if (D.isConchNode) {
          var s = vt.create("2D");
          return new R(t, e, s).ctx.setCanvasType(1), this.conchModel.drawToCanvas(s.source, i, n),
            s;
        }
        return a.drawToCanvas(this, this._renderType, t, e, i, n);
      }, h.customRender = function(t, e, i) {
        this._renderType |= 1024;
      }, h._applyFilters = function() {
        if (!D.isWebGL) {
          var t;
          if ((t = this._$P.filters) && !(t.length < 1))
            for (var e = 0, i = t.length; e < i; e++) t[e].action.apply(this._$P.cacheCanvas);
        }
      }, h._isHaveGlowFilter = function() {
        var t = 0,
          e = 0;
        if (this.filters)
          for (t = 0; t < this.filters.length; t++)
            if (8 == this.filters[t].type) return !0;
        for (t = 0, e = this._childs.length; t < e; t++)
          if (this._childs[t]._isHaveGlowFilter()) return !0;
        return !1;
      }, h.localToGlobal = function(t, e) {
        void 0 === e && (e = !1), !0 === e && (t = new T(t.x, t.y));
        for (var n = this; n && n != i.stage;) t = n.toParentPoint(t), n = n.parent;
        return t;
      }, h.globalToLocal = function(t, e) {
        void 0 === e && (e = !1), e && (t = new T(t.x, t.y));
        for (var n = this, s = []; n && n != i.stage;) s.push(n), n = n.parent;
        for (var r = s.length - 1; r >= 0;) t = (n = s[r]).fromParentPoint(t), r--;
        return t;
      }, h.toParentPoint = function(t) {
        if (!t) return t;
        t.x -= this.pivotX, t.y -= this.pivotY, this.transform && this._transform.transformPoint(t),
          t.x += this._x, t.y += this._y;
        var e = this._style.scrollRect;
        return e && (t.x -= e.x, t.y -= e.y), t;
      }, h.fromParentPoint = function(t) {
        if (!t) return t;
        t.x -= this._x, t.y -= this._y;
        var e = this._style.scrollRect;
        return e && (t.x += e.x, t.y += e.y), this.transform && this._transform.invertTransformPoint(t),
          t.x += this.pivotX, t.y += this.pivotY, t;
      }, h.on = function(t, i, n, s) {
        return 1 !== this._mouseEnableState && this.isMouseEvent(t) ? (this.mouseEnabled = !0,
          this._setBit(2, !0), this._parent && this._$2__onDisplay(), this._createListener(t, i, n, s, !1)) : e.prototype.on.call(this, t, i, n, s);
      }, h.once = function(t, i, n, s) {
        return 1 !== this._mouseEnableState && this.isMouseEvent(t) ? (this.mouseEnabled = !0,
          this._setBit(2, !0), this._parent && this._$2__onDisplay(), this._createListener(t, i, n, s, !0)) : e.prototype.once.call(this, t, i, n, s);
      }, h._$2__onDisplay = function() {
        if (1 !== this._mouseEnableState) {
          var t = this;
          for (t = t.parent; t && 1 !== t._mouseEnableState && !t._getBit(2);) t.mouseEnabled = !0,
            t._setBit(2, !0), t = t.parent;
        }
      }, h.loadImage = function(t, e, i, n, s, r) {
        var a = this;
        return void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0),
          void 0 === s && (s = 0), this.graphics.loadImage(t, e, i, n, s, function(t) {
            a.destroyed || (a.size(e + (n || t.width), i + (s || t.height)), a.repaint(), r && r.runWith(t));
          }), this;
      }, h.repaint = function() {
        this.conchModel && this.conchModel.repaint && this.conchModel.repaint(), 0 === this._repaint && (this._repaint = 1,
          this.parentRepaint()), this._$P && this._$P.maskParent && this._$P.maskParent.repaint();
      }, h._needRepaint = function() {
        return 0 !== this._repaint && this._$P.cacheCanvas && this._$P.cacheCanvas.reCache;
      }, h._childChanged = function(t) {
        this._childs.length ? this._renderType |= 2048 : this._renderType &= -2049, t && this._get$P("hasZorder") && i.timer.callLater(this, this.updateZOrder),
          this.repaint();
      }, h.parentRepaint = function() {
        var t = this._parent;
        t && 0 === t._repaint && (t._repaint = 1, t.parentRepaint());
      }, h.startDrag = function(t, e, i, n, s, r, a) {
        void 0 === e && (e = !1), void 0 === i && (i = 0), void 0 === n && (n = 300), void 0 === r && (r = !1),
          void 0 === a && (a = .92), this._$P.dragging || this._set$P("dragging", new H()),
          this._$P.dragging.start(this, t, e, i, n, s, r, a);
      }, h.stopDrag = function() {
        this._$P.dragging && this._$P.dragging.stop();
      }, h._releaseMem = function() {
        if (this._$P) {
          var t = this._$P.cacheCanvas;
          t && t.ctx && (Y.recover("RenderContext", t.ctx), t.ctx.canvas.size(0, 0), t.ctx = null);
          var e = this._$P._filterCache;
          e && (e.destroy(), e.recycle(), this._set$P("_filterCache", null)), this._$P._isHaveGlowFilter && this._set$P("_isHaveGlowFilter", !1),
            this._$P._isHaveGlowFilter = null;
        }
      }, h._setDisplay = function(t) {
        t || this._releaseMem(), e.prototype._setDisplay.call(this, t);
      }, h.hitTestPoint = function(t, e) {
        var i = this.globalToLocal(T.TEMP.setTo(t, e));
        t = i.x, e = i.y;
        return (this._$P.hitArea ? this._$P.hitArea : this._width > 0 && this._height > 0 ? E.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds()).contains(t, e);
      }, h.getMousePoint = function() {
        return this.globalToLocal(T.TEMP.setTo(i.stage.mouseX, i.stage.mouseY));
      }, h._getWords = function() {
        return null;
      }, h._addChildsToLayout = function(t) {
        var e = this._getWords();
        if (null == e && 0 == this._childs.length) return !1;
        if (e)
          for (var i = 0, n = e.length; i < n; i++) t.push(e[i]);
        return this._childs.forEach(function(e, i, n) {
          e._style._enableLayout() && e._addToLayout(t);
        }), !0;
      }, h._addToLayout = function(t) {
        this._style.absolute || (this._style.block ? t.push(this) : this._addChildsToLayout(t) && (this.x = this.y = 0));
      }, h._isChar = function() {
        return !1;
      }, h._getCSSStyle = function() {
        return this._style.getCSSStyle();
      }, h._setAttributes = function(t, e) {
        switch (t) {
          case "x":
            this.x = parseFloat(e);
            break;

          case "y":
            this.y = parseFloat(e);
            break;

          case "width":
            this.width = parseFloat(e);
            break;

          case "height":
            this.height = parseFloat(e);
            break;

          default:
            this[t] = e;
        }
      }, h._layoutLater = function() {
        this.parent && this.parent._layoutLater();
      }, r(0, h, "optimizeScrollRect", function() {
        return this._optimizeScrollRect;
      }, function(t) {
        this._optimizeScrollRect != t && (this._optimizeScrollRect = t, this.conchModel && this.conchModel.optimizeScrollRect(t));
      }), r(0, h, "customRenderEnable", null, function(t) {
        if (t && (this._renderType |= 1024, D.isConchNode)) {
          o.CustomList.push(this);
          var e = new vt("2d");
          e._setContext(new CanvasRenderingContext2D()), this.customContext = new R(0, 0, e),
            e.context.setCanvasType && e.context.setCanvasType(2), this.conchModel.custom(e.context);
        }
      }), r(0, h, "cacheAsBitmap", function() {
        return "none" !== this.cacheAs;
      }, function(t) {
        this.cacheAs = t ? this._$P.hasFilter ? "none" : "normal" : "none";
      }), r(0, h, "cacheAs", function() {
        return null == this._$P.cacheCanvas ? "none" : this._$P.cacheCanvas.type;
      }, function(t) {
        var e = this._$P.cacheCanvas;
        if (t !== (e ? e.type : "none")) {
          if ("none" !== t) this._getBit(1) || this._setUpNoticeType(1), e || (e = this._set$P("cacheCanvas", Y.getItemByClass("cacheCanvas", Object))),
            e.type = t, e.reCache = !0, this._renderType |= 16, "bitmap" == t && this.conchModel && this.conchModel.cacheAs(1),
            this._set$P("cacheForFilters", !1);
          else if (this._$P._mask);
          else if (this._$P.hasFilter) this._set$P("cacheForFilters", !0);
          else {
            if (e) {
              var i = e;
              i && i.ctx && (Y.recover("RenderContext", i.ctx), i.ctx.canvas.size(0, 0), i.ctx = null),
                Y.recover("cacheCanvas", e);
            }
            this._$P.cacheCanvas = null, this._renderType &= -17, this.conchModel && this.conchModel.cacheAs(0);
          }
          this.repaint();
        }
      }), r(0, h, "zOrder", function() {
        return this._zOrder;
      }, function(t) {
        this._zOrder != t && (this._zOrder = t, this.conchModel && this.conchModel.setZOrder && this.conchModel.setZOrder(t),
          this._parent && (t && this._parent._set$P("hasZorder", !0), i.timer.callLater(this._parent, this.updateZOrder)));
      }), r(0, h, "rotation", function() {
        return this._style._tf.rotate;
      }, function(t) {
        var e = this.getStyle();
        if (e._tf.rotate !== t) {
          e.setRotate(t), this._tfChanged = !0, this.conchModel && this.conchModel.rotate(t),
            this._renderType |= 4;
          var i = this._parent;
          i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
        }
      }), r(0, h, "width", function() {
        return this.autoSize ? this.getSelfBounds().width : this._width;
      }, function(t) {
        this._width !== t && (this._width = t, this.conchModel && this.conchModel.size(t, this._height),
          this.repaint());
      }), r(0, h, "x", function() {
        return this._x;
      }, function(t) {
        if (this._x !== t) {
          if (this.destroyed) return;
          this._x = t, this.conchModel && this.conchModel.pos(t, this._y);
          var e = this._parent;
          e && 0 === e._repaint && (e._repaint = 1, e.parentRepaint()), this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1,
            this._$P.maskParent.parentRepaint());
        }
      }), r(0, h, "globalScaleY", function() {
        for (var t = 1, e = this; e && e !== i.stage;) t *= e.scaleY, e = e.parent;
        return t;
      }), r(0, h, "hitArea", function() {
        return this._$P.hitArea;
      }, function(t) {
        this._set$P("hitArea", t);
      }), r(0, h, "staticCache", function() {
        return this._$P.staticCache;
      }, function(t) {
        this._set$P("staticCache", t), t || this.reCache();
      }), r(0, h, "texture", function() {
        return this._texture;
      }, function(t) {
        this._texture != t && (this._texture = t, this.graphics.cleanByTexture(t, 0, 0));
      }), r(0, h, "y", function() {
        return this._y;
      }, function(t) {
        if (this._y !== t) {
          if (this.destroyed) return;
          this._y = t, this.conchModel && this.conchModel.pos(this._x, t);
          var e = this._parent;
          e && 0 === e._repaint && (e._repaint = 1, e.parentRepaint()), this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1,
            this._$P.maskParent.parentRepaint());
        }
      }), r(0, h, "height", function() {
        return this.autoSize ? this.getSelfBounds().height : this._height;
      }, function(t) {
        this._height !== t && (this._height = t, this.conchModel && this.conchModel.size(this._width, t),
          this.repaint());
      }), r(0, h, "blendMode", function() {
        return this._style.blendMode;
      }, function(t) {
        this.getStyle().blendMode = t, this.conchModel && this.conchModel.blendMode(t),
          t && "source-over" != t ? this._renderType |= 8 : this._renderType &= -9, this.parentRepaint();
      }), r(0, h, "scaleX", function() {
        return this._style._tf.scaleX;
      }, function(t) {
        var e = this.getStyle();
        if (e._tf.scaleX !== t) {
          e.setScaleX(t), this._tfChanged = !0, this.conchModel && this.conchModel.scale(t, e._tf.scaleY),
            this._renderType |= 4;
          var i = this._parent;
          i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
        }
      }), r(0, h, "scaleY", function() {
        return this._style._tf.scaleY;
      }, function(t) {
        var e = this.getStyle();
        if (e._tf.scaleY !== t) {
          e.setScaleY(t), this._tfChanged = !0, this.conchModel && this.conchModel.scale(e._tf.scaleX, t),
            this._renderType |= 4;
          var i = this._parent;
          i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
        }
      }), r(0, h, "stage", function() {
        return i.stage;
      }), r(0, h, "skewX", function() {
        return this._style._tf.skewX;
      }, function(t) {
        var e = this.getStyle();
        if (e._tf.skewX !== t) {
          e.setSkewX(t), this._tfChanged = !0, this.conchModel && this.conchModel.skew(t, e._tf.skewY),
            this._renderType |= 4;
          var i = this._parent;
          i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
        }
      }), r(0, h, "scrollRect", function() {
        return this._style.scrollRect;
      }, function(t) {
        this.getStyle().scrollRect = t, this.repaint(), t ? (this._renderType |= 128, this.conchModel && this.conchModel.scrollRect(t.x, t.y, t.width, t.height)) : (this._renderType &= -129,
          this.conchModel && (o.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(64) : this.conchModel.removeType(128)));
      }), r(0, h, "skewY", function() {
        return this._style._tf.skewY;
      }, function(t) {
        var e = this.getStyle();
        if (e._tf.skewY !== t) {
          e.setSkewY(t), this._tfChanged = !0, this.conchModel && this.conchModel.skew(e._tf.skewX, t),
            this._renderType |= 4;
          var i = this._parent;
          i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
        }
      }), r(0, h, "transform", function() {
        return this._tfChanged ? this._adjustTransform() : this._transform;
      }, function(t) {
        this._tfChanged = !1, this._transform = t, t && (this._x = t.tx, this._y = t.ty,
            t.tx = t.ty = 0, this.conchModel && this.conchModel.transform(t.a, t.b, t.c, t.d, this._x, this._y)),
          t ? this._renderType |= 4 : (this._renderType &= -5, this.conchModel && this.conchModel.removeType(4)),
          this.parentRepaint();
      }), r(0, h, "pivotX", function() {
        return this._style._tf.translateX;
      }, function(t) {
        this.getStyle().setTranslateX(t), this.conchModel && this.conchModel.pivot(t, this._style._tf.translateY),
          this.repaint();
      }), r(0, h, "pivotY", function() {
        return this._style._tf.translateY;
      }, function(t) {
        this.getStyle().setTranslateY(t), this.conchModel && this.conchModel.pivot(this._style._tf.translateX, t),
          this.repaint();
      }), r(0, h, "alpha", function() {
        return this._style.alpha;
      }, function(t) {
        this._style && this._style.alpha !== t && (t = t < 0 ? 0 : t > 1 ? 1 : t, this.getStyle().alpha = t,
          this.conchModel && this.conchModel.alpha(t), 1 !== t ? this._renderType |= 2 : this._renderType &= -3,
          this.parentRepaint());
      }), r(0, h, "visible", function() {
        return this._style.visible;
      }, function(t) {
        this._style && this._style.visible !== t && (this.getStyle().visible = t, this.conchModel && this.conchModel.visible(t),
          this.parentRepaint());
      }), r(0, h, "graphics", function() {
        return this._graphics || (this.graphics = a.createGraphics());
      }, function(t) {
        this._graphics && (this._graphics._sp = null), this._graphics = t, t ? (this._renderType &= -2,
            this._renderType |= 512, t._sp = this, this.conchModel && this.conchModel.graphics(this._graphics)) : (this._renderType &= -513,
            this._renderType &= -2, this.conchModel && (o.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(256) : this.conchModel.removeType(512))),
          this.repaint();
      }), r(0, h, "filters", function() {
        return this._$P.filters;
      }, function(t) {
        t && 0 === t.length && (t = null), this._$P.filters != t && (this._set$P("filters", t ? t.slice() : null),
          D.isConchApp && (this.conchModel && (o.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(16) : this.conchModel.removeType(32)),
            this._$P.filters && 1 == this._$P.filters.length && this._$P.filters[0].callNative(this)),
          D.isWebGL && (t && t.length ? this._renderType |= 32 : this._renderType &= -33),
          t && t.length > 0 ? (this._getBit(1) || this._setUpNoticeType(1), D.isWebGL && 1 == t.length && t[0] instanceof laya.filters.ColorFilter || ("bitmap" != this.cacheAs && (D.isConchNode || (this.cacheAs = "bitmap"),
            this._set$P("cacheForFilters", !0)), this._set$P("hasFilter", !0))) : (this._set$P("hasFilter", !1),
            this._$P.cacheForFilters && "bitmap" == this.cacheAs && (this.cacheAs = "none")),
          this.repaint());
      }), r(0, h, "parent", e.prototype._$get_parent, function(t) {
        i.superSet(J, this, "parent", t), t && this._getBit(2) && this._$2__onDisplay();
      }), r(0, h, "mask", function() {
        return this._$P._mask;
      }, function(t) {
        t && this.mask && this.mask._$P.maskParent || (t ? (this.cacheAs = "bitmap", this._set$P("_mask", t),
            t._set$P("maskParent", this)) : (this.mask && this.mask._set$P("maskParent", null),
            this._set$P("_mask", t), this.cacheAs = "none"), this.conchModel && this.conchModel.mask(t ? t.conchModel : null),
          this._renderType |= 64, this.parentRepaint());
      }), r(0, h, "mouseEnabled", function() {
        return this._mouseEnableState > 1;
      }, function(t) {
        this._mouseEnableState = t ? 2 : 1;
      }), r(0, h, "globalScaleX", function() {
        for (var t = 1, e = this; e && e !== i.stage;) t *= e.scaleX, e = e.parent;
        return t;
      }), r(0, h, "mouseX", function() {
        return this.getMousePoint().x;
      }), r(0, h, "mouseY", function() {
        return this.getMousePoint().y;
      }), o.fromImage = function(t) {
        return new o().loadImage(t);
      }, o.CustomList = [], n(o, ["RUNTIMEVERION", function() {
        return this.RUNTIMEVERION = t.conch ? conchConfig.getRuntimeVersion().substr(conchConfig.getRuntimeVersion().lastIndexOf("-") + 1) : "";
      }]), o;
    }(J),
    _t = function(t) {
      function e(t) {
        this._audio = null, this._onEnd = null, this._resumePlay = null, e.__super.call(this),
          this._onEnd = $.bind(this.__onEnd, this), this._resumePlay = $.bind(this.__resumePlay, this),
          t.addEventListener("ended", this._onEnd), this._audio = t;
      }
      s(e, "laya.media.h5audio.AudioSoundChannel", it);
      var n = e.prototype;
      return n.__onEnd = function() {
        if (1 == this.loops) return this.completeHandler && (i.timer.once(10, this, this.__runComplete, [this.completeHandler], !1),
          this.completeHandler = null), this.stop(), void this.event("complete");
        this.loops > 0 && this.loops--, this.startTime = 0, this.play();
      }, n.__resumePlay = function() {
        this._audio && this._audio.removeEventListener("canplay", this._resumePlay);
        try {
          this._audio.currentTime = this.startTime, k.container.appendChild(this._audio),
            this._audio.play();
        } catch (t) {
          this.event("error");
        }
      }, n.play = function() {
        this.isStopped = !1;
        try {
          this._audio.playbackRate = M.playbackRate, this._audio.currentTime = this.startTime;
        } catch (t) {
          return void this._audio.addEventListener("canplay", this._resumePlay);
        }
        M.addChannel(this), k.container.appendChild(this._audio), "play" in this._audio && this._audio.play();
      }, n.stop = function() {
        this.isStopped = !0, M.removeChannel(this), this.completeHandler = null, this._audio && ("pause" in this._audio && D.isConchApp && this._audio.stop(),
          this._audio.pause(), this._audio.removeEventListener("ended", this._onEnd), this._audio.removeEventListener("canplay", this._resumePlay),
          k.onIE || this._audio != et._musicAudio && Y.recover("audio:" + this.url, this._audio),
          k.removeElement(this._audio), this._audio = null);
      }, n.pause = function() {
        this.isStopped = !0, M.removeChannel(this), "pause" in this._audio && this._audio.pause();
      }, n.resume = function() {
        this._audio && (this.isStopped = !1, M.addChannel(this), "play" in this._audio && this._audio.play());
      }, r(0, n, "position", function() {
        return this._audio ? this._audio.currentTime : 0;
      }), r(0, n, "duration", function() {
        return this._audio ? this._audio.duration : 0;
      }), r(0, n, "volume", function() {
        return this._audio ? this._audio.volume : 1;
      }, function(t) {
        this._audio && (this._audio.volume = t);
      }), e;
    }(),
    dt = function(t) {
      function e() {
        this.audioBuffer = null, this.gain = null, this.bufferSource = null, this._currentTime = 0,
          this._volume = 1, this._startTime = 0, this._pauseTime = 0, this._onPlayEnd = null,
          this.context = st.ctx, e.__super.call(this), this._onPlayEnd = $.bind(this.__onPlayEnd, this),
          this.context.createGain ? this.gain = this.context.createGain() : this.gain = this.context.createGainNode();
      }
      s(e, "laya.media.webaudio.WebAudioSoundChannel", it);
      var n = e.prototype;
      return n.play = function() {
        if (M.addChannel(this), this.isStopped = !1, this._clearBufferSource(), this.audioBuffer) {
          var t = this.context,
            e = this.gain,
            i = t.createBufferSource();
          this.bufferSource = i, i.buffer = this.audioBuffer, i.connect(e), e && e.disconnect(),
            e.connect(t.destination), i.onended = this._onPlayEnd, this.startTime >= this.duration && (this.startTime = 0),
            this._startTime = k.now(), this.gain.gain.setTargetAtTime ? this.gain.gain.setTargetAtTime(this._volume, this.context.currentTime, .1) : this.gain.gain.value = this._volume,
            0 == this.loops && (i.loop = !0), i.playbackRate.setTargetAtTime ? i.playbackRate.setTargetAtTime(M.playbackRate, this.context.currentTime, .1) : i.playbackRate.value = M.playbackRate,
            i.start(0, this.startTime), this._currentTime = 0;
        }
      }, n.__onPlayEnd = function() {
        if (1 == this.loops) return this.completeHandler && (i.timer.once(10, this, this.__runComplete, [this.completeHandler], !1),
          this.completeHandler = null), this.stop(), void this.event("complete");
        this.loops > 0 && this.loops--, this.startTime = 0, this.play();
      }, n._clearBufferSource = function() {
        if (this.bufferSource) {
          var t = this.bufferSource;
          t.stop ? t.stop(0) : t.noteOff(0), t.disconnect(0), t.onended = null, e._tryCleanFailed || this._tryClearBuffer(t),
            this.bufferSource = null;
        }
      }, n._tryClearBuffer = function(t) {
        if (k.onMac) try {
          t.buffer = st._miniBuffer;
        } catch (t) {
          e._tryCleanFailed = !0;
        } else try {
          t.buffer = null;
        } catch (t) {
          e._tryCleanFailed = !0;
        }
      }, n.stop = function() {
        this._clearBufferSource(), this.audioBuffer = null, this.gain && this.gain.disconnect(),
          this.isStopped = !0, M.removeChannel(this), this.completeHandler = null, M.autoReleaseSound && i.timer.once(5e3, null, M.disposeSoundIfNotUsed, [this.url], !1);
      }, n.pause = function() {
        this.isStopped || (this._pauseTime = this.position), this._clearBufferSource(),
          this.gain && this.gain.disconnect(), this.isStopped = !0, M.removeChannel(this),
          M.autoReleaseSound && i.timer.once(5e3, null, M.disposeSoundIfNotUsed, [this.url], !1);
      }, n.resume = function() {
        this.startTime = this._pauseTime, this.play();
      }, r(0, n, "position", function() {
        return this.bufferSource ? (k.now() - this._startTime) / 1e3 + this.startTime : 0;
      }), r(0, n, "duration", function() {
        return this.audioBuffer ? this.audioBuffer.duration : 0;
      }), r(0, n, "volume", function() {
        return this._volume;
      }, function(t) {
        this.isStopped || (this._volume = t, this.gain.gain.setTargetAtTime ? this.gain.gain.setTargetAtTime(t, this.context.currentTime, .1) : this.gain.gain.value = t);
      }), e._tryCleanFailed = !1, e;
    }(),
    pt = function(t) {
      function e() {
        e.__super.call(this), this._w = 0, this._h = 0;
      }
      s(e, "laya.resource.Bitmap", ht);
      var i = e.prototype;
      return r(0, i, "width", function() {
        return this._w;
      }), r(0, i, "height", function() {
        return this._h;
      }), r(0, i, "source", function() {
        return this._source;
      }), e;
    }(),
    ft = function(t) {
      function e() {
        this.loop = !1, this.wrapMode = 0, this._index = 0, this._count = 0, this._isPlaying = !1,
          this._labels = null, this._isReverse = !1, this._frameRateChanged = !1, this._controlNode = null,
          this._actionName = null, e.__super.call(this), this._interval = o.animationInterval,
          this._setUpNoticeType(1);
      }
      s(e, "laya.display.AnimationPlayerBase", t);
      var i = e.prototype;
      return i.play = function(t, e, i, n) {
        void 0 === t && (t = 0), void 0 === e && (e = !0), void 0 === i && (i = ""), void 0 === n && (n = !0),
          this._isPlaying = !0, this.index = "string" == typeof t ? this._getFrameByLabel(t) : t,
          this.loop = e, this._actionName = i, this._isReverse = 1 == this.wrapMode, this.interval > 0 && this.timerLoop(this.interval, this, this._frameLoop, null, !0, !0);
      }, i._getFrameByLabel = function(t) {
        var e = 0;
        for (e = 0; e < this._count; e++)
          if (this._labels[e] && this._labels[e].indexOf(t) >= 0) return e;
        return 0;
      }, i._frameLoop = function() {
        if (this._isReverse) {
          if (this._index--, this._index < 0) {
            if (!this.loop) return this._index = 0, this.stop(), void this.event("complete");
            2 == this.wrapMode ? (this._index = this._count > 0 ? 1 : 0, this._isReverse = !1) : this._index = this._count - 1,
              this.event("complete");
          }
        } else if (this._index++, this._index >= this._count) {
          if (!this.loop) return this._index--, this.stop(), void this.event("complete");
          2 == this.wrapMode ? (this._index = this._count - 2 >= 0 ? this._count - 2 : 0,
            this._isReverse = !0) : this._index = 0, this.event("complete");
        }
        this.index = this._index;
      }, i._setControlNode = function(t) {
        this._controlNode && (this._controlNode.off("display", this, this._checkResumePlaying),
            this._controlNode.off("undisplay", this, this._checkResumePlaying)), this._controlNode = t,
          t && t != this && (t.on("display", this, this._checkResumePlaying), t.on("undisplay", this, this._checkResumePlaying));
      }, i._setDisplay = function(e) {
        t.prototype._setDisplay.call(this, e), this._checkResumePlaying();
      }, i._checkResumePlaying = function() {
        this._isPlaying && (this._controlNode.displayedInStage ? this.play(this._index, this.loop, this._actionName) : this.clearTimer(this, this._frameLoop));
      }, i.stop = function() {
        this._isPlaying = !1, this.clearTimer(this, this._frameLoop);
      }, i.addLabel = function(t, e) {
        this._labels || (this._labels = {}), this._labels[e] || (this._labels[e] = []),
          this._labels[e].push(t);
      }, i.removeLabel = function(t) {
        if (t) {
          if (this._labels)
            for (var e in this._labels) this._removeLabelFromLabelList(this._labels[e], t);
        } else this._labels = null;
      }, i._removeLabelFromLabelList = function(t, e) {
        if (t)
          for (var i = t.length - 1; i >= 0; i--) t[i] == e && t.splice(i, 1);
      }, i.gotoAndStop = function(t) {
        this.index = "string" == typeof t ? this._getFrameByLabel(t) : t, this.stop();
      }, i._displayToIndex = function(t) {}, i.clear = function() {
        this.stop(), this._labels = null;
      }, r(0, i, "interval", function() {
        return this._interval;
      }, function(t) {
        this._interval != t && (this._frameRateChanged = !0, this._interval = t, this._isPlaying && t > 0 && this.timerLoop(t, this, this._frameLoop, null, !0, !0));
      }), r(0, i, "isPlaying", function() {
        return this._isPlaying;
      }), r(0, i, "index", function() {
        return this._index;
      }, function(t) {
        if (this._index = t, this._displayToIndex(t), this._labels && this._labels[t])
          for (var e = this._labels[t], i = 0, n = e.length; i < n; i++) this.event("label", e[i]);
      }), r(0, i, "count", function() {
        return this._count;
      }), e.WRAP_POSITIVE = 0, e.WRAP_REVERSE = 1, e.WRAP_PINGPONG = 2, e;
    }(ct),
    gt = function(t) {
      function e() {
        this._clipPoint = null, this._currBitmapFont = null, this._text = null, this._isChanged = !1,
          this._textWidth = 0, this._textHeight = 0, this._lines = [], this._lineWidths = [],
          this._startX = NaN, this._startY = NaN, this._lastVisibleLineIndex = -1, this._words = null,
          this._charSize = {}, this.underline = !1, this._underlineColor = null, e.__super.call(this),
          this.overflow = e.VISIBLE, this._style = new tt(this), this._style.wordWrap = !1;
      }
      s(e, "laya.display.Text", t);
      var a = e.prototype;
      return a.destroy = function(e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._lines = null,
            this._words && (this._words.length = 0, this._words = null);
        }, a._getBoundPointsM = function(t) {
          void 0 === t && (t = !1);
          var e = E.TEMP;
          return e.setTo(0, 0, this.width, this.height), e._getBoundPoints();
        }, a.getGraphicBounds = function(t) {
          void 0 === t && (t = !1);
          var e = E.TEMP;
          return e.setTo(0, 0, this.width, this.height), e;
        }, a._getCSSStyle = function() {
          return this._style;
        }, a.lang = function(t, i, n, s, r, a, o, h, l, u, c) {
          if (t = e.langPacks && e.langPacks[t] ? e.langPacks[t] : t, arguments.length < 2) this._text = t;
          else {
            for (var _ = 0, d = arguments.length; _ < d; _++) t = t.replace("{" + _ + "}", arguments[_ + 1]);
            this._text = t;
          }
        }, a._isPassWordMode = function() {
          var t = this._style.password;
          return "prompt" in this && this.prompt == this._text && (t = !1), t;
        }, a._getPassWordTxt = function(t) {
          var e;
          e = "";
          for (var i = t.length; i > 0; i--) e += "●";
          return e;
        }, a.renderText = function(t, e) {
          var i = this.graphics;
          i.clear(!0);
          var n = (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + this.fontSize + "px " + (k.onIPhone ? laya.display.Text._fontFamilyMap[this.font] || this.font : this.font);
          k.context.font = n;
          var s = this.padding,
            r = s[3],
            a = "left",
            o = this._lines,
            h = this.leading + this._charSize.height,
            l = this._currBitmapFont;
          l && (h = this.leading + l.getMaxHeight());
          var u = s[0];
          if (!l && this._width > 0 && this._textWidth <= this._width && ("right" == this.align ? (a = "right",
              r = this._width - s[1]) : "center" == this.align && (a = "center", r = .5 * this._width + s[3] - s[1])),
            this._height > 0) {
            var c = this._textHeight > this._height ? "top" : this.valign;
            "middle" === c ? u = .5 * (this._height - e * h) + s[0] - s[2] : "bottom" === c && (u = this._height - e * h - s[2]);
          }
          var _ = this._style;
          if (l && l.autoScaleSize) var d = l.fontSize / this.fontSize;
          if (this._clipPoint)
            if (i.save(), l && l.autoScaleSize) {
              var p = 0,
                f = 0;
              p = this._width ? this._width - s[3] - s[1] : this._textWidth, f = this._height ? this._height - s[0] - s[2] : this._textHeight,
                p *= d, f *= d, i.clipRect(s[3], s[0], p, f);
            } else i.clipRect(s[3], s[0], this._width ? this._width - s[3] - s[1] : this._textWidth, this._height ? this._height - s[0] - s[2] : this._textHeight);
          var g = _.password;
          "prompt" in this && this.prompt == this._text && (g = !1);
          for (var m = 0, y = 0, v = Math.min(this._lines.length, e + t) || 1, x = t; x < v; x++) {
            var b, w = o[x];
            if (g) {
              var I = w.length;
              w = "";
              for (var S = I; S > 0; S--) w += "●";
            }
            if (m = r - (this._clipPoint ? this._clipPoint.x : 0), y = u + h * x - (this._clipPoint ? this._clipPoint.y : 0),
              this.underline && this.drawUnderline(a, m, y, x), l) {
              var C = this.width;
              l.autoScaleSize && (C = this.width * d), l.drawText(w, this, m, y, this.align, C);
            } else D.isWebGL ? (this._words || (this._words = []), (b = this._words.length > x - t ? this._words[x - t] : new Z()).setText(w)) : b = w,
              _.stroke ? i.fillBorderText(b, m, y, n, this.color, _.strokeColor, _.stroke, a) : i.fillText(b, m, y, n, this.color, a);
          }
          if (l && l.autoScaleSize) {
            var T = 1 / d;
            this.scale(T, T);
          }
          this._clipPoint && i.restore(), this._startX = r, this._startY = u;
        }, a.drawUnderline = function(t, e, i, n) {
          var s = this._lineWidths[n];
          switch (t) {
            case "center":
              e -= s / 2;
              break;

            case "right":
              e -= s;
          }
          i += this._charSize.height, this._graphics.drawLine(e, i, e + s, i, this.underlineColor || this.color, 1);
        }, a.typeset = function() {
          if (this._isChanged = !1, !this._text) return this._clipPoint = null, this._textWidth = this._textHeight = 0,
            void this.graphics.clear(!0);
          k.context.font = this._getCSSStyle().font, this._lines.length = 0, this._lineWidths.length = 0,
            this._isPassWordMode() ? this.parseLines(this._getPassWordTxt(this._text)) : this.parseLines(this._text),
            this.evalTextSize(), this.checkEnabledViewportOrNot() ? this._clipPoint || (this._clipPoint = new T(0, 0)) : this._clipPoint = null;
          var t = this._lines.length;
          if (this.overflow != e.VISIBLE) {
            var i = this.overflow == e.HIDDEN ? Math.floor : Math.ceil;
            t = Math.min(t, i((this.height - this.padding[0] - this.padding[2]) / (this.leading + this._charSize.height)));
          }
          var n = this.scrollY / (this._charSize.height + this.leading) | 0;
          this.renderText(n, t), this.repaint();
        }, a.evalTextSize = function() {
          var t = NaN,
            e = NaN;
          t = Math.max.apply(this, this._lineWidths), e = this._currBitmapFont ? this._lines.length * (this._currBitmapFont.getMaxHeight() + this.leading) + this.padding[0] + this.padding[2] : this._lines.length * (this._charSize.height + this.leading) + this.padding[0] + this.padding[2],
            t == this._textWidth && e == this._textHeight || (this._textWidth = t, this._textHeight = e,
              this._width && this._height || this.conchModel && this.conchModel.size(this._width || this._textWidth, this._height || this._textHeight));
        }, a.checkEnabledViewportOrNot = function() {
          return this.overflow == e.SCROLL && (this._width > 0 && this._textWidth > this._width || this._height > 0 && this._textHeight > this._height);
        }, a.changeText = function(t) {
          this._text !== t && (this.lang(t + ""), this._graphics && this._graphics.replaceText(this._text) || this.typeset());
        }, a.parseLines = function(t) {
          var i = this.wordWrap || this.overflow == e.HIDDEN;
          if (i) var n = this.getWordWrapWidth();
          if (this._currBitmapFont) this._charSize.width = this._currBitmapFont.getMaxWidth(),
            this._charSize.height = this._currBitmapFont.getMaxHeight();
          else {
            var s = k.context.measureText(e._testWord);
            this._charSize.width = s && s.width || this.fontSize, this._charSize.height = s && s.height || this.fontSize;
          }
          for (var r = t.replace(/\r\n/g, "\n").split("\n"), a = 0, o = r.length; a < o; a++) {
            var h = r[a];
            i ? this.parseLine(h, n) : (this._lineWidths.push(this.getTextWidth(h)), this._lines.push(h));
          }
        }, a.parseLine = function(t, i) {
          k.context;
          var n, s = this._lines,
            r = 0,
            a = NaN,
            o = NaN,
            h = 0;
          if ((a = this.getTextWidth(t)) <= i) return s.push(t), void this._lineWidths.push(a);
          a = this._charSize.width, 0 == (r = Math.floor(i / a)) && (r = 1), o = a = this.getTextWidth(t.substring(0, r));
          for (var l = r, u = t.length; l < u; l++)
            if (a = this.getTextWidth(t.charAt(l)),
              (o += a) > i)
              if (this.wordWrap) {
                var c = t.substring(h, l);
                if (c.charCodeAt(c.length - 1) < 255 ? (n = /(?:\w|-)+$/.exec(c)) && (l = n.index + h,
                    0 == n.index ? l += c.length : c = t.substring(h, l)) : e.RightToLeft && (n = /([\u0600-\u06FF])+$/.exec(c)) && (l = n.index + h,
                    0 == n.index ? l += c.length : c = t.substring(h, l)), s.push(c), this._lineWidths.push(o - a),
                  h = l, !(l + r < u)) {
                  s.push(t.substring(h, u)), this._lineWidths.push(this.getTextWidth(s[s.length - 1])),
                    h = -1;
                  break;
                }
                l += r, o = a = this.getTextWidth(t.substring(h, l)), l--;
              } else if (this.overflow == e.HIDDEN) return s.push(t.substring(0, l)), void this._lineWidths.push(this.getTextWidth(s[s.length - 1]));
          this.wordWrap && -1 != h && (s.push(t.substring(h, u)), this._lineWidths.push(this.getTextWidth(s[s.length - 1])));
        }, a.getTextWidth = function(t) {
          return this._currBitmapFont ? this._currBitmapFont.getTextWidth(t) : k.context.measureText(t).width;
        }, a.getWordWrapWidth = function() {
          var t = this.padding,
            e = NaN;
          return (e = this._currBitmapFont && this._currBitmapFont.autoScaleSize ? this._width * (this._currBitmapFont.fontSize / this.fontSize) : this._width) <= 0 && (e = this.wordWrap ? 100 : k.width),
            e <= 0 && (e = 100), e - t[3] - t[1];
        }, a.getCharPoint = function(t, e) {
          this._isChanged && i.timer.runCallLater(this, this.typeset);
          for (var n = 0, s = this._lines, r = 0, a = 0, o = s.length; a < o; a++) {
            if (n += s[a].length, t < n) {
              var h = a;
              break;
            }
            r = n;
          }
          var l = (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + this.fontSize + "px " + this.font;
          k.context.font = l;
          var u = this.getTextWidth(this._text.substring(r, t));
          return (e || new T()).setTo(this._startX + u - (this._clipPoint ? this._clipPoint.x : 0), this._startY + h * (this._charSize.height + this.leading) - (this._clipPoint ? this._clipPoint.y : 0));
        }, r(0, a, "width", function() {
          return this._width ? this._width : this.textWidth + this.padding[1] + this.padding[3];
        }, function(t) {
          t != this._width && (i.superSet(ct, this, "width", t), this.isChanged = !0);
        }), r(0, a, "textWidth", function() {
          return this._isChanged && i.timer.runCallLater(this, this.typeset), this._textWidth;
        }), r(0, a, "height", function() {
          return this._height ? this._height : this.textHeight + this.padding[0] + this.padding[2];
        }, function(t) {
          t != this._height && (i.superSet(ct, this, "height", t), this.isChanged = !0);
        }), r(0, a, "textHeight", function() {
          return this._isChanged && i.timer.runCallLater(this, this.typeset), this._textHeight;
        }), r(0, a, "padding", function() {
          return this._getCSSStyle().padding;
        }, function(t) {
          this._getCSSStyle().padding = t, this.isChanged = !0;
        }), r(0, a, "bold", function() {
          return this._getCSSStyle().bold;
        }, function(t) {
          this._getCSSStyle().bold = t, this.isChanged = !0;
        }), r(0, a, "text", function() {
          return this._text || "";
        }, function(t) {
          this._text !== t && (this.lang(t + ""), this.isChanged = !0, this.event("change"));
        }), r(0, a, "color", function() {
          return this._getCSSStyle().color;
        }, function(t) {
          this._getCSSStyle().color != t && (this._getCSSStyle().color = t, !this._isChanged && this._graphics ? this._graphics.replaceTextColor(this.color) : this.isChanged = !0);
        }), r(0, a, "font", function() {
          return this._getCSSStyle().fontFamily;
        }, function(t) {
          this._currBitmapFont && (this._currBitmapFont = null, this.scale(1, 1)), e._bitmapFonts && e._bitmapFonts[t] && (this._currBitmapFont = e._bitmapFonts[t]),
            this._getCSSStyle().fontFamily = t, this.isChanged = !0;
        }), r(0, a, "fontSize", function() {
          return this._getCSSStyle().fontSize;
        }, function(t) {
          this._getCSSStyle().fontSize = t, this.isChanged = !0;
        }), r(0, a, "italic", function() {
          return this._getCSSStyle().italic;
        }, function(t) {
          this._getCSSStyle().italic = t, this.isChanged = !0;
        }), r(0, a, "align", function() {
          return this._getCSSStyle().align;
        }, function(t) {
          this._getCSSStyle().align = t, this.isChanged = !0;
        }), r(0, a, "valign", function() {
          return this._getCSSStyle().valign;
        }, function(t) {
          this._getCSSStyle().valign = t, this.isChanged = !0;
        }), r(0, a, "wordWrap", function() {
          return this._getCSSStyle().wordWrap;
        }, function(t) {
          this._getCSSStyle().wordWrap = t, this.isChanged = !0;
        }), r(0, a, "leading", function() {
          return this._getCSSStyle().leading;
        }, function(t) {
          this._getCSSStyle().leading = t, this.isChanged = !0;
        }), r(0, a, "bgColor", function() {
          return this._getCSSStyle().backgroundColor;
        }, function(t) {
          this._getCSSStyle().backgroundColor = t, this.isChanged = !0;
        }), r(0, a, "borderColor", function() {
          return this._getCSSStyle().borderColor;
        }, function(t) {
          this._getCSSStyle().borderColor = t, this.isChanged = !0;
        }), r(0, a, "stroke", function() {
          return this._getCSSStyle().stroke;
        }, function(t) {
          this._getCSSStyle().stroke = t, this.isChanged = !0;
        }), r(0, a, "strokeColor", function() {
          return this._getCSSStyle().strokeColor;
        }, function(t) {
          this._getCSSStyle().strokeColor = t, this.isChanged = !0;
        }), r(0, a, "isChanged", null, function(t) {
          this._isChanged !== t && (this._isChanged = t, t && i.timer.callLater(this, this.typeset));
        }), r(0, a, "scrollX", function() {
          return this._clipPoint ? this._clipPoint.x : 0;
        }, function(t) {
          if (!(this.overflow != e.SCROLL || this.textWidth < this._width) && this._clipPoint) {
            t = t < this.padding[3] ? this.padding[3] : t;
            var i = this._textWidth - this._width;
            t = t > i ? i : t;
            var n = this._height / (this._charSize.height + this.leading) | 1;
            this._clipPoint.x = t, this.renderText(this._lastVisibleLineIndex, n);
          }
        }), r(0, a, "scrollY", function() {
          return this._clipPoint ? this._clipPoint.y : 0;
        }, function(t) {
          if (!(this.overflow != e.SCROLL || this.textHeight < this._height) && this._clipPoint) {
            t = t < this.padding[0] ? this.padding[0] : t;
            var i = this._textHeight - this._height,
              n = (t = t > i ? i : t) / (this._charSize.height + this.leading) | 0;
            this._lastVisibleLineIndex = n;
            var s = 1 + (this._height / (this._charSize.height + this.leading) | 0);
            this._clipPoint.y = t, this.renderText(n, s);
          }
        }), r(0, a, "maxScrollX", function() {
          return this.textWidth < this._width ? 0 : this._textWidth - this._width;
        }), r(0, a, "maxScrollY", function() {
          return this.textHeight < this._height ? 0 : this._textHeight - this._height;
        }), r(0, a, "lines", function() {
          return this._isChanged && this.typeset(), this._lines;
        }), r(0, a, "underlineColor", function() {
          return this._underlineColor;
        }, function(t) {
          this._underlineColor = t, this._isChanged = !0, this.typeset();
        }), e.registerBitmapFont = function(t, i) {
          e._bitmapFonts || (e._bitmapFonts = {}), e._bitmapFonts[t] = i;
        }, e.unregisterBitmapFont = function(t, i) {
          if (void 0 === i && (i = !0), e._bitmapFonts && e._bitmapFonts[t]) {
            var n = e._bitmapFonts[t];
            i && n.destroy(), delete e._bitmapFonts[t];
          }
        }, e.setTextRightToLeft = function() {
          var t;
          (t = k.canvas.source.style).display = "none", t.position = "absolute", t.direction = "rtl",
            D._mainCanvas.source.style.direction = "rtl", laya.display.Text.RightToLeft = !0,
            k.document.body.appendChild(k.canvas.source);
        }, e.supportFont = function(t) {
          k.context.font = "10px sans-serif";
          var e = k.context.measureText("abcji").width;
          k.context.font = "10px " + t;
          var i = k.context.measureText("abcji").width;
          return console.log(e, i), e !== i;
        }, e._testWord = "游", e.langPacks = null, e.VISIBLE = "visible", e.SCROLL = "scroll",
        e.HIDDEN = "hidden", e.CharacterCache = !0, e.RightToLeft = !1, e._bitmapFonts = null,
        n(e, ["_fontFamilyMap", function() {
          return this._fontFamilyMap = {
            "报隶": "报隶-简",
            "黑体": "黑体-简",
            "楷体": "楷体-简",
            "兰亭黑": "兰亭黑-简",
            "隶变": "隶变-简",
            "凌慧体": "凌慧体-简",
            "翩翩体": "翩翩体-简",
            "苹方": "苹方-简",
            "手札体": "手札体-简",
            "宋体": "宋体-简",
            "娃娃体": "娃娃体-简",
            "魏碑": "魏碑-简",
            "行楷": "行楷-简",
            "雅痞": "雅痞-简",
            "圆体": "圆体-简"
          };
        }]), e;
    }(ct),
    mt = function(t) {
      function e() {
        this.focus = null, this.designWidth = 0, this.designHeight = 0, this.canvasRotation = !1,
          this.canvasDegree = 0, this.renderingEnabled = !0, this.screenAdaptationEnabled = !0,
          this._screenMode = "none", this._scaleMode = "noscale", this._alignV = "top", this._alignH = "left",
          this._bgColor = "black", this._mouseMoveTime = 0, this._renderCount = 0, this._frameStartTime = NaN,
          this._isFocused = !1, this._isVisibility = !1, this._scenes = null, this._frameRate = "fast",
          e.__super.call(this), this.offset = new T(), this._canvasTransform = new C(), this._previousOrientation = k.window.orientation;
        var t = this;
        this.transform = C.create(), this._scenes = [], this.mouseEnabled = !0, this.hitTestPrior = !0,
          this.autoSize = !1, this._displayedInStage = !0, this._isFocused = !0, this._isVisibility = !0;
        var i = k.window,
          n = this;
        i.addEventListener("focus", function() {
          t._isFocused = !0, n.event("focus"), n.event("focuschange");
        }), i.addEventListener("blur", function() {
          t._isFocused = !1, n.event("blur"), n.event("focuschange"), n._isInputting() && (bt.inputElement.target.focus = !1);
        });
        var s = "visibilityState",
          r = "visibilitychange",
          a = i.document;
        void 0 !== a.hidden ? (r = "visibilitychange", s = "visibilityState") : void 0 !== a.mozHidden ? (r = "mozvisibilitychange",
          s = "mozVisibilityState") : void 0 !== a.msHidden ? (r = "msvisibilitychange", s = "msVisibilityState") : void 0 !== a.webkitHidden && (r = "webkitvisibilitychange",
          s = "webkitVisibilityState"), i.document.addEventListener(r, function() {
          "hidden" == k.document[s] ? n._setStageVisible(!1) : n._setStageVisible(!0);
        }), i.document.addEventListener("qbrowserVisibilityChange", function(t) {
          n._setStageVisible(!t.hidden);
        }), i.addEventListener("resize", function() {
          var e = k.window.orientation;
          null != e && e != t._previousOrientation && n._isInputting() && (bt.inputElement.target.focus = !1),
            t._previousOrientation = e, n._isInputting() || n._resetCanvas();
        }), i.addEventListener("orientationchange", function(t) {
          n._resetCanvas();
        }), this.on("mousemove", this, this._onmouseMove), k.onMobile && this.on("mousedown", this, this._onmouseMove);
      }
      s(e, "laya.display.Stage", t);
      var o = e.prototype;
      return o._setStageVisible = function(t) {
          this._isVisibility != t && (this._isVisibility = t, this._isVisibility || this._isInputting() && (bt.inputElement.target.focus = !1),
            this.event("visibilitychange"));
        }, o._isInputting = function() {
          return k.onMobile && bt.isInputting;
        }, o._changeCanvasSize = function() {
          this.setScreenSize(k.clientWidth * k.pixelRatio, k.clientHeight * k.pixelRatio);
        }, o._resetCanvas = function() {
          if (this.screenAdaptationEnabled) {
            var t = D._mainCanvas;
            t.source.style;
            t.size(1, 1), i.timer.once(100, this, this._changeCanvasSize);
          }
        }, o.setScreenSize = function(t, e) {
          var i = !1;
          if ("none" !== this._screenMode) {
            if (i = (t / e < 1 ? "vertical" : "horizontal") !== this._screenMode) {
              var n = e;
              e = t, t = n;
            }
          }
          this.canvasRotation = i;
          var s = D._mainCanvas,
            r = s.source.style,
            o = this._canvasTransform.identity(),
            h = this._scaleMode,
            l = t / this.designWidth,
            u = e / this.designHeight,
            c = this.designWidth,
            _ = this.designHeight,
            d = t,
            p = e,
            f = k.pixelRatio;
          switch (this._width = this.designWidth, this._height = this.designHeight, h) {
            case "noscale":
              l = u = 1, d = this.designWidth, p = this.designHeight;
              break;

            case "showall":
              l = u = Math.min(l, u), c = d = Math.round(this.designWidth * l), _ = p = Math.round(this.designHeight * u);
              break;

            case "noborder":
              l = u = Math.max(l, u), d = Math.round(this.designWidth * l), p = Math.round(this.designHeight * u);
              break;

            case "full":
              l = u = 1, this._width = c = t, this._height = _ = e;
              break;

            case "fixedwidth":
              u = l, this._height = _ = Math.round(e / l);
              break;

            case "fixedheight":
              l = u, this._width = c = Math.round(t / u);
              break;

            case "fixedauto":
              t / e < this.designWidth / this.designHeight ? (u = l, this._height = _ = Math.round(e / l)) : (l = u,
                this._width = c = Math.round(t / u));
          }
          this.conchModel && this.conchModel.size(this._width, this._height), l *= this.scaleX,
            u *= this.scaleY, 1 === l && 1 === u ? this.transform.identity() : (this.transform.a = this._formatData(l / (d / c)),
              this.transform.d = this._formatData(u / (p / _)), this.conchModel && this.conchModel.scale(this.transform.a, this.transform.d)),
            s.size(c, _), a.changeWebGLSize(c, _), o.scale(d / c / f, p / _ / f), "left" === this._alignH ? this.offset.x = 0 : "right" === this._alignH ? this.offset.x = (t - d) / f : this.offset.x = .5 * (t - d) / f,
            "top" === this._alignV ? this.offset.y = 0 : "bottom" === this._alignV ? this.offset.y = (e - p) / f : this.offset.y = .5 * (e - p) / f,
            this.offset.x = Math.round(this.offset.x), this.offset.y = Math.round(this.offset.y),
            o.translate(this.offset.x, this.offset.y), this.canvasDegree = 0, i && ("horizontal" === this._screenMode ? (o.rotate(Math.PI / 2),
              o.translate(e / f, 0), this.canvasDegree = 90) : (o.rotate(-Math.PI / 2), o.translate(0, t / f),
              this.canvasDegree = -90)), o.a = this._formatData(o.a), o.d = this._formatData(o.d),
            o.tx = this._formatData(o.tx), o.ty = this._formatData(o.ty), r.transformOrigin = r.webkitTransformOrigin = r.msTransformOrigin = r.mozTransformOrigin = r.oTransformOrigin = "0px 0px 0px",
            r.transform = r.webkitTransform = r.msTransform = r.mozTransform = r.oTransform = "matrix(" + o.toString() + ")",
            o.translate(parseInt(r.left) || 0, parseInt(r.top) || 0), this.visible = !0, this._repaint = 1,
            this.event("resize");
        }, o._formatData = function(t) {
          return Math.abs(t) < 1e-6 ? 0 : Math.abs(1 - t) < .001 ? t > 0 ? 1 : -1 : t;
        }, o.getMousePoint = function() {
          return T.TEMP.setTo(this.mouseX, this.mouseY);
        }, o.repaint = function() {
          this._repaint = 1;
        }, o.parentRepaint = function() {}, o._loop = function() {
          return this.render(D.context, 0, 0), !0;
        }, o._onmouseMove = function(t) {
          this._mouseMoveTime = k.now();
        }, o.getTimeFromFrameStart = function() {
          return k.now() - this._frameStartTime;
        }, o.render = function(e, n, s) {
          if ("sleep" === this._frameRate && !D.isConchApp) {
            var r = k.now();
            if (!(r - this._frameStartTime >= 1e3)) return;
            this._frameStartTime = r;
          }
          if (this._renderCount++, D.isFlash && this.repaint(), this._style.visible) {
            this._frameStartTime = k.now();
            var o = "slow" !== ("mouse" === this._frameRate ? this._frameStartTime - this._mouseMoveTime < 2e3 ? "fast" : "slow" : this._frameRate),
              h = this._renderCount % 2 == 0;
            if (X.renderSlow = !o, o || h || D.isConchApp) {
              X.loopCount++, y.instance.runEvent(), i.timer._update(), a.update3DLoop();
              var l, u = 0,
                c = 0;
              if (D.isConchNode)
                for (u = 0, c = this._scenes.length; u < c; u++)(l = this._scenes[u]) && l._updateSceneConch();
              else
                for (u = 0,
                  c = this._scenes.length; u < c; u++)(l = this._scenes[u]) && l._updateScene();
              if (D.isConchNode) {
                var _ = ct.CustomList;
                for (u = 0, c = _.length; u < c; u++) {
                  var d = _[u];
                  d.customRender(d.customContext, 0, 0);
                }
                return;
              }
            }
            D.isConchNode || !this.renderingEnabled || !o && h || (D.isWebGL ? (e.clear(), t.prototype.render.call(this, e, n, s),
              X._show && X._sp && X._sp.render(e, n, s), a.clear(this._bgColor), a.beginFlush(),
              e.flush(), a.endFinish(), q.instance && q.getInstance().endDispose()) : (a.clear(this._bgColor),
              t.prototype.render.call(this, e, n, s), X._show && X._sp && X._sp.render(e, n, s)));
          } else this._renderCount % 5 == 0 && (X.loopCount++, y.instance.runEvent(), i.timer._update());
        }, o._requestFullscreen = function() {
          var t = k.document.documentElement;
          t.requestFullscreen ? t.requestFullscreen() : t.mozRequestFullScreen ? t.mozRequestFullScreen() : t.webkitRequestFullscreen ? t.webkitRequestFullscreen() : t.msRequestFullscreen && t.msRequestFullscreen();
        }, o._fullScreenChanged = function() {
          i.stage.event("fullscreenchange");
        }, o.exitFullscreen = function() {
          var t = k.document;
          t.exitFullscreen ? t.exitFullscreen() : t.mozCancelFullScreen ? t.mozCancelFullScreen() : t.webkitExitFullscreen && t.webkitExitFullscreen();
        }, r(0, o, "clientScaleX", function() {
          return this._transform ? this._transform.getScaleX() : 1;
        }), r(0, o, "desginHeight", function() {
          return console.debug("desginHeight已经弃用，请使用designHeight代替"), this.designHeight;
        }), r(0, o, "frameRate", function() {
          return this._frameRate;
        }, function(t) {
          if (this._frameRate = t, D.isConchApp) switch (this._frameRate) {
            case "slow":
              k.window.conch && k.window.conchConfig.setSlowFrame && k.window.conchConfig.setSlowFrame(!0);
              break;

            case "fast":
              k.window.conch && k.window.conchConfig.setSlowFrame && k.window.conchConfig.setSlowFrame(!1);
              break;

            case "mouse":
              k.window.conch && k.window.conchConfig.setMouseFrame && k.window.conchConfig.setMouseFrame(2e3);
              break;

            case "sleep":
              k.window.conch && k.window.conchConfig.setLimitFPS && k.window.conchConfig.setLimitFPS(1);
              break;

            default:
              throw new Error("Stage:frameRate invalid.");
          }
        }), r(0, o, "clientScaleY", function() {
          return this._transform ? this._transform.getScaleY() : 1;
        }), r(0, o, "width", t.prototype._$get_width, function(t) {
          this.designWidth = t, i.superSet(ct, this, "width", t), i.timer.callLater(this, this._changeCanvasSize);
        }), r(0, o, "alignH", function() {
          return this._alignH;
        }, function(t) {
          this._alignH = t, i.timer.callLater(this, this._changeCanvasSize);
        }), r(0, o, "isFocused", function() {
          return this._isFocused;
        }), r(0, o, "height", t.prototype._$get_height, function(t) {
          this.designHeight = t, i.superSet(ct, this, "height", t), i.timer.callLater(this, this._changeCanvasSize);
        }), r(0, o, "transform", function() {
          return this._tfChanged && this._adjustTransform(), this._transform = this._transform || C.create();
        }, t.prototype._$set_transform), r(0, o, "isVisibility", function() {
          return this._isVisibility;
        }), r(0, o, "desginWidth", function() {
          return console.debug("desginWidth已经弃用，请使用designWidth代替"), this.designWidth;
        }), r(0, o, "scaleMode", function() {
          return this._scaleMode;
        }, function(t) {
          this._scaleMode = t, i.timer.callLater(this, this._changeCanvasSize);
        }), r(0, o, "alignV", function() {
          return this._alignV;
        }, function(t) {
          this._alignV = t, i.timer.callLater(this, this._changeCanvasSize);
        }), r(0, o, "bgColor", function() {
          return this._bgColor;
        }, function(t) {
          this._bgColor = t, this.conchModel && this.conchModel.bgColor(t), D.isWebGL && (t ? e._wgColor = V.create(t)._color : k.onMiniGame || (e._wgColor = null)),
            k.onLimixiu ? e._wgColor = V.create(t)._color : D.canvas.style.background = t || "none";
        }), r(0, o, "mouseX", function() {
          return Math.round(y.instance.mouseX / this.clientScaleX);
        }), r(0, o, "mouseY", function() {
          return Math.round(y.instance.mouseY / this.clientScaleY);
        }), r(0, o, "screenMode", function() {
          return this._screenMode;
        }, function(t) {
          this._screenMode = t;
        }), r(0, o, "visible", t.prototype._$get_visible, function(t) {
          if (this.visible !== t) {
            i.superSet(ct, this, "visible", t);
            D._mainCanvas.source.style.visibility = t ? "visible" : "hidden";
          }
        }), r(0, o, "fullScreenEnabled", null, function(t) {
          var e = k.document,
            i = D.canvas;
          t ? (i.addEventListener("mousedown", this._requestFullscreen), i.addEventListener("touchstart", this._requestFullscreen),
            e.addEventListener("fullscreenchange", this._fullScreenChanged), e.addEventListener("mozfullscreenchange", this._fullScreenChanged),
            e.addEventListener("webkitfullscreenchange", this._fullScreenChanged), e.addEventListener("msfullscreenchange", this._fullScreenChanged)) : (i.removeEventListener("mousedown", this._requestFullscreen),
            i.removeEventListener("touchstart", this._requestFullscreen), e.removeEventListener("fullscreenchange", this._fullScreenChanged),
            e.removeEventListener("mozfullscreenchange", this._fullScreenChanged), e.removeEventListener("webkitfullscreenchange", this._fullScreenChanged),
            e.removeEventListener("msfullscreenchange", this._fullScreenChanged));
        }), e.SCALE_NOSCALE = "noscale", e.SCALE_EXACTFIT = "exactfit", e.SCALE_SHOWALL = "showall",
        e.SCALE_NOBORDER = "noborder", e.SCALE_FULL = "full", e.SCALE_FIXED_WIDTH = "fixedwidth",
        e.SCALE_FIXED_HEIGHT = "fixedheight", e.SCALE_FIXED_AUTO = "fixedauto", e.ALIGN_LEFT = "left",
        e.ALIGN_RIGHT = "right", e.ALIGN_CENTER = "center", e.ALIGN_TOP = "top", e.ALIGN_MIDDLE = "middle",
        e.ALIGN_BOTTOM = "bottom", e.SCREEN_NONE = "none", e.SCREEN_HORIZONTAL = "horizontal",
        e.SCREEN_VERTICAL = "vertical", e.FRAME_FAST = "fast", e.FRAME_SLOW = "slow", e.FRAME_MOUSE = "mouse",
        e.FRAME_SLEEP = "sleep", e.FRAME_MOUSE_THREDHOLD = 2e3, n(e, ["_wgColor", function() {
          return this._wgColor = [0, 0, 0, 1];
        }]), e;
    }(ct),
    yt = (function(t) {
      function e() {
        this.url = null, this._channel = null, this._tar = null, this._playEvents = null,
          this._stopEvents = null, e.__super.call(this), this.visible = !1, this.on("added", this, this._onParentChange),
          this.on("removed", this, this._onParentChange);
      }
      s(e, "laya.media.SoundNode", ct);
      var i = e.prototype;
      i._onParentChange = function() {
        this.target = this.parent;
      }, i.play = function(t, e) {
        void 0 === t && (t = 1), isNaN(t) && (t = 1), this.url && (this.stop(), this._channel = M.playSound(this.url, t, e));
      }, i.stop = function() {
        this._channel && !this._channel.isStopped && this._channel.stop(), this._channel = null;
      }, i._setPlayAction = function(t, e, i, n) {
        void 0 === n && (n = !0), this[i] && t && (n ? t.on(e, this, this[i]) : t.off(e, this, this[i]));
      }, i._setPlayActions = function(t, e, i, n) {
        if (void 0 === n && (n = !0), t && e) {
          var s = e.split(","),
            r = 0,
            a = 0;
          for (a = s.length, r = 0; r < a; r++) this._setPlayAction(t, s[r], i, n);
        }
      }, r(0, i, "playEvent", null, function(t) {
        this._playEvents = t, t && this._tar && this._setPlayActions(this._tar, t, "play");
      }), r(0, i, "target", null, function(t) {
        this._tar && (this._setPlayActions(this._tar, this._playEvents, "play", !1), this._setPlayActions(this._tar, this._stopEvents, "stop", !1)),
          this._tar = t, this._tar && (this._setPlayActions(this._tar, this._playEvents, "play", !0),
            this._setPlayActions(this._tar, this._stopEvents, "stop", !0));
      }), r(0, i, "stopEvent", null, function(t) {
        this._stopEvents = t, t && this._tar && this._setPlayActions(this._tar, t, "stop");
      });
    }(), function(t) {
      function e() {
        this._src = null, this._onload = null, this._onerror = null, e.__super.call(this);
      }
      s(e, "laya.resource.FileBitmap", pt);
      var i = e.prototype;
      return r(0, i, "src", function() {
          return this._src;
        }, function(t) {
          this._src = t;
        }), r(0, i, "onload", null, function(t) {}), r(0, i, "onerror", null, function(t) {}),
        e;
    }()),
    vt = function(t) {
      function e(t, i) {
        this._is2D = !1, e.__super.call(this);
        var n = this;
        if (this._source = this, "2D" === t || "AUTO" === t && !D.isWebGL) {
          this._is2D = !0, this._source = i || k.createElement("canvas"), this._w = this._source.width,
            this._h = this._source.height;
          var s = this;
          s.getContext = function(t, e) {
            if (n._ctx) return n._ctx;
            var i = n._ctx = n._source.getContext(t, e);
            return i && (i._canvas = s, D.isFlash || k.onLimixiu || (i.size = function(t, e) {})),
              i;
          };
        }
        this.lock = !0;
      }
      s(e, "laya.resource.HTMLCanvas", pt);
      var i = e.prototype;
      return i.clear = function() {
          this._ctx && this._ctx.clear();
        }, i.destroy = function() {
          this._ctx && this._ctx.destroy(), this._ctx = null, laya.resource.Resource.prototype.destroy.call(this);
        }, i.release = function() {}, i._setContext = function(t) {
          this._ctx = t;
        }, i.getContext = function(t, i) {
          return this._ctx ? this._ctx : this._ctx = e._createContext(this);
        }, i.getMemSize = function() {
          return 0;
        }, i.size = function(t, e) {
          (this._w != t || this._h != e || this._source && (this._source.width != t || this._source.height != e)) && (this._w = t,
            this._h = e, this.memorySize = this._w * this._h * 4, this._ctx && this._ctx.size(t, e),
            this._source && (this._source.height = e, this._source.width = t));
        }, i.getCanvas = function() {
          return this._source;
        }, i.toBase64 = function(t, e, i) {
          if (this._source)
            if (D.isConchApp && this._source.toBase64) this._source.toBase64(t, e, i);
            else {
              var n = this._source.toDataURL(t, e);
              i.call(this, n);
            }
        }, r(0, i, "context", function() {
          return this._ctx;
        }), r(0, i, "asBitmap", null, function(t) {}), e.create = function(t, i) {
          return new e(t, i);
        }, e.TYPE2D = "2D", e.TYPE3D = "3D", e.TYPEAUTO = "AUTO", e._createContext = null,
        e;
    }(),
    xt = (function(t) {
      function e(t, i, n, s, r, a, o, h) {
        throw e.__super.call(this), new Error("不允许new！");
      }
      s(e, "laya.resource.HTMLSubImage", pt), e.create = function(t, i, n, s, r, a, o, h) {
        return void 0 === h && (h = !1), new e(t, i, n, s, r, a, o, h);
      };
    }(), function(t) {
      function e() {
        this._frames = null, this._url = null, e.__super.call(this), this._setControlNode(this);
      }
      s(e, "laya.display.Animation", t);
      var n = e.prototype;
      n.destroy = function(t) {
        void 0 === t && (t = !0), this.stop(), laya.display.Sprite.prototype.destroy.call(this, t),
          this._frames = null, this._labels = null;
      }, n.play = function(t, e, i, n) {
        void 0 === t && (t = 0), void 0 === e && (e = !0), void 0 === i && (i = ""), void 0 === n && (n = !0),
          i && this._setFramesFromCache(i, n), this._isPlaying = !0, this.index = "string" == typeof t ? this._getFrameByLabel(t) : t,
          this.loop = e, this._actionName = i, this._isReverse = 1 == this.wrapMode, this._frames && this.interval > 0 && this.timerLoop(this.interval, this, this._frameLoop, null, !0, !0);
      }, n._setFramesFromCache = function(t, i) {
        if (void 0 === i && (i = !1), this._url && (t = this._url + "#" + t), t && e.framesMap[t]) {
          var n;
          return (n = e.framesMap[t]) instanceof Array ? (this._frames = e.framesMap[t], this._count = this._frames.length) : (n.nodeRoot && (e.framesMap[t] = this._parseGraphicAnimationByData(n),
              n = e.framesMap[t]), this._frames = n.frames, this._count = this._frames.length,
            this._frameRateChanged || (this._interval = n.interval), this._labels = this._copyLabels(n.labels)), !0;
        }
        return i && console.log("ani not found:", t), !1;
      }, n._copyLabels = function(t) {
        if (!t) return null;
        var e;
        e = {};
        var i;
        for (i in t) e[i] = $.copyArray([], t[i]);
        return e;
      }, n._frameLoop = function() {
        this._style.visible && this._style.alpha > .01 && t.prototype._frameLoop.call(this);
      }, n._displayToIndex = function(t) {
        this._frames && (this.graphics = this._frames[t]);
      }, n.clear = function() {
        this.stop(), this.graphics = null, this._frames = null, this._labels = null;
      }, n.loadImages = function(t, i) {
        return void 0 === i && (i = ""), this._url = "", this._setFramesFromCache(i) || (this.frames = e.framesMap[i] ? e.framesMap[i] : e.createFrames(t, i)),
          this;
      }, n.loadAtlas = function(t, n, s) {
        function r(i) {
          t === i && (a.frames = e.framesMap[s] ? e.framesMap[s] : e.createFrames(t, s), n && n.run());
        }
        void 0 === s && (s = ""), this._url = "";
        var a = this;
        return a._setFramesFromCache(s) || (at.getAtlas(t) ? r(t) : i.loader.load(t, l.create(null, r, [t]), null, "atlas")),
          this;
      }, n.loadAnimation = function(t, e, n) {
        this._url = t;
        return this._actionName || (this._actionName = ""), this._setFramesFromCache("") ? (this._setFramesFromCache(this._actionName, !0),
            this.index = 0, e && e.run()) : !n || at.getAtlas(n) ? this._loadAnimationData(t, e, n) : i.loader.load(n, l.create(this, this._loadAnimationData, [t, e, n]), null, "atlas"),
          this;
      }, n._loadAnimationData = function(t, n, s) {
        function r(i) {
          if (at.getRes(i) && t === i) {
            var s;
            if (e.framesMap[t + "#"]) o._setFramesFromCache(a._actionName, !0), a.index = 0,
              a._checkResumePlaying();
            else {
              var r = o._parseGraphicAnimation(at.getRes(t));
              if (!r) return;
              var h, l = r.animationList,
                u = 0,
                c = l.length;
              for (u = 0; u < c; u++) s = l[u], e.framesMap[t + "#" + s.name] = s, h || (h = s);
              h && (e.framesMap[t + "#"] = h, o._setFramesFromCache(a._actionName, !0), a.index = 0),
                a._checkResumePlaying();
            }
            n && n.run();
          }
        }
        var a = this;
        if (!s || at.getAtlas(s)) {
          var o = this;
          at.getRes(t) ? r(t) : i.loader.load(t, l.create(null, r, [t]), null, "json"),
            at.clearRes(t);
        } else console.warn("atlas load fail:" + s);
      }, n._parseGraphicAnimation = function(t) {
        return It.parseAnimationData(t);
      }, n._parseGraphicAnimationByData = function(t) {
        return It.parseAnimationByData(t);
      }, r(0, n, "frames", function() {
        return this._frames;
      }, function(t) {
        this._frames = t, t && (this._count = t.length, this._isPlaying ? this.play(this._index, this.loop, this._actionName) : this.index = this._index);
      }), r(0, n, "autoPlay", null, function(t) {
        t ? this.play() : this.stop();
      }), r(0, n, "source", null, function(t) {
        t.indexOf(".ani") > -1 ? this.loadAnimation(t) : t.indexOf(".json") > -1 || t.indexOf("als") > -1 || t.indexOf("atlas") > -1 ? this.loadAtlas(t) : this.loadImages(t.split(","));
      }), r(0, n, "autoAnimation", null, function(t) {
        this.play(0, !0, t, !1);
      }), e.createFrames = function(t, i) {
        var n, s, r = 0,
          o = 0;
        if ("string" == typeof t) {
          var h = at.getAtlas(t);
          if (h && h.length)
            for (n = [], r = 0, o = h.length; r < o; r++)(s = new a.createGraphics()).drawTexture(at.getRes(h[r]), 0, 0),
              n.push(s);
        } else if (t instanceof Array)
          for (n = [], r = 0, o = t.length; r < o; r++)(s = new a.createGraphics()).loadImage(t[r], 0, 0),
            n.push(s);
        return i && (e.framesMap[i] = n), n;
      }, e.clearCache = function(t) {
        var i, n = e.framesMap,
          s = t + "#";
        for (i in n) i !== t && 0 != i.indexOf(s) || delete e.framesMap[i];
      }, e.framesMap = {};
    }(ft), function(t) {
      function e() {
        this._targetDic = null, this._animationData = null, this._animationNewFrames = null,
          e.__super.call(this), null == e._sortIndexFun && (e._sortIndexFun = S.sortByKey("index", !1, !0));
      }
      s(e, "laya.display.FrameAnimation", t);
      var i = e.prototype;
      return i._setUp = function(t, e) {
        this._labels = null, this._animationNewFrames = null, this._targetDic = t, this._animationData = e,
          this.interval = 1e3 / e.frameRate, e.parsed ? (this._count = e.count, this._labels = e.labels,
            this._animationNewFrames = e.animationNewFrames) : (this._animationNewFrames = [],
            this._calculateDatas()), e.parsed = !0, e.labels = this._labels, e.count = this._count,
          e.animationNewFrames = this._animationNewFrames;
      }, i.clear = function() {
        t.prototype.clear.call(this), this._targetDic = null, this._animationData = null;
      }, i._displayToIndex = function(t) {
        if (this._animationData) {
          t < 0 && (t = 0), t > this._count && (t = this._count);
          var e = this._animationData.nodes,
            i = 0,
            n = e.length;
          for (i = 0; i < n; i++) this._displayNodeToFrame(e[i], t);
        }
      }, i._displayNodeToFrame = function(t, e, i) {
        i || (i = this._targetDic);
        var n = i[t.target];
        if (n) {
          var s, r, a, o = t.frames,
            h = t.keys,
            l = 0,
            u = h.length;
          for (l = 0; l < u; l++) a = (r = o[s = h[l]]).length > e ? r[e] : r[r.length - 1],
            n[s] = a;
        }
      }, i._calculateDatas = function() {
        if (this._animationData) {
          var t, e = this._animationData.nodes,
            i = 0,
            n = e.length;
          for (this._count = 0, i = 0; i < n; i++) t = e[i], this._calculateNodeKeyFrames(t);
          this._count += 1;
        }
      }, i._calculateNodeKeyFrames = function(t) {
        var i, n, s = t.keyframes,
          r = t.target;
        t.frames || (t.frames = {}), t.keys ? t.keys.length = 0 : t.keys = [], t.initValues || (t.initValues = {});
        for (i in s) n = s[i], t.frames[i] || (t.frames[i] = []), this._targetDic && this._targetDic[r] && (t.initValues[i] = this._targetDic[r][i]),
          n.sort(e._sortIndexFun), t.keys.push(i), this._calculateNodePropFrames(n, t.frames[i], i, r);
      }, i.resetToInitState = function() {
        if (this._targetDic && this._animationData) {
          var t, e, i = this._animationData.nodes,
            n = 0,
            s = i.length;
          for (n = 0; n < s; n++)
            if (t = i[n], e = t.initValues) {
              var r = this._targetDic[t.target];
              if (r) {
                var a;
                for (a in e) r[a] = e[a];
              }
            }
        }
      }, i._calculateNodePropFrames = function(t, e, i, n) {
        var s = 0,
          r = t.length - 1;
        for (e.length = t[r].index + 1, s = 0; s < r; s++) this._dealKeyFrame(t[s]), this._calculateFrameValues(t[s], t[s + 1], e);
        0 == r && (e[0] = t[0].value, this._animationNewFrames && (this._animationNewFrames[t[0].index] = !0)),
          this._dealKeyFrame(t[s]);
      }, i._dealKeyFrame = function(t) {
        t.label && "" != t.label && this.addLabel(t.label, t.index);
      }, i._calculateFrameValues = function(t, e, i) {
        var n, s = 0,
          r = t.index,
          a = e.index,
          o = t.value,
          h = e.value - t.value,
          l = a - r;
        if (a > this._count && (this._count = a), t.tween)
          for (null == (n = z[t.tweenMethod]) && (n = z.linearNone),
            s = r; s < a; s++) i[s] = n(s - r, o, h, l), this._animationNewFrames && (this._animationNewFrames[s] = !0);
        else
          for (s = r; s < a; s++) i[s] = o;
        this._animationNewFrames && (this._animationNewFrames[t.index] = !0, this._animationNewFrames[e.index] = !0),
          i[e.index] = e.value;
      }, e._sortIndexFun = null, e;
    }(ft)),
    bt = function(t) {
      function e() {
        this._focus = !1, this._multiline = !1, this._editable = !0, this._restrictPattern = null,
          this._type = "text", this._prompt = "", this._promptColor = "#A9A9A9", this._originColor = "#000000",
          this._content = "", e.__super.call(this), this._maxChars = 1e5, this._width = 100,
          this._height = 20, this.multiline = !1, this.overflow = gt.SCROLL, this.on("mousedown", this, this._onMouseDown),
          this.on("undisplay", this, this._onUnDisplay);
      }
      s(e, "laya.display.Input", t);
      var a = e.prototype;
      return a.setSelection = function(t, e) {
          this.focus = !0, laya.display.Input.inputElement.selectionStart = t, laya.display.Input.inputElement.selectionEnd = e;
        }, a._onUnDisplay = function(t) {
          this.focus = !1;
        }, a._onMouseDown = function(t) {
          this.focus = !0;
        }, a._syncInputTransform = function() {
          var t = this.nativeInput,
            n = $.getTransformRelativeToWindow(this, this.padding[3], this.padding[0]),
            s = this._width - this.padding[1] - this.padding[3],
            r = this._height - this.padding[0] - this.padding[2];
          D.isConchApp ? (t.setScale(n.scaleX, n.scaleY), t.setSize(s, r), t.setPos(n.x, n.y)) : (e.inputContainer.style.transform = e.inputContainer.style.webkitTransform = "scale(" + n.scaleX + "," + n.scaleY + ") rotate(" + i.stage.canvasDegree + "deg)",
            t.style.width = s + "px", t.style.height = r + "px", e.inputContainer.style.left = n.x + "px",
            e.inputContainer.style.top = n.y + "px");
        }, a.select = function() {
          this.nativeInput.select();
        }, a._setInputMethod = function() {
          e.input.parentElement && e.inputContainer.removeChild(e.input), e.area.parentElement && e.inputContainer.removeChild(e.area),
            e.inputElement = this._multiline ? e.area : e.input, e.inputContainer.appendChild(e.inputElement),
            gt.RightToLeft && (e.inputElement.style.direction = "rtl");
        }, a._focusIn = function() {
          laya.display.Input.isInputting = !0;
          var t = this.nativeInput;
          this._focus = !0;
          var e = t.style;
          e.whiteSpace = this.wordWrap ? "pre-wrap" : "nowrap", this._setPromptColor(), t.readOnly = !this._editable,
            D.isConchApp && (t.setType(this._type), t.setForbidEdit(!this._editable)), t.maxLength = this._maxChars;
          this.padding;
          if (t.type = this._type, t.value = this._content, t.placeholder = this._prompt,
            i.stage.off("keydown", this, this._onKeyDown), i.stage.on("keydown", this, this._onKeyDown),
            i.stage.focus = this, this.event("focus"), k.onPC && t.focus(), !k.onMiniGame) {
            this._text;
            this._text = null;
          }
          this.typeset(), t.setColor(this._originColor), t.setFontSize(this.fontSize), t.setFontFace(k.onIPhone ? gt._fontFamilyMap[this.font] || this.font : this.font),
            D.isConchApp && t.setMultiAble && t.setMultiAble(this._multiline), e.lineHeight = this.leading + this.fontSize + "px",
            e.fontStyle = this.italic ? "italic" : "normal", e.fontWeight = this.bold ? "bold" : "normal",
            e.textAlign = this.align, e.padding = "0 0", this._syncInputTransform(), !D.isConchApp && k.onPC && i.timer.frameLoop(1, this, this._syncInputTransform);
        }, a._setPromptColor = function() {
          (e.promptStyleDOM = k.getElementById("promptStyle")) || ((e.promptStyleDOM = k.createElement("style")).setAttribute("id", "promptStyle"),
            k.document.head.appendChild(e.promptStyleDOM)), e.promptStyleDOM.innerText = "input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {color:" + this._promptColor + "}input:-moz-placeholder, textarea:-moz-placeholder {color:" + this._promptColor + "}input::-moz-placeholder, textarea::-moz-placeholder {color:" + this._promptColor + "}input:-ms-input-placeholder, textarea:-ms-input-placeholder {color:" + this._promptColor + "}";
        }, a._focusOut = function() {
          laya.display.Input.isInputting = !1, this._focus = !1, this._text = null, this._content = this.nativeInput.value,
            this._content ? (i.superSet(gt, this, "text", this._content), i.superSet(gt, this, "color", this._originColor)) : (i.superSet(gt, this, "text", this._prompt),
              i.superSet(gt, this, "color", this._promptColor)), i.stage.off("keydown", this, this._onKeyDown),
            i.stage.focus = null, this.event("blur"), D.isConchApp && this.nativeInput.blur(),
            k.onPC && i.timer.clear(this, this._syncInputTransform);
        }, a._onKeyDown = function(t) {
          13 === t.keyCode && (k.onMobile && !this._multiline && (this.focus = !1), this.event("enter"));
        }, a.changeText = function(e) {
          this._content = e, this._focus ? (this.nativeInput.value = e || "", this.event("change")) : t.prototype.changeText.call(this, e);
        }, r(0, a, "color", t.prototype._$get_color, function(t) {
          this._focus && this.nativeInput.setColor(t), i.superSet(gt, this, "color", this._content ? t : this._promptColor),
            this._originColor = t;
        }), r(0, a, "inputElementYAdjuster", function() {
          return console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。"),
            0;
        }, function(t) {
          console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。");
        }), r(0, a, "multiline", function() {
          return this._multiline;
        }, function(t) {
          this._multiline = t, this.valign = t ? "top" : "middle";
        }), r(0, a, "maxChars", function() {
          return this._maxChars;
        }, function(t) {
          t <= 0 && (t = 1e5), this._maxChars = t;
        }), r(0, a, "text", function() {
          return this._focus ? this.nativeInput.value : this._content || "";
        }, function(t) {
          i.superSet(gt, this, "color", this._originColor), t += "", this._focus ? (this.nativeInput.value = t || "",
            this.event("change")) : (this._multiline || (t = t.replace(/\r?\n/g, "")), this._content = t,
            t ? i.superSet(gt, this, "text", t) : (i.superSet(gt, this, "text", this._prompt),
              i.superSet(gt, this, "color", this.promptColor)));
        }), r(0, a, "nativeInput", function() {
          return this._multiline ? e.area : e.input;
        }), r(0, a, "prompt", function() {
          return this._prompt;
        }, function(t) {
          !this._text && t && i.superSet(gt, this, "color", this._promptColor), this.promptColor = this._promptColor,
            this._text ? i.superSet(gt, this, "text", this._text == this._prompt ? t : this._text) : i.superSet(gt, this, "text", t),
            this._prompt = gt.langPacks && gt.langPacks[t] ? gt.langPacks[t] : t;
        }), r(0, a, "focus", function() {
          return this._focus;
        }, function(t) {
          var i = this.nativeInput;
          this._focus !== t && (t ? (i.target ? i.target._focusOut() : this._setInputMethod(),
            i.target = this, this._focusIn()) : (i.target = null, this._focusOut(), k.document.body.scrollTop = 0,
            i.blur(), D.isConchApp ? i.setPos(-1e4, -1e4) : e.inputContainer.contains(i) && e.inputContainer.removeChild(i)));
        }), r(0, a, "restrict", function() {
          return this._restrictPattern ? this._restrictPattern.source : "";
        }, function(t) {
          t ? ((t = "[^" + t + "]").indexOf("^^") > -1 && (t = t.replace("^^", "")), this._restrictPattern = new RegExp(t, "g")) : this._restrictPattern = null;
        }), r(0, a, "editable", function() {
          return this._editable;
        }, function(t) {
          this._editable = t, D.isConchApp && e.input.setForbidEdit(!t);
        }), r(0, a, "promptColor", function() {
          return this._promptColor;
        }, function(t) {
          this._promptColor = t, this._content || i.superSet(gt, this, "color", t);
        }), r(0, a, "type", function() {
          return this._type;
        }, function(t) {
          this._getCSSStyle().password = "password" == t, this._type = t, D.isConchApp && this.nativeInput.setType(t);
        }), r(0, a, "inputElementXAdjuster", function() {
          return console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。"),
            0;
        }, function(t) {
          console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。");
        }), r(0, a, "asPassword", function() {
          return this._getCSSStyle().password;
        }, function(t) {
          this._getCSSStyle().password = t, this._type = "password", console.warn('deprecated: 使用type="password"替代设置asPassword, asPassword将在下次重大更新时删去'),
            this.isChanged = !0;
        }), e.__init__ = function() {
          e._createInputElement(), k.onMobile && D.canvas.addEventListener(e.IOS_IFRAME ? k.onMiniGame ? "touchend" : "click" : "touchend", e._popupInputMethod);
        }, e._popupInputMethod = function(t) {
          if (laya.display.Input.isInputting) {
            laya.display.Input.inputElement.focus();
          }
        }, e._createInputElement = function() {
          e._initInput(e.area = k.createElement("textarea")), e._initInput(e.input = k.createElement("input")),
            (e.inputContainer = k.createElement("div")).style.position = "absolute", e.inputContainer.style.zIndex = 1e5,
            k.container.appendChild(e.inputContainer), e.inputContainer.setPos = function(t, i) {
              e.inputContainer.style.left = t + "px", e.inputContainer.style.top = i + "px";
            };
        }, e._initInput = function(t) {
          var i = t.style;
          i.cssText = "position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;",
            i.resize = "none", i.backgroundColor = "transparent", i.border = "none", i.outline = "none",
            i.zIndex = 1, t.addEventListener("input", e._processInputting), t.addEventListener("mousemove", e._stopEvent),
            t.addEventListener("mousedown", e._stopEvent), t.addEventListener("touchmove", e._stopEvent),
            t.setFontFace = function(e) {
              t.style.fontFamily = e;
            }, D.isConchApp || (t.setColor = function(e) {
              t.style.color = e;
            }, t.setFontSize = function(e) {
              t.style.fontSize = e + "px";
            });
        }, e._processInputting = function(t) {
          var e = laya.display.Input.inputElement.target;
          if (e) {
            var i = laya.display.Input.inputElement.value;
            e._restrictPattern && (i = i.replace(/\u2006|\x27/g, ""), e._restrictPattern.test(i) && (i = i.replace(e._restrictPattern, ""),
              laya.display.Input.inputElement.value = i)), e._text = i, e.event("input");
          }
        }, e._stopEvent = function(t) {
          "touchmove" == t.type && t.preventDefault(), t.stopPropagation && t.stopPropagation();
        }, e.TYPE_TEXT = "text", e.TYPE_PASSWORD = "password", e.TYPE_EMAIL = "email", e.TYPE_URL = "url",
        e.TYPE_NUMBER = "number", e.TYPE_RANGE = "range", e.TYPE_DATE = "date", e.TYPE_MONTH = "month",
        e.TYPE_WEEK = "week", e.TYPE_TIME = "time", e.TYPE_DATE_TIME = "datetime", e.TYPE_DATE_TIME_LOCAL = "datetime-local",
        e.TYPE_SEARCH = "search", e.input = null, e.area = null, e.inputElement = null,
        e.inputContainer = null, e.confirmButton = null, e.promptStyleDOM = null, e.inputHeight = 45,
        e.isInputting = !1, e.stageMatrix = null, n(e, ["IOS_IFRAME", function() {
          return this.IOS_IFRAME = k.onIOS && k.window.top != k.window.self;
        }]), e;
    }(gt),
    wt = function(t) {
      function e(t, i) {
        this._recreateLock = !1, this._needReleaseAgain = !1, this._enableMerageInAtlas = !0,
          e.__super.call(this), this._init_(t, i);
      }
      s(e, "laya.resource.HTMLImage", yt);
      var i = e.prototype;
      return i._init_ = function(t, e) {
        this._src = t, this._source = new k.window.Image(), e && (e.onload && (this.onload = e.onload),
            e.onerror && (this.onerror = e.onerror), e.onCreate && e.onCreate(this)), 0 != t.indexOf("data:image") && (this._source.crossOrigin = ""),
          t && (this._source.src = t);
      }, i.recreateResource = function() {
        var t = this;
        if ("" === this._src) throw new Error("src no null！");
        if (this._needReleaseAgain = !1, this._source) {
          if (this._recreateLock) return;
          this.memorySize = this._w * this._h * 4, this._recreateLock = !1, this.completeCreate();
        } else {
          this._recreateLock = !0;
          var e = this;
          this._source = new k.window.Image(), this._source.crossOrigin = "", this._source.onload = function() {
            if (e._needReleaseAgain) return e._needReleaseAgain = !1, e._source.onload = null,
              void(e._source = null);
            e._source.onload = null, e.memorySize = t._w * t._h * 4, e._recreateLock = !1, e.completeCreate();
          }, this._source.src = this._src;
        }
      }, i.disposeResource = function() {
        this._recreateLock && (this._needReleaseAgain = !0), this._source && (this._source = null,
          this.memorySize = 0);
      }, i.onresize = function() {
        this._w = this._source.width, this._h = this._source.height;
      }, r(0, i, "onload", null, function(t) {
        var e = this;
        this._onload = t, this._source && (this._source.onload = null != this._onload ? function() {
          e.onresize(), e._onload();
        } : null);
      }), r(0, i, "onerror", null, function(t) {
        var e = this;
        this._onerror = t, this._source && (this._source.onerror = null != this._onerror ? function() {
          e._onerror();
        } : null);
      }), r(0, i, "enableMerageInAtlas", function() {
        return this._enableMerageInAtlas;
      }, function(t) {
        this._enableMerageInAtlas = t, D.isConchApp && this._source && (this._source.enableMerageInAtlas = t);
      }), e.create = function(t, i) {
        return new e(t, i);
      }, e;
    }(),
    It = (function(t) {
      function e() {
        this._target = null, this._playEvents = null, this._initData = {}, this._aniKeys = null,
          this._effectClass = null, e.__super.call(this);
      }
      s(e, "laya.display.EffectAnimation", t);
      var i = e.prototype;
      i._onOtherBegin = function(t) {
        t != this && this.stop();
      }, i.addEvent = function() {
        this._target && this._playEvents && (this._setControlNode(this._target), this._target.on(this._playEvents, this, this._onPlayAction));
      }, i._onPlayAction = function() {
        this.play(0, !1);
      }, i.play = function(t, e, i, n) {
        void 0 === t && (t = 0), void 0 === e && (e = !0), void 0 === i && (i = ""), void 0 === n && (n = !0),
          this._target && (this._target.event("effectanimationbegin", [this]), this._recordInitData(),
            laya.display.AnimationPlayerBase.prototype.play.call(this, t, e, i, n));
      }, i._recordInitData = function() {
        if (this._aniKeys) {
          var t = 0,
            e = 0;
          e = this._aniKeys.length;
          var i;
          for (t = 0; t < e; t++) i = this._aniKeys[t], this._initData[i] = this._target[i];
        }
      }, i._displayToIndex = function(t) {
        if (this._animationData) {
          t < 0 && (t = 0), t > this._count && (t = this._count);
          var e = this._animationData.nodes,
            i = 0,
            n = e.length;
          for (n = n > 1 ? 1 : n, i = 0; i < n; i++) this._displayNodeToFrame(e[i], t);
        }
      }, i._displayNodeToFrame = function(t, e, i) {
        if (this._target) {
          var n;
          n = this._target;
          var s, r, a, o, h = t.frames,
            l = t.keys,
            u = 0,
            c = l.length;
          o = t.secondFrames;
          var _, d, p, f, g = 0;
          for (u = 0; u < c; u++) r = h[s = l[u]], -1 == (g = o[s]) ? a = this._initData[s] : e < g ? (p = (d = t.keyframes[s])[0]).tween ? (null == (_ = z[p.tweenMethod]) && (_ = z.linearNone),
              f = d[1], a = _(e, this._initData[s], f.value - this._initData[s], f.index)) : a = this._initData[s] : a = r.length > e ? r[e] : r[r.length - 1],
            n[s] = a;
        }
      }, i._calculateNodeKeyFrames = function(e) {
        t.prototype._calculateNodeKeyFrames.call(this, e);
        var i, n, s, r = e.keyframes;
        e.target;
        s = {}, e.secondFrames = s;
        for (i in r)(n = r[i]).length <= 1 ? s[i] = -1 : s[i] = n[1].index;
      }, r(0, i, "target", function() {
        return this._target;
      }, function(t) {
        this._target && this._target.off("effectanimationbegin", this, this._onOtherBegin),
          this._target = t, this._target && this._target.on("effectanimationbegin", this, this._onOtherBegin),
          this.addEvent();
      }), r(0, i, "playEvent", null, function(t) {
        this._playEvents = t, t && this.addEvent();
      }), r(0, i, "effectData", null, function(t) {
        if (t) {
          var e;
          (e = t.animations) && e[0] && (this._setUp({}, e[0]), e[0].nodes && e[0].nodes[0] && (this._aniKeys = e[0].nodes[0].keys));
        }
      }), r(0, i, "effectClass", null, function(t) {
        if (this._effectClass = G.getClass(t), this._effectClass) {
          var e;
          if (e = this._effectClass.uiView) {
            var i;
            (i = e.animations) && i[0] && (this._setUp({}, i[0]), i[0].nodes && i[0].nodes[0] && (this._aniKeys = i[0].nodes[0].keys));
          }
        }
      }), e.EffectAnimationBegin = "effectanimationbegin";
    }(xt), function(t) {
      function e() {
        this.animationList = null, this.animationDic = null, this._nodeList = null, this._nodeDefaultProps = null,
          this._gList = null, this._nodeIDAniDic = {}, this._rootNode = null, this._nodeGDic = null,
          e.__super.call(this);
      }
      var i;
      s(e, "laya.utils.GraphicAnimation", t);
      var r = e.prototype;
      return r._parseNodeList = function(t) {
          this._nodeList || (this._nodeList = []), this._nodeDefaultProps[t.compId] = t.props,
            t.compId && this._nodeList.push(t.compId);
          var e = t.child;
          if (e) {
            var i = 0,
              n = e.length;
            for (i = 0; i < n; i++) this._parseNodeList(e[i]);
          }
        }, r._calGraphicData = function(t) {
          if (this._setUp(null, t), this._createGraphicData(), this._nodeIDAniDic) {
            var e;
            for (e in this._nodeIDAniDic) this._nodeIDAniDic[e] = null;
          }
        }, r._createGraphicData = function() {
          var t = [],
            e = 0,
            i = this.count,
            n = this._animationNewFrames;
          n || (n = []);
          var s;
          for (e = 0; e < i; e++) !n[e] && s || (s = this._createFrameGraphic(e)), t.push(s);
          this._gList = t;
        }, r._createFrameGraphic = function(t) {
          var i = a.createGraphics();
          return e._rootMatrix || (e._rootMatrix = new C()), this._updateNodeGraphic(this._rootNode, t, e._rootMatrix, i),
            i;
        }, r._updateNodeGraphic = function(t, e, i, n, s) {
          void 0 === s && (s = 1);
          var r, a = (r = this._nodeGDic[t.compId] = this._getNodeGraphicData(t.compId, e, this._nodeGDic[t.compId])).alpha * s;
          if (!(a < .01)) {
            r.resultTransform || (r.resultTransform = C.create());
            var o;
            o = r.resultTransform, C.mul(r.transform, i, o);
            var h;
            r.skin && (h = this._getTextureByUrl(r.skin)) && (o._checkTransform() ? (n.drawTexture(h, 0, 0, r.width, r.height, o, a),
              r.resultTransform = null) : n.drawTexture(h, o.tx, o.ty, r.width, r.height, null, a));
            var l;
            if (l = t.child) {
              var u = 0,
                c = 0;
              for (c = l.length, u = 0; u < c; u++) this._updateNodeGraphic(l[u], e, o, n, a);
            }
          }
        }, r._updateNoChilds = function(t, e) {
          if (t.skin) {
            var i = this._getTextureByUrl(t.skin);
            if (i) {
              var n = t.transform;
              n._checkTransform();
              !n.bTransform ? e.drawTexture(i, n.tx, n.ty, t.width, t.height, null, t.alpha) : e.drawTexture(i, 0, 0, t.width, t.height, n.clone(), t.alpha);
            }
          }
        }, r._updateNodeGraphic2 = function(t, e, i) {
          var n;
          if (n = this._nodeGDic[t.compId] = this._getNodeGraphicData(t.compId, e, this._nodeGDic[t.compId]),
            t.child) {
            var s = n.transform;
            s._checkTransform();
            var r = !1,
              a = !1;
            a = (r = !s.bTransform) && (0 != s.tx || 0 != s.ty);
            var o = !1;
            (o = s.bTransform || 1 != n.alpha) && i.save(), 1 != n.alpha && i.alpha(n.alpha),
              r ? a && i.translate(s.tx, s.ty) : i.transform(s.clone());
            var h;
            h = t.child;
            var l;
            if (n.skin && (l = this._getTextureByUrl(n.skin)) && i.drawTexture(l, 0, 0, n.width, n.height),
              h) {
              var u = 0,
                c = 0;
              for (c = h.length, u = 0; u < c; u++) this._updateNodeGraphic2(h[u], e, i);
            }
            o ? i.restore() : r ? a && i.translate(-s.tx, -s.ty) : i.transform(s.clone().invert());
          } else this._updateNoChilds(n, i);
        }, r._calculateNodeKeyFrames = function(e) {
          t.prototype._calculateNodeKeyFrames.call(this, e), this._nodeIDAniDic[e.target] = e;
        }, r.getNodeDataByID = function(t) {
          return this._nodeIDAniDic[t];
        }, r._getParams = function(t, i, n, s) {
          var r = e._temParam;
          r.length = i.length;
          var a = 0,
            o = i.length;
          for (a = 0; a < o; a++) r[a] = this._getObjVar(t, i[a][0], n, i[a][1], s);
          return r;
        }, r._getObjVar = function(t, e, i, n, s) {
          if (t.hasOwnProperty(e)) {
            var r = t[e];
            return i >= r.length && (i = r.length - 1), t[e][i];
          }
          return s.hasOwnProperty(e) ? s[e] : n;
        }, r._getNodeGraphicData = function(t, n, s) {
          s || (s = i.create()), s.transform ? s.transform.identity() : s.transform = C.create();
          var r = this.getNodeDataByID(t);
          if (!r) return s;
          var a = r.frames,
            o = this._getParams(a, e._drawTextureCmd, n, this._nodeDefaultProps[t]),
            h = o[0],
            l = NaN,
            u = NaN,
            c = o[5],
            _ = o[6],
            d = o[13],
            p = o[14],
            f = o[7],
            g = o[8],
            m = o[9],
            y = o[11],
            v = o[12];
          l = o[3], u = o[4], 0 != l && 0 != u || (h = null), -1 == l && (l = 0), -1 == u && (u = 0);
          var x;
          s.skin = h, s.width = l, s.height = u, h && ((x = this._getTextureByUrl(h)) ? (l || (l = x.sourceWidth),
              u || (u = x.sourceHeight)) : console.warn("lost skin:", h, ",you may load pics first")),
            s.alpha = o[10];
          var b;
          b = s.transform, 0 != d && (c = d * l), 0 != p && (_ = p * u), 0 == c && 0 == _ || b.translate(-c, -_);
          var w = null;
          if (m || 1 !== f || 1 !== g || y || v) {
            (w = e._tempMt).identity(), w.bTransform = !0;
            var I = .0174532922222222 * (m - y),
              S = .0174532922222222 * (m + v),
              T = Math.cos(S),
              E = Math.sin(S),
              M = Math.sin(I),
              L = Math.cos(I);
            w.a = f * T, w.b = f * E, w.c = -g * M, w.d = g * L, w.tx = w.ty = 0;
          }
          return w && (b = C.mul(b, w, b)), b.translate(o[1], o[2]), s;
        }, r._getTextureByUrl = function(t) {
          return at.getRes(t);
        }, r.setAniData = function(t, i) {
          if (t.animations) {
            this._nodeDefaultProps = {}, this._nodeGDic = {}, this._nodeList && (this._nodeList.length = 0),
              this._rootNode = t, this._parseNodeList(t);
            var n, s = {},
              r = [],
              a = t.animations,
              o = 0,
              h = a.length;
            for (o = 0; o < h; o++)
              if (n = a[o], this._labels = null, (!i || i == n.name) && n) {
                try {
                  this._calGraphicData(n);
                } catch (t) {
                  console.warn("parse animation fail:" + n.name + ",empty animation created"), this._gList = [];
                }
                var l = {};
                l.interval = 1e3 / n.frameRate, l.frames = this._gList, l.labels = this._labels,
                  l.name = n.name, r.push(l), s[n.name] = l;
              }
            this.animationList = r, this.animationDic = s;
          }
          e._temParam.length = 0;
        }, r.parseByData = function(t) {
          var e, i;
          e = t.nodeRoot, i = t.aniO, delete t.nodeRoot, delete t.aniO, this._nodeDefaultProps = {},
            this._nodeGDic = {}, this._nodeList && (this._nodeList.length = 0), this._rootNode = e,
            this._parseNodeList(e), this._labels = null;
          try {
            this._calGraphicData(i);
          } catch (t) {
            console.warn("parse animation fail:" + i.name + ",empty animation created"), this._gList = [];
          }
          var n = t;
          return n.interval = 1e3 / i.frameRate, n.frames = this._gList, n.labels = this._labels,
            n.name = i.name, n;
        }, r.setUpAniData = function(t) {
          if (t.animations) {
            var e, i = {},
              n = [],
              s = t.animations,
              r = 0,
              a = s.length;
            for (r = 0; r < a; r++)
              if (e = s[r]) {
                var o = {};
                o.name = e.name, o.aniO = e, o.nodeRoot = t, n.push(o), i[e.name] = o;
              }
            this.animationList = n, this.animationDic = i;
          }
        }, r._clear = function() {
          if (this.animationList = null, this.animationDic = null, this._gList = null, this._nodeGDic) {
            var t, e;
            for (t in this._nodeGDic)(e = this._nodeGDic[t]) && e.recover();
          }
          this._nodeGDic = null;
        }, e.parseAnimationByData = function(t) {
          e._I || (e._I = new e());
          var i;
          return i = e._I.parseByData(t), e._I._clear(), i;
        }, e.parseAnimationData = function(t) {
          e._I || (e._I = new e()), e._I.setUpAniData(t);
          var i;
          return i = {}, i.animationList = e._I.animationList, i.animationDic = e._I.animationDic,
            e._I._clear(), i;
        }, e._drawTextureCmd = [
          ["skin", null],
          ["x", 0],
          ["y", 0],
          ["width", -1],
          ["height", -1],
          ["pivotX", 0],
          ["pivotY", 0],
          ["scaleX", 1],
          ["scaleY", 1],
          ["rotation", 0],
          ["alpha", 1],
          ["skewX", 0],
          ["skewY", 0],
          ["anchorX", 0],
          ["anchorY", 0]
        ],
        e._temParam = [], e._I = null, e._rootMatrix = null, n(e, ["_tempMt", function() {
          return this._tempMt = new C();
        }]), e.__init$ = function() {
          i = function() {
            function t() {
              this.skin = null, this.transform = null, this.resultTransform = null, this.width = NaN,
                this.height = NaN, this.alpha = 1;
            }
            s(t, "");
            return t.prototype.recover = function() {
              this.skin = null, this.width = 0, this.height = 0, this.alpha = 1, this.transform && (this.transform.destroy(),
                this.transform = null), this.resultTransform && (this.resultTransform.destroy(),
                this.resultTransform = null), Y.recover("GraphicNode", this);
            }, t.create = function() {
              return Y.getItemByClass("GraphicNode", t);
            }, t;
          }();
        }, e;
    }(xt));
  i.__init([h, ot, D, k, K, L, ut, It]);
}(window, document, Laya),
function(t, e, i) {
  i.un, i.uns, i.static;
  var n = i.class;
  i.getset, i.__newvec;
  new(function() {
    function t() {}
    return n(t, "LayaMain"), t;
  }())();
}(window, document, Laya), "function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function(t, e) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    for (var i in Laya) {
      var n = Laya[i];
      n && n.__isclass && (e[i] = n);
    }
  }),
  function(t, e, i) {
    i.un, i.uns;
    var n = i.static,
      s = i.class,
      r = i.getset,
      a = (i.__newvec, laya.utils.Browser),
      o = (laya.events.Event,
        laya.events.EventDispatcher),
      h = laya.resource.HTMLImage,
      l = laya.utils.Handler,
      u = laya.display.Input,
      c = laya.net.Loader,
      _ = laya.net.LocalStorage,
      d = (laya.maths.Matrix,
        laya.renders.Render),
      p = laya.utils.RunDriver,
      f = laya.media.SoundChannel,
      g = laya.media.SoundManager,
      m = laya.net.URL,
      y = laya.utils.Utils,
      v = function() {
        function e() {}
        return s(e, "laya.wx.mini.MiniAdpter"), e.getJson = function(t) {
            return JSON.parse(t);
          }, e.init = function(n, s) {
            if (void 0 === n && (n = !1), void 0 === s && (s = !1), !(e._inited || (e._inited = !0,
                (e.window = t).navigator.userAgent.indexOf("MiniGame") < 0))) {
              e.isZiYu = s, e.isPosMsgYu = n, e.EnvConfig = {};
              try {
                laya.webgl.resource.WebGLCanvas.premulAlpha = !0;
              } catch (t) {}
              e.isZiYu || (x.setNativeFileDir("/layaairGame"), x.existDir(x.fileNativeDir, l.create(e, e.onMkdirCallBack))),
                e.systemInfo = wx.getSystemInfoSync(), e.window.focus = function() {}, i.getUrlPath = function() {},
                e.window.logtime = function(t) {}, e.window.alertTimeLog = function(t) {}, e.window.resetShareInfo = function() {},
                e.window.CanvasRenderingContext2D = function() {}, e.window.CanvasRenderingContext2D.prototype = e.window.wx.createCanvas().getContext("2d").__proto__,
                e.window.document.body.appendChild = function() {}, e.EnvConfig.pixelRatioInt = 0,
                p.getPixelRatio = e.pixelRatio, e._preCreateElement = a.createElement, a.createElement = e.createElement,
                p.createShaderCondition = e.createShaderCondition, y.parseXMLFromString = e.parseXMLFromString,
                u._createInputElement = w._createInputElement, e.EnvConfig.load = c.prototype.load,
                c.prototype.load = S.prototype.load, c.prototype._loadImage = b.prototype._loadImage,
                I.__init__(), _._baseClass = I;
            }
          }, e.getUrlEncode = function(t, e) {
            return -1 != t.indexOf(".fnt") ? "utf8" : "arraybuffer" == e ? "" : "ascii";
          }, e.downLoadFile = function(t, e, i, n) {
            void 0 === e && (e = ""), void 0 === n && (n = "ascii");
            x.getFileInfo(t) ? null != i && i.runWith([0]) : x.downLoadFile(t, e, i, n);
          }, e.remove = function(t, e) {
            x.deleteFile("", t, e, "", 0);
          }, e.removeAll = function() {
            x.deleteAll();
          }, e.hasNativeFile = function(t) {
            return x.isLocalNativeFile(t);
          }, e.getFileInfo = function(t) {
            return x.getFileInfo(t);
          }, e.getFileList = function() {
            return x.filesListObj;
          }, e.exitMiniProgram = function() {
            e.window.wx.exitMiniProgram();
          }, e.onMkdirCallBack = function(t, e) {
            t || (x.filesListObj = JSON.parse(e.data));
          }, e.pixelRatio = function() {
            if (!e.EnvConfig.pixelRatioInt) try {
              return e.EnvConfig.pixelRatioInt = e.systemInfo.pixelRatio, e.systemInfo.pixelRatio;
            } catch (t) {}
            return e.EnvConfig.pixelRatioInt;
          }, e.createElement = function(i) {
            if ("canvas" == i) {
              var n;
              return 1 == e.idx ? e.isZiYu ? (n = sharedCanvas).style = {} : n = t.canvas : n = t.wx.createCanvas(),
                e.idx++, n;
            }
            if ("textarea" == i || "input" == i) return e.onCreateInput(i);
            if ("div" == i) {
              var s = e._preCreateElement(i);
              return s.contains = function(t) {
                return null;
              }, s.removeChild = function(t) {}, s;
            }
            return e._preCreateElement(i);
          }, e.onCreateInput = function(t) {
            var i = e._preCreateElement(t);
            return i.focus = w.wxinputFocus, i.blur = w.wxinputblur, i.style = {}, i.value = 0,
              i.parentElement = {}, i.placeholder = {}, i.type = {}, i.setColor = function(t) {},
              i.setType = function(t) {}, i.setFontFace = function(t) {}, i.addEventListener = function(t) {},
              i.contains = function(t) {
                return null;
              }, i.removeChild = function(t) {}, i;
          }, e.createShaderCondition = function(t) {
            var e = this;
            return function() {
              return e[t.replace("this.", "")];
            };
          }, e.EnvConfig = null, e.window = null, e._preCreateElement = null, e._inited = !1,
          e.systemInfo = null, e.isZiYu = !1, e.isPosMsgYu = !1, e.autoCacheFile = !0, e.minClearSize = 5242880,
          e.parseXMLFromString = function(e) {
            var i;
            e = e.replace(/>\s+</g, "><");
            try {
              i = new t.Parser.DOMParser().parseFromString(e, "text/xml");
            } catch (t) {
              throw "需要引入xml解析库文件";
            }
            return i;
          }, e.idx = 1, n(e, ["nativefiles", function() {
            return this.nativefiles = ["layaNativeDir", "wxlocal"];
          }]), e;
      }(),
      x = function() {
        function t() {}
        return s(t, "laya.wx.mini.MiniFileMgr"), t.isLocalNativeFile = function(t) {
            for (var e = 0, i = v.nativefiles.length; e < i; e++)
              if (-1 != t.indexOf(v.nativefiles[e])) return !0;
            return !1;
          }, t.getFileInfo = function(e) {
            var i = e.split("?")[0],
              n = t.filesListObj[i];
            return null == n ? null : n;
          }, t.read = function(e, i, n, s, r, a) {
            void 0 === i && (i = "ascill"), void 0 === s && (s = ""), void 0 === r && (r = !1),
              void 0 === a && (a = "");
            var o;
            o = "" == s || -1 == s.indexOf("http://") && -1 == s.indexOf("https://") ? e : t.getFileNativePath(e),
              t.fs.readFile({
                filePath: o,
                encoding: i,
                success: function(t) {
                  null != n && n.runWith([0, t]);
                },
                fail: function(e) {
                  e && "" != s ? t.downFiles(s, i, n, s, r, a) : null != n && n.runWith([1]);
                }
              });
          }, t.downFiles = function(e, i, n, s, r, a) {
            void 0 === i && (i = "ascii"), void 0 === s && (s = ""), void 0 === r && (r = !1),
              void 0 === a && (a = "");
            t.wxdown({
              url: e,
              success: function(e) {
                200 === e.statusCode && t.readFile(e.tempFilePath, i, n, s, r, a);
              },
              fail: function(t) {
                null != n && n.runWith([1, t]);
              }
            }).onProgressUpdate(function(t) {
              null != n && n.runWith([2, t.progress]);
            });
          }, t.readFile = function(e, i, n, s, r, a) {
            void 0 === i && (i = "ascill"), void 0 === s && (s = ""), void 0 === r && (r = !1),
              void 0 === a && (a = ""), t.fs.readFile({
                filePath: e,
                encoding: i,
                success: function(a) {
                  -1 != e.indexOf("http://") || -1 != e.indexOf("https://") ? (v.autoCacheFile || r) && t.copyFile(e, s, n, i) : null != n && n.runWith([0, a]);
                },
                fail: function(t) {
                  t && null != n && n.runWith([1, t]);
                }
              });
          }, t.downOtherFiles = function(e, i, n, s) {
            void 0 === n && (n = ""), void 0 === s && (s = !1), t.wxdown({
              url: e,
              success: function(e) {
                200 === e.statusCode && ((v.autoCacheFile || s) && -1 == n.indexOf("wx.qlogo.cn") ? t.copyFile(e.tempFilePath, n, i) : null != i && i.runWith([0, e.tempFilePath]));
              },
              fail: function(t) {
                null != i && i.runWith([1, t]);
              }
            });
          }, t.downLoadFile = function(e, i, n, s) {
            void 0 === i && (i = ""), void 0 === s && (s = "ascii"), "image" == i || "sound" == i ? t.downOtherFiles(e, n, e, !0) : t.downFiles(e, s, n, e, !0, i);
          }, t.copyFile = function(e, i, n, s) {
            void 0 === s && (s = "");
            var r = e.split("/"),
              a = r[r.length - 1],
              o = (i.split("?")[0], t.getFileInfo(i)),
              h = t.getFileNativePath(a),
              l = t.getCacheUseSize();
            o ? o.readyUrl != i ? t.fs.getFileInfo({
              filePath: e,
              success: function(e) {
                l + 4194304 + e.size >= 52428800 && (e.size > v.minClearSize && (v.minClearSize = e.size),
                  t.onClearCacheRes()), t.deleteFile(a, i, n, s, e.size);
              },
              fail: function(t) {
                null != n && n.runWith([1, t]);
              }
            }) : null != n && n.runWith([0]) : t.fs.getFileInfo({
              filePath: e,
              success: function(r) {
                l + 4194304 + r.size >= 52428800 && (r.size > v.minClearSize && (v.minClearSize = r.size),
                  t.onClearCacheRes()), t.fs.copyFile({
                  srcPath: e,
                  destPath: h,
                  success: function(e) {
                    t.onSaveFile(i, a, !0, s, n, r.size);
                  },
                  fail: function(t) {
                    null != n && n.runWith([1, t]);
                  }
                });
              },
              fail: function(t) {
                null != n && n.runWith([1, t]);
              }
            });
          }, t.onClearCacheRes = function() {
            var e = v.minClearSize,
              i = [];
            for (var n in t.filesListObj) i.push(t.filesListObj[n]);
            t.sortOn(i, "time", 16);
            for (var s = 0, r = 1, a = i.length; r < a; r++) {
              var o = i[r];
              if (s >= e) break;
              s += o.size, t.deleteFile("", o.readyUrl);
            }
          }, t.sortOn = function(t, e, i) {
            return void 0 === i && (i = 0), 16 == i ? t.sort(function(t, i) {
              return t[e] - i[e];
            }) : 18 == i ? t.sort(function(t, i) {
              return i[e] - t[e];
            }) : t.sort(function(t, i) {
              return t[e] - i[e];
            });
          }, t.getFileNativePath = function(t) {
            return laya.wx.mini.MiniFileMgr.fileNativeDir + "/" + t;
          }, t.deleteFile = function(e, i, n, s, r) {
            void 0 === i && (i = ""), void 0 === s && (s = ""), void 0 === r && (r = 0);
            var a = t.getFileInfo(i),
              o = t.getFileNativePath(a.md5);
            t.fs.unlink({
              filePath: o,
              success: function(a) {
                var o = "" != e;
                if ("" != e) {
                  var h = t.getFileNativePath(e);
                  t.fs.copyFile({
                    srcPath: e,
                    destPath: h,
                    success: function(r) {
                      t.onSaveFile(i, e, o, s, n, r.size);
                    },
                    fail: function(t) {
                      null != n && n.runWith([1, t]);
                    }
                  });
                } else t.onSaveFile(i, e, o, s, n, r);
              },
              fail: function(t) {}
            });
          }, t.deleteAll = function() {
            var e = [];
            for (var i in t.filesListObj) e.push(t.filesListObj[i]);
            for (var n = 1, s = e.length; n < s; n++) {
              var r = e[n];
              t.deleteFile("", r.readyUrl);
            }
          }, t.onSaveFile = function(e, i, n, s, r, o) {
            void 0 === n && (n = !0), void 0 === s && (s = ""), void 0 === o && (o = 0);
            var h = e.split("?")[0];
            if (null == t.filesListObj.fileUsedSize && (t.filesListObj.fileUsedSize = 0), n) {
              t.getFileNativePath(i);
              t.filesListObj[h] = {
                  md5: i,
                  readyUrl: e,
                  size: o,
                  times: a.now(),
                  encoding: s
                }, t.filesListObj.fileUsedSize = parseInt(t.filesListObj.fileUsedSize) + o, t.writeFilesList(h, JSON.stringify(t.filesListObj), !0),
                null != r && r.runWith([0]);
            } else if (t.filesListObj[h]) {
              var l = parseInt(t.filesListObj[h].size);
              t.filesListObj.fileUsedSize = parseInt(t.filesListObj.fileUsedSize) - l, delete t.filesListObj[h],
                t.writeFilesList(h, JSON.stringify(t.filesListObj), !1), null != r && r.runWith([0]);
            }
          }, t.writeFilesList = function(e, i, n) {
            var s = t.fileNativeDir + "/" + t.fileListName;
            t.fs.writeFile({
              filePath: s,
              encoding: "utf8",
              data: i,
              success: function(t) {},
              fail: function(t) {}
            }), !v.isZiYu && v.isPosMsgYu && wx.postMessage({
              url: e,
              data: t.filesListObj[e],
              isLoad: "filenative",
              isAdd: n
            });
          }, t.getCacheUseSize = function() {
            return t.filesListObj && t.filesListObj.fileUsedSize ? t.filesListObj.fileUsedSize : 0;
          }, t.existDir = function(e, i) {
            t.fs.mkdir({
              dirPath: e,
              success: function(t) {
                null != i && i.runWith([0, {
                  data: JSON.stringify({})
                }]);
              },
              fail: function(e) {
                -1 != e.errMsg.indexOf("file already exists") ? t.readSync(t.fileListName, "utf8", i) : null != i && i.runWith([1, e]);
              }
            });
          }, t.readSync = function(e, i, n, s) {
            void 0 === i && (i = "ascill"), void 0 === s && (s = "");
            var r, a = t.getFileNativePath(e);
            try {
              r = t.fs.readFileSync(a, i), null != n && n.runWith([0, {
                data: r
              }]);
            } catch (t) {
              null != n && n.runWith([1]);
            }
          }, t.setNativeFileDir = function(e) {
            t.fileNativeDir = wx.env.USER_DATA_PATH + e;
          }, t.filesListObj = {}, t.fileNativeDir = null, t.fileListName = "layaairfiles.txt",
          t.ziyuFileData = {}, t.loadPath = "", t.DESCENDING = 2, t.NUMERIC = 16, n(t, ["fs", function() {
            return this.fs = wx.getFileSystemManager();
          }, "wxdown", function() {
            return this.wxdown = wx.downloadFile;
          }]), t;
      }(),
      b = function() {
        function t() {}
        s(t, "laya.wx.mini.MiniImage");
        return t.prototype._loadImage = function(e) {
          if (v.isZiYu) t.onCreateImage(e, this, !0);
          else {
            var i = !1;
            if (x.isLocalNativeFile(e)) {
              if (-1 != e.indexOf("http://") || -1 != e.indexOf("https://"))
                if ("" != x.loadPath) e = e.split(x.loadPath)[1];
                else {
                  var n = "" != m.rootPath ? m.rootPath : m.basePath;
                  "" != n && (e = e.split(n)[1]);
                }
            } else i = !0, e = m.formatURL(e);
            x.getFileInfo(e) ? t.onCreateImage(e, this, !i) : -1 != e.indexOf("http://") || -1 != e.indexOf("https://") ? v.isZiYu ? t.onCreateImage(e, this, !0) : x.downOtherFiles(e, new l(t, t.onDownImgCallBack, [e, this]), e) : t.onCreateImage(e, this, !0);
          }
        }, t.onDownImgCallBack = function(e, i, n, s) {
          void 0 === s && (s = ""), n ? i.onError(null) : t.onCreateImage(e, i, !1, s);
        }, t.onCreateImage = function(t, e, i, n) {
          function s() {
            l.onload = null, l.onerror = null, delete e.imgCache[t];
          }
          void 0 === i && (i = !1), void 0 === n && (n = "");
          var r;
          if (v.autoCacheFile)
            if (i) r = t;
            else if ("" != n) r = n;
          else {
            var o = x.getFileInfo(t).md5;
            r = x.getFileNativePath(o);
          } else r = i ? t : n;
          null == e.imgCache && (e.imgCache = {});
          var l, u = function() {
              s(), e._url = m.formatURL(e._url), e.onLoaded(l);
            },
            c = function() {
              s(), e.event("error", "Load image failed");
            };
          "nativeimage" == e._type ? ((l = new a.window.Image()).crossOrigin = "", l.onload = u,
            l.onerror = c, l.src = r, e.imgCache[t] = l) : new h.create(r, {
            onload: u,
            onerror: c,
            onCreate: function(i) {
              l = i, e.imgCache[t] = i;
            }
          });
        }, t;
      }(),
      w = function() {
        function e() {}
        return s(e, "laya.wx.mini.MiniInput"), e._createInputElement = function() {
          u._initInput(u.area = a.createElement("textarea")), u._initInput(u.input = a.createElement("input")),
            u.inputContainer = a.createElement("div"), u.inputContainer.style.position = "absolute",
            u.inputContainer.style.zIndex = 1e5, a.container.appendChild(u.inputContainer),
            u.inputContainer.setPos = function(t, e) {
              u.inputContainer.style.left = t + "px", u.inputContainer.style.top = e + "px";
            }, i.stage.on("resize", null, e._onStageResize), wx.onWindowResize && wx.onWindowResize(function(e) {
              t.dispatchEvent && t.dispatchEvent("resize");
            }), g._soundClass = C, g._musicClass = C;
          var n = v.systemInfo.model,
            s = v.systemInfo.system; -
          1 != n.indexOf("iPhone") && (a.onIPhone = !0, a.onIOS = !0, a.onIPad = !0, a.onAndroid = !1), -1 == s.indexOf("Android") && -1 == s.indexOf("Adr") || (a.onAndroid = !0, a.onIPhone = !1,
            a.onIOS = !1, a.onIPad = !1);
        }, e._onStageResize = function() {
          i.stage._canvasTransform.identity().scale(a.width / d.canvas.width / p.getPixelRatio(), a.height / d.canvas.height / p.getPixelRatio());
        }, e.wxinputFocus = function(t) {
          var e = u.inputElement.target;
          e && !e.editable || (v.window.wx.offKeyboardConfirm(), v.window.wx.offKeyboardInput(),
            v.window.wx.showKeyboard({
              defaultValue: e.text,
              maxLength: e.maxChars,
              multiple: e.multiline,
              confirmHold: !0,
              confirmType: "done",
              success: function(t) {},
              fail: function(t) {}
            }), v.window.wx.onKeyboardConfirm(function(t) {
              var i = t ? t.value : "";
              e.text = i, e.event("input"), laya.wx.mini.MiniInput.inputEnter();
            }), v.window.wx.onKeyboardInput(function(t) {
              var i = t ? t.value : "";
              e.multiline || -1 == i.indexOf("\n") ? (e.text = i, e.event("input")) : laya.wx.mini.MiniInput.inputEnter();
            }));
        }, e.inputEnter = function() {
          u.inputElement.target.focus = !1;
        }, e.wxinputblur = function() {
          e.hideKeyboard();
        }, e.hideKeyboard = function() {
          v.window.wx.offKeyboardConfirm(), v.window.wx.offKeyboardInput(), v.window.wx.hideKeyboard({
            success: function(t) {
              console.log("隐藏键盘");
            },
            fail: function(t) {
              console.log("隐藏键盘出错:" + (t ? t.errMsg : ""));
            }
          });
        }, e;
      }(),
      I = function() {
        function t() {}
        return s(t, "laya.wx.mini.MiniLocalStorage"), t.__init__ = function() {
          t.items = t;
        }, t.setItem = function(t, e) {
          wx.setStorageSync(t, e);
        }, t.getItem = function(t) {
          return wx.getStorageSync(t);
        }, t.setJSON = function(e, i) {
          t.setItem(e, i);
        }, t.getJSON = function(e) {
          return t.getItem(e);
        }, t.removeItem = function(t) {
          wx.removeStorageSync(t);
        }, t.clear = function() {
          wx.clearStorageSync();
        }, t.getStorageInfoSync = function() {
          try {
            var t = wx.getStorageInfoSync();
            return console.log(t.keys), console.log(t.currentSize), console.log(t.limitSize),
              t;
          } catch (t) {}
          return null;
        }, t.support = !0, t.items = null, t;
      }(),
      S = (function() {
        function t() {}
        s(t, "laya.wx.mini.MiniLocation"), t.__init__ = function() {
          v.window.navigator.geolocation.getCurrentPosition = t.getCurrentPosition, v.window.navigator.geolocation.watchPosition = t.watchPosition,
            v.window.navigator.geolocation.clearWatch = t.clearWatch;
        }, t.getCurrentPosition = function(t, e, i) {
          var n;
          (n = {}).success = function(e) {
            null != t && t(e);
          }, n.fail = e, v.window.wx.getLocation(n);
        }, t.watchPosition = function(e, n, s) {
          t._curID++;
          var r;
          return r = {}, r.success = e, r.error = n, t._watchDic[t._curID] = r, i.timer.loop(1e3, null, t._myLoop),
            t._curID;
        }, t.clearWatch = function(e) {
          delete t._watchDic[e], t._hasWatch() || i.timer.clear(null, t._myLoop);
        }, t._hasWatch = function() {
          var e;
          for (e in t._watchDic)
            if (t._watchDic[e]) return !0;
          return !1;
        }, t._myLoop = function() {
          t.getCurrentPosition(t._mySuccess, t._myError);
        }, t._mySuccess = function(e) {
          var i = {};
          i.coords = e, i.timestamp = a.now();
          var n;
          for (n in t._watchDic) t._watchDic[n].success && t._watchDic[n].success(i);
        }, t._myError = function(e) {
          var i;
          for (i in t._watchDic) t._watchDic[i].error && t._watchDic[i].error(e);
        }, t._watchDic = {}, t._curID = 0;
      }(), function(t) {
        function e() {
          e.__super.call(this);
        }
        s(e, "laya.wx.mini.MiniAccelerator", t);
        var i = e.prototype;
        i.on = function(i, n, s, r) {
          return t.prototype.on.call(this, i, n, s, r), e.startListen(this.onDeviceOrientationChange),
            this;
        }, i.off = function(i, n, s, r) {
          return void 0 === r && (r = !1), this.hasListener(i) || e.stopListen(), t.prototype.off.call(this, i, n, s, r);
        }, e.__init__ = function() {
          try {
            var t;
            if (!(t = laya.device.motion.Accelerator)) return;
            t.prototype.on = e.prototype.on, t.prototype.off = e.prototype.off;
          } catch (t) {}
        }, e.startListen = function(t) {
          if (e._callBack = t, !e._isListening) {
            e._isListening = !0;
            try {
              wx.onAccelerometerChange(e.onAccelerometerChange);
            } catch (t) {}
          }
        }, e.stopListen = function() {
          e._isListening = !1;
          try {
            wx.stopAccelerometer({});
          } catch (t) {}
        }, e.onAccelerometerChange = function(t) {
          var i;
          (i = {}).acceleration = t, i.accelerationIncludingGravity = t, i.rotationRate = {},
            null != e._callBack && e._callBack(i);
        }, e._isListening = !1, e._callBack = null;
      }(o), function(t) {
        function e() {
          e.__super.call(this);
        }
        s(e, "laya.wx.mini.MiniLoader", o);
        return e.prototype.load = function(t, i, n, s, r) {
          void 0 === n && (n = !0), void 0 === r && (r = !1);
          if (this._url = t, 0 === t.indexOf("data:image") ? this._type = i = "image" : this._type = i || (i = this.getTypeFromUrl(t)),
            this._cache = n, this._data = null, !r && c.loadedMap[m.formatURL(t)]) return this._data = c.loadedMap[m.formatURL(t)],
            this.event("progress", 1), void this.event("complete", this._data);
          if (null != c.parserMap[i]) return this._customParse = !0, void(c.parserMap[i] instanceof laya.utils.Handler ? c.parserMap[i].runWith(this) : c.parserMap[i].call(null, this));
          var a = v.getUrlEncode(t, i),
            o = y.getFileExtension(t);
          if (-1 != e._fileTypeArr.indexOf(o)) v.EnvConfig.load.call(this, t, i, n, s, r);
          else {
            if (v.isZiYu && x.ziyuFileData[t]) {
              var h = x.ziyuFileData[t];
              return void this.onLoaded(h);
            }
            if (x.getFileInfo(t)) {
              var u = x.getFileInfo(t);
              u.encoding = null == u.encoding ? "ascii" : u.encoding, x.readFile(t, u.encoding, new l(e, e.onReadNativeCallBack, [a, t, i, n, s, r, this]), t);
            } else {
              if (x.isLocalNativeFile(t)) return void x.read(t, a, new l(e, e.onReadNativeCallBack, [a, t, i, n, s, r, this]));
              var _ = t; -
              1 != (t = m.formatURL(t)).indexOf("http://") || -1 != t.indexOf("https://") ? v.EnvConfig.load.call(this, _, i, n, s, r) : x.readFile(t, a, new l(e, e.onReadNativeCallBack, [a, t, i, n, s, r, this]), t);
            }
          }
        }, e.onReadNativeCallBack = function(t, e, i, n, s, r, a, o, h) {
          if (void 0 === n && (n = !0), void 0 === r && (r = !1), void 0 === o && (o = 0),
            o) 1 == o && v.EnvConfig.load.call(a, e, i, n, s, r);
          else {
            var l;
            l = "json" == i || "atlas" == i ? v.getJson(h.data) : "xml" == i ? y.parseXMLFromString(h.data) : h.data, !v.isZiYu && v.isPosMsgYu && "arraybuffer" != i && wx.postMessage({
              url: e,
              data: l,
              isLoad: "filedata"
            }), a.onLoaded(l);
          }
        }, n(e, ["_fileTypeArr", function() {
          return this._fileTypeArr = ["png", "jpg", "bmp", "jpeg", "gif"];
        }]), e;
      }()),
      C = function(t) {
        function e() {
          this._sound = null, this.url = null, this.loaded = !1, this.readyUrl = null, e.__super.call(this);
        }
        s(e, "laya.wx.mini.MiniSound", o);
        var i = e.prototype;
        return i.load = function(t) {
          t = m.formatURL(t), this.url = t, this.readyUrl = t, e._audioCache[this.readyUrl] ? this.event("complete") : v.autoCacheFile && x.getFileInfo(t) ? this.onDownLoadCallBack(t, 0) : v.autoCacheFile ? x.downOtherFiles(t, l.create(this, this.onDownLoadCallBack, [t]), t) : this.onDownLoadCallBack(t, 0);
        }, i.onDownLoadCallBack = function(t, i) {
          if (i) this.event("error");
          else {
            var n;
            if (v.autoCacheFile) {
              var s = x.getFileInfo(t).md5;
              n = x.getFileNativePath(s), this._sound = e._createSound(), this._sound.src = this.url = n;
            } else this._sound = e._createSound(), this._sound.src = t;
            this._sound.onCanplay(e.bindToThis(this.onCanPlay, this)), this._sound.onError(e.bindToThis(this.onError, this));
          }
        }, i.onError = function(t) {
          try {
            console.log("-----1---------------minisound-----id:" + e._id), console.log(t);
          } catch (t) {
            console.log("-----2---------------minisound-----id:" + e._id), console.log(t);
          }
          this.event("error"), this._sound.offError(null);
        }, i.onCanPlay = function() {
          this.loaded = !0, this.event("complete"), e._audioCache[this.readyUrl] = this, this._sound.offCanplay(null);
        }, i.play = function(t, i) {
          void 0 === t && (t = 0), void 0 === i && (i = 0);
          var n;
          if (this.url == g._tMusic ? (e._musicAudio || (e._musicAudio = e._createSound()),
              n = e._musicAudio) : n = e._audioCache[this.readyUrl] ? e._audioCache[this.readyUrl]._sound : e._createSound(),
            v.autoCacheFile && x.getFileInfo(this.url)) {
            var s = x.getFileInfo(this.url).md5;
            n.src = this.url = x.getFileNativePath(s);
          } else n.src = this.url;
          var r = new T(n, this);
          return r.url = this.url, r.loops = i, r.loop = 0 === i, r.startTime = t, r.play(),
            g.addChannel(r), r;
        }, i.dispose = function() {
          var t = e._audioCache[this.readyUrl];
          t && (t.src = "", t._sound && (t._sound.destroy(), t._sound = null, t = null), delete e._audioCache[this.readyUrl]);
        }, r(0, i, "duration", function() {
          return this._sound.duration;
        }), e._createSound = function() {
          return e._id++, v.window.wx.createInnerAudioContext();
        }, e.bindToThis = function(t, e) {
          return t.bind(e);
        }, e._musicAudio = null, e._id = 0, e._audioCache = {}, e;
      }(),
      T = function(t) {
        function e(t, i) {
          this._audio = null, this._onEnd = null, this._miniSound = null, e.__super.call(this),
            this._audio = t, this._miniSound = i, this._onEnd = e.bindToThis(this.__onEnd, this),
            t.onEnded(this._onEnd);
        }
        s(e, "laya.wx.mini.MiniSoundChannel", f);
        var n = e.prototype;
        return n.__onEnd = function() {
          if (1 == this.loops) return this.completeHandler && (i.timer.once(10, this, this.__runComplete, [this.completeHandler], !1),
            this.completeHandler = null), this.stop(), void this.event("complete");
          this.loops > 0 && this.loops--, this.startTime = 0, this.play();
        }, n.play = function() {
          this.isStopped = !1, g.addChannel(this), this._audio.play();
        }, n.stop = function() {
          this.isStopped = !0, g.removeChannel(this), this.completeHandler = null, this._audio && (this._audio.pause(),
            this._audio.offEnded(null), this._audio = null, this._miniSound = null, this._onEnd = null);
        }, n.pause = function() {
          this.isStopped = !0, this._audio.pause();
        }, n.resume = function() {
          this._audio && (this.isStopped = !1, g.addChannel(this), this._audio.play());
        }, r(0, n, "autoplay", function() {
          return this._audio.autoplay;
        }, function(t) {
          this._audio.autoplay = t;
        }), r(0, n, "position", function() {
          return this._audio ? this._audio.currentTime : 0;
        }), r(0, n, "duration", function() {
          return this._audio ? this._audio.duration : 0;
        }), r(0, n, "loop", function() {
          return this._audio.loop;
        }, function(t) {
          this._audio.loop = t;
        }), r(0, n, "volume", function() {
          return this._audio ? this._audio.volume : 1;
        }, function(t) {
          this._audio && (this._audio.volume = t);
        }), e.bindToThis = function(t, e) {
          return t.bind(e);
        }, e;
      }();
    (function() {
      function t() {}
      s(t, "laya.wx.mini.MiniShare"), t.shareAppMessage = function(t, e, n, s, r, a, o) {
        if (i.Browser.onMobile) {
          "" == e && (e = canvas.toTempFilePathSync({
            x: 40,
            y: 40,
            width: 1e3,
            height: 750,
            destWidth: 400,
            destHeight: 300
          }));
          var h = {
            title: t,
            imageUrl: e,
            query: n,
            success: r ? r.bind(s) : null,
            fail: a ? a.bind(s) : null,
            complete: o ? o.bind(s) : null
          };
          wx.shareAppMessage(h);
        }
      }, t.showShareMenu = function(t, e, n, s, r) {
        if (i.Browser.onMobile) {
          var a = {
            withShareTicket: t,
            success: n ? n.bind(e) : null,
            fail: s ? s.bind(e) : null,
            complete: r ? r.bind(e) : null
          };
          wx.showShareMenu(a);
        }
      }, t.updateShareMenu = function(t, e, n, s, r) {
        if (i.Browser.onMobile) {
          var a = {
            withShareTicket: t,
            success: n ? n.bind(e) : null,
            fail: s ? s.bind(e) : null,
            complete: r ? r.bind(e) : null
          };
          wx.updateShareMenu(a);
        }
      }, t.onShareAppMessage = function(t, e) {
        i.Browser.onMobile && wx.onShareAppMessage(e.bind(t));
      }, t.offShareAppMessage = function(t, e) {
        i.Browser.onMobile && wx.offShareAppMessage(e.bind(t));
      }, t.getLaunchOptionsSync = function() {
        if (i.Browser.onMobile) return wx.getLaunchOptionsSync();
      }, t.onShow = function(t, e) {
        i.Browser.onMobile && wx.onShow(e.bind(t));
      }, t.onHide = function(t, e) {
        i.Browser.onMobile && wx.onHide(e.bind(t));
      }, t.onLaunch = function(t, e) {
        i.Browser.onMobile && wx.onLaunch(e.bind(t));
      }, t.createGameClubButton = function(t) {
        if (i.Browser.onMobile) return wx.createGameClubButton && "function" == typeof wx.createGameClubButton ? wx.createGameClubButton(t) : null;
      }, t.getShareInfo = function(t, e, n, s, r) {
        if (i.Browser.onMobile) {
          var a = {
            shareTicket: t,
            success: n ? n.bind(e) : null,
            fail: s ? s.bind(e) : null,
            complete: r ? r.bind(e) : null
          };
          wx.getShareInfo(a);
        }
      }, t.decryptData = function(t, e, i) {
        return wx.decryptData(t, e, i);
      }, t.navigateToMiniProgram = function(t, e, n, s, r) {
        if (i.Browser.onMobile) {
          var a = {
            appId: t,
            extraData: {},
            envVersion: "release",
            success: n ? n.bind(e) : null,
            fail: s ? s.bind(e) : null,
            complete: r ? r.bind(e) : null
          };
          if (wx.navigateToMiniProgram && "function" == typeof wx.createGameClubButton) return wx.navigateToMiniProgram(a);
          a.fail && a.fail("不支持跳转");
        }
      };
    })(),
    function() {
      function t() {}
      s(t, "laya.wx.mini.MiniYun"), t.sendMes = function(t, e) {
        i.Browser.onMobile && wx.sendMes(t, e);
      }, t.onTunnel = function(t, e, n) {
        if (i.Browser.onMobile) {
          var s = n ? n.bind(e) : null;
          wx.onTunnel(t, s);
        }
      };
    }(),
    function() {
      function t() {}
      s(t, "laya.wx.mini.wxsdk"), t.setLoginUrl = function(t) {
        i.Browser.onMobile && wxSdk.setLoginUrl(t);
      }, t.onCheckForUpdate = function(t, e) {
        if (i.Browser.onMobile) {
          var n = e ? e.bind(t) : null;
          wxSdk.onCheckForUpdate(n);
        }
      }, t.onUpdateReady = function(t, e) {
        if (i.Browser.onMobile) {
          var n = e ? e.bind(t) : null;
          wxSdk.onUpdateReady(n);
        }
      }, t.showUpdateReadyWindow = function() {
        i.Browser.onMobile && wxSdk.showUpdateReadyWindow();
      }, t.decryptData = function(t, e, n) {
        if (i.Browser.onMobile) return wxSdk.decryptData(t, e, n);
      }, t.openCustomerServiceConversation = function(t, e, n, s, r, a, o, h, l) {
        if (i.Browser.onMobile) {
          var u = {
            sessionFrom: t,
            showMessageCard: e,
            sendMessageTitle: n,
            sendMessagePath: s,
            sendMessageImg: r,
            success: o ? o.bind(a) : null,
            fail: h ? h.bind(a) : null,
            complete: l ? l.bind(a) : null
          };
          return wxSdk.openCustomerServiceConversation(u);
        }
      }, t.createBannerAd = function(t) {
        if (i.Browser.onMobile) return wxSdk.createBannerAd(t);
      }, t.createRewardedVideoAd = function(t, e, n, s, r, a) {
        if (i.Browser.onMobile) {
          var o = n ? n.bind(e) : null,
            h = s ? s.bind(e) : null;
          r && r.bind(e);
          return wxSdk.createRewardedVideoAd(t, o, h, r, a);
        }
      };
    }();
  }(window, document, Laya), "function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function(t, e) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    for (var i in Laya) {
      var n = Laya[i];
      n && n.__isclass && (e[i] = n);
    }
  }),
  function(t, e, i) {
    i.un, i.uns;
    var n = i.static,
      s = i.class,
      r = i.getset,
      a = i.__newvec,
      o = laya.maths.Arith,
      h = laya.maths.Bezier,
      l = laya.resource.Bitmap,
      u = laya.utils.Browser,
      c = laya.utils.Byte,
      _ = laya.utils.Color,
      d = (laya.filters.ColorFilter,
        i.Config),
      p = laya.resource.Context,
      f = (laya.events.Event, laya.filters.Filter),
      g = laya.display.Graphics,
      m = laya.resource.HTMLCanvas,
      y = (laya.utils.HTMLChar,
        laya.resource.HTMLImage),
      v = laya.resource.HTMLSubImage,
      x = (laya.utils.Handler,
        laya.net.Loader, laya.maths.Matrix),
      b = laya.maths.Point,
      w = laya.maths.Rectangle,
      I = laya.renders.Render,
      S = (laya.renders.RenderContext,
        laya.renders.RenderSprite),
      C = laya.resource.Resource,
      T = laya.resource.ResourceManager,
      E = laya.utils.RunDriver,
      M = laya.display.Sprite,
      L = laya.display.Stage,
      P = laya.utils.Stat,
      A = laya.utils.StringKey,
      D = (laya.display.css.Style,
        laya.system.System),
      R = laya.display.Text,
      N = laya.resource.Texture,
      O = (laya.display.css.TransformInfo,
        laya.net.URL, laya.utils.Utils),
      B = laya.utils.VectorGraphManager;
    laya.utils.WordText;
    i.interface("laya.webgl.shapes.IShape"), i.interface("laya.webgl.submit.ISubmit"),
      i.interface("laya.webgl.text.ICharSegment"), i.interface("laya.webgl.canvas.save.ISaveData"),
      i.interface("laya.webgl.resource.IMergeAtlasBitmap"), i.interface("laya.filters.IFilterActionGL", "laya.filters.IFilterAction");
    var k = function() {
        function t() {}
        s(t, "laya.filters.webgl.FilterActionGL");
        var e = t.prototype;
        return i.imps(e, {
          "laya.filters.IFilterActionGL": !0
        }), e.setValue = function(t) {}, e.setValueMix = function(t) {}, e.apply3d = function(t, e, i, n, s) {
          return null;
        }, e.apply = function(t) {
          return null;
        }, r(0, e, "typeMix", function() {
          return 0;
        }), t;
      }(),
      F = function() {
        function t() {}
        return s(t, "laya.webgl.shader.ShaderValue"), t;
      }(),
      U = function() {
        function t(t, e, n) {
          this._atlasID = 0, this._width = 0, this._height = 0, this._texCount = 0, this._rowInfo = null,
            this._cells = null, this._failSize = new i(), void 0 === t && (t = 0), void 0 === e && (e = 0),
            void 0 === n && (n = 0), this._cells = null, this._rowInfo = null, this._init(t, e),
            this._atlasID = n;
        }
        var e, i;
        s(t, "laya.webgl.atlas.AtlasGrid");
        var n = t.prototype;
        return n.getAltasID = function() {
          return this._atlasID;
        }, n.setAltasID = function(t) {
          t >= 0 && (this._atlasID = t);
        }, n.addTex = function(t, e, i) {
          var n = this._get(e, i);
          return 0 == n.ret ? n : (this._fill(n.x, n.y, e, i, t), this._texCount++, n);
        }, n._release = function() {
          null != this._cells && (this._cells.length = 0, this._cells = null), this._rowInfo && (this._rowInfo.length = 0,
            this._rowInfo = null);
        }, n._init = function(t, i) {
          if (this._width = t, this._height = i, this._release(), 0 == this._width) return !1;
          this._cells = new Uint8Array(this._width * this._height * 3), this._rowInfo = a(this._height);
          for (var n = 0; n < this._height; n++) this._rowInfo[n] = new e();
          return this._clear(), !0;
        }, n._get = function(t, e) {
          var i = new V();
          if (t >= this._failSize.width && e >= this._failSize.height) return i;
          for (var n = -1, s = -1, r = this._width, a = this._height, o = this._cells, h = 0; h < a; h++)
            if (!(this._rowInfo[h].spaceCount < t))
              for (var l = 0; l < r;) {
                var u = 3 * (h * r + l);
                if (0 != o[u] || o[u + 1] < t || o[u + 2] < e) l += o[u + 1];
                else {
                  n = l, s = h;
                  for (var c = 0; c < t; c++)
                    if (o[3 * c + u + 2] < e) {
                      n = -1;
                      break;
                    }
                  if (!(n < 0)) return i.ret = !0, i.x = n, i.y = s, i;
                  l += o[u + 1];
                }
              }
          return i;
        }, n._fill = function(t, e, i, n, s) {
          var r = this._width,
            a = this._height;
          this._check(t + i <= r && e + n <= a);
          for (var o = e; o < n + e; ++o) {
            this._check(this._rowInfo[o].spaceCount >= i), this._rowInfo[o].spaceCount -= i;
            for (var h = 0; h < i; h++) {
              var l = 3 * (t + o * r + h);
              this._check(0 == this._cells[l]), this._cells[l] = s, this._cells[l + 1] = i, this._cells[l + 2] = n;
            }
          }
          if (t > 0)
            for (o = 0; o < n; ++o) {
              var u = 0;
              for (h = t - 1; h >= 0 && 0 == this._cells[3 * ((e + o) * r + h)]; --h, ++u);
              for (h = u; h > 0; --h) this._cells[3 * ((e + o) * r + t - h) + 1] = h, this._check(h > 0);
            }
          if (e > 0)
            for (h = t; h < t + i; ++h) {
              for (u = 0, o = e - 1; o >= 0 && 0 == this._cells[3 * (h + o * r)]; --o, u++);
              for (o = u; o > 0; --o) this._cells[3 * (h + (e - o) * r) + 2] = o, this._check(o > 0);
            }
        }, n._check = function(t) {
          0 == t && console.log("xtexMerger 错误啦");
        }, n._clear = function() {
          this._texCount = 0;
          for (var t = 0; t < this._height; t++) this._rowInfo[t].spaceCount = this._width;
          for (var e = 0; e < this._height; e++)
            for (var i = 0; i < this._width; i++) {
              var n = 3 * (e * this._width + i);
              this._cells[n] = 0, this._cells[n + 1] = this._width - i, this._cells[n + 2] = this._width - e;
            }
          this._failSize.width = this._width + 1, this._failSize.height = this._height + 1;
        }, t.__init$ = function() {
          e = function() {
            function t() {
              this.spaceCount = 0;
            }
            return s(t, ""), t;
          }(), i = function() {
            function t() {
              this.width = 0, this.height = 0;
            }
            return s(t, ""), t;
          }();
        }, t;
      }(),
      G = function() {
        function t(t, e, i, n) {
          this._currentAtlasCount = 0, this._maxAtlaserCount = 0, this._width = 0, this._height = 0,
            this._gridSize = 0, this._gridNumX = 0, this._gridNumY = 0, this._init = !1, this._curAtlasIndex = 0,
            this._setAtlasParam = !1, this._atlaserArray = null, this._needGC = !1, this._setAtlasParam = !0,
            this._width = t, this._height = e, this._gridSize = i, this._maxAtlaserCount = n,
            this._gridNumX = t / i, this._gridNumY = e / i, this._curAtlasIndex = 0, this._atlaserArray = [];
        }
        s(t, "laya.webgl.atlas.AtlasResourceManager");
        var e = t.prototype;
        return e.setAtlasParam = function(e, i, n, s) {
            if (1 == this._setAtlasParam) return t._sid_ = 0, this._width = e, this._height = i,
              this._gridSize = n, this._maxAtlaserCount = s, this._gridNumX = e / n, this._gridNumY = i / n,
              this._curAtlasIndex = 0, this.freeAll(), !0;
            throw console.log("设置大图合集参数错误，只能在开始页面设置各种参数"), -1;
          }, e.pushData = function(e) {
            var i = e.bitmap,
              n = -1,
              s = null,
              r = 0,
              a = 0,
              o = 0;
            for (r = 0, a = this._atlaserArray.length; r < a && (o = (this._curAtlasIndex + r) % a,
                s = this._atlaserArray[o], -1 == (n = s.findBitmapIsExist(i))); r++);
            if (-1 != n) {
              var h = s.InAtlasWebGLImagesOffsetValue[n];
              return f = h[0], g = h[1], s.addToAtlas(e, f, g), !0;
            }
            this._setAtlasParam = !1;
            for (var l = Math.ceil((e.bitmap.width + 2) / this._gridSize), u = Math.ceil((e.bitmap.height + 2) / this._gridSize), c = !1, _ = 0; _ < 2; _++) {
              var d = this._maxAtlaserCount;
              for (r = 0; r < d; r++) {
                o = (this._curAtlasIndex + r) % d, this._atlaserArray.length - 1 >= o || this._atlaserArray.push(new Et(this._gridNumX, this._gridNumY, this._width, this._height, t._sid_++));
                var p = this._atlaserArray[o],
                  f = 0,
                  g = 0,
                  m = p.addTex(1, l, u);
                if (m.ret) {
                  f = m.x * this._gridSize + 1, g = m.y * this._gridSize + 1, i.lock = !0, p.addToAtlasTexture(i, f, g),
                    p.addToAtlas(e, f, g), c = !0, this._curAtlasIndex = o;
                  break;
                }
              }
              if (c) break;
              this._atlaserArray.push(new Et(this._gridNumX, this._gridNumY, this._width, this._height, t._sid_++)),
                this._needGC = !0, this.garbageCollection(), this._curAtlasIndex = this._atlaserArray.length - 1;
            }
            return c || console.log(">>>AtlasManager pushData error"), c;
          }, e.addToAtlas = function(t) {
            laya.webgl.atlas.AtlasResourceManager.instance.pushData(t);
          }, e.garbageCollection = function() {
            if (!0 === this._needGC) {
              for (var t = this._atlaserArray.length - this._maxAtlaserCount, e = 0; e < t; e++) this._atlaserArray[e].dispose(),
                console.log("AtlasResourceManager:Dispose the inner Atlas。");
              console.log(">>>>altas garbageCollection =" + t), this._atlaserArray.splice(0, t),
                this._needGC = !1;
            }
            return !0;
          }, e.freeAll = function() {
            for (var t = 0, e = this._atlaserArray.length; t < e; t++) this._atlaserArray[t].dispose();
            this._atlaserArray.length = 0, this._curAtlasIndex = 0;
          }, e.getAtlaserCount = function() {
            return this._atlaserArray.length;
          }, e.getAtlaserByIndex = function(t) {
            return this._atlaserArray[t];
          }, r(1, t, "instance", function() {
            return t._Instance || (t._Instance = new t(laya.webgl.atlas.AtlasResourceManager.atlasTextureWidth, laya.webgl.atlas.AtlasResourceManager.atlasTextureHeight, 16, laya.webgl.atlas.AtlasResourceManager.maxTextureCount)),
              t._Instance;
          }), r(1, t, "enabled", function() {
            return d.atlasEnable;
          }), r(1, t, "atlasLimitWidth", function() {
            return t._atlasLimitWidth;
          }, function(e) {
            t._atlasLimitWidth = e;
          }), r(1, t, "atlasLimitHeight", function() {
            return t._atlasLimitHeight;
          }, function(e) {
            t._atlasLimitHeight = e;
          }), t._enable = function() {
            d.atlasEnable = !0;
          }, t._disable = function() {
            d.atlasEnable = !1;
          }, t.__init__ = function() {
            t.atlasTextureWidth = 2048, t.atlasTextureHeight = 2048, t.maxTextureCount = 6,
              t.atlasLimitWidth = 512, t.atlasLimitHeight = 512;
          }, t._atlasLimitWidth = 0, t._atlasLimitHeight = 0, t.gridSize = 16, t.atlasTextureWidth = 0,
          t.atlasTextureHeight = 0, t.maxTextureCount = 0, t._atlasRestore = 0, t.BOARDER_TYPE_NO = 0,
          t.BOARDER_TYPE_RIGHT = 1, t.BOARDER_TYPE_LEFT = 2, t.BOARDER_TYPE_BOTTOM = 4, t.BOARDER_TYPE_TOP = 8,
          t.BOARDER_TYPE_ALL = 15, t._sid_ = 0, t._Instance = null, t;
      }(),
      V = function() {
        function t() {
          this.x = 0, this.y = 0, this.ret = !1, this.ret = !1, this.x = 0, this.y = 0;
        }
        return s(t, "laya.webgl.atlas.MergeFillInfo"), t;
      }(),
      H = function() {
        function t() {}
        return s(t, "laya.webgl.canvas.BlendMode"), t._init_ = function(e) {
            t.fns = [t.BlendNormal, t.BlendAdd, t.BlendMultiply, t.BlendScreen, t.BlendOverlay, t.BlendLight, t.BlendMask, t.BlendDestinationOut],
              t.targetFns = [t.BlendNormalTarget, t.BlendAddTarget, t.BlendMultiplyTarget, t.BlendScreenTarget, t.BlendOverlayTarget, t.BlendLightTarget, t.BlendMask, t.BlendDestinationOut];
          }, t.BlendNormal = function(t) {
            t.blendFunc(1, 771);
          }, t.BlendAdd = function(t) {
            t.blendFunc(1, 772);
          }, t.BlendMultiply = function(t) {
            t.blendFunc(774, 771);
          }, t.BlendScreen = function(t) {
            t.blendFunc(1, 1);
          }, t.BlendOverlay = function(t) {
            t.blendFunc(1, 769);
          }, t.BlendLight = function(t) {
            t.blendFunc(1, 1);
          }, t.BlendNormalTarget = function(t) {
            t.blendFunc(1, 771);
          }, t.BlendAddTarget = function(t) {
            t.blendFunc(1, 772);
          }, t.BlendMultiplyTarget = function(t) {
            t.blendFunc(774, 771);
          }, t.BlendScreenTarget = function(t) {
            t.blendFunc(1, 1);
          }, t.BlendOverlayTarget = function(t) {
            t.blendFunc(1, 769);
          }, t.BlendLightTarget = function(t) {
            t.blendFunc(1, 1);
          }, t.BlendMask = function(t) {
            t.blendFunc(0, 770);
          }, t.BlendDestinationOut = function(t) {
            t.blendFunc(0, 0);
          }, t.activeBlendFunction = null, t.NAMES = ["normal", "add", "multiply", "screen", "overlay", "light", "mask", "destination-out"],
          t.TOINT = {
            normal: 0,
            add: 1,
            multiply: 2,
            screen: 3,
            lighter: 1,
            overlay: 4,
            light: 5,
            mask: 6,
            "destination-out": 7
          }, t.NORMAL = "normal", t.ADD = "add", t.MULTIPLY = "multiply", t.SCREEN = "screen",
          t.LIGHT = "light", t.OVERLAY = "overlay", t.DESTINATIONOUT = "destination-out",
          t.fns = [], t.targetFns = [], t;
      }(),
      z = function() {
        function t(t) {
          this._color = _.create("black"), this.setValue(t);
        }
        s(t, "laya.webgl.canvas.DrawStyle");
        var e = t.prototype;
        return e.setValue = function(t) {
          if (t) {
            if ("string" == typeof t) return void(this._color = _.create(t));
            if (t instanceof laya.utils.Color) return void(this._color = t);
          }
        }, e.reset = function() {
          this._color = _.create("black");
        }, e.equal = function(t) {
          return "string" == typeof t ? this._color.strColor === t : t instanceof laya.utils.Color && this._color.numColor === t.numColor;
        }, e.toColorStr = function() {
          return this._color.strColor;
        }, t.create = function(e) {
          if (e) {
            var i;
            if ("string" == typeof e ? i = _.create(e) : e instanceof laya.utils.Color && (i = e),
              i) return i._drawStyle || (i._drawStyle = new t(e));
          }
          return laya.webgl.canvas.DrawStyle.DEFAULT;
        }, n(t, ["DEFAULT", function() {
          return this.DEFAULT = new t("#000000");
        }]), t;
      }(),
      W = function() {
        function t() {
          this._x = 0, this._y = 0, this.dirty = !1, this.offset = 0, this.count = 0, this.geoStart = 0,
            this.tempArray = [], this.closePath = !1, this.geomatrys = [];
          xt.mainContext;
          this.ib = Zt.create(35048), this.vb = Jt.create(5);
        }
        s(t, "laya.webgl.canvas.Path");
        var e = t.prototype;
        return e.addPoint = function(t, e) {
          this.tempArray.push(t, e);
        }, e.getEndPointX = function() {
          return this.tempArray[this.tempArray.length - 2];
        }, e.getEndPointY = function() {
          return this.tempArray[this.tempArray.length - 1];
        }, e.polygon = function(t, e, i, n, s, r) {
          var a;
          return this.geomatrys.push(this._curGeomatry = a = new At(t, e, i, n, s, r)), n || (a.fill = !1),
            void 0 == r && (a.borderWidth = 0), a;
        }, e.setGeomtry = function(t) {
          this.geomatrys.push(this._curGeomatry = t);
        }, e.drawLine = function(t, e, i, n, s) {
          var r;
          return this.closePath ? this.geomatrys.push(this._curGeomatry = r = new Pt(t, e, i, n, s)) : this.geomatrys.push(this._curGeomatry = r = new Lt(t, e, i, n, s)),
            r.fill = !1, r;
        }, e.update = function() {
          var t = this.ib._byteLength,
            e = this.geomatrys.length;
          this.offset = t;
          for (var i = this.geoStart; i < e; i++) this.geomatrys[i].getData(this.ib, this.vb, this.vb._byteLength / 20);
          this.geoStart = e, this.count = (this.ib._byteLength - t) / ft.BYTES_PIDX;
        }, e.reset = function() {
          this.vb.clear(), this.ib.clear(), this.offset = this.count = this.geoStart = 0,
            this.geomatrys.length = 0;
        }, e.recover = function() {
          this._curGeomatry = null, this.vb.destory(), this.vb = null, this.ib.destory(),
            this.ib = null;
        }, t;
      }(),
      Y = function() {
        function t() {}
        s(t, "laya.webgl.canvas.save.SaveBase");
        var e = t.prototype;
        return i.imps(e, {
            "laya.webgl.canvas.save.ISaveData": !0
          }), e.isSaveMark = function() {
            return !1;
          }, e.restore = function(e) {
            this._dataObj[this._valueName] = this._value, t._cache[t._cache._length++] = this,
              this._newSubmit && (e._curSubmit = rt.RENDERBASE, e._renderKey = 0);
          }, t._createArray = function() {
            var t = [];
            return t._length = 0, t;
          }, t._init = function() {
            var e = t._namemap = {};
            return e[1] = "ALPHA", e[2] = "fillStyle", e[8] = "font", e[256] = "lineWidth",
              e[512] = "strokeStyle", e[8192] = "_mergeID", e[1024] = e[2048] = e[4096] = [],
              e[16384] = "textBaseline", e[32768] = "textAlign", e[65536] = "_nBlendType", e[1048576] = "shader",
              e[2097152] = "filters", e;
          }, t.save = function(e, i, n, s) {
            if ((e._saveMark._saveuse & i) !== i) {
              e._saveMark._saveuse |= i;
              var r = t._cache,
                a = r._length > 0 ? r[--r._length] : new t();
              a._value = n[a._valueName = t._namemap[i]], a._dataObj = n, a._newSubmit = s;
              var o = e._save;
              o[o._length++] = a;
            }
          }, t._cache = laya.webgl.canvas.save.SaveBase._createArray(), t._namemap = t._init(),
          t;
      }(),
      X = function() {
        function t() {
          this._clipRect = new w();
        }
        s(t, "laya.webgl.canvas.save.SaveClipRect");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.canvas.save.ISaveData": !0
        }), e.isSaveMark = function() {
          return !1;
        }, e.restore = function(e) {
          e._clipRect = this._clipSaveRect, t._cache[t._cache._length++] = this, this._submitScissor.submitLength = e._submits._length - this._submitScissor.submitIndex,
            e._curSubmit = rt.RENDERBASE, e._renderKey = 0;
        }, t.save = function(e, i) {
          if (131072 != (131072 & e._saveMark._saveuse)) {
            e._saveMark._saveuse |= 131072;
            var n = t._cache,
              s = n._length > 0 ? n[--n._length] : new t();
            s._clipSaveRect = e._clipRect, e._clipRect = s._clipRect.copyFrom(e._clipRect),
              s._submitScissor = i;
            var r = e._save;
            r[r._length++] = s;
          }
        }, n(t, ["_cache", function() {
          return this._cache = Y._createArray();
        }]), t;
      }(),
      K = function() {
        function t() {
          this._contextX = 0, this._contextY = 0, this._clipRect = new w(), this._rect = new w(),
            this._matrix = new x();
        }
        s(t, "laya.webgl.canvas.save.SaveClipRectStencil");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.canvas.save.ISaveData": !0
        }), e.isSaveMark = function() {
          return !1;
        }, e.restore = function(e) {
          ut.restore(e, this._rect, this._saveMatrix, this._contextX, this._contextY), e._clipRect = this._clipSaveRect,
            e._curMat = this._saveMatrix, e._x = this._contextX, e._y = this._contextY, t._cache[t._cache._length++] = this,
            e._curSubmit = rt.RENDERBASE;
        }, t.save = function(e, i, n, s, r, a, o, h, l, u) {
          if (262144 != (262144 & e._saveMark._saveuse)) {
            e._saveMark._saveuse |= 262144;
            var c = t._cache,
              _ = c._length > 0 ? c[--c._length] : new t();
            _._clipSaveRect = e._clipRect, _._clipRect.setTo(o, h, l, u), e._clipRect = _._clipRect,
              _._rect.x = n, _._rect.y = s, _._rect.width = r, _._rect.height = a, _._contextX = e._x,
              _._contextY = e._y, _._saveMatrix = e._curMat, e._curMat.copyTo(_._matrix), e._curMat = _._matrix,
              _._submitStencil = i;
            var d = e._save;
            d[d._length++] = _;
          }
        }, n(t, ["_cache", function() {
          return this._cache = Y._createArray();
        }]), t;
      }(),
      j = function() {
        function t() {
          this._saveuse = 0;
        }
        s(t, "laya.webgl.canvas.save.SaveMark");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.canvas.save.ISaveData": !0
        }), e.isSaveMark = function() {
          return !0;
        }, e.restore = function(e) {
          e._saveMark = this._preSaveMark, t._no[t._no._length++] = this;
        }, t.Create = function(e) {
          var i = t._no,
            n = i._length > 0 ? i[--i._length] : new t();
          return n._saveuse = 0, n._preSaveMark = e._saveMark, e._saveMark = n, n;
        }, n(t, ["_no", function() {
          return this._no = Y._createArray();
        }]), t;
      }(),
      $ = function() {
        function t() {
          this._matrix = new x();
        }
        s(t, "laya.webgl.canvas.save.SaveTransform");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.canvas.save.ISaveData": !0
        }), e.isSaveMark = function() {
          return !1;
        }, e.restore = function(e) {
          e._curMat = this._savematrix, t._no[t._no._length++] = this;
        }, t.save = function(e) {
          var i = e._saveMark;
          if (2048 != (2048 & i._saveuse)) {
            i._saveuse |= 2048;
            var n = t._no,
              s = n._length > 0 ? n[--n._length] : new t();
            s._savematrix = e._curMat, e._curMat = e._curMat.copyTo(s._matrix);
            var r = e._save;
            r[r._length++] = s;
          }
        }, n(t, ["_no", function() {
          return this._no = Y._createArray();
        }]), t;
      }(),
      q = function() {
        function t() {}
        s(t, "laya.webgl.canvas.save.SaveTranslate");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.canvas.save.ISaveData": !0
        }), e.isSaveMark = function() {
          return !1;
        }, e.restore = function(e) {
          e._curMat;
          e._x = this._x, e._y = this._y, t._no[t._no._length++] = this;
        }, t.save = function(e) {
          var i = t._no,
            n = i._length > 0 ? i[--i._length] : new t();
          n._x = e._x, n._y = e._y;
          var s = e._save;
          s[s._length++] = n;
        }, n(t, ["_no", function() {
          return this._no = Y._createArray();
        }]), t;
      }(),
      Q = function() {
        function t() {
          this.target = null, this.repaint = !1, this._width = NaN, this._height = NaN, this._sp = null,
            this._clipRect = new w();
        }
        s(t, "laya.webgl.resource.RenderTargetMAX");
        var e = t.prototype;
        return e.setSP = function(t) {
          this._sp = t;
        }, e.size = function(t, e) {
          var n = this;
          this._width !== t || this._height !== e ? (this.repaint = !0, this._width = t, this._height = e,
            this.target ? this.target.size(t, e) : this.target = Bt.create(t, e), this.target.hasListener("recovered") || this.target.on("recovered", this, function(t) {
              i.timer.callLater(n._sp, n._sp.repaint);
            })) : this.target.size(t, e);
        }, e._flushToTarget = function(t, e) {
          if (!e._destroy) {
            var i = yt.worldScissorTest,
              n = yt.worldClipRect;
            yt.worldClipRect = this._clipRect, this._clipRect.x = this._clipRect.y = 0, this._clipRect.width = this._width,
              this._clipRect.height = this._height, yt.worldScissorTest = !1, xt.mainContext.disable(3089);
            var s = yt.worldAlpha,
              r = yt.worldMatrix4,
              a = yt.worldMatrix,
              o = yt.worldFilters,
              h = yt.worldShaderDefines;
            if (yt.worldMatrix = x.EMPTY, yt.restoreTempArray(), yt.worldMatrix4 = yt.TEMPMAT4_ARRAY,
              yt.worldAlpha = 1, yt.worldFilters = null, yt.worldShaderDefines = null, Ot.activeShader = null,
              e.start(), d.showCanvasMark ? e.clear(0, 1, 0, .3) : e.clear(0, 0, 0, 0), t.flush(),
              e.end(), Ot.activeShader = null, yt.worldAlpha = s, yt.worldMatrix4 = r, yt.worldMatrix = a,
              yt.worldFilters = o, yt.worldShaderDefines = h, yt.worldScissorTest = i, i) {
              var l = yt.height - n.y - n.height;
              xt.mainContext.scissor(n.x, l, n.width, n.height), xt.mainContext.enable(3089);
            }
            yt.worldClipRect = n;
          }
        }, e.flush = function(t) {
          this.repaint && (this._flushToTarget(t, this.target), this.repaint = !1);
        }, e.drawTo = function(t, e, i, n, s) {
          t.drawTexture(this.target.getTexture(), e, i, n, s, 0, 0);
        }, e.destroy = function() {
          this.target && (this.target.destroy(), this.target = null, this._sp = null);
        }, t;
      }(),
      Z = function() {
        function t() {
          this.ALPHA = 1, this.shaderType = 0, this.defines = new Mt();
        }
        s(t, "laya.webgl.shader.d2.Shader2D");
        return t.prototype.destroy = function() {
          this.defines = null, this.filters = null, this.glTexture = null, this.strokeStyle = null,
            this.fillStyle = null;
        }, t.__init__ = function() {
          jt.addInclude("parts/ColorFilter_ps_uniform.glsl", "uniform vec4 colorAlpha;\nuniform mat4 colorMat;"),
            jt.addInclude("parts/ColorFilter_ps_logic.glsl", "mat4 alphaMat =colorMat;\n\nalphaMat[0][3] *= gl_FragColor.a;\nalphaMat[1][3] *= gl_FragColor.a;\nalphaMat[2][3] *= gl_FragColor.a;\n\ngl_FragColor = gl_FragColor * alphaMat;\ngl_FragColor += colorAlpha/255.0*gl_FragColor.a;\n"),
            jt.addInclude("parts/GlowFilter_ps_uniform.glsl", "uniform vec4 u_color;\nuniform float u_strength;\nuniform float u_blurX;\nuniform float u_blurY;\nuniform float u_offsetX;\nuniform float u_offsetY;\nuniform float u_textW;\nuniform float u_textH;"),
            jt.addInclude("parts/GlowFilter_ps_logic.glsl", "const float c_IterationTime = 10.0;\nfloat floatIterationTotalTime = c_IterationTime * c_IterationTime;\nvec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\nvec2 vec2FilterDir = vec2(-(u_offsetX)/u_textW,-(u_offsetY)/u_textH);\nvec2 vec2FilterOff = vec2(u_blurX/u_textW/c_IterationTime * 2.0,u_blurY/u_textH/c_IterationTime * 2.0);\nfloat maxNum = u_blurX * u_blurY;\nvec2 vec2Off = vec2(0.0,0.0);\nfloat floatOff = c_IterationTime/2.0;\nfor(float i = 0.0;i<=c_IterationTime; ++i){\n\tfor(float j = 0.0;j<=c_IterationTime; ++j){\n\t\tvec2Off = vec2(vec2FilterOff.x * (i - floatOff),vec2FilterOff.y * (j - floatOff));\n\t\tvec4Color += texture2D(texture, v_texcoord + vec2FilterDir + vec2Off)/floatIterationTotalTime;\n\t}\n}\ngl_FragColor = vec4(u_color.rgb,vec4Color.a * u_strength);\ngl_FragColor.rgb *= gl_FragColor.a;"),
            jt.addInclude("parts/BlurFilter_ps_logic.glsl", "gl_FragColor =   blur();\ngl_FragColor.w*=alpha;"),
            jt.addInclude("parts/BlurFilter_ps_uniform.glsl", "uniform vec4 strength_sig2_2sig2_gauss1;\nuniform vec2 blurInfo;\n\n#define PI 3.141593\n\n//float sigma=strength/3.0;//3σ以外影响很小。即当σ=1的时候，半径为3\n//float sig2 = sigma*sigma;\n//float _2sig2 = 2.0*sig2;\n//return 1.0/(2*PI*sig2)*exp(-(x*x+y*y)/_2sig2)\n//float gauss1 = 1.0/(2.0*PI*sig2);\n\nfloat getGaussian(float x, float y){\n    return strength_sig2_2sig2_gauss1.w*exp(-(x*x+y*y)/strength_sig2_2sig2_gauss1.z);\n}\n\nvec4 blur(){\n    const float blurw = 9.0;\n    vec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\n    vec2 halfsz=vec2(blurw,blurw)/2.0/blurInfo;    \n    vec2 startpos=v_texcoord-halfsz;\n    vec2 ctexcoord = startpos;\n    vec2 step = 1.0/blurInfo;  //每个像素      \n    \n    for(float y = 0.0;y<=blurw; ++y){\n        ctexcoord.x=startpos.x;\n        for(float x = 0.0;x<=blurw; ++x){\n            //TODO 纹理坐标的固定偏移应该在vs中处理\n            vec4Color += texture2D(texture, ctexcoord)*getGaussian(x-blurw/2.0,y-blurw/2.0);\n            ctexcoord.x+=step.x;\n        }\n        ctexcoord.y+=step.y;\n    }\n    return vec4Color;\n}"),
            jt.addInclude("parts/ColorAdd_ps_uniform.glsl", "uniform vec4 colorAdd;\n"), jt.addInclude("parts/ColorAdd_ps_logic.glsl", "gl_FragColor = vec4(colorAdd.rgb,colorAdd.a*gl_FragColor.a);\ngl_FragColor.xyz *= colorAdd.a;");
          var t, e;
          t = "attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}",
            e = 'precision mediump float;\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec4 color= texture2D(texture, v_texcoord);\n   color.a*=alpha;\n   color.rgb*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}',
            jt.preCompile2D(0, 1, t, e, null), t = "attribute vec4 position;\nuniform vec2 size;\nuniform mat4 mmat;\nvoid main() {\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n}",
            e = 'precision mediump float;\nuniform vec4 color;\nuniform float alpha;\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\nvoid main() {\n\tvec4 a = vec4(color.r, color.g, color.b, color.a);\n\ta.w = alpha;\n\ta.xyz *= alpha;\n\tgl_FragColor = a;\n\t#include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n}',
            jt.preCompile2D(0, 2, t, e, null), t = "attribute vec4 position;\nattribute vec3 a_color;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nuniform vec2 u_pos;\nuniform vec2 size;\nvarying vec3 color;\nvoid main(){\n  vec4 tPos = vec4(position.x + u_pos.x,position.y + u_pos.y,position.z,position.w);\n  vec4 pos=mmat*u_mmat2*tPos;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  color=a_color;\n}",
            e = "precision mediump float;\n//precision mediump float;\nvarying vec3 color;\nuniform float alpha;\nvoid main(){\n\t//vec4 a=vec4(color.r, color.g, color.b, 1);\n\t//a.a*=alpha;\n    gl_FragColor=vec4(color.r, color.g, color.b, alpha);\n\tgl_FragColor.rgb*=alpha;\n}",
            jt.preCompile2D(0, 4, t, e, null), t = "attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}",
            e = '#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\nuniform vec4 u_TexRange;\nuniform vec2 u_offset;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec2 newTexCoord;\n   newTexCoord.x = mod(u_offset.x + v_texcoord.x,u_TexRange.y) + u_TexRange.x;\n   newTexCoord.y = mod(u_offset.y + v_texcoord.y,u_TexRange.w) + u_TexRange.z;\n   vec4 color= texture2D(texture, newTexCoord);\n   color.a*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}',
            jt.preCompile2D(0, 256, t, e, null), t = "attribute vec2 position;\nattribute vec2 texcoord;\nattribute vec4 color;\nuniform vec2 size;\nuniform float offsetX;\nuniform float offsetY;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nvoid main() {\n  vec4 pos=mmat*u_mmat2*vec4(offsetX+position.x,offsetY+position.y,0,1 );\n  gl_Position = vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  v_color = color;\n  v_color.rgb *= v_color.a;\n  v_texcoord = texcoord;  \n}",
            e = "precision mediump float;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nuniform sampler2D texture;\nuniform float alpha;\nvoid main() {\n\tvec4 t_color = texture2D(texture, v_texcoord);\n\tgl_FragColor = t_color.rgba * v_color;\n\tgl_FragColor *= alpha;\n}",
            jt.preCompile2D(0, 512, t, e, null);
        }, t;
      }(),
      J = function() {
        function t(t, e, i) {
          this._value = 0, this._name2int = t, this._int2name = e, this._int2nameMap = i;
        }
        s(t, "laya.webgl.shader.ShaderDefines");
        var e = t.prototype;
        return e.add = function(t) {
          return "string" == typeof t && (t = this._name2int[t]), this._value |= t, this._value;
        }, e.addInt = function(t) {
          return this._value |= t, this._value;
        }, e.remove = function(t) {
          return "string" == typeof t && (t = this._name2int[t]), this._value &= ~t, this._value;
        }, e.isDefine = function(t) {
          return (this._value & t) === t;
        }, e.getValue = function() {
          return this._value;
        }, e.setValue = function(t) {
          this._value = t;
        }, e.toNameDic = function() {
          var e = this._int2nameMap[this._value];
          return e || t._toText(this._value, this._int2name, this._int2nameMap);
        }, t._reg = function(t, e, i, n) {
          i[t] = e, n[e] = t;
        }, t._toText = function(t, e, i) {
          var n = i[t];
          if (n) return n;
          for (var s = {}, r = 1, a = 0; a < 32 && !((r = 1 << a) > t); a++)
            if (t & r) {
              var o = e[r];
              o && (s[o] = "");
            }
          return i[t] = s, s;
        }, t._toInt = function(t, e) {
          for (var i = t.split("."), n = 0, s = 0, r = i.length; s < r; s++) {
            var a = e[i[s]];
            if (!a) throw new Error("Defines to int err:" + t + "/" + i[s]);
            n |= a;
          }
          return n;
        }, t;
      }(),
      tt = function() {
        function t() {
          this.mVBBuffer = null, this.mIBBuffer = null, this.mVBData = null, this.mIBData = null,
            this.mEleNum = 0, this.mTexture = null, this.transform = null, this._vs = null,
            this._ps = null, this._indexStart = -1, this._verticles = null, this._uvs = null,
            this._tempMatrix = new x();
        }
        s(t, "laya.webgl.shader.d2.skinAnishader.SkinMesh");
        var e = t.prototype;
        return e.init = function(e, i, n) {
          if (i) this._vs = i;
          else {
            this._vs = [];
            var s = e.width,
              r = e.height;
            this._vs.push(0, 0, 0, 0, 1, 1, 1, 1), this._vs.push(s, 0, 1, 0, 1, 1, 1, 1), this._vs.push(s, r, 1, 1, 1, 1, 1, 1),
              this._vs.push(0, r, 0, 1, 1, 1, 1, 1);
          }
          n ? this._ps = n : (t._defaultPS || (t._defaultPS = []).push(0, 1, 3, 3, 1, 2),
              this._ps = t._defaultPS), this.mVBData = new Float32Array(this._vs), this.mIBData = new Uint16Array(this._ps.length),
            this.mIBData.start = -1, this.mEleNum = this._ps.length, this.mTexture = e;
        }, e.init2 = function(t, e, i, n, s) {
          this.transform && (this.transform = null), i ? this._ps = i : (this._ps = [], this._ps.push(0, 1, 3, 3, 1, 2)),
            this._verticles = n, this._uvs = s, this.mEleNum = this._ps.length, this.mTexture = t,
            (I.isConchNode || I.isConchApp) && (this._initMyData(), this.mVBData = new Float32Array(this._vs));
        }, e._initMyData = function() {
          var e = 0,
            i = 0,
            n = 4 * this._verticles.length;
          this._vs = t._tempVS;
          var s = !1;
          if (I.isConchNode || I.isConchApp ? (this._vs.length = n, s = !0) : this._vs.length < n && (this._vs.length = n,
              s = !0), t._tVSLen = n, s)
            for (; e < n;) this._vs[e] = this._verticles[i], this._vs[e + 1] = this._verticles[i + 1],
              this._vs[e + 2] = this._uvs[i], this._vs[e + 3] = this._uvs[i + 1], this._vs[e + 4] = 1,
              this._vs[e + 5] = 1, this._vs[e + 6] = 1, this._vs[e + 7] = 1, e += 8, i += 2;
          else
            for (; e < n;) this._vs[e] = this._verticles[i],
              this._vs[e + 1] = this._verticles[i + 1], this._vs[e + 2] = this._uvs[i], this._vs[e + 3] = this._uvs[i + 1],
              e += 8, i += 2;
        }, e.getData2 = function(e, i, n) {
          this.mVBBuffer = e, this.mIBBuffer = i, this._initMyData(), e.appendEx2(this._vs, Float32Array, t._tVSLen, 4),
            this._indexStart = i._byteLength;
          var s;
          (s = t._tempIB).length < this._ps.length && (s.length = this._ps.length);
          for (var r = 0, a = this._ps.length; r < a; r++) s[r] = this._ps[r] + n;
          i.appendEx2(s, Uint16Array, this._ps.length, 2);
        }, e.getData = function(t, e, i) {
          if (this.mVBBuffer = t, this.mIBBuffer = e, t.append(this.mVBData), this._indexStart = e._byteLength,
            this.mIBData.start != i) {
            for (var n = 0, s = this._ps.length; n < s; n++) this.mIBData[n] = this._ps[n] + i;
            this.mIBData.start = i;
          }
          e.append(this.mIBData);
        }, e.render = function(t, e, i) {
          if (I.isWebGL && this.mTexture) {
            t._renderKey = 0, t._shader2D.glTexture = null, et.getInstance().addSkinMesh(this);
            var n = rt.createShape(t, this.mIBBuffer, this.mVBBuffer, this.mEleNum, this._indexStart, St.create(512, 0));
            this.transform || (this.transform = x.EMPTY), this.transform.translate(e, i), x.mul(this.transform, t._curMat, this._tempMatrix),
              this.transform.translate(-e, -i);
            var s = n.shaderValue,
              r = s.u_mmat2 || yt.getMatrArray();
            yt.mat2MatArray(this._tempMatrix, r), s.textureHost = this.mTexture, s.offsetX = 0,
              s.offsetY = 0, s.u_mmat2 = r, s.ALPHA = t._shader2D.ALPHA, t._submits[t._submits._length++] = n;
          } else I.isConchApp && this.mTexture && (this.transform || (this.transform = x.EMPTY),
            t.setSkinMesh && t.setSkinMesh(e, i, this._ps, this.mVBData, this.mEleNum, 0, this.mTexture, this.transform));
        }, t._tempVS = [], t._tempIB = [], t._defaultPS = null, t._tVSLen = 0, t;
      }(),
      et = function() {
        function t() {
          this.ib = null, this.vb = null;
          xt.mainContext;
          this.ib = Zt.create(35048), this.vb = Jt.create(8);
        }
        s(t, "laya.webgl.shader.d2.skinAnishader.SkinMeshBuffer");
        var e = t.prototype;
        return e.addSkinMesh = function(t) {
          t.getData2(this.vb, this.ib, this.vb._byteLength / 32);
        }, e.reset = function() {
          this.vb.clear(), this.ib.clear();
        }, t.getInstance = function() {
          return t.instance = t.instance || new t();
        }, t.instance = null, t;
      }(),
      it = function() {
        function t(t, e, i, n, s, r, a, o, h) {
          this.r0 = 0, this.fill = !0, this.r1 = Math.PI / 2, void 0 === h && (h = 0), this.x = t,
            this.y = e, this.width = i, this.height = n, this.edges = s, this.color = r, this.borderWidth = a,
            this.borderColor = o;
        }
        s(t, "laya.webgl.shapes.BasePoly");
        var e = t.prototype;
        return i.imps(e, {
            "laya.webgl.shapes.IShape": !0
          }), e.getData = function(t, e, i) {}, e.rebuild = function(t) {}, e.setMatrix = function(t) {},
          e.needUpdate = function(t) {
            return !0;
          }, e.sector = function(t, e, i) {
            var n = this.x,
              s = this.y,
              r = this.edges,
              a = (this.r1 - this.r0) / r,
              o = this.width,
              h = this.height,
              l = this.color,
              u = (l >> 16 & 255) / 255,
              c = (l >> 8 & 255) / 255,
              _ = (255 & l) / 255;
            t.push(n, s, u, c, _);
            for (var d = 0; d < r + 1; d++) t.push(n + Math.sin(a * d + this.r0) * o, s + Math.cos(a * d + this.r0) * h),
              t.push(u, c, _);
            for (d = 0; d < r; d++) e.push(i, i + d + 1, i + d + 2);
          }, e.createLine2 = function(t, e, i, n, s, r) {
            var a, o, h, l, u, c, _, d, p, f, g, m, y, v, x, b, w, I, S, C, T = t.concat(),
              E = s,
              M = this.borderColor,
              L = (M >> 16 & 255) / 255,
              P = (M >> 8 & 255) / 255,
              A = (255 & M) / 255,
              D = T.length / 2,
              R = n,
              N = i / 2;
            h = T[0], l = T[1], f = h - (u = T[2]), p = (p = -(l - (c = T[3]))) / (C = Math.sqrt(p * p + f * f)) * N,
              f = f / C * N, E.push(h - p + this.x, l - f + this.y, L, P, A, h + p + this.x, l + f + this.y, L, P, A);
            for (var O = 1; O < D - 1; O++) h = T[2 * (O - 1)], l = T[2 * (O - 1) + 1], u = T[2 * O],
              c = T[2 * O + 1], _ = T[2 * (O + 1)], d = T[2 * (O + 1) + 1], f = h - u, m = u - _,
              x = (-(p = (p = -(l - c)) / (C = Math.sqrt(p * p + f * f)) * N) + h) * (-(f = f / C * N) + c) - (-p + u) * (-f + l),
              I = (-(g = (g = -(c - d)) / (C = Math.sqrt(g * g + m * m)) * N) + _) * (-(m = m / C * N) + c) - (-g + u) * (-m + d),
              S = (y = -f + l - (-f + c)) * (w = -g + u - (-g + _)) - (b = -m + d - (-m + c)) * (v = -p + u - (-p + h)),
              Math.abs(S) < .1 ? (S += 10.1, E.push(u - p + this.x, c - f + this.y, L, P, A, u + p + this.x, c + f + this.y, L, P, A)) : (((a = (v * I - w * x) / S) - u) * (a - u) + ((o = (b * x - y * I) / S) - c) + (o - c),
                E.push(a + this.x, o + this.y, L, P, A, u - (a - u) + this.x, c - (o - c) + this.y, L, P, A));
            h = T[T.length - 4], l = T[T.length - 3], f = h - (u = T[T.length - 2]), p = (p = -(l - (c = T[T.length - 1]))) / (C = Math.sqrt(p * p + f * f)) * N,
              f = f / C * N, E.push(u - p + this.x, c - f + this.y, L, P, A, u + p + this.x, c + f + this.y, L, P, A);
            var B = r;
            for (O = 1; O < B; O++) e.push(R + 2 * (O - 1), R + 2 * (O - 1) + 1, R + 2 * O + 1, R + 2 * O + 1, R + 2 * O, R + 2 * (O - 1));
            return E;
          }, e.createLine = function(t, e, i, n) {
            var s = t.concat(),
              r = t,
              a = this.borderColor,
              o = (a >> 16 & 255) / 255,
              h = (a >> 8 & 255) / 255,
              l = (255 & a) / 255;
            s.splice(0, 5);
            var u, c, _, d, p, f, g, m, y, v, x, b, w, I, S, C, T, E, M, L, P = s.length / 5,
              A = n,
              D = i / 2;
            _ = s[0], d = s[1], v = _ - (p = s[5]), y = (y = -(d - (f = s[6]))) / (L = Math.sqrt(y * y + v * v)) * D,
              v = v / L * D, r.push(_ - y, d - v, o, h, l, _ + y, d + v, o, h, l);
            for (var R = 1; R < P - 1; R++) _ = s[5 * (R - 1)], d = s[5 * (R - 1) + 1], p = s[5 * R],
              f = s[5 * R + 1], g = s[5 * (R + 1)], m = s[5 * (R + 1) + 1], v = _ - p, b = p - g,
              S = (-(y = (y = -(d - f)) / (L = Math.sqrt(y * y + v * v)) * D) + _) * (-(v = v / L * D) + f) - (-y + p) * (-v + d),
              E = (-(x = (x = -(f - m)) / (L = Math.sqrt(x * x + b * b)) * D) + g) * (-(b = b / L * D) + f) - (-x + p) * (-b + m),
              M = (w = -v + d - (-v + f)) * (T = -x + p - (-x + g)) - (C = -b + m - (-b + f)) * (I = -y + p - (-y + _)),
              Math.abs(M) < .1 ? (M += 10.1, r.push(p - y, f - v, o, h, l, p + y, f + v, o, h, l)) : (((u = (I * E - T * S) / M) - p) * (u - p) + ((c = (C * S - w * E) / M) - f) + (c - f),
                r.push(u, c, o, h, l, p - (u - p), f - (c - f), o, h, l));
            _ = s[s.length - 10], d = s[s.length - 9], v = _ - (p = s[s.length - 5]), y = (y = -(d - (f = s[s.length - 4]))) / (L = Math.sqrt(y * y + v * v)) * D,
              v = v / L * D, r.push(p - y, f - v, o, h, l, p + y, f + v, o, h, l);
            var N = this.edges + 1;
            for (R = 1; R < N; R++) e.push(A + 2 * (R - 1), A + 2 * (R - 1) + 1, A + 2 * R + 1, A + 2 * R + 1, A + 2 * R, A + 2 * (R - 1));
            return r;
          }, e.createLoopLine = function(t, e, i, n, s, r) {
            var a = t.concat(),
              o = s || t,
              h = this.borderColor,
              l = (h >> 16 & 255) / 255,
              u = (h >> 8 & 255) / 255,
              c = (255 & h) / 255;
            a.splice(0, 5);
            var _ = [a[0], a[1]],
              d = [a[a.length - 5], a[a.length - 4]],
              p = d[0] + .5 * (_[0] - d[0]),
              f = d[1] + .5 * (_[1] - d[1]);
            a.unshift(p, f, 0, 0, 0), a.push(p, f, 0, 0, 0);
            var g, m, y, v, x, b, w, I, S, C, T, E, M, L, P, A, D, R, N, O, B = a.length / 5,
              k = n,
              F = i / 2;
            y = a[0], v = a[1], C = y - (x = a[5]), S = (S = -(v - (b = a[6]))) / (O = Math.sqrt(S * S + C * C)) * F,
              C = C / O * F, o.push(y - S, v - C, l, u, c, y + S, v + C, l, u, c);
            for (var U = 1; U < B - 1; U++) y = a[5 * (U - 1)], v = a[5 * (U - 1) + 1], x = a[5 * U],
              b = a[5 * U + 1], w = a[5 * (U + 1)], I = a[5 * (U + 1) + 1], C = y - x, E = x - w,
              P = (-(S = (S = -(v - b)) / (O = Math.sqrt(S * S + C * C)) * F) + y) * (-(C = C / O * F) + b) - (-S + x) * (-C + v),
              R = (-(T = (T = -(b - I)) / (O = Math.sqrt(T * T + E * E)) * F) + w) * (-(E = E / O * F) + b) - (-T + x) * (-E + I),
              N = (M = -C + v - (-C + b)) * (D = -T + x - (-T + w)) - (A = -E + I - (-E + b)) * (L = -S + x - (-S + y)),
              Math.abs(N) < .1 ? (N += 10.1, o.push(x - S, b - C, l, u, c, x + S, b + C, l, u, c)) : (((g = (L * R - D * P) / N) - x) * (g - x) + ((m = (A * P - M * R) / N) - b) + (m - b),
                o.push(g, m, l, u, c, x - (g - x), b - (m - b), l, u, c));
            r && (e = r);
            var G = this.edges + 1;
            for (U = 1; U < G; U++) e.push(k + 2 * (U - 1), k + 2 * (U - 1) + 1, k + 2 * U + 1, k + 2 * U + 1, k + 2 * U, k + 2 * (U - 1));
            return e.push(k + 2 * (U - 1), k + 2 * (U - 1) + 1, k + 1, k + 1, k, k + 2 * (U - 1)),
              o;
          }, t;
      }(),
      nt = function() {
        function t() {}
        return s(t, "laya.webgl.shapes.Earcut"), t.earcut = function(e, i, n) {
          n = n || 2;
          var s = i && i.length,
            r = s ? i[0] * n : e.length,
            a = t.linkedList(e, 0, r, n, !0),
            o = [];
          if (!a) return o;
          var h, l, u, c, _, d, p;
          if (s && (a = t.eliminateHoles(e, i, a, n)), e.length > 80 * n) {
            h = u = e[0], l = c = e[1];
            for (var f = n; f < r; f += n) _ = e[f], d = e[f + 1], _ < h && (h = _), d < l && (l = d),
              _ > u && (u = _), d > c && (c = d);
            p = 0 !== (p = Math.max(u - h, c - l)) ? 1 / p : 0;
          }
          return t.earcutLinked(a, o, n, h, l, p), o;
        }, t.linkedList = function(e, i, n, s, r) {
          var a, o;
          if (r === t.signedArea(e, i, n, s) > 0)
            for (a = i; a < n; a += s) o = t.insertNode(a, e[a], e[a + 1], o);
          else
            for (a = n - s; a >= i; a -= s) o = t.insertNode(a, e[a], e[a + 1], o);
          return o && t.equals(o, o.next) && (t.removeNode(o), o = o.next), o;
        }, t.filterPoints = function(e, i) {
          if (!e) return e;
          i || (i = e);
          var n, s = e;
          do {
            if (n = !1, s.steiner || !t.equals(s, s.next) && 0 !== t.area(s.prev, s, s.next)) s = s.next;
            else {
              if (t.removeNode(s), (s = i = s.prev) === s.next) break;
              n = !0;
            }
          } while (n || s !== i);
          return i;
        }, t.earcutLinked = function(e, i, n, s, r, a, o) {
          if (e) {
            !o && a && t.indexCurve(e, s, r, a);
            for (var h, l, u = e; e.prev !== e.next;)
              if (h = e.prev, l = e.next, a ? t.isEarHashed(e, s, r, a) : t.isEar(e)) i.push(h.i / n),
                i.push(e.i / n), i.push(l.i / n), t.removeNode(e), e = l.next, u = l.next;
              else if ((e = l) === u) {
              o ? 1 === o ? (e = t.cureLocalIntersections(e, i, n), t.earcutLinked(e, i, n, s, r, a, 2)) : 2 === o && t.splitEarcut(e, i, n, s, r, a) : t.earcutLinked(t.filterPoints(e, null), i, n, s, r, a, 1);
              break;
            }
          }
        }, t.isEar = function(e) {
          var i = e.prev,
            n = e,
            s = e.next;
          if (t.area(i, n, s) >= 0) return !1;
          for (var r = e.next.next; r !== e.prev;) {
            if (t.pointInTriangle(i.x, i.y, n.x, n.y, s.x, s.y, r.x, r.y) && t.area(r.prev, r, r.next) >= 0) return !1;
            r = r.next;
          }
          return !0;
        }, t.isEarHashed = function(e, i, n, s) {
          var r = e.prev,
            a = e,
            o = e.next;
          if (t.area(r, a, o) >= 0) return !1;
          for (var h = r.x < a.x ? r.x < o.x ? r.x : o.x : a.x < o.x ? a.x : o.x, l = r.y < a.y ? r.y < o.y ? r.y : o.y : a.y < o.y ? a.y : o.y, u = r.x > a.x ? r.x > o.x ? r.x : o.x : a.x > o.x ? a.x : o.x, c = r.y > a.y ? r.y > o.y ? r.y : o.y : a.y > o.y ? a.y : o.y, _ = t.zOrder(h, l, i, n, s), d = t.zOrder(u, c, i, n, s), p = e.nextZ; p && p.z <= d;) {
            if (p !== e.prev && p !== e.next && t.pointInTriangle(r.x, r.y, a.x, a.y, o.x, o.y, p.x, p.y) && t.area(p.prev, p, p.next) >= 0) return !1;
            p = p.nextZ;
          }
          for (p = e.prevZ; p && p.z >= _;) {
            if (p !== e.prev && p !== e.next && t.pointInTriangle(r.x, r.y, a.x, a.y, o.x, o.y, p.x, p.y) && t.area(p.prev, p, p.next) >= 0) return !1;
            p = p.prevZ;
          }
          return !0;
        }, t.cureLocalIntersections = function(e, i, n) {
          var s = e;
          do {
            var r = s.prev,
              a = s.next.next;
            !t.equals(r, a) && t.intersects(r, s, s.next, a) && t.locallyInside(r, a) && t.locallyInside(a, r) && (i.push(r.i / n),
                i.push(s.i / n), i.push(a.i / n), t.removeNode(s), t.removeNode(s.next), s = e = a),
              s = s.next;
          } while (s !== e);
          return s;
        }, t.splitEarcut = function(e, i, n, s, r, a) {
          var o = e;
          do {
            for (var h = o.next.next; h !== o.prev;) {
              if (o.i !== h.i && t.isValidDiagonal(o, h)) {
                var l = t.splitPolygon(o, h);
                return o = t.filterPoints(o, o.next), l = t.filterPoints(l, l.next), t.earcutLinked(o, i, n, s, r, a),
                  void t.earcutLinked(l, i, n, s, r, a);
              }
              h = h.next;
            }
            o = o.next;
          } while (o !== e);
        }, t.eliminateHoles = function(e, i, n, s) {
          var r, a, o, h, l, u = [];
          for (r = 0, a = i.length; r < a; r++) o = i[r] * s, h = r < a - 1 ? i[r + 1] * s : e.length,
            (l = t.linkedList(e, o, h, s, !1)) === l.next && (l.steiner = !0), u.push(t.getLeftmost(l));
          for (u.sort(t.compareX), r = 0; r < u.length; r++) t.eliminateHole(u[r], n), n = t.filterPoints(n, n.next);
          return n;
        }, t.compareX = function(t, e) {
          return t.x - e.x;
        }, t.eliminateHole = function(e, i) {
          if (i = t.findHoleBridge(e, i)) {
            var n = t.splitPolygon(i, e);
            t.filterPoints(n, n.next);
          }
        }, t.findHoleBridge = function(e, i) {
          var n, s = i,
            r = e.x,
            a = e.y,
            o = -1 / 0;
          do {
            if (a <= s.y && a >= s.next.y && s.next.y !== s.y) {
              var h = s.x + (a - s.y) * (s.next.x - s.x) / (s.next.y - s.y);
              if (h <= r && h > o) {
                if (o = h, h === r) {
                  if (a === s.y) return s;
                  if (a === s.next.y) return s.next;
                }
                n = s.x < s.next.x ? s : s.next;
              }
            }
            s = s.next;
          } while (s !== i);
          if (!n) return null;
          if (r === o) return n.prev;
          var l, u = n,
            c = n.x,
            _ = n.y,
            d = 1 / 0;
          for (s = n.next; s !== u;) r >= s.x && s.x >= c && r !== s.x && t.pointInTriangle(a < _ ? r : o, a, c, _, a < _ ? o : r, a, s.x, s.y) && ((l = Math.abs(a - s.y) / (r - s.x)) < d || l === d && s.x > n.x) && t.locallyInside(s, e) && (n = s,
            d = l), s = s.next;
          return n;
        }, t.indexCurve = function(e, i, n, s) {
          var r = e;
          do {
            null === r.z && (r.z = t.zOrder(r.x, r.y, i, n, s)), r.prevZ = r.prev, r.nextZ = r.next,
              r = r.next;
          } while (r !== e);
          r.prevZ.nextZ = null, r.prevZ = null, t.sortLinked(r);
        }, t.sortLinked = function(t) {
          var e, i, n, s, r, a, o, h, l = 1;
          do {
            for (i = t, t = null, r = null, a = 0; i;) {
              for (a++, n = i, o = 0, e = 0; e < l && (o++, n = n.nextZ); e++);
              for (h = l; o > 0 || h > 0 && n;) 0 !== o && (0 === h || !n || i.z <= n.z) ? (s = i,
                  i = i.nextZ, o--) : (s = n, n = n.nextZ, h--), r ? r.nextZ = s : t = s, s.prevZ = r,
                r = s;
              i = n;
            }
            r.nextZ = null, l *= 2;
          } while (a > 1);
          return t;
        }, t.zOrder = function(t, e, i, n, s) {
          return t = 32767 * (t - i) * s, e = 32767 * (e - n) * s, t = 16711935 & (t | t << 8),
            t = 252645135 & (t | t << 4), t = 858993459 & (t | t << 2), t = 1431655765 & (t | t << 1),
            e = 16711935 & (e | e << 8), e = 252645135 & (e | e << 4), e = 858993459 & (e | e << 2),
            e = 1431655765 & (e | e << 1), t | e << 1;
        }, t.getLeftmost = function(t) {
          var e = t,
            i = t;
          do {
            e.x < i.x && (i = e), e = e.next;
          } while (e !== t);
          return i;
        }, t.pointInTriangle = function(t, e, i, n, s, r, a, o) {
          return (s - a) * (e - o) - (t - a) * (r - o) >= 0 && (t - a) * (n - o) - (i - a) * (e - o) >= 0 && (i - a) * (r - o) - (s - a) * (n - o) >= 0;
        }, t.isValidDiagonal = function(e, i) {
          return e.next.i !== i.i && e.prev.i !== i.i && !t.intersectsPolygon(e, i) && t.locallyInside(e, i) && t.locallyInside(i, e) && t.middleInside(e, i);
        }, t.area = function(t, e, i) {
          return (e.y - t.y) * (i.x - e.x) - (e.x - t.x) * (i.y - e.y);
        }, t.equals = function(t, e) {
          return t.x === e.x && t.y === e.y;
        }, t.intersects = function(e, i, n, s) {
          return !!(t.equals(e, i) && t.equals(n, s) || t.equals(e, s) && t.equals(n, i)) || t.area(e, i, n) > 0 != t.area(e, i, s) > 0 && t.area(n, s, e) > 0 != t.area(n, s, i) > 0;
        }, t.intersectsPolygon = function(e, i) {
          var n = e;
          do {
            if (n.i !== e.i && n.next.i !== e.i && n.i !== i.i && n.next.i !== i.i && t.intersects(n, n.next, e, i)) return !0;
            n = n.next;
          } while (n !== e);
          return !1;
        }, t.locallyInside = function(e, i) {
          return t.area(e.prev, e, e.next) < 0 ? t.area(e, i, e.next) >= 0 && t.area(e, e.prev, i) >= 0 : t.area(e, i, e.prev) < 0 || t.area(e, e.next, i) < 0;
        }, t.middleInside = function(t, e) {
          var i = t,
            n = !1,
            s = (t.x + e.x) / 2,
            r = (t.y + e.y) / 2;
          do {
            i.y > r != i.next.y > r && i.next.y !== i.y && s < (i.next.x - i.x) * (r - i.y) / (i.next.y - i.y) + i.x && (n = !n),
              i = i.next;
          } while (i !== t);
          return n;
        }, t.splitPolygon = function(t, e) {
          var i = new st(t.i, t.x, t.y),
            n = new st(e.i, e.x, e.y),
            s = t.next,
            r = e.prev;
          return t.next = e, e.prev = t, i.next = s, s.prev = i, n.next = i, i.prev = n, r.next = n,
            n.prev = r, n;
        }, t.insertNode = function(t, e, i, n) {
          var s = new st(t, e, i);
          return n ? (s.next = n.next, s.prev = n, n.next.prev = s, n.next = s) : (s.prev = s,
            s.next = s), s;
        }, t.removeNode = function(t) {
          t.next.prev = t.prev, t.prev.next = t.next, t.prevZ && (t.prevZ.nextZ = t.nextZ),
            t.nextZ && (t.nextZ.prevZ = t.prevZ);
        }, t.signedArea = function(t, e, i, n) {
          for (var s = 0, r = e, a = i - n; r < i; r += n) s += (t[a] - t[r]) * (t[r + 1] + t[a + 1]),
            a = r;
          return s;
        }, t;
      }(),
      st = function() {
        function t(t, e, i) {
          this.i = null, this.x = null, this.y = null, this.prev = null, this.next = null,
            this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = null, this.i = t,
            this.x = e, this.y = i, this.prev = null, this.next = null, this.z = null, this.prevZ = null,
            this.nextZ = null, this.steiner = !1;
        }
        return s(t, "laya.webgl.shapes.EarcutNode"), t;
      }(),
      rt = (function() {
        function t(t, e, i, n, s, r, a) {
          this.lineWidth = t, this.lineColor = e, this.lineAlpha = i, this.fillColor = n,
            this.fillAlpha = s, this.shape = a, this.fill = r;
        }
        s(t, "laya.webgl.shapes.GeometryData");
        var e = t.prototype;
        e.clone = function() {
          return new t(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.fill, this.shape);
        }, e.getIndexData = function() {
          return null;
        }, e.getVertexData = function() {
          return null;
        }, e.destroy = function() {
          this.shape = null;
        };
      }(), function() {
        function t(t) {
          if (t instanceof Float32Array) this.points = t;
          else if (t instanceof Array) {
            t.length;
            this.points = new Float32Array(t);
          }
        }
        s(t, "laya.webgl.shapes.Vertex");
        var e = t.prototype;
        i.imps(e, {
          "laya.webgl.shapes.IShape": !0
        }), e.getData = function(t, e, i) {}, e.needUpdate = function(t) {
          return !1;
        }, e.rebuild = function(t) {}, e.setMatrix = function(t) {};
      }(), function() {
        function t(t) {
          void 0 === t && (t = 1e4), this._renderType = t;
        }
        s(t, "laya.webgl.submit.Submit");
        var e = t.prototype;
        return i.imps(e, {
            "laya.webgl.submit.ISubmit": !0
          }), e.releaseRender = function() {
            var e = t._cache;
            e[e._length++] = this, this.shaderValue.release(), this._vb = null;
          }, e.getRenderType = function() {
            return this._renderType;
          }, e.renderSubmit = function() {
            if (0 === this._numEle) return 1;
            var t = this.shaderValue.textureHost;
            if (t) {
              var e = t.source;
              if (!t.bitmap || !e) return 1;
              this.shaderValue.texture = e;
            }
            this._vb.bind_upload(this._ib);
            var i = xt.mainContext;
            return this.shaderValue.upload(), H.activeBlendFunction !== this._blendFn && (i.enable(3042),
                this._blendFn(i), H.activeBlendFunction = this._blendFn), P.drawCall++, P.trianglesFaces += this._numEle / 3,
              i.drawElements(4, this._numEle, 5123, this._startIdx), 1;
          }, t.__init__ = function() {
            var e = t.RENDERBASE = new t(-1);
            e.shaderValue = new St(0, 0), e.shaderValue.ALPHA = -1234;
          }, t.createSubmit = function(e, i, n, s, r) {
            var a = t._cache._length ? t._cache[--t._cache._length] : new t();
            null == n && ((n = a._selfVb || (a._selfVb = Jt.create(-1))).clear(), s = 0), a._ib = i,
              a._vb = n, a._startIdx = s * ft.BYTES_PIDX, a._numEle = 0;
            var o = e._nBlendType;
            a._blendFn = e._targets ? H.targetFns[o] : H.fns[o], a.shaderValue = r, a.shaderValue.setValue(e._shader2D);
            var h = e._shader2D.filters;
            return h && a.shaderValue.setFilters(h), a;
          }, t.createShape = function(e, i, n, s, r, a) {
            var o = t._cache._length ? t._cache[--t._cache._length] : new t();
            o._ib = i, o._vb = n, o._numEle = s, o._startIdx = r, o.shaderValue = a, o.shaderValue.setValue(e._shader2D);
            var h = e._nBlendType;
            return o._blendFn = e._targets ? H.targetFns[h] : H.fns[h], o;
          }, t.TYPE_2D = 1e4, t.TYPE_CANVAS = 10003, t.TYPE_CMDSETRT = 10004, t.TYPE_CUSTOM = 10005,
          t.TYPE_BLURRT = 10006, t.TYPE_CMDDESTORYPRERT = 10007, t.TYPE_DISABLESTENCIL = 10008,
          t.TYPE_OTHERIBVB = 10009, t.TYPE_PRIMITIVE = 10010, t.TYPE_RT = 10011, t.TYPE_BLUR_RT = 10012,
          t.TYPE_TARGET = 10013, t.TYPE_CHANGE_VALUE = 10014, t.TYPE_SHAPE = 10015, t.TYPE_TEXTURE = 10016,
          t.TYPE_FILLTEXTURE = 10017, t.RENDERBASE = null, t._cache = (t._cache = [], t._cache._length = 0,
            t._cache), t;
      }()),
      at = function() {
        function t() {
          this.fun = null, this.args = null;
        }
        s(t, "laya.webgl.submit.SubmitCMD");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.submit.ISubmit": !0
        }), e.renderSubmit = function() {
          return this.fun.apply(null, this.args), 1;
        }, e.getRenderType = function() {
          return 0;
        }, e.releaseRender = function() {
          var e = t._cache;
          e[e._length++] = this;
        }, t.create = function(e, i) {
          var n = t._cache._length ? t._cache[--t._cache._length] : new t();
          return n.fun = i, n.args = e, n;
        }, t._cache = (t._cache = [], t._cache._length = 0, t._cache), t;
      }(),
      ot = function() {
        function t() {
          this.variables = {};
        }
        s(t, "laya.webgl.submit.SubmitCMDScope");
        var e = t.prototype;
        return e.getValue = function(t) {
          return this.variables[t];
        }, e.addValue = function(t, e) {
          return this.variables[t] = e;
        }, e.setValue = function(t, e) {
          return this.variables.hasOwnProperty(t) ? this.variables[t] = e : null;
        }, e.clear = function() {
          for (var t in this.variables) delete this.variables[t];
        }, e.recycle = function() {
          this.clear(), t.POOL.push(this);
        }, t.create = function() {
          var e = t.POOL.pop();
          return e || (e = new t()), e;
        }, t.POOL = [], t;
      }(),
      ht = function() {
        function t() {
          this.offset = 0, this.startIndex = 0, this._mat = x.create();
        }
        s(t, "laya.webgl.submit.SubmitOtherIBVB");
        var e = t.prototype;
        return i.imps(e, {
            "laya.webgl.submit.ISubmit": !0
          }), e.releaseRender = function() {
            var e = t._cache;
            e[e._length++] = this;
          }, e.getRenderType = function() {
            return 10009;
          }, e.renderSubmit = function() {
            var e = this._shaderValue.textureHost;
            if (e) {
              var i = e.source;
              if (!e.bitmap || !i) return 1;
              this._shaderValue.texture = i;
            }
            this._vb.bind_upload(this._ib);
            var n = yt.worldMatrix4,
              s = x.TEMP;
            x.mulPre(this._mat, n[0], n[1], n[4], n[5], n[12], n[13], s);
            var r = yt.worldMatrix4 = t.tempMatrix4;
            r[0] = s.a, r[1] = s.b, r[4] = s.c, r[5] = s.d, r[12] = s.tx, r[13] = s.ty, this._shader._offset = this.offset,
              this._shaderValue.refresh(), this._shader.upload(this._shaderValue), this._shader._offset = 0;
            var a = xt.mainContext;
            return H.activeBlendFunction !== this._blendFn && (a.enable(3042), this._blendFn(a),
                H.activeBlendFunction = this._blendFn), P.drawCall++, P.trianglesFaces += this._numEle / 3,
              a.drawElements(4, this._numEle, 5123, this.startIndex), yt.worldMatrix4 = n, Ot.activeShader = null,
              1;
          }, t.create = function(e, i, n, s, r, a, o, h, l) {
            void 0 === l && (l = 0);
            var u = t._cache._length ? t._cache[--t._cache._length] : new t();
            u._ib = n, u._vb = i, u._numEle = s, u._shader = r, u._shaderValue = a;
            var c = e._nBlendType;
            switch (u._blendFn = e._targets ? H.targetFns[c] : H.fns[c], l) {
              case 0:
                u.offset = 0, u.startIndex = h / (ft.BYTES_PE * i.vertexStride) * 1.5, u.startIndex *= ft.BYTES_PIDX;
                break;

              case 1:
                u.startIndex = o, u.offset = h;
            }
            return u;
          }, t._cache = (t._cache = [], t._cache._length = 0, t._cache), t.tempMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
          t;
      }(),
      lt = function() {
        function t() {
          this.submitIndex = 0, this.submitLength = 0, this.context = null, this.clipRect = new w(),
            this.screenRect = new w();
        }
        s(t, "laya.webgl.submit.SubmitScissor");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.submit.ISubmit": !0
        }), e._scissor = function(t, e, i, n) {
          var s = yt.worldMatrix4,
            r = s[0],
            a = s[5];
          if (t = t * r + s[12], e = e * a + s[13], i *= r, n *= a, i < 1 || n < 1) return !1;
          var o = t + i,
            h = e + n;
          t < 0 && (t = 0, i = o - t), e < 0 && (e = 0, n = h - e);
          var l = yt.worldClipRect;
          if (t = Math.max(t, l.x), e = Math.max(e, l.y), i = Math.min(o, l.right) - t, n = Math.min(h, l.bottom) - e,
            i < 1 || n < 1) return !1;
          var u = yt.worldScissorTest;
          return this.screenRect.copyFrom(l), l.x = t, l.y = e, l.width = i, l.height = n,
            yt.worldScissorTest = !0, e = yt.height - e - n, xt.mainContext.scissor(t, e, i, n),
            xt.mainContext.enable(3089), this.context.submitElement(this.submitIndex, this.submitIndex + this.submitLength),
            u ? (e = yt.height - this.screenRect.y - this.screenRect.height, xt.mainContext.scissor(this.screenRect.x, e, this.screenRect.width, this.screenRect.height),
              xt.mainContext.enable(3089)) : (xt.mainContext.disable(3089), yt.worldScissorTest = !1),
            l.copyFrom(this.screenRect), !0;
        }, e._scissorWithTagart = function(t, e, i, n) {
          if (i < 1 || n < 1) return !1;
          var s = t + i,
            r = e + n;
          t < 0 && (t = 0, i = s - t), e < 0 && (e = 0, n = r - e);
          var a = yt.worldClipRect;
          if (t = Math.max(t, a.x), e = Math.max(e, a.y), i = Math.min(s, a.right) - t, n = Math.min(r, a.bottom) - e,
            i < 1 || n < 1) return !1;
          var o = yt.worldScissorTest;
          return this.screenRect.copyFrom(a), yt.worldScissorTest = !0, a.x = t, a.y = e,
            a.width = i, a.height = n, e = yt.height - e - n, xt.mainContext.scissor(t, e, i, n),
            xt.mainContext.enable(3089), this.context.submitElement(this.submitIndex, this.submitIndex + this.submitLength),
            o ? (e = yt.height - this.screenRect.y - this.screenRect.height, xt.mainContext.scissor(this.screenRect.x, e, this.screenRect.width, this.screenRect.height),
              xt.mainContext.enable(3089)) : (xt.mainContext.disable(3089), yt.worldScissorTest = !1),
            a.copyFrom(this.screenRect), !0;
        }, e.renderSubmit = function() {
          return this.submitLength = Math.min(this.context._submits._length - 1, this.submitLength),
            this.submitLength < 1 || this.clipRect.width < 1 || this.clipRect.height < 1 ? this.submitLength + 1 : (this.context._targets ? this._scissorWithTagart(this.clipRect.x, this.clipRect.y, this.clipRect.width, this.clipRect.height) : this._scissor(this.clipRect.x, this.clipRect.y, this.clipRect.width, this.clipRect.height),
              this.submitLength + 1);
        }, e.getRenderType = function() {
          return 0;
        }, e.releaseRender = function() {
          var e = t._cache;
          e[e._length++] = this, this.context = null;
        }, t.create = function(e) {
          var i = t._cache._length ? t._cache[--t._cache._length] : new t();
          return i.context = e, i;
        }, t._cache = (t._cache = [], t._cache._length = 0, t._cache), t;
      }(),
      ut = function() {
        function t() {
          this.step = 0, this.blendMode = null, this.level = 0;
        }
        s(t, "laya.webgl.submit.SubmitStencil");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.submit.ISubmit": !0
        }), e.renderSubmit = function() {
          switch (this.step) {
            case 1:
              this.do1();
              break;

            case 2:
              this.do2();
              break;

            case 3:
              this.do3();
              break;

            case 4:
              this.do4();
              break;

            case 5:
              this.do5();
              break;

            case 6:
              this.do6();
              break;

            case 7:
              this.do7();
              break;

            case 8:
              this.do8();
          }
          return 1;
        }, e.getRenderType = function() {
          return 0;
        }, e.releaseRender = function() {
          var e = t._cache;
          e[e._length++] = this;
        }, e.do1 = function() {
          var t = xt.mainContext;
          t.enable(2960), t.clear(1024), t.colorMask(!1, !1, !1, !1), t.stencilFunc(514, this.level, 255),
            t.stencilOp(7680, 7680, 7682);
        }, e.do2 = function() {
          var t = xt.mainContext;
          t.stencilFunc(514, this.level + 1, 255), t.colorMask(!0, !0, !0, !0), t.stencilOp(7680, 7680, 7680);
        }, e.do3 = function() {
          var t = xt.mainContext;
          t.colorMask(!0, !0, !0, !0), t.stencilOp(7680, 7680, 7680), t.clear(1024), t.disable(2960);
        }, e.do4 = function() {
          var t = xt.mainContext;
          0 == this.level && (t.enable(2960), t.clear(1024)), t.colorMask(!1, !1, !1, !1),
            t.stencilFunc(519, 0, 255), t.stencilOp(7680, 7680, 7682);
        }, e.do5 = function() {
          var t = xt.mainContext;
          t.stencilFunc(514, this.level, 255), t.colorMask(!0, !0, !0, !0), t.stencilOp(7680, 7680, 7680);
        }, e.do6 = function() {
          var t = xt.mainContext;
          H.targetFns[H.TOINT[this.blendMode]](t);
        }, e.do7 = function() {
          var t = xt.mainContext;
          t.colorMask(!1, !1, !1, !1), t.stencilOp(7680, 7680, 7683);
        }, e.do8 = function() {
          var t = xt.mainContext;
          t.colorMask(!0, !0, !0, !0), t.stencilFunc(514, this.level, 255), t.stencilOp(7680, 7680, 7680);
        }, t.restore = function(e, i, n, s, r) {
          var a;
          if (e._renderKey = 0, t._mask > 0 && t._mask--, 0 == t._mask) a = laya.webgl.submit.SubmitStencil.create(3),
            e.addRenderObject(a), e._curSubmit = rt.RENDERBASE;
          else {
            a = laya.webgl.submit.SubmitStencil.create(7), e.addRenderObject(a);
            var o = e._vb;
            o._byteLength;
            if (gt.fillRectImgVb(o, null, i.x, i.y, i.width, i.height, N.DEF_UV, n, s, r, 0, 0)) {
              e._shader2D.glTexture = null;
              var h = e._curSubmit = rt.createSubmit(e, e._ib, o, (o._byteLength - 64) / 32 * 3, St.create(2, 0));
              h.shaderValue.ALPHA = 1, e._submits[e._submits._length++] = h, e._curSubmit._numEle += 6,
                e._curSubmit = rt.RENDERBASE;
            } else alert("clipRect calc stencil rect error");
            a = laya.webgl.submit.SubmitStencil.create(8), e.addRenderObject(a);
          }
        }, t.restore2 = function(e, i) {
          var n;
          e._renderKey = 0, t._mask > 0 && t._mask--, 0 == t._mask ? (n = laya.webgl.submit.SubmitStencil.create(3),
            e.addRenderObject(n), e._curSubmit = rt.RENDERBASE) : (n = laya.webgl.submit.SubmitStencil.create(7),
            e.addRenderObject(n), e._submits[e._submits._length++] = i, n = laya.webgl.submit.SubmitStencil.create(8),
            e.addRenderObject(n));
        }, t.create = function(e) {
          var i = t._cache._length ? t._cache[--t._cache._length] : new t();
          return i.step = e, 5 == e && ++t._mask, i.level = t._mask, i;
        }, t._cache = (t._cache = [], t._cache._length = 0, t._cache), t._mask = 0, t;
      }(),
      ct = function() {
        function t() {
          this._renderType = 0, this._vb = null, this._ib = null, this._startIdx = 0, this._numEle = 0,
            this.shaderValue = null, this.blendType = 0, this.proName = null, this.scope = null;
        }
        s(t, "laya.webgl.submit.SubmitTarget");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.submit.ISubmit": !0
        }), e.renderSubmit = function() {
          this._vb.bind_upload(this._ib);
          var t = this.scope.getValue(this.proName);
          return t && (this.shaderValue.texture = t.source, this.shaderValue.strength && !this.shaderValue.blurInfo && (this.shaderValue.blurInfo = [t.width, t.height]),
            this.shaderValue.upload(), this.blend(), P.drawCall++, P.trianglesFaces += this._numEle / 3,
            xt.mainContext.drawElements(4, this._numEle, 5123, this._startIdx)), 1;
        }, e.blend = function() {
          if (H.activeBlendFunction !== H.fns[this.blendType]) {
            var t = xt.mainContext;
            t.enable(3042), H.fns[this.blendType](t), H.activeBlendFunction = H.fns[this.blendType];
          }
        }, e.getRenderType = function() {
          return 0;
        }, e.releaseRender = function() {
          var e = t._cache;
          e[e._length++] = this;
        }, t.create = function(e, i, n, s, r, a) {
          var o = t._cache._length ? t._cache[--t._cache._length] : new t();
          return o._ib = i, o._vb = n, o.proName = a, o._startIdx = s * ft.BYTES_PIDX, o._numEle = 0,
            o.blendType = e._nBlendType, o.shaderValue = r, o.shaderValue.setValue(e._shader2D),
            o;
        }, t._cache = (t._cache = [], t._cache._length = 0, t._cache), t;
      }(),
      _t = function() {
        function t() {
          this._sourceStr = null;
        }
        s(t, "laya.webgl.text.CharSegment");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.text.ICharSegment": !0
        }), e.textToSpit = function(t) {
          this._sourceStr = t;
        }, e.getChar = function(t) {
          return this._sourceStr.charAt(t);
        }, e.getCharCode = function(t) {
          return this._sourceStr.charCodeAt(t);
        }, e.length = function() {
          return this._sourceStr.length;
        }, t;
      }(),
      dt = function() {
        function t() {}
        var e;
        return s(t, "laya.webgl.text.DrawText"), t.__init__ = function() {
            t._charsTemp = new Array(), t._drawValue = new e(), t._charSeg = new _t();
          }, t.customCharSeg = function(e) {
            t._charSeg = e;
          }, t.getChar = function(e, i, n) {
            var s = Yt.createOneChar(e, n);
            return -1 != i && (t._charsCache[i] = s), s;
          }, t._drawSlow = function(e, i, n, s, r, a, o, h, l, u, c, _, d, p, f) {
            var g, m, y = t._drawValue.value(a, h, l, u, d, p, f),
              v = 0,
              x = 0,
              b = t._charsTemp,
              w = 0,
              I = NaN;
            if (s)
              for (b.length = s.length, v = 0, x = s.length; v < x; v++) I = (m = s[v]).charNum + y.txtID,
                b[v] = g = t._charsCache[I] || t.getChar(m.char, I, y), g.active();
            else {
              var S = n instanceof laya.utils.WordText ? n.toString() : n;
              if (R.CharacterCache) {
                t._charSeg.textToSpit(S);
                var C = t._charSeg.length();
                for (b.length = C, v = 0, x = C; v < x; v++) I = t._charSeg.getCharCode(v) + y.txtID,
                  b[v] = g = t._charsCache[I] || t.getChar(t._charSeg.getChar(v), I, y), g.active(),
                  w += g.cw;
              } else b.length = 0, (g = t.getChar(S, -1, y)).active(), w += g.cw, b[0] = g;
            }
            var T = 0;
            null !== o && "left" !== o && (T = -("center" == o ? w / 2 : w));
            var E, M, L = NaN,
              P = 0;
            if (s)
              for (v = 0, x = b.length; v < x; v++)(g = b[v]).isSpace || (m = s[v], L = g.borderSize,
                E = g.texture, i._drawText(E, c + T + m.x * d - L, _ + m.y * p - L, E.width, E.height, r, 0, 0, 0, 0));
            else {
              for (v = 0, x = b.length; v < x; v++)(g = b[v]).isSpace || (L = g.borderSize, E = g.texture,
                i._drawText(E, c + T - L, _ - L, E.width, E.height, r, 0, 0, 0, 0), e && ((M = e[P++]) || (M = e[P - 1] = []),
                  M[0] = E, M[1] = T - L, M[2] = -L)), T += g.cw;
              e && (e.length = P);
            }
          }, t._drawFast = function(t, e, i, n, s) {
            for (var r, a, o = 0, h = t.length; o < h; o++)(r = (a = t[o])[0]).active(), e._drawText(r, n + a[1], s + a[2], r.width, r.height, i, 0, 0, 0, 0);
          }, t.drawText = function(e, n, s, r, a, o, h, l, u, c, _, p) {
            if (void 0 === p && (p = 0), !(n && 0 === n.length || s && 0 === s.length)) {
              var f = r.a,
                g = r.d;
              (0 !== r.b || 0 !== r.c) && (f = g = 1);
              var m = 1 !== f || 1 !== g;
              if (m && i.stage.transform) {
                var y = i.stage.transform;
                m = y.a === f && y.d === g;
              } else m = !1;
              if (m) {
                var v = (r = r.copyTo(It._tmpMatrix)).tx,
                  x = r.ty;
                r.scale(1 / f, 1 / g), r._checkTransform(), c *= f, _ *= g, c += v - r.tx, _ += x - r.ty;
              } else f = g = 1;
              if (s) t._drawSlow(null, e, n, s, r, a, o, h, l, u, c, _, f, g, p);
              else {
                if (null === n.toUpperCase) {
                  var b = f + 1e5 * g,
                    w = n;
                  return void(w.changed || w.id !== b ? (w.id = b, w.changed = !1, t._drawSlow(w.save, e, n, s, r, a, o, h, l, u, c, _, f, g, p)) : t._drawFast(w.save, e, r, c, _));
                }
                var I = n + a.toString() + h + l + u + f + g + o,
                  S = t._textsCache[I];
                R.CharacterCache ? S ? t._drawFast(S, e, r, c, _) : (t._textsCache.__length || (t._textsCache.__length = 0),
                  t._textsCache.__length > d.WebGLTextCacheCount && ((t._textsCache = {}).__length = 0,
                    t._curPoolIndex = 0), t._textCachesPool[t._curPoolIndex] ? (S = t._textsCache[I] = t._textCachesPool[t._curPoolIndex],
                    S.length = 0) : t._textCachesPool[t._curPoolIndex] = S = t._textsCache[I] = [],
                  t._textsCache.__length++, t._curPoolIndex++, t._drawSlow(S, e, n, s, r, a, o, h, l, u, c, _, f, g, p)) : t._drawSlow(S, e, n, s, r, a, o, h, l, u, c, _, f, g, p);
              }
            }
          }, t._charsTemp = null, t._textCachesPool = [], t._curPoolIndex = 0, t._charsCache = {},
          t._textsCache = {}, t._drawValue = null, t.d = [], t._charSeg = null, t.__init$ = function() {
            e = function() {
              function t() {}
              s(t, "");
              return t.prototype.value = function(e, i, n, s, r, a, o) {
                this.font = e, this.fillColor = i, this.borderColor = n, this.lineWidth = s, this.scaleX = r,
                  this.scaleY = a, this.underLine = o;
                var h = e.toString() + r + a + s + i + n + o;
                return this.txtID = t._keymap[h], this.txtID || (this.txtID = 1e-7 * ++t._keymapCount,
                  t._keymap[h] = this.txtID), this;
              }, t.clear = function() {
                t._keymap = {}, t._keymapCount = 1;
              }, t._keymap = {}, t._keymapCount = 1, t;
            }();
          }, t;
      }(),
      pt = function() {
        function t(e) {
          this._index = 0, this._size = 14, this._italic = -2, t._cache2 = t._cache2 || [],
            this.setFont(e || "14px Arial");
        }
        s(t, "laya.webgl.text.FontInContext");
        var e = t.prototype;
        return e.setFont = function(e) {
          var i = t._cache2[e];
          if (i) this._words = i[0], this._size = i[1];
          else {
            this._words = e.split(" ");
            for (var n = 0, s = this._words.length; n < s; n++)
              if (this._words[n].indexOf("px") > 0) {
                this._index = n;
                break;
              }
            this._size = parseInt(this._words[this._index]), t._cache2[e] = [this._words, this._size];
          }
          this._text = null, this._italic = -2;
        }, e.getItalic = function() {
          return -2 === this._italic && (this._italic = this.hasType("italic")), this._italic;
        }, e.hasType = function(t) {
          for (var e = 0, i = this._words.length; e < i; e++)
            if (this._words[e] === t) return e;
          return -1;
        }, e.removeType = function(t) {
          for (var e = 0, i = this._words.length; e < i; e++)
            if (this._words[e] === t) {
              this._words.splice(e, 1), this._index > e && this._index--;
              break;
            }
          this._text = null, this._italic = -2;
        }, e.copyTo = function(t) {
          return t._text = this._text, t._size = this._size, t._index = this._index, t._words = this._words.slice(),
            t._italic = -2, t;
        }, e.toString = function() {
          return this._text ? this._text : this._text = this._words.join(" ");
        }, r(0, e, "size", function() {
          return this._size;
        }, function(t) {
          this._size = t, this._words[this._index] = t + "px", this._text = null;
        }), t.create = function(e) {
          var i = t._cache[e];
          return i || (i = t._cache[e] = new t(e));
        }, t.EMPTY = new t(), t._cache = {}, t._cache2 = null, t;
      }(),
      ft = function() {
        function t() {}
        return s(t, "laya.webgl.utils.CONST3D2D"), t.defaultMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
          t.defaultMinusYMatrix4 = [1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], t.uniformMatrix3 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0],
          t._TMPARRAY = [], t._OFFSETX = 0, t._OFFSETY = 0, n(t, ["BYTES_PE", function() {
            return this.BYTES_PE = Float32Array.BYTES_PER_ELEMENT;
          }, "BYTES_PIDX", function() {
            return this.BYTES_PIDX = Uint16Array.BYTES_PER_ELEMENT;
          }]), t;
      }(),
      gt = function() {
        function t() {}
        return s(t, "laya.webgl.utils.GlUtils"), t.make2DProjection = function(t, e, i) {
          return [2 / t, 0, 0, 0, 0, -2 / e, 0, 0, 0, 0, 2 / i, 0, -1, 1, 0, 1];
        }, t.fillIBQuadrangle = function(t, e) {
          if (e > 65535 / 4) throw Error("IBQuadrangle count:" + e + " must<:" + Math.floor(65535 / 4));
          e = Math.floor(e), t._resizeBuffer(6 * (e + 1) * 2, !1), t.byteLength = t.bufferLength;
          for (var i = t.getUint16Array(), n = 0, s = 0; s < e; s++) i[n++] = 4 * s, i[n++] = 4 * s + 2,
            i[n++] = 4 * s + 1, i[n++] = 4 * s, i[n++] = 4 * s + 3, i[n++] = 4 * s + 2;
          return t.setNeedUpload(), !0;
        }, t.expandIBQuadrangle = function(e, i) {
          e.bufferLength >= 6 * i * 2 || t.fillIBQuadrangle(e, i);
        }, t.mathCeilPowerOfTwo = function(t) {
          return t--, t |= t >> 1, t |= t >> 2, t |= t >> 4, t |= t >> 8, t |= t >> 16, ++t;
        }, t.fillQuadrangleImgVb = function(t, e, i, n, s, r, a, o) {
          var h = 16 + (t._byteLength >> 2);
          t.byteLength = h << 2;
          var l = t.getFloat32Array();
          l[(h -= 16) + 2] = s[0], l[h + 3] = s[1], l[h + 6] = s[2], l[h + 7] = s[3], l[h + 10] = s[4],
            l[h + 11] = s[5], l[h + 14] = s[6], l[h + 15] = s[7];
          var u = r.a,
            c = r.b,
            _ = r.c,
            d = r.d;
          if (1 !== u || 0 !== c || 0 !== _ || 1 !== d) {
            r.bTransform = !0;
            var p = r.tx + a,
              f = r.ty + o;
            l[h] = (n[0] + e) * u + (n[1] + i) * _ + p, l[h + 1] = (n[0] + e) * c + (n[1] + i) * d + f,
              l[h + 4] = (n[2] + e) * u + (n[3] + i) * _ + p, l[h + 5] = (n[2] + e) * c + (n[3] + i) * d + f,
              l[h + 8] = (n[4] + e) * u + (n[5] + i) * _ + p, l[h + 9] = (n[4] + e) * c + (n[5] + i) * d + f,
              l[h + 12] = (n[6] + e) * u + (n[7] + i) * _ + p, l[h + 13] = (n[6] + e) * c + (n[7] + i) * d + f;
          } else r.bTransform = !1, e += r.tx + a, i += r.ty + o, l[h] = e + n[0], l[h + 1] = i + n[1],
            l[h + 4] = e + n[2], l[h + 5] = i + n[3], l[h + 8] = e + n[4], l[h + 9] = i + n[5],
            l[h + 12] = e + n[6], l[h + 13] = i + n[7];
          return t._upload = !0, !0;
        }, t.fillTranglesVB = function(t, e, i, n, s, r, a) {
          var o = (t._byteLength >> 2) + n.length;
          t.byteLength = o << 2;
          var h = t.getFloat32Array();
          o -= n.length;
          for (var l = n.length, u = s.a, c = s.b, _ = s.c, d = s.d, p = 0; p < l; p += 4)
            if (h[o + p + 2] = n[p + 2],
              h[o + p + 3] = n[p + 3], 1 !== u || 0 !== c || 0 !== _ || 1 !== d) {
              s.bTransform = !0;
              var f = s.tx + r,
                g = s.ty + a;
              h[o + p] = (n[p] + e) * u + (n[p + 1] + i) * _ + f, h[o + p + 1] = (n[p] + e) * c + (n[p + 1] + i) * d + g;
            } else s.bTransform = !1, e += s.tx + r, i += s.ty + a, h[o + p] = e + n[p], h[o + p + 1] = i + n[p + 1];
          return t._upload = !0, !0;
        }, t.copyPreImgVb = function(t, e, i) {
          var n = t._byteLength >> 2;
          t.byteLength = n + 16 << 2;
          for (var s = t.getFloat32Array(), r = 0, a = n - 16; r < 4; r++) s[n] = s[a] + e,
            ++a, s[++n] = s[a] + i, ++a, s[++n] = s[a], ++a, s[++n] = s[a], ++n, ++a;
          t._upload = !0;
        }, t.fillRectImgVb = function(t, e, i, n, s, r, a, o, h, l, u, c, _) {
          void 0 === _ && (_ = !1);
          var d, p, f, g, m, y, v, x, b, w, I, S, C, T, E, M, L = 1,
            P = o.a,
            A = o.b,
            D = o.c,
            R = o.d,
            N = e && e.width < 99999999;
          if (1 !== P || 0 !== A || 0 !== D || 1 !== R ? (o.bTransform = !0, 0 === A && 0 === D && (L = 23,
              b = s + i, w = r + n, d = P * i + (I = o.tx + h), f = P * b + I, p = R * n + (S = o.ty + l),
              g = R * w + S)) : (L = 23, o.bTransform = !1, f = (d = i + o.tx + h) + s, g = (p = n + o.ty + l) + r),
            N && (m = e.x, y = e.y, v = e.width + m, x = e.height + y), 1 !== L) {
            if (Math.min(d, f) >= v) return !1;
            if (Math.min(p, g) >= x) return !1;
            if (Math.max(f, d) <= m) return !1;
            if (Math.max(g, p) <= y) return !1;
          }
          var O = t._byteLength >> 2;
          t.byteLength = O + 16 << 2;
          var B = t.getFloat32Array();
          switch (B[O + 2] = a[0], B[O + 3] = a[1], B[O + 6] = a[2], B[O + 7] = a[3], B[O + 10] = a[4],
            B[O + 11] = a[5], B[O + 14] = a[6], B[O + 15] = a[7], L) {
            case 1:
              I = o.tx + h, S = o.ty + l;
              var k = P * i,
                F = D * n,
                U = R * n,
                G = A * i,
                V = P * (b = s + i),
                H = D * (w = r + n),
                z = R * w,
                W = A * b;
              _ ? (C = k + F + I, E = Math.round(C) - C, T = U + G + S, M = Math.round(T) - T,
                B[O] = C + E, B[O + 1] = T + M, B[O + 4] = V + F + I + E, B[O + 5] = U + W + S + M,
                B[O + 8] = V + H + I + E, B[O + 9] = z + W + S + M, B[O + 12] = k + H + I + E, B[O + 13] = z + G + S + M) : (B[O] = k + F + I,
                B[O + 1] = U + G + S, B[O + 4] = V + F + I, B[O + 5] = U + W + S, B[O + 8] = V + H + I,
                B[O + 9] = z + W + S, B[O + 12] = k + H + I, B[O + 13] = z + G + S);
              break;

            case 23:
              _ ? (C = d + u, E = Math.round(C) - C, T = p, M = Math.round(T) - T, B[O] = C + E,
                B[O + 1] = T + M, B[O + 4] = f + u + E, B[O + 5] = p + M, B[O + 8] = f + E, B[O + 9] = g + M,
                B[O + 12] = d + E, B[O + 13] = g + M) : (B[O] = d + u, B[O + 1] = p, B[O + 4] = f + u,
                B[O + 5] = p, B[O + 8] = f, B[O + 9] = g, B[O + 12] = d, B[O + 13] = g);
          }
          return t._upload = !0, !0;
        }, t.fillLineVb = function(e, i, n, s, r, a, o, h) {
          var l = .5 * o,
            u = t._fillLineArray,
            c = -(s - a),
            _ = n - r,
            d = Math.sqrt(c * c + _ * _);
          c /= d, _ /= d, c *= l, _ *= l, u[0] = n - c, u[1] = s - _, u[4] = n + c, u[5] = s + _,
            u[8] = r + c, u[9] = a + _, u[12] = r - c, u[13] = a - _, h && h.transformPointArray(u, u);
          var p = 16 + (e._byteLength >> 2);
          return e.byteLength = p << 2, e.insertData(u, p - 16), !0;
        }, t._fillLineArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], t;
      }(),
      mt = (function() {
        function t() {}
        s(t, "laya.webgl.utils.MatirxArray"), t.ArrayMul = function(e, i, n) {
          if (e)
            if (i)
              for (var s = NaN, r = NaN, a = NaN, o = NaN, h = 0; h < 4; h++) s = e[h],
                r = e[h + 4], a = e[h + 8], o = e[h + 12], n[h] = s * i[0] + r * i[1] + a * i[2] + o * i[3],
                n[h + 4] = s * i[4] + r * i[5] + a * i[6] + o * i[7], n[h + 8] = s * i[8] + r * i[9] + a * i[10] + o * i[11],
                n[h + 12] = s * i[12] + r * i[13] + a * i[14] + o * i[15];
            else t.copyArray(e, n);
          else t.copyArray(i, n);
        }, t.copyArray = function(t, e) {
          if (t && e)
            for (var i = 0; i < t.length; i++) e[i] = t[i];
        };
      }(), function() {
        function t(t, e, i) {
          this._stride = 0, this.vertNum = 0, this.indexNum = 0, this._applied = !1, this._vb = null,
            this._ib = null, this._vao = null, this._attribInfo = null, this._quadNum = 0, this.canReuse = !1,
            this._stride = t, this._vb = new Jt(t, 35048), e && this._vb._resizeBuffer(e, !1),
            this._ib = new Zt(), i && this._ib._resizeBuffer(i, !1);
        }
        s(t, "laya.webgl.utils.Mesh2D");
        var e = t.prototype;
        return e.cloneWithNewVB = function() {
          var e = new t(this._stride, 0, 0);
          return e._ib = this._ib, e._quadNum = this._quadNum, e._attribInfo = this._attribInfo,
            e;
        }, e.cloneWithNewVBIB = function() {
          var e = new t(this._stride, 0, 0);
          return e._attribInfo = this._attribInfo, e;
        }, e.getVBW = function() {
          return this._vb.setNeedUpload(), this._vb;
        }, e.getVBR = function() {
          return this._vb;
        }, e.getIBR = function() {
          return this._ib;
        }, e.getIBW = function() {
          return this._ib.setNeedUpload(), this._ib;
        }, e.createQuadIB = function(t) {
          this._quadNum = t, this._ib._resizeBuffer(6 * t * 2, !1), this._ib.byteLength = this._ib.bufferLength;
          for (var e = this._ib.getUint16Array(), i = 0, n = 0, s = 0; s < t; s++) e[i++] = n,
            e[i++] = n + 2, e[i++] = n + 1, e[i++] = n, e[i++] = n + 3, e[i++] = n + 2, n += 4;
          this._ib.setNeedUpload();
        }, e.setAttributes = function(t) {
          if (this._attribInfo = t, this._attribInfo.length % 3 != 0) throw "Mesh2D setAttributes error!";
        }, e.getEleNum = function() {
          return this._ib.getBuffer().byteLength / 2;
        }, e.releaseMesh = function() {}, e.destroy = function() {}, e.clearVB = function() {
          this._vb.clear();
        }, t._gvaoid = 0, t;
      }()),
      yt = function() {
        function t() {}
        return s(t, "laya.webgl.utils.RenderState2D"), t.getMatrArray = function() {
            return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
          }, t.mat2MatArray = function(e, i) {
            var n = e,
              s = i;
            return s[0] = n.a, s[1] = n.b, s[2] = t.EMPTYMAT4_ARRAY[2], s[3] = t.EMPTYMAT4_ARRAY[3],
              s[4] = n.c, s[5] = n.d, s[6] = t.EMPTYMAT4_ARRAY[6], s[7] = t.EMPTYMAT4_ARRAY[7],
              s[8] = t.EMPTYMAT4_ARRAY[8], s[9] = t.EMPTYMAT4_ARRAY[9], s[10] = t.EMPTYMAT4_ARRAY[10],
              s[11] = t.EMPTYMAT4_ARRAY[11], s[12] = n.tx, s[13] = n.ty, s[14] = t.EMPTYMAT4_ARRAY[14],
              s[15] = t.EMPTYMAT4_ARRAY[15], i;
          }, t.restoreTempArray = function() {
            t.TEMPMAT4_ARRAY[0] = 1, t.TEMPMAT4_ARRAY[1] = 0, t.TEMPMAT4_ARRAY[4] = 0, t.TEMPMAT4_ARRAY[5] = 1,
              t.TEMPMAT4_ARRAY[12] = 0, t.TEMPMAT4_ARRAY[13] = 0;
          }, t.clear = function() {
            t.worldScissorTest = !1, t.worldShaderDefines = null, t.worldFilters = null, t.worldAlpha = 1,
              t.worldClipRect.x = t.worldClipRect.y = 0, t.worldClipRect.width = t.width, t.worldClipRect.height = t.height,
              t.curRenderTarget = null;
          }, t._MAXSIZE = 99999999, t.EMPTYMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
          t.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], t.worldMatrix4 = t.TEMPMAT4_ARRAY,
          t.worldAlpha = 1, t.worldScissorTest = !1, t.worldFilters = null, t.worldShaderDefines = null,
          t.curRenderTarget = null, t.width = 0, t.height = 0, n(t, ["worldMatrix", function() {
            return this.worldMatrix = new x();
          }, "worldClipRect", function() {
            return this.worldClipRect = new w(0, 0, 99999999, 99999999);
          }]), t;
      }(),
      vt = function() {
        function t(t, i, n, s, r) {
          function a(t) {
            var i = [],
              n = new e(i);
            return o._compileToTree(n, t.split("\n"), 0, i, r), n;
          }
          var o = this,
            h = u.now();
          this._VS = a(i), this._PS = a(n), this._nameMap = s, u.now() - h > 2 && console.log("ShaderCompile use time:" + (u.now() - h) + "  size:" + i.length + "/" + n.length);
        }
        var e, i;
        s(t, "laya.webgl.utils.ShaderCompile");
        var r = t.prototype;
        return r._compileToTree = function(i, n, s, r, a) {
            var o, h, l, u, c, _, d, p = 0,
              f = 0,
              g = 0,
              m = 0;
            for (f = s; f < n.length; f++)
              if (!((l = n[f]).length < 1) && 0 !== (p = l.indexOf("//"))) {
                if (p >= 0 && (l = l.substr(0, p)), o = d || new e(r), d = null, o.text = l, o.noCompile = !0,
                  (p = l.indexOf("#")) >= 0) {
                  for (u = "#", m = p + 1, g = l.length; m < g; m++) {
                    var y = l.charAt(m);
                    if (" " === y || "\t" === y || "?" === y) break;
                    u += y;
                  }
                  switch (o.name = u, u) {
                    case "#ifdef":
                    case "#ifndef":
                      if (o.src = l, o.noCompile = null != l.match(/[!&|()=<>]/), o.noCompile ? console.log("function():Boolean{return " + l.substr(p + o.name.length) + "}") : (_ = l.replace(/^\s*/, "").split(/\s+/),
                          o.setCondition(_[1], "#ifdef" === u ? 1 : 2), o.text = "//" + o.text), o.setParent(i),
                        i = o, a)
                        for (_ = l.substr(m).split(t._splitToWordExps3), m = 0; m < _.length; m++)(l = _[m]).length && (a[l] = !0);
                      continue;

                    case "#if":
                      if (o.src = l, o.noCompile = !0, o.setParent(i), i = o, a)
                        for (_ = l.substr(m).split(t._splitToWordExps3),
                          m = 0; m < _.length; m++)(l = _[m]).length && "defined" != l && (a[l] = !0);
                      continue;

                    case "#else":
                      o.src = l, h = (i = i.parent).childs[i.childs.length - 1], o.noCompile = h.noCompile,
                        o.noCompile || (o.condition = h.condition, o.conditionType = 1 == h.conditionType ? 2 : 1,
                          o.text = "//" + o.text + " " + h.text + " " + o.conditionType), o.setParent(i),
                        i = o;
                      continue;

                    case "#endif":
                      h = (i = i.parent).childs[i.childs.length - 1], o.noCompile = h.noCompile, o.noCompile || (o.text = "//" + o.text),
                        o.setParent(i);
                      continue;

                    case "#include":
                      _ = t.splitToWords(l, null);
                      var v = t.includes[_[1]];
                      if (!v) throw "ShaderCompile error no this include file:" + _[1];
                      if ((p = _[0].indexOf("?")) < 0) {
                        o.setParent(i), l = v.getWith("with" == _[2] ? _[3] : null), this._compileToTree(o, l.split("\n"), 0, r, a),
                          o.text = "";
                        continue;
                      }
                      o.setCondition(_[0].substr(p + 1), 1), o.text = v.getWith("with" == _[2] ? _[3] : null);
                      break;

                    case "#import":
                      c = (_ = t.splitToWords(l, null))[1], r.push({
                        node: o,
                        file: t.includes[c],
                        ofs: o.text.length
                      });
                      continue;
                  }
                } else {
                  if ((h = i.childs[i.childs.length - 1]) && !h.name) {
                    r.length > 0 && t.splitToWords(l, h), d = o, h.text += "\n" + l;
                    continue;
                  }
                  r.length > 0 && t.splitToWords(l, o);
                }
                o.setParent(i);
              }
          }, r.createShader = function(t, e, i) {
            var n = {},
              s = "";
            if (t)
              for (var r in t) s += "#define " + r + "\n", n[r] = !0;
            var a = this._VS.toscript(n, []),
              o = this._PS.toscript(n, []);
            return (i || jt.create)(s + a.join("\n"), s + o.join("\n"), e, this._nameMap);
          }, t._parseOne = function(e, i, n, s, r, a) {
            var o = {
              type: t.shaderParamsMap[n[s + 1]],
              name: n[s + 2],
              size: isNaN(parseInt(n[s + 3])) ? 1 : parseInt(n[s + 3])
            };
            return a && ("attribute" == r ? e.push(o) : i.push(o)), ":" == n[s + 3] && (o.type = n[s + 4],
              s += 2), s += 2;
          }, t.addInclude = function(e, n) {
            if (!n || 0 === n.length) throw new Error("add shader include file err:" + e);
            if (t.includes[e]) throw new Error("add shader include file err, has add:" + e);
            t.includes[e] = new i(n);
          }, t.preGetParams = function(e, i) {
            var n = [e, i],
              s = {},
              r = [],
              a = [],
              o = {},
              h = [];
            s.attributes = r, s.uniforms = a, s.defines = o;
            for (var l = 0, u = 0, c = 0; c < 2; c++) {
              n[c] = n[c].replace(t._removeAnnotation, "");
              var _, d = n[c].match(t._reg);
              for (l = 0, u = d.length; l < u; l++) {
                var p = d[l];
                if ("attribute" == p || "uniform" == p) l = t._parseOne(r, a, d, l, p, !0);
                else {
                  if ("#define" == p) {
                    h[p = d[++l]] = 1;
                    continue;
                  }
                  if ("#ifdef" == p) {
                    o[_ = d[++l]] = o[_] || [];
                    for (l++; l < u; l++)
                      if ("attribute" == (p = d[l]) || "uniform" == p) l = t._parseOne(r, a, d, l, p, h[_]);
                      else if ("#else" == p)
                      for (l++; l < u; l++)
                        if ("attribute" == (p = d[l]) || "uniform" == p) l = t._parseOne(r, a, d, l, p, !h[_]);
                        else if ("#endif" == p) break;
                  }
                }
              }
            }
            return s;
          }, t.splitToWords = function(t, e) {
            for (var i, n, s = [], r = -1, a = 0, o = t.length; a < o; a++)
              if (i = t.charAt(a),
                " \t=+-*/&%!<>()'\",;".indexOf(i) >= 0) {
                if (r >= 0 && a - r > 1 && (n = t.substr(r, a - r), s.push(n)), '"' == i || "'" == i) {
                  var h = t.indexOf(i, a + 1);
                  if (h < 0) throw "Sharder err:" + t;
                  s.push(t.substr(a + 1, h - a - 1)), a = h, r = -1;
                  continue;
                }
                "(" == i && e && s.length > 0 && (n = s[s.length - 1] + ";", "vec4;main;".indexOf(n) < 0 && (e.useFuns += n)),
                  r = -1;
              } else r < 0 && (r = a);
            return r < o && o - r > 1 && (n = t.substr(r, o - r), s.push(n)), s;
          }, t.IFDEF_NO = 0, t.IFDEF_YES = 1, t.IFDEF_ELSE = 2, t.IFDEF_PARENT = 3, t._removeAnnotation = new RegExp("(/\\*([^*]|[\\r\\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)|(//.*)", "g"),
          t._reg = new RegExp("(\".*\")|('.*')|([#\\w\\*-\\.+/()=<>{}\\\\]+)|([,;:\\\\])", "g"),
          t._splitToWordExps = new RegExp("[(\".*\")]+|[('.*')]+|([ \\t=\\+\\-*/&%!<>!%(),;])", "g"),
          t.includes = {}, n(t, ["shaderParamsMap", function() {
            return this.shaderParamsMap = {
              float: 5126,
              int: 5124,
              bool: 35670,
              vec2: 35664,
              vec3: 35665,
              vec4: 35666,
              ivec2: 35667,
              ivec3: 35668,
              ivec4: 35669,
              bvec2: 35671,
              bvec3: 35672,
              bvec4: 35673,
              mat2: 35674,
              mat3: 35675,
              mat4: 35676,
              sampler2D: 35678,
              samplerCube: 35680
            };
          }, "_splitToWordExps3", function() {
            return this._splitToWordExps3 = new RegExp("[ \\t=\\+\\-*/&%!<>!%(),;\\|]", "g");
          }]), t.__init$ = function() {
            e = function() {
              function t(t) {
                this.childs = [], this.text = "", this.parent = null, this.name = null, this.noCompile = !1,
                  this.includefiles = null, this.condition = null, this.conditionType = 0, this.useFuns = "",
                  this.z = 0, this.src = null, this.includefiles = t;
              }
              s(t, "");
              var e = t.prototype;
              return e.setParent = function(t) {
                t.childs.push(this), this.z = t.z + 1, this.parent = t;
              }, e.setCondition = function(t, e) {
                t && (this.conditionType = e, t = t.replace(/(\s*$)/g, ""), this.condition = function() {
                  return this[t];
                }, this.condition.__condition = t);
              }, e.toscript = function(e, i) {
                return this._toscript(e, i, ++t.__id);
              }, e._toscript = function(t, e, i) {
                if (this.childs.length < 1 && !this.text) return e;
                e.length;
                if (this.condition) {
                  var n = !!this.condition.call(t);
                  if (2 === this.conditionType && (n = !n), !n) return e;
                }
                if (this.text && e.push(this.text), this.childs.length > 0 && this.childs.forEach(function(n, s, r) {
                    n._toscript(t, e, i);
                  }), this.includefiles.length > 0 && this.useFuns.length > 0)
                  for (var s, r = 0, a = this.includefiles.length; r < a; r++) this.includefiles[r].curUseID != i && (s = this.includefiles[r].file.getFunsScript(this.useFuns)).length > 0 && (this.includefiles[r].curUseID = i,
                    e[0] = s + e[0]);
                return e;
              }, t.__id = 1, t;
            }(), i = function() {
              function e(e) {
                this.script = null, this.codes = {}, this.funs = {}, this.curUseID = -1, this.funnames = "",
                  this.script = e;
                for (var i = 0, n = 0, s = 0;;) {
                  if ((i = e.indexOf("#begin", i)) < 0) break;
                  for (s = i + 5;;) {
                    if ((s = e.indexOf("#end", s)) < 0) break;
                    if ("i" !== e.charAt(s + 4)) break;
                    s += 5;
                  }
                  if (s < 0) throw "add include err,no #end:" + e;
                  n = e.indexOf("\n", i);
                  var r = t.splitToWords(e.substr(i, n - i), null);
                  "code" == r[1] ? this.codes[r[2]] = e.substr(n + 1, s - n - 1) : "function" == r[1] && (n = e.indexOf("function", i),
                      n += "function".length, this.funs[r[3]] = e.substr(n + 1, s - n - 1), this.funnames += r[3] + ";"),
                    i = s + 1;
                }
              }
              s(e, "");
              var i = e.prototype;
              return i.getWith = function(t) {
                var e = t ? this.codes[t] : this.script;
                if (!e) throw "get with error:" + t;
                return e;
              }, i.getFunsScript = function(t) {
                var e = "";
                for (var i in this.funs) t.indexOf(i + ";") >= 0 && (e += this.funs[i]);
                return e;
              }, e;
            }();
          }, t;
      }(),
      xt = function() {
        function t() {}
        return s(t, "laya.webgl.WebGL"), t._uint8ArraySlice = function() {
            for (var t = this.length, e = new Uint8Array(this.length), i = 0; i < t; i++) e[i] = this[i];
            return e;
          }, t._float32ArraySlice = function() {
            for (var t = this.length, e = new Float32Array(this.length), i = 0; i < t; i++) e[i] = this[i];
            return e;
          }, t._uint16ArraySlice = function(t) {
            var e, i = arguments,
              n = 0,
              s = 0;
            if (0 === i.length)
              for (n = this.length, e = new Uint16Array(n), s = 0; s < n; s++) e[s] = this[s];
            else if (2 === i.length) {
              var r = i[0],
                a = i[1];
              if (a > r)
                for (n = a - r, e = new Uint16Array(n), s = r; s < a; s++) e[s - r] = this[s];
              else e = new Uint16Array(0);
            }
            return e;
          }, t.expandContext = function() {
            var t = p.prototype,
              e = CanvasRenderingContext2D.prototype;
            e.fillTrangles = t.fillTrangles, $t.__int__(null), e.setIBVB = function(t, e, i, n, s, r, a, o, h, l) {
              void 0 === h && (h = 0), void 0 === l && (l = 0), null === i && (this._ib = this._ib || Zt.QuadrangleIB,
                i = this._ib, gt.expandIBQuadrangle(i, n._byteLength / 64 + 8)), this._setIBVB(t, e, i, n, s, r, a, o, h, l);
            }, e.fillTrangles = function(t, e, i, n, s) {
              this._curMat = this._curMat || x.create(), this._vb = this._vb || Jt.create(), this._ib || (this._ib = Zt.create(),
                gt.fillIBQuadrangle(this._ib, a / 4));
              var r = this._vb,
                a = n.length >> 4;
              gt.fillTranglesVB(r, e, i, n, s || this._curMat, 0, 0), gt.expandIBQuadrangle(this._ib, r._byteLength / 64 + 8);
              var o = new St(1, 0);
              o.textureHost = t;
              var h = new Qt("attribute vec2 position; attribute vec2 texcoord; uniform vec2 size; uniform mat4 mmat; varying vec2 v_texcoord; void main() { vec4 p=vec4(position.xy,0.0,1.0);vec4 pos=mmat*p; gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0); v_texcoord = texcoord; }", "precision mediump float; varying vec2 v_texcoord; uniform sampler2D texture; void main() {vec4 color= texture2D(texture, v_texcoord); color.a*=1.0; gl_FragColor= color;}");
              r._vertType = 3, this._setIBVB(e, i, this._ib, r, 6 * a, s, h, o, 0, 0);
            };
          }, t.enable = function() {
            if (u.__init__(), I.isConchApp && !I.isConchWebGL) return E.skinAniSprite = function() {
              return new tt();
            }, t.expandContext(), !1;
            if (E.getWebGLContext = function(t) {
                for (var e, i = ["webgl", "experimental-webgl", "webkit-3d", "moz-webgl"], n = 0; n < i.length; n++) {
                  try {
                    e = t.getContext(i[n], {
                      stencil: d.isStencil,
                      alpha: d.isAlpha,
                      antialias: d.isAntialias,
                      premultipliedAlpha: d.premultipliedAlpha,
                      preserveDrawingBuffer: d.preserveDrawingBuffer
                    });
                  } catch (t) {}
                  if (e) return e;
                }
                return null;
              }, null == (t.mainContext = E.getWebGLContext(I._mainCanvas))) return !1;
            if (I.isWebGL) return !0;
            y.create = function(t, e) {
              return new te(t, e);
            }, v.create = function(t, e, i, n, s, r, a) {
              return new Kt(t, e, i, n, s, r, a);
            }, I.WebGL = t, I.isWebGL = !0, dt.__init__(), E.createRenderSprite = function(t, e) {
              return new Ct(t, e);
            }, E.createWebGLContext2D = function(t) {
              return new It(t);
            }, E.changeWebGLSize = function(t, e) {
              laya.webgl.WebGL.onStageResize(t, e);
            }, E.createGraphics = function() {
              return new wt();
            };
            var e = E.createFilterAction;
            return E.createFilterAction = e || function(t) {
                return new Tt();
              }, E.clear = function(t) {
                yt.worldScissorTest && laya.webgl.WebGL.mainContext.disable(3089);
                var e = I.context.ctx,
                  i = 0 == e._submits._length || d.preserveDrawingBuffer ? _.create(t)._color : L._wgColor;
                i && e.clearBG(i[0], i[1], i[2], i[3]), yt.clear();
              }, E.addToAtlas = function(t, e) {
                void 0 === e && (e = !1);
                var n = t.bitmap;
                I.optimizeTextureMemory(t.url, t) ? i.__typeof(n, "laya.webgl.resource.IMergeAtlasBitmap") && n.allowMerageInAtlas && n.on("recovered", t, t.addTextureToAtlas) : n.enableMerageInAtlas = !1;
              }, E.isAtlas = function(t) {
                return t instanceof laya.webgl.atlas.AtlasWebGLCanvas;
              }, G._enable(), E.beginFlush = function() {
                for (var t = G.instance, e = t.getAtlaserCount(), i = 0; i < e; i++) {
                  var n = t.getAtlaserByIndex(i).texture;
                  n._flashCacheImageNeedFlush && E.flashFlushImage(n);
                }
              }, E.drawToCanvas = function(t, e, i, n, s, r) {
                (i <= 0 || n <= 0) && console.log("[error] canvasWidth and canvasHeight should greater than zero"),
                  s -= t.x, r -= t.y, i |= 1, n |= 1, s |= 1, r |= 1;
                var a = Bt.create(i, n, 6408, 5121, 0, !1);
                a.start(), a.clear(0, 0, 0, 0), I.context.clear(), S.renders[e]._fun(t, I.context, s, yt.height - n + r),
                  I.context.flush(), a.end();
                var o = a.getData(0, 0, i, n);
                if (a.recycle(), o.byteLength == i * n * 4) {
                  var h = new Wt();
                  h._canvas = u.createElement("canvas"), h.size(i, n);
                  var l = h._canvas.getContext("2d");
                  u.canvas.size(i, n);
                  var c = u.context,
                    _ = c.createImageData(i, n);
                  return _.data.set(new Uint8ClampedArray(o.buffer)), h._imgData = _, c.putImageData(_, 0, 0),
                    l.save(), l.translate(0, n), l.scale(1, -1), l.drawImage(u.canvas.source, 0, 0),
                    l.restore(), h;
                }
                console.log("drawToCanvas error: w:" + i + ",h:" + n + ",datalen:" + o.byteLength);
              }, E.createFilterAction = function(t) {
                var e;
                switch (t) {
                  case 32:
                    e = new Tt();
                }
                return e;
              }, E.addTextureToAtlas = function(t) {
                t._uvID++, G._atlasRestore++, t.bitmap.enableMerageInAtlas && G.instance.addToAtlas(t);
              }, E.getTexturePixels = function(t, e, i, n, s) {
                I.context.ctx.clear();
                var r = new M();
                r.graphics.drawTexture(t, -e, -i);
                var a = Bt.create(n, s);
                a.start(), a.clear(0, 0, 0, 0), r.render(I.context, 0, 0), I.context.ctx.flush(),
                  a.end();
                for (var o = a.getData(0, 0, n, s), h = [], l = 0, u = s - 1; u >= 0; u--)
                  for (var c = 0; c < n; c++) l = 4 * (u * n + c),
                    h.push(o[l]), h.push(o[l + 1]), h.push(o[l + 2]), h.push(o[l + 3]);
                return h;
              }, E.skinAniSprite = function() {
                return new tt();
              }, m.create = function(t, e) {
                var i = new Wt();
                return i._imgData = e, i.flipY = !1, i;
              }, f._filterStart = function(t, e, i, n, s) {
                var r = t.getValue("bounds"),
                  a = Bt.create(r.width, r.height);
                if (a.start(), a.clear(0, 0, 0, 0), t.addValue("src", a), t.addValue("ScissorTest", yt.worldScissorTest),
                  yt.worldScissorTest) {
                  var o = new w();
                  o.copyFrom(i.ctx._clipRect), t.addValue("clipRect", o), yt.worldScissorTest = !1,
                    laya.webgl.WebGL.mainContext.disable(3089);
                }
              }, f._filterEnd = function(t, e, i, n, s) {
                var r = t.getValue("bounds");
                t.getValue("src").end();
                var a = Bt.create(r.width, r.height);
                a.start(), a.clear(0, 0, 0, 0), t.addValue("out", a), e._set$P("_filterCache", a),
                  e._set$P("_isHaveGlowFilter", t.getValue("_isHaveGlowFilter"));
              }, f._EndTarget = function(t, e) {
                t.getValue("src").recycle();
                t.getValue("out").end();
                if (t.getValue("ScissorTest")) {
                  yt.worldScissorTest = !0, laya.webgl.WebGL.mainContext.enable(3089), e.ctx.save();
                  var i = t.getValue("clipRect");
                  e.ctx.clipRect(i.x, i.y, i.width, i.height);
                }
              }, f._useSrc = function(t) {
                var e = t.getValue("out");
                e.end(), (e = t.getValue("src")).start(), e.clear(0, 0, 0, 0);
              }, f._endSrc = function(t) {
                t.getValue("src").end();
              }, f._useOut = function(t) {
                var e = t.getValue("src");
                e.end(), (e = t.getValue("out")).start(), e.clear(0, 0, 0, 0);
              }, f._endOut = function(t) {
                t.getValue("out").end();
              }, f._recycleScope = function(t) {
                t.recycle();
              }, f._filter = function(t, e, i, n) {
                var s = this._next;
                if (s) {
                  var r = t.filters,
                    a = r.length;
                  if (1 == a && 32 == r[0].type) return e.ctx.save(), e.ctx.setFilters([r[0]]),
                    s._fun.call(s, t, e, i, n), void e.ctx.restore();
                  var o, h, l = ot.create(),
                    u = b.TEMP,
                    c = e.ctx._getTransformMatrix(),
                    _ = x.create();
                  c.copyTo(_);
                  var d = 0,
                    p = 0,
                    g = !1,
                    m = t._$P._filterCache ? t._$P._filterCache : null;
                  if (!m || t._repaint) {
                    g = t._isHaveGlowFilter(), l.addValue("_isHaveGlowFilter", g), g && (d = 50, p = 25),
                      (h = new w()).copyFrom(t.getSelfBounds()), h.x += t.x, h.y += t.y, h.x -= t.pivotX + 4,
                      h.y -= t.pivotY + 4;
                    var y = h.x,
                      v = h.y;
                    if (h.width += d + 8, h.height += d + 8, u.x = h.x * _.a + h.y * _.c, u.y = h.y * _.d + h.x * _.b,
                      h.x = u.x, h.y = u.y, u.x = h.width * _.a + h.height * _.c, u.y = h.height * _.d + h.width * _.b,
                      h.width = u.x, h.height = u.y, h.width <= 0 || h.height <= 0) return;
                    m && m.recycle(), l.addValue("bounds", h);
                    var I = at.create([l, t, e, 0, 0], f._filterStart);
                    e.addRenderObject(I), e.ctx._renderKey = 0, e.ctx._shader2D.glTexture = null;
                    var S = t.x - y + p,
                      C = t.y - v + p;
                    s._fun.call(s, t, e, S, C), I = at.create([l, t, e, 0, 0], f._filterEnd), e.addRenderObject(I);
                    for (var T = 0; T < a; T++) {
                      0 != T && (I = at.create([l], f._useSrc), e.addRenderObject(I), o = St.create(1, 0),
                        x.TEMP.identity(), e.ctx.drawTarget(l, 0, 0, h.width, h.height, x.TEMP, "out", o, null, H.TOINT.overlay),
                        I = at.create([l], f._useOut), e.addRenderObject(I));
                      r[T].action.apply3d(l, t, e, 0, 0);
                    }
                    I = at.create([l, e], f._EndTarget), e.addRenderObject(I);
                  } else {
                    if ((g = !!t._$P._isHaveGlowFilter && t._$P._isHaveGlowFilter) && (d = 50, p = 25),
                      (h = t.getBounds()).width <= 0 || h.height <= 0) return;
                    h.width += d, h.height += d, u.x = h.x * _.a + h.y * _.c, u.y = h.y * _.d + h.x * _.b,
                      h.x = u.x, h.y = u.y, u.x = h.width * _.a + h.height * _.c, u.y = h.height * _.d + h.width * _.b,
                      h.width = u.x, h.height = u.y, l.addValue("out", m);
                  }
                  i = i - p - t.x, n = n - p - t.y, u.setTo(i, n), _.transformPoint(u), i = u.x + h.x,
                    n = u.y + h.y, o = St.create(1, 0), x.TEMP.identity(), e.ctx.drawTarget(l, i, n, h.width, h.height, x.TEMP, "out", o, null, H.TOINT.overlay),
                    I = at.create([l], f._recycleScope), e.addRenderObject(I), _.destroy();
                }
              }, Float32Array.prototype.slice || (Float32Array.prototype.slice = t._float32ArraySlice),
              Uint16Array.prototype.slice || (Uint16Array.prototype.slice = t._uint16ArraySlice),
              Uint8Array.prototype.slice || (Uint8Array.prototype.slice = t._uint8ArraySlice), !0;
          }, t.onStageResize = function(e, i) {
            null != t.mainContext && (t.mainContext.viewport(0, 0, e, i), yt.width = e, yt.height = i);
          }, t.onInvalidGLRes = function() {
            G.instance.freeAll(), T.releaseContentManagers(!0), t.doNodeRepaint(i.stage), t.mainContext.viewport(0, 0, yt.width, yt.height),
              i.stage.event("devicelost");
          }, t.doNodeRepaint = function(e) {
            0 == e.numChildren && e.repaint();
            for (var i = 0; i < e.numChildren; i++) t.doNodeRepaint(e.getChildAt(i));
          }, t.init = function(e, i, n) {
            t.mainCanvas = e, m._createContext = function(t) {
              return new It(t);
            }, Wt._createContext = function(t) {
              return new It(t);
            };
            var s = laya.webgl.WebGL.mainContext;
            if (null != s.getShaderPrecisionFormat) {
              var r = s.getShaderPrecisionFormat(35633, 36338),
                a = s.getShaderPrecisionFormat(35632, 36338);
              t.shaderHighPrecision = !(!r.precision || !a.precision);
            } else t.shaderHighPrecision = !1;
            if (t.compressAstc = s.getExtension("WEBGL_compressed_texture_astc"), t.compressAtc = s.getExtension("WEBGL_compressed_texture_atc"),
              t.compressEtc = s.getExtension("WEBGL_compressed_texture_etc"), t.compressEtc1 = s.getExtension("WEBGL_compressed_texture_etc1"),
              t.compressPvrtc = s.getExtension("WEBGL_compressed_texture_pvrtc"), t.compressS3tc = s.getExtension("WEBGL_compressed_texture_s3tc"),
              t.compressS3tc_srgb = s.getExtension("WEBGL_compressed_texture_s3tc_srgb"), s.deleteTexture1 = s.deleteTexture,
              s.deleteTexture = function(t) {
                t == bt.curBindTexValue && (bt.curBindTexValue = null), s.deleteTexture1(t);
              }, t.onStageResize(i, n), null == t.mainContext) throw new Error("webGL getContext err!");
            D.__init__(), G.__init__(), Mt.__init__(), rt.__init__(), It.__init__(), St.__init__(),
              Z.__init__(), $t.__int__(s), H._init_(s), I.isConchApp && conch.setOnInvalidGLRes(t.onInvalidGLRes);
          }, t.compressAstc = null, t.compressAtc = null, t.compressEtc = null, t.compressEtc1 = null,
          t.compressPvrtc = null, t.compressS3tc = null, t.compressS3tc_srgb = null, t.mainCanvas = null,
          t.mainContext = null, t.antialias = !0, t.shaderHighPrecision = !1, t._bg_null = [0, 0, 0, 0],
          t;
      }(),
      bt = function() {
        function t() {}
        return s(t, "laya.webgl.WebGLContext"), t.UseProgram = function(e) {
            return t._useProgram !== e && (xt.mainContext.useProgram(e), t._useProgram = e, !0);
          }, t.setDepthTest = function(e, i) {
            i !== t._depthTest && (t._depthTest = i, i ? e.enable(2929) : e.disable(2929));
          }, t.setDepthMask = function(e, i) {
            i !== t._depthMask && (t._depthMask = i, e.depthMask(i));
          }, t.setDepthFunc = function(e, i) {
            i !== t._depthFunc && (t._depthFunc = i, e.depthFunc(i));
          }, t.setBlend = function(e, i) {
            i !== t._blend && (t._blend = i, i ? e.enable(3042) : e.disable(3042));
          }, t.setBlendFunc = function(e, i, n) {
            (i !== t._sFactor || n !== t._dFactor) && (t._sFactor = i, t._dFactor = n, e.blendFunc(i, n));
          }, t.setCullFace = function(e, i) {
            i !== t._cullFace && (t._cullFace = i, i ? e.enable(2884) : e.disable(2884));
          }, t.setFrontFace = function(e, i) {
            i !== t._frontFace && (t._frontFace = i, e.frontFace(i));
          }, t.bindTexture = function(e, i, n) {
            e.bindTexture(i, n), t.curBindTexTarget = i, t.curBindTexValue = n;
          }, t.DEPTH_BUFFER_BIT = 256, t.STENCIL_BUFFER_BIT = 1024, t.COLOR_BUFFER_BIT = 16384,
          t.POINTS = 0, t.LINES = 1, t.LINE_LOOP = 2, t.LINE_STRIP = 3, t.TRIANGLES = 4, t.TRIANGLE_STRIP = 5,
          t.TRIANGLE_FAN = 6, t.ZERO = 0, t.ONE = 1, t.SRC_COLOR = 768, t.ONE_MINUS_SRC_COLOR = 769,
          t.SRC_ALPHA = 770, t.ONE_MINUS_SRC_ALPHA = 771, t.DST_ALPHA = 772, t.ONE_MINUS_DST_ALPHA = 773,
          t.DST_COLOR = 774, t.ONE_MINUS_DST_COLOR = 775, t.SRC_ALPHA_SATURATE = 776, t.FUNC_ADD = 32774,
          t.BLEND_EQUATION = 32777, t.BLEND_EQUATION_RGB = 32777, t.BLEND_EQUATION_ALPHA = 34877,
          t.FUNC_SUBTRACT = 32778, t.FUNC_REVERSE_SUBTRACT = 32779, t.BLEND_DST_RGB = 32968,
          t.BLEND_SRC_RGB = 32969, t.BLEND_DST_ALPHA = 32970, t.BLEND_SRC_ALPHA = 32971, t.CONSTANT_COLOR = 32769,
          t.ONE_MINUS_CONSTANT_COLOR = 32770, t.CONSTANT_ALPHA = 32771, t.ONE_MINUS_CONSTANT_ALPHA = 32772,
          t.BLEND_COLOR = 32773, t.ARRAY_BUFFER = 34962, t.ELEMENT_ARRAY_BUFFER = 34963, t.ARRAY_BUFFER_BINDING = 34964,
          t.ELEMENT_ARRAY_BUFFER_BINDING = 34965, t.STREAM_DRAW = 35040, t.STATIC_DRAW = 35044,
          t.DYNAMIC_DRAW = 35048, t.BUFFER_SIZE = 34660, t.BUFFER_USAGE = 34661, t.CURRENT_VERTEX_ATTRIB = 34342,
          t.FRONT = 1028, t.BACK = 1029, t.CULL_FACE = 2884, t.FRONT_AND_BACK = 1032, t.BLEND = 3042,
          t.DITHER = 3024, t.STENCIL_TEST = 2960, t.DEPTH_TEST = 2929, t.SCISSOR_TEST = 3089,
          t.POLYGON_OFFSET_FILL = 32823, t.SAMPLE_ALPHA_TO_COVERAGE = 32926, t.SAMPLE_COVERAGE = 32928,
          t.NO_ERROR = 0, t.INVALID_ENUM = 1280, t.INVALID_VALUE = 1281, t.INVALID_OPERATION = 1282,
          t.OUT_OF_MEMORY = 1285, t.CW = 2304, t.CCW = 2305, t.LINE_WIDTH = 2849, t.ALIASED_POINT_SIZE_RANGE = 33901,
          t.ALIASED_LINE_WIDTH_RANGE = 33902, t.CULL_FACE_MODE = 2885, t.FRONT_FACE = 2886,
          t.DEPTH_RANGE = 2928, t.DEPTH_WRITEMASK = 2930, t.DEPTH_CLEAR_VALUE = 2931, t.DEPTH_FUNC = 2932,
          t.STENCIL_CLEAR_VALUE = 2961, t.STENCIL_FUNC = 2962, t.STENCIL_FAIL = 2964, t.STENCIL_PASS_DEPTH_FAIL = 2965,
          t.STENCIL_PASS_DEPTH_PASS = 2966, t.STENCIL_REF = 2967, t.STENCIL_VALUE_MASK = 2963,
          t.STENCIL_WRITEMASK = 2968, t.STENCIL_BACK_FUNC = 34816, t.STENCIL_BACK_FAIL = 34817,
          t.STENCIL_BACK_PASS_DEPTH_FAIL = 34818, t.STENCIL_BACK_PASS_DEPTH_PASS = 34819,
          t.STENCIL_BACK_REF = 36003, t.STENCIL_BACK_VALUE_MASK = 36004, t.STENCIL_BACK_WRITEMASK = 36005,
          t.VIEWPORT = 2978, t.SCISSOR_BOX = 3088, t.COLOR_CLEAR_VALUE = 3106, t.COLOR_WRITEMASK = 3107,
          t.UNPACK_ALIGNMENT = 3317, t.PACK_ALIGNMENT = 3333, t.MAX_TEXTURE_SIZE = 3379, t.MAX_VIEWPORT_DIMS = 3386,
          t.SUBPIXEL_BITS = 3408, t.RED_BITS = 3410, t.GREEN_BITS = 3411, t.BLUE_BITS = 3412,
          t.ALPHA_BITS = 3413, t.DEPTH_BITS = 3414, t.STENCIL_BITS = 3415, t.POLYGON_OFFSET_UNITS = 10752,
          t.POLYGON_OFFSET_FACTOR = 32824, t.TEXTURE_BINDING_2D = 32873, t.SAMPLE_BUFFERS = 32936,
          t.SAMPLES = 32937, t.SAMPLE_COVERAGE_VALUE = 32938, t.SAMPLE_COVERAGE_INVERT = 32939,
          t.NUM_COMPRESSED_TEXTURE_FORMATS = 34466, t.COMPRESSED_TEXTURE_FORMATS = 34467,
          t.DONT_CARE = 4352, t.FASTEST = 4353, t.NICEST = 4354, t.GENERATE_MIPMAP_HINT = 33170,
          t.BYTE = 5120, t.UNSIGNED_BYTE = 5121, t.SHORT = 5122, t.UNSIGNED_SHORT = 5123,
          t.INT = 5124, t.UNSIGNED_INT = 5125, t.FLOAT = 5126, t.DEPTH_COMPONENT = 6402, t.ALPHA = 6406,
          t.RGB = 6407, t.RGBA = 6408, t.LUMINANCE = 6409, t.LUMINANCE_ALPHA = 6410, t.UNSIGNED_SHORT_4_4_4_4 = 32819,
          t.UNSIGNED_SHORT_5_5_5_1 = 32820, t.UNSIGNED_SHORT_5_6_5 = 33635, t.FRAGMENT_SHADER = 35632,
          t.VERTEX_SHADER = 35633, t.MAX_VERTEX_ATTRIBS = 34921, t.MAX_VERTEX_UNIFORM_VECTORS = 36347,
          t.MAX_VARYING_VECTORS = 36348, t.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661, t.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660,
          t.MAX_TEXTURE_IMAGE_UNITS = 34930, t.MAX_FRAGMENT_UNIFORM_VECTORS = 36349, t.SHADER_TYPE = 35663,
          t.DELETE_STATUS = 35712, t.LINK_STATUS = 35714, t.VALIDATE_STATUS = 35715, t.ATTACHED_SHADERS = 35717,
          t.ACTIVE_UNIFORMS = 35718, t.ACTIVE_ATTRIBUTES = 35721, t.SHADING_LANGUAGE_VERSION = 35724,
          t.CURRENT_PROGRAM = 35725, t.NEVER = 512, t.LESS = 513, t.EQUAL = 514, t.LEQUAL = 515,
          t.GREATER = 516, t.NOTEQUAL = 517, t.GEQUAL = 518, t.ALWAYS = 519, t.KEEP = 7680,
          t.REPLACE = 7681, t.INCR = 7682, t.DECR = 7683, t.INVERT = 5386, t.INCR_WRAP = 34055,
          t.DECR_WRAP = 34056, t.VENDOR = 7936, t.RENDERER = 7937, t.VERSION = 7938, t.NEAREST = 9728,
          t.LINEAR = 9729, t.NEAREST_MIPMAP_NEAREST = 9984, t.LINEAR_MIPMAP_NEAREST = 9985,
          t.NEAREST_MIPMAP_LINEAR = 9986, t.LINEAR_MIPMAP_LINEAR = 9987, t.TEXTURE_MAG_FILTER = 10240,
          t.TEXTURE_MIN_FILTER = 10241, t.TEXTURE_WRAP_S = 10242, t.TEXTURE_WRAP_T = 10243,
          t.TEXTURE_2D = 3553, t.TEXTURE = 5890, t.TEXTURE_CUBE_MAP = 34067, t.TEXTURE_BINDING_CUBE_MAP = 34068,
          t.TEXTURE_CUBE_MAP_POSITIVE_X = 34069, t.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070, t.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071,
          t.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072, t.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073, t.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074,
          t.MAX_CUBE_MAP_TEXTURE_SIZE = 34076, t.TEXTURE0 = 33984, t.TEXTURE1 = 33985, t.TEXTURE2 = 33986,
          t.TEXTURE3 = 33987, t.TEXTURE4 = 33988, t.TEXTURE5 = 33989, t.TEXTURE6 = 33990,
          t.TEXTURE7 = 33991, t.TEXTURE8 = 33992, t.TEXTURE9 = 33993, t.TEXTURE10 = 33994,
          t.TEXTURE11 = 33995, t.TEXTURE12 = 33996, t.TEXTURE13 = 33997, t.TEXTURE14 = 33998,
          t.TEXTURE15 = 33999, t.TEXTURE16 = 34e3, t.TEXTURE17 = 34001, t.TEXTURE18 = 34002,
          t.TEXTURE19 = 34003, t.TEXTURE20 = 34004, t.TEXTURE21 = 34005, t.TEXTURE22 = 34006,
          t.TEXTURE23 = 34007, t.TEXTURE24 = 34008, t.TEXTURE25 = 34009, t.TEXTURE26 = 34010,
          t.TEXTURE27 = 34011, t.TEXTURE28 = 34012, t.TEXTURE29 = 34013, t.TEXTURE30 = 34014,
          t.TEXTURE31 = 34015, t.ACTIVE_TEXTURE = 34016, t.REPEAT = 10497, t.CLAMP_TO_EDGE = 33071,
          t.MIRRORED_REPEAT = 33648, t.FLOAT_VEC2 = 35664, t.FLOAT_VEC3 = 35665, t.FLOAT_VEC4 = 35666,
          t.INT_VEC2 = 35667, t.INT_VEC3 = 35668, t.INT_VEC4 = 35669, t.BOOL = 35670, t.BOOL_VEC2 = 35671,
          t.BOOL_VEC3 = 35672, t.BOOL_VEC4 = 35673, t.FLOAT_MAT2 = 35674, t.FLOAT_MAT3 = 35675,
          t.FLOAT_MAT4 = 35676, t.SAMPLER_2D = 35678, t.SAMPLER_CUBE = 35680, t.VERTEX_ATTRIB_ARRAY_ENABLED = 34338,
          t.VERTEX_ATTRIB_ARRAY_SIZE = 34339, t.VERTEX_ATTRIB_ARRAY_STRIDE = 34340, t.VERTEX_ATTRIB_ARRAY_TYPE = 34341,
          t.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922, t.VERTEX_ATTRIB_ARRAY_POINTER = 34373,
          t.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975, t.COMPILE_STATUS = 35713, t.LOW_FLOAT = 36336,
          t.MEDIUM_FLOAT = 36337, t.HIGH_FLOAT = 36338, t.LOW_INT = 36339, t.MEDIUM_INT = 36340,
          t.HIGH_INT = 36341, t.FRAMEBUFFER = 36160, t.RENDERBUFFER = 36161, t.RGBA4 = 32854,
          t.RGB5_A1 = 32855, t.RGB565 = 36194, t.DEPTH_COMPONENT16 = 33189, t.STENCIL_INDEX = 6401,
          t.STENCIL_INDEX8 = 36168, t.DEPTH_STENCIL = 34041, t.RENDERBUFFER_WIDTH = 36162,
          t.RENDERBUFFER_HEIGHT = 36163, t.RENDERBUFFER_INTERNAL_FORMAT = 36164, t.RENDERBUFFER_RED_SIZE = 36176,
          t.RENDERBUFFER_GREEN_SIZE = 36177, t.RENDERBUFFER_BLUE_SIZE = 36178, t.RENDERBUFFER_ALPHA_SIZE = 36179,
          t.RENDERBUFFER_DEPTH_SIZE = 36180, t.RENDERBUFFER_STENCIL_SIZE = 36181, t.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048,
          t.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049, t.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050,
          t.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051, t.COLOR_ATTACHMENT0 = 36064,
          t.DEPTH_ATTACHMENT = 36096, t.STENCIL_ATTACHMENT = 36128, t.DEPTH_STENCIL_ATTACHMENT = 33306,
          t.NONE = 0, t.FRAMEBUFFER_COMPLETE = 36053, t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054,
          t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055, t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057,
          t.FRAMEBUFFER_UNSUPPORTED = 36061, t.FRAMEBUFFER_BINDING = 36006, t.RENDERBUFFER_BINDING = 36007,
          t.MAX_RENDERBUFFER_SIZE = 34024, t.INVALID_FRAMEBUFFER_OPERATION = 1286, t.UNPACK_FLIP_Y_WEBGL = 37440,
          t.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441, t.CONTEXT_LOST_WEBGL = 37442, t.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443,
          t.BROWSER_DEFAULT_WEBGL = 37444, t._useProgram = null, t._depthTest = !0, t._depthMask = !0,
          t._blend = !1, t._cullFace = !1, t.curBindTexTarget = null, t.curBindTexValue = null,
          n(t, ["_depthFunc", function() {
            return this._depthFunc = 513;
          }, "_sFactor", function() {
            return this._sFactor = 1;
          }, "_dFactor", function() {
            return this._dFactor = 0;
          }, "_frontFace", function() {
            return this._frontFace = 2305;
          }]), t;
      }(),
      wt = function(t) {
        function e() {
          e.__super.call(this);
        }
        s(e, "laya.webgl.display.GraphicsGL", g);
        var i = e.prototype;
        return i.setShader = function(t) {
          this._saveToCmd(I.context._setShader, [t]);
        }, i.setIBVB = function(t, e, i, n, s, r) {
          this._saveToCmd(I.context._setIBVB, [t, e, i, n, s, r]);
        }, i.drawParticle = function(t, e, i) {
          var n = E.createParticleTemplate2D(i);
          n.x = t, n.y = e, this._saveToCmd(I.context._drawParticle, [n]);
        }, e;
      }(),
      It = function(t) {
        function e(t) {
          this._x = 0, this._y = 0, this._id = ++e._COUNT, this._path = null, this._drawCount = 1,
            this._maxNumEle = 0, this._clear = !1, this._isMain = !1, this._atlasResourceChange = 0,
            this._submits = null, this._curSubmit = null, this._ib = null, this._vb = null,
            this._nBlendType = 0, this._saveMark = null, this._shader2D = null, this.meshlist = [],
            this.mId = -1, this.mHaveKey = !1, this.mHaveLineKey = !1, this.mX = 0, this.mY = 0,
            e.__super.call(this), this._width = 99999999, this._height = 99999999, this._clipRect = e.MAXCLIPRECT,
            this.mOutPoint, this._canvas = t, e._contextcount++, I.isFlash ? (this._ib = Zt.create(35044),
              gt.fillIBQuadrangle(this._ib, 16)) : this._ib = Zt.QuadrangleIB, this.clear();
        }
        var a;
        s(e, "laya.webgl.canvas.WebGLContext2D", p);
        var o = e.prototype;
        return o.setIsMainContext = function() {
            this._isMain = !0;
          }, o.clearBG = function(t, e, i, n) {
            var s = xt.mainContext;
            s.clearColor(t, e, i, n), s.clear(16384);
          }, o._getSubmits = function() {
            return this._submits;
          }, o._releaseMem = function() {
            if (this._submits) {
              this._curMat.destroy(), this._curMat = null, this._shader2D.destroy(), this._shader2D = null;
              for (var t = 0, e = this._submits._length; t < e; t++) this._submits[t].releaseRender();
              this._submits.length = 0, this._submits._length = 0, this._submits = null, this._curSubmit = null,
                this._path && this._path.recover(), this._path = null, this._other && (this._other.font = null),
                this._save = null, this._vb && (this._vb.releaseResource(), this._vb.destroy(),
                  this._vb.destory(), this._vb = null);
            }
          }, o.destroy = function() {
            --e._contextcount, this.sprite = null, this._releaseMem(), this._targets && this._targets.destroy(),
              this._targets = null, this._canvas = null, this._ib && this._ib != Zt.QuadrangleIB && this._ib.releaseResource();
          }, o.clear = function() {
            this._submits || (this._other = a.DEFAULT, this._curMat = x.create(), this._vb = Jt.create(-1),
                this._submits = [], this._save = [j.Create(this)], this._save.length = 10, this._shader2D = new Z(),
                this._triangleMesh = Nt.getAMesh()), this._vb.clear(), this._targets && (this._targets.repaint = !0),
              this._other = a.DEFAULT, this._clear = !0, this._repaint = !1, this._drawCount = 1,
              this._renderKey = 0, this._other.lineWidth = this._shader2D.ALPHA = 1, this._nBlendType = 0,
              this._clipRect = e.MAXCLIPRECT, this._curSubmit = rt.RENDERBASE, this._shader2D.glTexture = null,
              this._shader2D.fillStyle = this._shader2D.strokeStyle = z.DEFAULT;
            for (var t = 0, i = this._submits._length; t < i; t++) this._submits[t].releaseRender();
            this._submits._length = 0, this._curMat.identity(), this._other.clear(), this._saveMark = this._save[0],
              this._save._length = 1;
          }, o.size = function(t, e) {
            if (this._width != t || this._height != e)
              if (0 == t || 0 == e) {
                0 != this._vb._byteLength && (this._width = t, this._height = e, this._vb.clear(),
                  this._vb.upload());
                for (var i = 0, n = this._submits._length; i < n; i++) this._submits[i].releaseRender();
                this._submits.length = 0, this._submits._length = 0, this._curSubmit = null, this._path && this._path.recover(),
                  this._path = null, this.sprite = null, this._targets && this._targets.destroy(),
                  this._targets = null;
              } else this._width = t, this._height = e, this._targets && this._targets.size(t, e),
                this._canvas.memorySize -= this._canvas.memorySize;
            0 === t && 0 === e && this._releaseMem();
          }, o._getTransformMatrix = function() {
            return this._curMat;
          }, o.translate = function(t, e) {
            0 === t && 0 === e || (q.save(this), this._curMat.bTransform && ($.save(this), this._curMat.transformPointN(b.TEMP.setTo(t, e)),
              t = b.TEMP.x, e = b.TEMP.y), this._x += t, this._y += e);
          }, o.save = function() {
            this._save[this._save._length++] = j.Create(this);
          }, o.restore = function() {
            var t = this._save._length;
            if (!(t < 1))
              for (var e = t - 1; e >= 0; e--) {
                var i = this._save[e];
                if (i.restore(this), i.isSaveMark()) return void(this._save._length = e);
              }
          }, o._fillText = function(t, e, i, n, s, r, a, o, h, l) {
            void 0 === l && (l = 0);
            var u = this._shader2D,
              c = this._curSubmit.shaderValue,
              d = s ? pt.create(s) : this._other.font;
            if (G.enabled) u.ALPHA !== c.ALPHA && (u.glTexture = null), dt.drawText(this, t, e, this._curMat, d, h || this._other.textAlign, r, a, o, i, n, l);
            else {
              this._shader2D.defines.getValue();
              var p = r ? _.create(r)._color : u.colorAdd;
              u.ALPHA === c.ALPHA && p === u.colorAdd && c.colorAdd === u.colorAdd || (u.glTexture = null,
                u.colorAdd = p), dt.drawText(this, t, e, this._curMat, d, h || this._other.textAlign, r, a, o, i, n, l);
            }
          }, o.fillWords = function(t, e, i, n, s, r) {
            this._fillText(null, t, e, i, n, s, null, -1, null, r);
          }, o.fillBorderWords = function(t, e, i, n, s, r, a) {
            this._fillBorderText(null, t, e, i, n, s, r, a, null);
          }, o.fillText = function(t, e, i, n, s, r) {
            this._fillText(t, null, e, i, n, s, null, -1, r);
          }, o.strokeText = function(t, e, i, n, s, r, a) {
            this._fillText(t, null, e, i, n, null, s, r || 1, a);
          }, o.fillBorderText = function(t, e, i, n, s, r, a, o) {
            this._fillBorderText(t, null, e, i, n, s, r, a, o);
          }, o._fillBorderText = function(t, i, n, s, r, a, o, h, l) {
            if (!G.enabled) return this._fillText(t, i, n, s, r, null, o, h || 1, l), void this._fillText(t, i, n, s, r, a, null, -1, l);
            var u = this._shader2D,
              c = this._curSubmit.shaderValue;
            u.ALPHA !== c.ALPHA && (u.glTexture = null);
            var _ = r ? (e._fontTemp.setFont(r), e._fontTemp) : this._other.font;
            dt.drawText(this, t, i, this._curMat, _, l || this._other.textAlign, a, o, h || 1, n, s, 0);
          }, o.fillRect = function(t, e, i, n, s) {
            var r = this._vb;
            if (gt.fillRectImgVb(r, this._clipRect, t, e, i, n, N.DEF_UV, this._curMat, this._x, this._y, 0, 0)) {
              this._renderKey = 0;
              var a = this._shader2D.fillStyle;
              s && (this._shader2D.fillStyle = z.create(s));
              var o = this._shader2D,
                h = this._curSubmit.shaderValue;
              if (o.fillStyle !== h.fillStyle || o.ALPHA !== h.ALPHA) {
                o.glTexture = null;
                var l = this._curSubmit = rt.createSubmit(this, this._ib, r, (r._byteLength - 64) / 32 * 3, St.create(2, 0));
                l.shaderValue.color = o.fillStyle._color._color, l.shaderValue.ALPHA = o.ALPHA,
                  this._submits[this._submits._length++] = l;
              }
              this._curSubmit._numEle += 6, this._shader2D.fillStyle = a;
            }
          }, o.fillTexture = function(t, e, n, s, r, a, o, h) {
            if (t.loaded && t.bitmap && t.source) {
              var l = this._vb,
                u = t.bitmap.width,
                c = t.bitmap.height,
                _ = t.uv,
                d = o.x % t.width,
                p = o.y % t.height;
              if (u != h.w || c != h.h) {
                if (!h.w && !h.h) switch (h.oy = h.ox = 0, a) {
                  case "repeat":
                    h.width = s, h.height = r;
                    break;

                  case "repeat-x":
                    h.width = s, p < 0 ? t.height + p > r ? h.height = r : h.height = t.height + p : (h.oy = p,
                      t.height + p > r ? h.height = r - p : h.height = t.height);
                    break;

                  case "repeat-y":
                    d < 0 ? t.width + d > s ? h.width = s : h.width = t.width + d : (h.ox = d, t.width + d > s ? h.width = s - d : h.width = t.width),
                      h.height = r;
                    break;

                  default:
                    h.width = s, h.height = r;
                }
                h.w = u, h.h = c, h.uv = [0, 0, h.width / u, 0, h.width / u, h.height / c, 0, h.height / c];
              }
              if (e += h.ox, n += h.oy, d -= h.ox, p -= h.oy, gt.fillRectImgVb(l, this._clipRect, e, n, h.width, h.height, h.uv, this._curMat, this._x, this._y, 0, 0)) {
                this._renderKey = 0;
                var f = Rt.create(this, this._ib, l, (l._byteLength - 64) / 32 * 3, St.create(256, 0));
                this._submits[this._submits._length++] = f;
                var g = f.shaderValue;
                g.textureHost = t;
                var m = _[0] * u,
                  y = _[1] * c,
                  v = (_[2] - _[0]) * u,
                  x = (_[5] - _[3]) * c,
                  b = -d / u,
                  w = -p / c;
                g.u_TexRange[0] = m / u, g.u_TexRange[1] = v / u, g.u_TexRange[2] = y / c, g.u_TexRange[3] = x / c,
                  g.u_offset[0] = b, g.u_offset[1] = w, G.enabled && !this._isMain && f.addTexture(t, (l._byteLength >> 2) - 16),
                  this._curSubmit = f, f._renderType = 10017, f._numEle += 6;
              }
            } else this.sprite && i.timer.callLater(this, this._repaintSprite);
          }, o.setShader = function(t) {
            Y.save(this, 1048576, this._shader2D, !0), this._shader2D.shader = t;
          }, o.setFilters = function(t) {
            Y.save(this, 2097152, this._shader2D, !0), this._shader2D.filters = t, this._curSubmit = rt.RENDERBASE,
              this._renderKey = 0, this._drawCount++;
          }, o.drawTexture = function(t, e, i, n, s, r, a) {
            this._drawTextureM(t, e, i, n, s, r, a, null, 1);
          }, o.addTextureVb = function(t, e, i) {
            var n = this._curSubmit._vb || this._vb,
              s = n._byteLength >> 2;
            n.byteLength = s + 16 << 2;
            for (var r = n.getFloat32Array(), a = 0; a < 16; a += 4) r[s++] = t[a] + e, r[s++] = t[a + 1] + i,
              r[s++] = t[a + 2], r[s++] = t[a + 3];
            this._curSubmit._numEle += 6, this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle),
              n._upload = !0;
          }, o.willDrawTexture = function(t, e) {
            if (!(t.loaded && t.bitmap && t.source)) return this.sprite && i.timer.callLater(this, this._repaintSprite),
              0;
            var n = t.bitmap,
              s = n.id + this._shader2D.ALPHA * e + 10016;
            if (s == this._renderKey) return s;
            var r = this._shader2D,
              a = r.ALPHA,
              o = this._curSubmit.shaderValue;
            r.ALPHA *= e, this._renderKey = s, this._drawCount++, r.glTexture = n;
            var h = this._vb,
              l = null,
              u = h._byteLength / 32 * 3;
            return l = Rt.create(this, this._ib, h, u, St.create(1, 0)), this._submits[this._submits._length++] = l,
              l.shaderValue.textureHost = t, l._renderType = 10016, l._preIsSameTextureShader = 10016 === this._curSubmit._renderType && r.ALPHA === o.ALPHA,
              this._curSubmit = l, r.ALPHA = a, s;
          }, o.drawTextures = function(t, n, s, r) {
            if (t.loaded && t.bitmap && t.source) {
              var a = this._clipRect;
              if (this._clipRect = e.MAXCLIPRECT, this._drawTextureM(t, n[0], n[1], t.width, t.height, s, r, null, 1)) {
                if (this._clipRect = a, P.drawCall++, !(n.length < 4)) {
                  for (var o = this._curSubmit._vb || this._vb, h = this._curMat.a, l = this._curMat.d, u = 2, c = n.length; u < c; u += 2) gt.copyPreImgVb(o, (n[u] - n[u - 2]) * h, (n[u + 1] - n[u - 1]) * l),
                    this._curSubmit._numEle += 6;
                  this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle);
                }
              } else alert("drawTextures err");
            } else this.sprite && i.timer.callLater(this, this._repaintSprite);
          }, o._drawTextureM = function(t, e, n, s, r, a, o, h, l) {
            if (!t.loaded || !t.source) return this.sprite && i.timer.callLater(this, this._repaintSprite), !1;
            var u = this._curSubmit._vb || this._vb,
              c = t.bitmap;
            e += a, n += o, this._drawCount++;
            var _ = c.id + this._shader2D.ALPHA * l + 10016;
            if (_ != this._renderKey) {
              this._renderKey = _;
              var d = this._curSubmit.shaderValue,
                p = this._shader2D,
                f = p.ALPHA;
              p.ALPHA *= l, p.glTexture = c;
              var g = this._vb,
                m = null,
                y = g._byteLength / 32 * 3;
              m = Rt.create(this, this._ib, g, y, St.create(1, 0)), this._submits[this._submits._length++] = m,
                m.shaderValue.textureHost = t, m._renderType = 10016, m._preIsSameTextureShader = 10016 === this._curSubmit._renderType && p.ALPHA === d.ALPHA,
                this._curSubmit = m, u = this._curSubmit._vb || this._vb, p.ALPHA = f;
            }
            return !!gt.fillRectImgVb(u, this._clipRect, e, n, s || t.width, r || t.height, t.uv, h || this._curMat, this._x, this._y, 0, 0) && (G.enabled && !this._isMain && this._curSubmit.addTexture(t, (u._byteLength >> 2) - 16),
              this._curSubmit._numEle += 6, this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle), !0);
          }, o._repaintSprite = function() {
            this.sprite && this.sprite.repaint();
          }, o._drawText = function(t, e, i, n, s, r, a, o, h, l) {
            var u = t.bitmap;
            this._drawCount++;
            var c = u.id + this._shader2D.ALPHA + 10016;
            if (c != this._renderKey) {
              this._renderKey = c;
              var _ = this._curSubmit.shaderValue,
                d = this._shader2D;
              d.glTexture = u;
              var p = this._vb,
                f = null,
                g = p._byteLength / 32 * 3;
              (f = G.enabled ? Rt.create(this, this._ib, p, g, St.create(1, 0)) : Rt.create(this, this._ib, p, g, qt.create()))._preIsSameTextureShader = 10016 === this._curSubmit._renderType && d.ALPHA === _.ALPHA,
                this._submits[this._submits._length++] = f, f.shaderValue.textureHost = t, f._renderType = 10016,
                this._curSubmit = f;
            }
            t.active();
            var m = this._curSubmit._vb || this._vb;
            gt.fillRectImgVb(m, this._clipRect, e + a, i + o, n || t.width, s || t.height, t.uv, r || this._curMat, this._x, this._y, h, l, !0) && (G.enabled && !this._isMain && this._curSubmit.addTexture(t, (m._byteLength >> 2) - 16),
              this._curSubmit._numEle += 6, this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle));
          }, o.drawTextureWithTransform = function(t, i, n, s, r, a, o, h, l) {
            if (a) {
              var u = this._curMat,
                c = this._x,
                _ = this._y;
              (0 !== o || 0 !== h) && (this._x = o * u.a + h * u.c, this._y = h * u.d + o * u.b),
              a && u.bTransform ? (x.mul(a, u, e._tmpMatrix), (a = e._tmpMatrix)._checkTransform()) : (this._x += u.tx,
                this._y += u.ty), this._drawTextureM(t, i, n, s, r, 0, 0, a, l), this._x = c, this._y = _;
            } else this._drawTextureM(t, i, n, s, r, o, h, null, l);
          }, o.fillQuadrangle = function(t, e, i, n, s) {
            var r = this._curSubmit,
              a = this._vb,
              o = this._shader2D,
              h = r.shaderValue;
            if (this._renderKey = 0, t.bitmap) {
              var l = t.bitmap;
              o.glTexture == l && o.ALPHA === h.ALPHA || (o.glTexture = l, (r = this._curSubmit = rt.createSubmit(this, this._ib, a, a._byteLength / 32 * 3, St.create(1, 0))).shaderValue.glTexture = l,
                this._submits[this._submits._length++] = r), gt.fillQuadrangleImgVb(a, e, i, n, t.uv, s || this._curMat, this._x, this._y);
            } else r.shaderValue.fillStyle && r.shaderValue.fillStyle.equal(t) && o.ALPHA === h.ALPHA || (o.glTexture = null,
                (r = this._curSubmit = rt.createSubmit(this, this._ib, a, a._byteLength / 32 * 3, St.create(2, 0))).shaderValue.defines.add(2),
                r.shaderValue.fillStyle = z.create(t), this._submits[this._submits._length++] = r),
              gt.fillQuadrangleImgVb(a, e, i, n, N.DEF_UV, s || this._curMat, this._x, this._y);
            r._numEle += 6;
          }, o.drawTexture2 = function(t, i, n, s, r, a, o, h) {
            if (0 != a) {
              var l = this._curMat;
              if (this._x = t * l.a + i * l.c, this._y = i * l.d + t * l.b, r && (l.bTransform || r.bTransform ? (x.mul(r, l, e._tmpMatrix),
                  r = e._tmpMatrix) : (this._x += r.tx + l.tx, this._y += r.ty + l.ty, r = x.EMPTY)),
                1 !== a || o) {
                var u = this._shader2D.ALPHA,
                  c = this._nBlendType;
                this._shader2D.ALPHA = a, o && (this._nBlendType = H.TOINT(o)), this._drawTextureM(h[0], h[1] - n, h[2] - s, h[3], h[4], 0, 0, r, 1),
                  this._shader2D.ALPHA = u, this._nBlendType = c;
              } else this._drawTextureM(h[0], h[1] - n, h[2] - s, h[3], h[4], 0, 0, r, 1);
              this._x = this._y = 0;
            }
          }, o.drawCanvas = function(t, e, i, n, s) {
            var r = t.context;
            if (this._renderKey = 0, r._targets) this._submits[this._submits._length++] = Dt.create(r, 0, null),
              this._curSubmit = rt.RENDERBASE, r._targets.drawTo(this, e, i, n, s);
            else {
              var a = this._submits[this._submits._length++] = Dt.create(r, this._shader2D.ALPHA, this._shader2D.filters),
                o = n / t.width,
                h = s / t.height,
                l = a._matrix;
              this._curMat.copyTo(l), 1 != o && 1 != h && l.scale(o, h);
              var u = l.tx,
                c = l.ty;
              l.tx = l.ty = 0, l.transformPoint(b.TEMP.setTo(e, i)), l.translate(b.TEMP.x + u, b.TEMP.y + c),
                this._curSubmit = rt.RENDERBASE;
            }
            d.showCanvasMark && (this.save(), this.lineWidth = 4, this.strokeStyle = r._targets ? "yellow" : "green",
              this.strokeRect(e - 1, i - 1, n + 2, s + 2, 1), this.strokeRect(e, i, n, s, 1),
              this.restore());
          }, o.drawTarget = function(t, e, i, n, s, r, a, o, h, l) {
            void 0 === l && (l = -1);
            var u = this._vb;
            if (gt.fillRectImgVb(u, this._clipRect, e, i, n, s, h || N.DEF_UV, r || this._curMat, this._x, this._y, 0, 0)) {
              this._renderKey = 0;
              this._shader2D.glTexture = null;
              this._curSubmit.shaderValue;
              var c = this._curSubmit = ct.create(this, this._ib, u, (u._byteLength - 64) / 32 * 3, o, a);
              c.blendType = -1 == l ? this._nBlendType : l, c.scope = t, this._submits[this._submits._length++] = c,
                this._curSubmit._numEle += 6;
            }
          }, o.mixRGBandAlpha = function(t) {
            return this._mixRGBandAlpha(t, this._shader2D.ALPHA);
          }, o._mixRGBandAlpha = function(t, e) {
            var i = (4278190080 & t) >>> 24;
            return 0 != i ? i *= e : i = 255 * e, 16777215 & t | i << 24;
          }, o.drawTriangles = function(t, n, s, r, a, o, h, l, u, c) {
            if (!t.loaded || !t.source) return this.sprite && i.timer.callLater(this, this._repaintSprite), !1;
            this._drawCount++;
            t.bitmap;
            var _ = this._mixRGBandAlpha(4294967295, l),
              d = (r.length, o.length);
            this._renderKey = -1;
            var p = this._curSubmit = Rt.create(this, this._triangleMesh.getIBR(), this._triangleMesh.getVBR(), this._triangleMesh.indexNum, St.create(1, 0));
            return p.shaderValue.textureHost = t, p._renderType = 10016, this._submits[this._submits._length++] = p,
              h ? (e._tmpMatrix.a = h.a, e._tmpMatrix.b = h.b, e._tmpMatrix.c = h.c, e._tmpMatrix.d = h.d,
                e._tmpMatrix.tx = h.tx + n, e._tmpMatrix.ty = h.ty + s, x.mul(e._tmpMatrix, this._curMat, e._tmpMatrix)) : (e._tmpMatrix.a = this._curMat.a,
                e._tmpMatrix.b = this._curMat.b, e._tmpMatrix.c = this._curMat.c, e._tmpMatrix.d = this._curMat.d,
                e._tmpMatrix.tx = this._curMat.tx + n, e._tmpMatrix.ty = this._curMat.ty + s), this._triangleMesh.addData(r, a, o, e._tmpMatrix, _, this),
              this._curSubmit._numEle += d, this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle), !0;
          }, o.transform = function(t, e, i, n, s, r) {
            $.save(this), x.mul(x.TEMP.setTo(t, e, i, n, s, r), this._curMat, this._curMat),
              this._curMat._checkTransform();
          }, o.setTransformByMatrix = function(t) {
            t.copyTo(this._curMat);
          }, o.transformByMatrix = function(t) {
            $.save(this), x.mul(t, this._curMat, this._curMat), this._curMat._checkTransform();
          }, o.rotate = function(t) {
            $.save(this), this._curMat.rotateEx(t);
          }, o.scale = function(t, e) {
            $.save(this), this._curMat.scaleEx(t, e);
          }, o.clipRect = function(t, e, i, n) {
            if (0 != this._curMat.b || 0 != this._curMat.c) {
              this._renderKey = 0;
              var s = ut.create(4);
              this.addRenderObject(s);
              var r = this._vb,
                a = r._byteLength >> 2;
              if (gt.fillRectImgVb(r, null, t, e, i, n, N.DEF_UV, this._curMat, this._x, this._y, 0, 0)) {
                this._shader2D.glTexture = null;
                var o = this._curSubmit = rt.createSubmit(this, this._ib, r, (r._byteLength - 64) / 32 * 3, St.create(2, 0));
                o.shaderValue.ALPHA = 1, this._submits[this._submits._length++] = o, this._curSubmit._numEle += 6;
              } else alert("clipRect calc stencil rect error");
              var h = ut.create(5);
              this.addRenderObject(h);
              var l = r.getFloat32Array(),
                u = Math.min(Math.min(Math.min(l[a + 0], l[a + 4]), l[a + 8]), l[a + 12]),
                c = Math.max(Math.max(Math.max(l[a + 0], l[a + 4]), l[a + 8]), l[a + 12]),
                _ = Math.min(Math.min(Math.min(l[a + 1], l[a + 5]), l[a + 9]), l[a + 13]),
                d = Math.max(Math.max(Math.max(l[a + 1], l[a + 5]), l[a + 9]), l[a + 13]);
              K.save(this, h, t, e, i, n, u, _, c - u, d - _), this._curSubmit = rt.RENDERBASE;
            } else {
              i *= this._curMat.a, n *= this._curMat.d;
              var p = b.TEMP;
              this._curMat.transformPoint(p.setTo(t, e)), i < 0 && (p.x = p.x + i, i = -i), n < 0 && (p.y = p.y + n,
                n = -n), this._renderKey = 0;
              var f = this._curSubmit = lt.create(this);
              this._submits[this._submits._length++] = f, f.submitIndex = this._submits._length,
                f.submitLength = 9999999, X.save(this, f);
              var g = this._clipRect,
                m = g.x,
                y = g.y,
                v = p.x + i,
                x = p.y + n;
              m < p.x && (g.x = p.x), y < p.y && (g.y = p.y), g.width = Math.min(v, m + g.width) - g.x,
                g.height = Math.min(x, y + g.height) - g.y, this._shader2D.glTexture = null, f.clipRect.copyFrom(g),
                this._curSubmit = rt.RENDERBASE;
            }
          }, o.setIBVB = function(t, e, i, n, s, r, a, o, h, l, u) {
            if (void 0 === h && (h = 0), void 0 === l && (l = 0), void 0 === u && (u = 0), null === i) {
              if (I.isFlash) {
                var c = n;
                c._selfIB || (c._selfIB = Zt.create(35044)), c._selfIB.clear(), i = c._selfIB;
              } else i = this._ib;
              gt.expandIBQuadrangle(i, n._byteLength / (4 * n.vertexStride * 4));
            }
            if (!o || !a) throw Error("setIBVB must input:shader shaderValues");
            var _ = ht.create(this, n, i, s, a, o, h, l, u);
            r || (r = x.EMPTY), r.translate(t, e), x.mul(r, this._curMat, _._mat), r.translate(-t, -e),
              this._submits[this._submits._length++] = _, this._curSubmit = rt.RENDERBASE, this._renderKey = 0;
          }, o.addRenderObject = function(t) {
            this._submits[this._submits._length++] = t;
          }, o.fillTrangles = function(t, e, i, n, s) {
            var r = this._curSubmit,
              a = this._vb,
              o = this._shader2D,
              h = r.shaderValue,
              l = n.length >> 4,
              u = t.bitmap;
            this._renderKey = 0, o.glTexture == u && o.ALPHA === h.ALPHA || ((r = this._curSubmit = rt.createSubmit(this, this._ib, a, a._byteLength / 32 * 3, St.create(1, 0))).shaderValue.textureHost = t,
                this._submits[this._submits._length++] = r), gt.fillTranglesVB(a, e, i, n, s || this._curMat, this._x, this._y),
              r._numEle += 6 * l;
          }, o.submitElement = function(t, e) {
            var i = this._submits;
            for (e < 0 && (e = i._length); t < e;) t += i[t].renderSubmit();
          }, o.finish = function() {
            xt.mainContext.finish();
          }, o.flush = function() {
            var t = Math.max(this._vb._byteLength / 64, this._maxNumEle / 6) + 8;
            if (t > this._ib.bufferLength / 12 && gt.expandIBQuadrangle(this._ib, t), !this._isMain && G.enabled && G._atlasRestore > this._atlasResourceChange) {
              this._atlasResourceChange = G._atlasRestore;
              for (var e = this._submits, i = 0, n = e._length; i < n; i++) {
                var s = e[i];
                10016 === s.getRenderType() && s.checkTexture();
              }
            }
            this.submitElement(0, this._submits._length), this._path && this._path.reset(),
              et.instance && et.getInstance().reset();
            var r = 0;
            for (i = 0, r = this.meshlist.length; i < r; i++) {
              var a = this.meshlist[i];
              a.canReuse ? a.releaseMesh() : a.destroy();
            }
            return this.meshlist.length = 0, this._curSubmit = rt.RENDERBASE, this._renderKey = 0,
              this._triangleMesh = Nt.getAMesh(), this.meshlist.push(this._triangleMesh), this._submits._length;
          }, o.setPathId = function(t) {
            if (this.mId = t, -1 != this.mId) {
              this.mHaveKey = !1;
              var e = B.getInstance();
              e.shapeDic[this.mId] && (this.mHaveKey = !0), this.mHaveLineKey = !1, e.shapeLineDic[this.mId] && (this.mHaveLineKey = !0);
            }
          }, o.movePath = function(t, e) {
            var i = t,
              n = e;
            t = this._curMat.a * i + this._curMat.c * n + this._curMat.tx, e = this._curMat.b * i + this._curMat.d * n + this._curMat.ty,
              this.mX += t, this.mY += e;
          }, o.beginPath = function() {
            var t = this._getPath();
            t.tempArray.length = 0, t.closePath = !1, this.mX = 0, this.mY = 0;
          }, o.closePath = function() {
            this._path.closePath = !0;
          }, o.fill = function(t) {
            void 0 === t && (t = !1);
            var e = this._getPath();
            this.drawPoly(0, 0, e.tempArray, this.fillStyle._color.numColor, 0, 0, t);
          }, o.stroke = function() {
            var t = this._getPath();
            if (this.lineWidth > 0) {
              if (-1 == this.mId) t.drawLine(0, 0, t.tempArray, this.lineWidth, this.strokeStyle._color.numColor);
              else if (this.mHaveLineKey) {
                var e = B.getInstance().shapeLineDic[this.mId];
                e.rebuild(t.tempArray), t.setGeomtry(e);
              } else B.getInstance().addLine(this.mId, t.drawLine(0, 0, t.tempArray, this.lineWidth, this.strokeStyle._color.numColor));
              t.update();
              var i = [this.mX, this.mY],
                n = rt.createShape(this, t.ib, t.vb, t.count, t.offset, St.create(4, 0));
              n.shaderValue.ALPHA = this._shader2D.ALPHA, n.shaderValue.u_pos = i, n.shaderValue.u_mmat2 = yt.TEMPMAT4_ARRAY,
                this._submits[this._submits._length++] = n, this._renderKey = -1;
            }
          }, o.line = function(t, e, i, n, s, r) {
            var a = this._curSubmit,
              o = this._vb;
            if (gt.fillLineVb(o, this._clipRect, t, e, i, n, s, r)) {
              this._renderKey = 0;
              var h = this._shader2D,
                l = a.shaderValue;
              h.strokeStyle === l.strokeStyle && h.ALPHA === l.ALPHA || (h.glTexture = null, (a = this._curSubmit = rt.createSubmit(this, this._ib, o, (o._byteLength - 64) / 32 * 3, St.create(2, 0))).shaderValue.strokeStyle = h.strokeStyle,
                  a.shaderValue.mainID = 2, a.shaderValue.ALPHA = h.ALPHA, this._submits[this._submits._length++] = a),
                a._numEle += 6;
            }
          }, o.moveTo = function(t, e, i) {
            void 0 === i && (i = !0);
            var n = this._getPath();
            if (i) {
              var s = t,
                r = e;
              t = this._curMat.a * s + this._curMat.c * r, e = this._curMat.b * s + this._curMat.d * r;
            }
            n.addPoint(t, e);
          }, o.lineTo = function(t, e, i) {
            void 0 === i && (i = !0);
            var n = this._getPath();
            if (i) {
              var s = t,
                r = e;
              t = this._curMat.a * s + this._curMat.c * r, e = this._curMat.b * s + this._curMat.d * r;
            }
            n.addPoint(t, e);
          }, o.drawCurves = function(t, e, i) {
            this.setPathId(-1), this.beginPath(), this.strokeStyle = i[3], this.lineWidth = i[4];
            var n = i[2];
            t += i[0], e += i[1], this.movePath(t, e), this.moveTo(n[0], n[1]);
            for (var s = 2, r = n.length; s < r;) this.quadraticCurveTo(n[s++], n[s++], n[s++], n[s++]);
            this.stroke();
          }, o.arcTo = function(t, i, n, s, r) {
            if (-1 == this.mId || !this.mHaveKey) {
              var a = 0,
                o = 0,
                h = 0,
                l = this._getPath();
              this._curMat.copyTo(e._tmpMatrix), e._tmpMatrix.tx = e._tmpMatrix.ty = 0, e._tempPoint.setTo(l.getEndPointX(), l.getEndPointY()),
                e._tmpMatrix.invertTransformPoint(e._tempPoint);
              var u = e._tempPoint.x - t,
                c = e._tempPoint.y - i,
                _ = Math.sqrt(u * u + c * c);
              if (!(_ <= 1e-6)) {
                var d = u / _,
                  p = c / _,
                  f = n - t,
                  g = s - i,
                  m = f * f + g * g,
                  y = Math.sqrt(m);
                if (!(y <= 1e-6)) {
                  var v = f / y,
                    x = g / y,
                    b = d + v,
                    w = p + x,
                    I = Math.sqrt(b * b + w * w);
                  if (!(I <= 1e-6)) {
                    var S = b / I,
                      C = w / I,
                      T = Math.acos(S * d + C * p),
                      E = Math.PI / 2 - T,
                      M = (_ = r / Math.tan(E)) * d + t,
                      L = _ * p + i,
                      P = Math.sqrt(_ * _ + r * r),
                      A = t + S * P,
                      D = i + C * P,
                      R = 0,
                      N = 0,
                      O = 0;
                    if (d * x - p * v >= 0) {
                      var B = (R = 2 * E) / e.SEGNUM;
                      N = Math.sin(B), O = Math.cos(B);
                    } else B = (R = 2 * -E) / e.SEGNUM, N = Math.sin(B), O = Math.cos(B);
                    o = this._curMat.a * M + this._curMat.c * L, h = this._curMat.b * M + this._curMat.d * L,
                      o == this._path.getEndPointX() && h == this._path.getEndPointY() || l.addPoint(o, h);
                    var k = M - A,
                      F = L - D;
                    for (a = 0; a < e.SEGNUM; a++) {
                      var U = k * O + F * N,
                        G = -k * N + F * O;
                      o = U + A, h = G + D, t = this._curMat.a * o + this._curMat.c * h, h = i = this._curMat.b * o + this._curMat.d * h,
                        (o = t) == this._path.getEndPointX() && h == this._path.getEndPointY() || l.addPoint(o, h),
                        k = U, F = G;
                    }
                  }
                }
              }
            }
          }, o.arc = function(t, e, i, n, s, r, a) {
            if (void 0 === r && (r = !1), void 0 === a && (a = !0), -1 != this.mId) {
              var o = B.getInstance().shapeDic[this.mId];
              if (o && this.mHaveKey && !o.needUpdate(this._curMat)) return;
              t = 0, e = 0;
            }
            var h = 0,
              l = 0,
              u = 0,
              c = 0,
              _ = 0,
              d = 0,
              p = 0,
              f = 0;
            if (l = s - n, r)
              if (Math.abs(l) >= 2 * Math.PI) l = 2 * -Math.PI;
              else
                for (; l > 0;) l -= 2 * Math.PI;
            else if (Math.abs(l) >= 2 * Math.PI) l = 2 * Math.PI;
            else
              for (; l < 0;) l += 2 * Math.PI;
            u = l / (f = i < 101 ? Math.max(10, l * i / 5) : i < 201 ? Math.max(10, l * i / 20) : Math.max(10, l * i / 40)) / 2,
              c = Math.abs(4 / 3 * (1 - Math.cos(u)) / Math.sin(u)), r && (c = -c);
            var g = this._getPath(),
              m = NaN,
              y = NaN;
            for (p = 0; p <= f; p++) h = n + l * (p / f), _ = t + Math.cos(h) * i, d = e + Math.sin(h) * i,
              a && (m = _, y = d, _ = this._curMat.a * m + this._curMat.c * y, d = this._curMat.b * m + this._curMat.d * y),
              _ == this._path.getEndPointX() && d == this._path.getEndPointY() || g.addPoint(_, d);
            _ = t + Math.cos(s) * i, d = e + Math.sin(s) * i, a && (m = _, y = d, _ = this._curMat.a * m + this._curMat.c * y,
              d = this._curMat.b * m + this._curMat.d * y), _ == this._path.getEndPointX() && d == this._path.getEndPointY() || g.addPoint(_, d);
          }, o.quadraticCurveTo = function(t, e, i, n) {
            var s = h.I,
              r = i,
              a = n;
            i = this._curMat.a * r + this._curMat.c * a, n = this._curMat.b * r + this._curMat.d * a,
              r = t, a = e, t = this._curMat.a * r + this._curMat.c * a, e = this._curMat.b * r + this._curMat.d * a;
            for (var o = s.getBezierPoints([this._path.getEndPointX(), this._path.getEndPointY(), t, e, i, n], 30, 2), l = 0, u = o.length / 2; l < u; l++) this.lineTo(o[2 * l], o[2 * l + 1], !1);
            this.lineTo(i, n, !1);
          }, o.rect = function(t, e, i, n) {
            this._other = this._other.make(), this._other.path || (this._other.path = new W()),
              this._other.path.rect(t, e, i, n);
          }, o.strokeRect = function(t, e, i, n, s) {
            var r = .5 * s;
            this.line(t - r, e, t + i + r, e, s, this._curMat), this.line(t + i, e, t + i, e + n, s, this._curMat),
              this.line(t, e, t, e + n, s, this._curMat), this.line(t - r, e + n, t + i + r, e + n, s, this._curMat);
          }, o.clip = function() {}, o.drawPoly = function(t, e, i, n, s, r, a) {
            void 0 === a && (a = !1), this._renderKey = 0, this._shader2D.glTexture = null;
            var o = this._getPath();
            if (-1 == this.mId) o.polygon(t, e, i, n, s || 1, r);
            else if (this.mHaveKey) {
              var h = B.getInstance().shapeDic[this.mId];
              h.setMatrix(this._curMat), h.rebuild(o.tempArray), o.setGeomtry(h);
            } else {
              var l = o.polygon(t, e, i, n, s || 1, r);
              B.getInstance().addShape(this.mId, l), l.setMatrix(this._curMat);
            }
            o.update();
            var u, c = [this.mX, this.mY];
            if (u = rt.createShape(this, o.ib, o.vb, o.count, o.offset, St.create(4, 0)), u.shaderValue.ALPHA = this._shader2D.ALPHA,
              u.shaderValue.u_pos = c, u.shaderValue.u_mmat2 = yt.EMPTYMAT4_ARRAY, this._submits[this._submits._length++] = u,
              s > 0) {
              if (this.mHaveLineKey) {
                var _ = B.getInstance().shapeLineDic[this.mId];
                _.rebuild(o.tempArray), o.setGeomtry(_);
              } else B.getInstance().addShape(this.mId, o.drawLine(t, e, i, s, r));
              o.update(), (u = rt.createShape(this, o.ib, o.vb, o.count, o.offset, St.create(4, 0))).shaderValue.ALPHA = this._shader2D.ALPHA,
                u.shaderValue.u_mmat2 = yt.EMPTYMAT4_ARRAY, this._submits[this._submits._length++] = u;
            }
          }, o.drawParticle = function(t, e, i) {
            i.x = t, i.y = e, this._submits[this._submits._length++] = i;
          }, o._getPath = function() {
            return this._path || (this._path = new W());
          }, r(0, o, "globalCompositeOperation", function() {
            return H.NAMES[this._nBlendType];
          }, function(t) {
            var e = H.TOINT[t];
            null == e || this._nBlendType === e || (Y.save(this, 65536, this, !0), this._curSubmit = rt.RENDERBASE,
              this._renderKey = 0, this._nBlendType = e);
          }), r(0, o, "strokeStyle", function() {
            return this._shader2D.strokeStyle;
          }, function(t) {
            this._shader2D.strokeStyle.equal(t) || (Y.save(this, 512, this._shader2D, !1), this._shader2D.strokeStyle = z.create(t));
          }), r(0, o, "globalAlpha", function() {
            return this._shader2D.ALPHA;
          }, function(t) {
            (t = Math.floor(1e3 * t) / 1e3) != this._shader2D.ALPHA && (Y.save(this, 1, this._shader2D, !0),
              this._shader2D.ALPHA = t);
          }), r(0, o, "asBitmap", null, function(t) {
            if (t) {
              if (this._targets || (this._targets = new Q()), this._targets.repaint = !0, !this._width || !this._height) throw Error("asBitmap no size!");
              this._targets.setSP(this.sprite), this._targets.size(this._width, this._height);
            } else this._targets = null;
          }), r(0, o, "fillStyle", function() {
            return this._shader2D.fillStyle;
          }, function(t) {
            this._shader2D.fillStyle.equal(t) || (Y.save(this, 2, this._shader2D, !1), this._shader2D.fillStyle = z.create(t));
          }), r(0, o, "textAlign", function() {
            return this._other.textAlign;
          }, function(t) {
            this._other.textAlign === t || (this._other = this._other.make(), Y.save(this, 32768, this._other, !1),
              this._other.textAlign = t);
          }), r(0, o, "lineWidth", function() {
            return this._other.lineWidth;
          }, function(t) {
            this._other.lineWidth === t || (this._other = this._other.make(), Y.save(this, 256, this._other, !1),
              this._other.lineWidth = t);
          }), r(0, o, "textBaseline", function() {
            return this._other.textBaseline;
          }, function(t) {
            this._other.textBaseline === t || (this._other = this._other.make(), Y.save(this, 16384, this._other, !1),
              this._other.textBaseline = t);
          }), r(0, o, "font", null, function(t) {
            t != this._other.font.toString() && (this._other = this._other.make(), Y.save(this, 8, this._other, !1),
              this._other.font === pt.EMPTY ? this._other.font = new pt(t) : this._other.font.setFont(t));
          }), e.__init__ = function() {
            a.DEFAULT = new a();
          }, e._tempPoint = new b(), e._SUBMITVBSIZE = 32e3, e._MAXSIZE = 99999999, e._RECTVBSIZE = 16,
          e.MAXCLIPRECT = new w(0, 0, 99999999, 99999999), e._COUNT = 0, e._tmpMatrix = new x(),
          e.SEGNUM = 32, e._contextcount = 0, n(e, ["_fontTemp", function() {
            return this._fontTemp = new pt();
          }, "_drawStyleTemp", function() {
            return this._drawStyleTemp = new z(null);
          }]), e.__init$ = function() {
            a = function() {
              function t() {
                this.lineWidth = 1, this.path = null, this.textAlign = null, this.textBaseline = null,
                  this.font = pt.EMPTY;
              }
              s(t, "");
              var e = t.prototype;
              return e.clear = function() {
                this.lineWidth = 1, this.path && this.path.clear(), this.textAlign = this.textBaseline = null,
                  this.font = pt.EMPTY;
              }, e.make = function() {
                return this === t.DEFAULT ? new t() : this;
              }, t.DEFAULT = null, t;
            }();
          }, e;
      }(),
      St = function(t) {
        function e(t, i) {
          this.size = [0, 0], this.alpha = 1, this.ALPHA = 1, this.subID = 0, this._cacheID = 0,
            e.__super.call(this), this.defines = new Mt(), this.position = e._POSITION, this.mainID = t,
            this.subID = i, this.textureHost = null, this.texture = null, this.fillStyle = null,
            this.color = null, this.strokeStyle = null, this.colorAdd = null, this.glTexture = null,
            this.u_mmat2 = null, this._cacheID = t | i, this._inClassCache = e._cache[this._cacheID],
            t > 0 && !this._inClassCache && (this._inClassCache = e._cache[this._cacheID] = [],
              this._inClassCache._length = 0), this.clear();
        }
        s(e, "laya.webgl.shader.d2.value.Value2D", F);
        var i = e.prototype;
        return i.setValue = function(t) {}, i.refresh = function() {
            var t = this.size;
            return t[0] = yt.width, t[1] = yt.height, this.alpha = this.ALPHA * yt.worldAlpha,
              this.mmat = yt.worldMatrix4, this;
          }, i._ShaderWithCompile = function() {
            return jt.withCompile2D(0, this.mainID, this.defines.toNameDic(), this.mainID | this.defines._value, Qt.create);
          }, i._withWorldShaderDefines = function() {
            var t = yt.worldShaderDefines,
              e = jt.sharders[this.mainID | this.defines._value | t.getValue()];
            if (!e) {
              var i, n, s = {};
              i = this.defines.toNameDic();
              for (n in i) s[n] = "";
              i = t.toNameDic();
              for (n in i) s[n] = "";
              e = jt.withCompile2D(0, this.mainID, s, this.mainID | this.defines._value | t.getValue(), Qt.create);
            }
            var r = yt.worldFilters;
            if (!r) return e;
            for (var a, o = r.length, h = 0; h < o; h++)(a = r[h]) && a.action.setValue(this);
            return e;
          }, i.upload = function() {
            var t = yt;
            this.alpha = this.ALPHA * t.worldAlpha, yt.worldMatrix4 !== yt.TEMPMAT4_ARRAY && this.defines.add(128),
              xt.shaderHighPrecision && this.defines.add(1024);
            var e, i = t.worldShaderDefines ? this._withWorldShaderDefines() : jt.sharders[this.mainID | this.defines._value] || this._ShaderWithCompile();
            this.size[0] = t.width, this.size[1] = t.height, this.mmat = t.worldMatrix4, Ot.activeShader !== i ? (i._shaderValueWidth !== t.width || i._shaderValueHeight !== t.height ? (i._shaderValueWidth = t.width,
              i._shaderValueHeight = t.height) : e = i._params2dQuick2 || i._make2dQuick2(), i.upload(this, e)) : (i._shaderValueWidth !== t.width || i._shaderValueHeight !== t.height ? (i._shaderValueWidth = t.width,
              i._shaderValueHeight = t.height) : e = i._params2dQuick1 || i._make2dQuick1(), i.upload(this, e));
          }, i.setFilters = function(t) {
            if (this.filters = t, t)
              for (var e, i = t.length, n = 0; n < i; n++)(e = t[n]) && (this.defines.add(e.type),
                e.action.setValue(this));
          }, i.clear = function() {
            this.defines.setValue(this.subID);
          }, i.release = function() {
            this._inClassCache[this._inClassCache._length++] = this, this.fillStyle = null,
              this.strokeStyle = null, this.clear();
          }, e._initone = function(t, i) {
            e._typeClass[t] = i, e._cache[t] = [], e._cache[t]._length = 0;
          }, e.__init__ = function() {
            e._POSITION = [2, 5126, !1, 4 * ft.BYTES_PE, 0], e._TEXCOORD = [2, 5126, !1, 4 * ft.BYTES_PE, 2 * ft.BYTES_PE],
              e._initone(2, Ut), e._initone(4, Ht), e._initone(256, Gt), e._initone(512, Ft),
              e._initone(1, Vt), e._initone(65, qt), e._initone(9, Vt);
          }, e.create = function(t, i) {
            var n = e._cache[t | i];
            return n._length ? n[--n._length] : new e._typeClass[t | i](i);
          }, e._POSITION = null, e._TEXCOORD = null, e._cache = [], e._typeClass = [], e.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
          e;
      }(),
      Ct = function(t) {
        function e(t, i) {
          e.__super.call(this, t, i);
        }
        s(e, "laya.webgl.utils.RenderSprite3D", S);
        var i = e.prototype;
        return i.onCreate = function(t) {
          switch (t) {
            case 8:
              return void(this._fun = this._blend);

            case 4:
              return void(this._fun = this._transform);
          }
        }, i._mask = function(t, i, n, s) {
          var r, a, o = this._next,
            h = t.mask;
          if (h) {
            i.ctx.save();
            var l = i.ctx.globalCompositeOperation,
              u = new w();
            if (u.copyFrom(h.getBounds()), u.width = Math.round(u.width), u.height = Math.round(u.height),
              u.x = Math.round(u.x), u.y = Math.round(u.y), u.width > 0 && u.height > 0) {
              var c = t._style._tf,
                _ = ot.create();
              _.addValue("bounds", u), r = at.create([_, i], laya.webgl.utils.RenderSprite3D.tmpTarget),
                i.addRenderObject(r), h.render(i, -u.x, -u.y), r = at.create([_], laya.webgl.utils.RenderSprite3D.endTmpTarget),
                i.addRenderObject(r), i.ctx.save(), i.clipRect(n - c.translateX + u.x, s - c.translateY + u.y, u.width, u.height),
                o._fun.call(o, t, i, n, s), i.ctx.restore(), a = ut.create(6), l = i.ctx.globalCompositeOperation,
                a.blendMode = "mask", i.addRenderObject(a), x.TEMP.identity();
              var d = St.create(1, 0),
                p = N.INV_UV,
                f = u.width,
                g = u.height;
              (u.width < 32 || u.height < 32) && ((p = e.tempUV)[0] = 0, p[1] = 0, p[2] = u.width >= 32 ? 1 : u.width / 32,
                p[3] = 0, p[4] = u.width >= 32 ? 1 : u.width / 32, p[5] = u.height >= 32 ? 1 : u.height / 32,
                p[6] = 0, p[7] = u.height >= 32 ? 1 : u.height / 32, u.width = u.width >= 32 ? u.width : 32,
                u.height = u.height >= 32 ? u.height : 32, p[1] *= -1, p[3] *= -1, p[5] *= -1, p[7] *= -1,
                p[1] += 1, p[3] += 1, p[5] += 1, p[7] += 1), i.ctx.drawTarget(_, n + u.x - c.translateX, s + u.y - c.translateY, f, g, x.TEMP, "tmpTarget", d, p, 6),
                r = at.create([_], laya.webgl.utils.RenderSprite3D.recycleTarget), i.addRenderObject(r),
                (a = ut.create(6)).blendMode = l, i.addRenderObject(a);
            }
            i.ctx.restore();
          } else o._fun.call(o, t, i, n, s);
        }, i._blend = function(t, e, i, n) {
          var s = t._style,
            r = this._next;
          s.blendMode ? (e.ctx.save(), e.ctx.globalCompositeOperation = s.blendMode, r._fun.call(r, t, e, i, n),
            e.ctx.restore()) : r._fun.call(r, t, e, i, n);
        }, i._transform = function(t, e, i, n) {
          var s = t.transform,
            r = this._next;
          if (s && r != S.NORENDER) {
            var a = e.ctx;
            t._style;
            s.tx = i, s.ty = n;
            var o = a._getTransformMatrix(),
              h = o.clone();
            x.mul(s, o, o), o._checkTransform(), s.tx = s.ty = 0, r._fun.call(r, t, e, 0, 0),
              h.copyTo(o), h.destroy();
          } else r._fun.call(r, t, e, i, n);
        }, e.tmpTarget = function(t, e) {
          var i = t.getValue("bounds"),
            n = Bt.create(i.width, i.height);
          n.start(), n.clear(0, 0, 0, 0), t.addValue("tmpTarget", n);
        }, e.endTmpTarget = function(t) {
          t.getValue("tmpTarget").end();
        }, e.recycleTarget = function(t) {
          t.getValue("tmpTarget").recycle(), t.recycle();
        }, n(e, ["tempUV", function() {
          return this.tempUV = new Array(8);
        }]), e;
      }(),
      Tt = function(t) {
        function e() {
          this.data = null, e.__super.call(this);
        }
        s(e, "laya.filters.webgl.ColorFilterActionGL", k);
        var n = e.prototype;
        return i.imps(n, {
          "laya.filters.IFilterActionGL": !0
        }), n.setValue = function(t) {
          t.colorMat = this.data._mat, t.colorAlpha = this.data._alpha;
        }, n.apply3d = function(t, e, i, n, s) {
          var r = t.getValue("bounds"),
            a = St.create(1, 0);
          a.setFilters([this.data]);
          var o = x.TEMP;
          o.identity(), i.ctx.drawTarget(t, 0, 0, r.width, r.height, o, "src", a);
        }, e;
      }(),
      Et = function(t) {
        function e(t, i, n, s, r) {
          this._atlasCanvas = null, this._inAtlasTextureKey = null, this._inAtlasTextureBitmapValue = null,
            this._inAtlasTextureOriUVValue = null, this._InAtlasWebGLImagesKey = null, this._InAtlasWebGLImagesOffsetValue = null,
            e.__super.call(this, t, i, r), this._inAtlasTextureKey = [], this._inAtlasTextureBitmapValue = [],
            this._inAtlasTextureOriUVValue = [], this._InAtlasWebGLImagesKey = {}, this._InAtlasWebGLImagesOffsetValue = [],
            this._atlasCanvas = new zt(), this._atlasCanvas._atlaser = this, this._atlasCanvas.width = n,
            this._atlasCanvas.height = s, this._atlasCanvas.activeResource(), this._atlasCanvas.lock = !0;
        }
        s(e, "laya.webgl.atlas.Atlaser", U);
        var i = e.prototype;
        return i.computeUVinAtlasTexture = function(t, e, i, n) {
          var s = G.atlasTextureWidth,
            r = G.atlasTextureHeight,
            a = i / s,
            o = n / r,
            h = (i + t.bitmap.width) / s,
            l = (n + t.bitmap.height) / r,
            u = t.bitmap.width / s,
            c = t.bitmap.height / r;
          t.uv = [a + e[0] * u, o + e[1] * c, h - (1 - e[2]) * u, o + e[3] * c, h - (1 - e[4]) * u, l - (1 - e[5]) * c, a + e[6] * u, l - (1 - e[7]) * c];
        }, i.findBitmapIsExist = function(t) {
          if (t instanceof laya.webgl.resource.WebGLImage) {
            var e = t,
              i = e.url,
              n = this._InAtlasWebGLImagesKey[i || e.id];
            if (n) return n.offsetInfoID;
          }
          return -1;
        }, i.addToAtlasTexture = function(t, e, i) {
          if (t instanceof laya.webgl.resource.WebGLImage) {
            var n = t,
              s = n.url;
            this._InAtlasWebGLImagesKey[s || n.id] = {
              bitmap: t,
              offsetInfoID: this._InAtlasWebGLImagesOffsetValue.length
            }, this._InAtlasWebGLImagesOffsetValue.push([e, i]);
          }
          this._atlasCanvas.texSubImage2D(e, i, t.atlasSource), t.clearAtlasSource();
        }, i.addToAtlas = function(t, e, i) {
          t._atlasID = this._inAtlasTextureKey.length;
          var n = t.uv.slice(),
            s = t.bitmap;
          this._inAtlasTextureKey.push(t), this._inAtlasTextureOriUVValue.push(n), this._inAtlasTextureBitmapValue.push(s),
            this.computeUVinAtlasTexture(t, n, e, i), t.bitmap = this._atlasCanvas;
        }, i.clear = function() {
          for (var t = 0, e = this._inAtlasTextureKey.length; t < e; t++) this._inAtlasTextureKey[t].bitmap = this._inAtlasTextureBitmapValue[t],
            this._inAtlasTextureKey[t].uv = this._inAtlasTextureOriUVValue[t], this._inAtlasTextureKey[t]._atlasID = -1,
            this._inAtlasTextureKey[t].bitmap.lock = !1, this._inAtlasTextureKey[t].bitmap.releaseResource();
          this._inAtlasTextureKey.length = 0, this._inAtlasTextureBitmapValue.length = 0,
            this._inAtlasTextureOriUVValue.length = 0, this._InAtlasWebGLImagesKey = null, this._InAtlasWebGLImagesOffsetValue.length = 0;
        }, i.dispose = function() {
          this.clear(), this._atlasCanvas.destroy();
        }, r(0, i, "InAtlasWebGLImagesOffsetValue", function() {
          return this._InAtlasWebGLImagesOffsetValue;
        }), r(0, i, "texture", function() {
          return this._atlasCanvas;
        }), r(0, i, "inAtlasWebGLImagesKey", function() {
          return this._InAtlasWebGLImagesKey;
        }), e;
      }(),
      Mt = function(t) {
        function e() {
          e.__super.call(this, e.__name2int, e.__int2name, e.__int2nameMap);
        }
        return s(e, "laya.webgl.shader.d2.ShaderDefines2D", J), e.__init__ = function() {
            e.reg("TEXTURE2D", 1), e.reg("COLOR2D", 2), e.reg("PRIMITIVE", 4), e.reg("GLOW_FILTER", 8),
              e.reg("BLUR_FILTER", 16), e.reg("COLOR_FILTER", 32), e.reg("COLOR_ADD", 64), e.reg("WORLDMAT", 128),
              e.reg("FILLTEXTURE", 256), e.reg("FSHIGHPRECISION", 1024);
          }, e.reg = function(t, i) {
            J._reg(t, i, e.__name2int, e.__int2name);
          }, e.toText = function(t, e, i) {
            return J._toText(t, e, i);
          }, e.toInt = function(t) {
            return J._toInt(t, e.__name2int);
          }, e.TEXTURE2D = 1, e.COLOR2D = 2, e.PRIMITIVE = 4, e.FILTERGLOW = 8, e.FILTERBLUR = 16,
          e.FILTERCOLOR = 32, e.COLORADD = 64, e.WORLDMAT = 128, e.FILLTEXTURE = 256, e.SKINMESH = 512,
          e.SHADERDEFINE_FSHIGHPRECISION = 1024, e.__name2int = {}, e.__int2name = [], e.__int2nameMap = [],
          e;
      }(),
      Lt = (function(t) {
        function e(t, i, n, s, r, a, o) {
          e.__super.call(this, t, i, n, s, 40, r, a, o);
        }
        s(e, "laya.webgl.shapes.Ellipse", it);
      }(), function(t) {
        function e(t, i, n, s, r) {
          this._points = [], this.rebuild(n), e.__super.call(this, t, i, 0, 0, 0, r, s, r, 0);
        }
        s(e, "laya.webgl.shapes.Line", it);
        var i = e.prototype;
        return i.rebuild = function(t) {
          var e = t.length;
          e != this._points.length && (this.mUint16Array = new Uint16Array(6 * (e / 2 - 1)),
            this.mFloat32Array = new Float32Array(5 * e)), this._points.length = 0;
          for (var i = NaN, n = NaN, s = -1, r = -1, a = t.length / 2, o = 0; o < a; o++) i = t[2 * o],
            n = t[2 * o + 1], (Math.abs(s - i) > .01 || Math.abs(r - n) > .01) && this._points.push(i, n),
            s = i, r = n;
        }, i.getData = function(t, e, i) {
          var n = [],
            s = [];
          this.borderWidth > 0 && this.createLine2(this._points, n, this.borderWidth, i, s, this._points.length / 2),
            this.mUint16Array.set(n, 0), this.mFloat32Array.set(s, 0), t.append(this.mUint16Array),
            e.append(this.mFloat32Array);
        }, e;
      }()),
      Pt = function(t) {
        function e(t, i, n, s, r) {
          this._points = [];
          for (var a = NaN, o = NaN, h = -1, l = -1, u = n.length / 2 - 1, c = 0; c < u; c++) a = n[2 * c],
            o = n[2 * c + 1], (Math.abs(h - a) > .01 || Math.abs(l - o) > .01) && this._points.push(a, o),
            h = a, l = o;
          a = n[2 * u], o = n[2 * u + 1], h = this._points[0], l = this._points[1], (Math.abs(h - a) > .01 || Math.abs(l - o) > .01) && this._points.push(a, o),
            e.__super.call(this, t, i, 0, 0, this._points.length / 2, 0, s, r);
        }
        s(e, "laya.webgl.shapes.LoopLine", it);
        var i = e.prototype;
        return i.getData = function(t, e, i) {
          if (this.borderWidth > 0) {
            for (var n = this.color, s = (n >> 16 & 255) / 255, r = (n >> 8 & 255) / 255, a = (255 & n) / 255, o = [], h = 0, l = 0, u = [], c = Math.floor(this._points.length / 2), _ = 0; _ < c; _++) h = this._points[2 * _],
              l = this._points[2 * _ + 1], o.push(this.x + h, this.y + l, s, r, a);
            this.createLoopLine(o, u, this.borderWidth, i + o.length / 5), t.append(new Uint16Array(u)),
              e.append(new Float32Array(o));
          }
        }, i.createLoopLine = function(t, e, i, n, s, r) {
          t.length;
          var a = t.concat(),
            o = s || t,
            h = this.borderColor,
            l = (h >> 16 & 255) / 255,
            u = (h >> 8 & 255) / 255,
            c = (255 & h) / 255,
            _ = [a[0], a[1]],
            d = [a[a.length - 5], a[a.length - 4]],
            p = d[0] + .5 * (_[0] - d[0]),
            f = d[1] + .5 * (_[1] - d[1]);
          a.unshift(p, f, 0, 0, 0), a.push(p, f, 0, 0, 0);
          var g, m, y, v, x, b, w, I, S, C, T, E, M, L, P, A, D, R, N, O, B = a.length / 5,
            k = n,
            F = i / 2;
          y = a[0], v = a[1], C = y - (x = a[5]), S = (S = -(v - (b = a[6]))) / (O = Math.sqrt(S * S + C * C)) * F,
            C = C / O * F, o.push(y - S, v - C, l, u, c, y + S, v + C, l, u, c);
          for (var U = 1; U < B - 1; U++) y = a[5 * (U - 1)], v = a[5 * (U - 1) + 1], x = a[5 * U],
            b = a[5 * U + 1], w = a[5 * (U + 1)], I = a[5 * (U + 1) + 1], C = y - x, E = x - w,
            P = (-(S = (S = -(v - b)) / (O = Math.sqrt(S * S + C * C)) * F) + y) * (-(C = C / O * F) + b) - (-S + x) * (-C + v),
            R = (-(T = (T = -(b - I)) / (O = Math.sqrt(T * T + E * E)) * F) + w) * (-(E = E / O * F) + b) - (-T + x) * (-E + I),
            N = (M = -C + v - (-C + b)) * (D = -T + x - (-T + w)) - (A = -E + I - (-E + b)) * (L = -S + x - (-S + y)),
            Math.abs(N) < .1 ? (N += 10.1, o.push(x - S, b - C, l, u, c, x + S, b + C, l, u, c)) : (((g = (L * R - D * P) / N) - x) * (g - x) + ((m = (A * P - M * R) / N) - b) + (m - b),
              o.push(g, m, l, u, c, x - (g - x), b - (m - b), l, u, c));
          r && (e = r);
          var G = this.edges + 1;
          for (U = 1; U < G; U++) e.push(k + 2 * (U - 1), k + 2 * (U - 1) + 1, k + 2 * U + 1, k + 2 * U + 1, k + 2 * U, k + 2 * (U - 1));
          return e.push(k + 2 * (U - 1), k + 2 * (U - 1) + 1, k + 1, k + 1, k, k + 2 * (U - 1)),
            o;
        }, e;
      }(),
      At = function(t) {
        function e(t, i, n, s, r, a) {
          this._points = null, this._start = -1, this._repaint = !1, this.earcutTriangles = null,
            this._mat = x.create(), this._points = n.slice(0, n.length), e.__super.call(this, t, i, 0, 0, this._points.length / 2, s, r, a);
        }
        s(e, "laya.webgl.shapes.Polygon", it);
        var i = e.prototype;
        return i.rebuild = function(t) {
          this._repaint || (this._points.length = 0, this._points = this._points.concat(t));
        }, i.setMatrix = function(t) {
          t.copyTo(this._mat);
        }, i.needUpdate = function(t) {
          return this._repaint = this._mat.a == t.a && this._mat.b == t.b && this._mat.c == t.c && this._mat.d == t.d && this._mat.tx == t.tx && this._mat.ty == t.ty, !this._repaint;
        }, i.getData = function(t, e, i) {
          var n, s = 0,
            r = this._points,
            a = 0;
          if (this.mUint16Array && this.mFloat32Array && this._repaint) {
            if (this._start != i) {
              for (this._start = i, n = [], a = this.earcutTriangles.length, s = 0; s < a; s++) n.push(this.earcutTriangles[s] + i);
              this.mUint16Array = new Uint16Array(n);
            }
          } else {
            this._start = i, n = [];
            var o = [],
              h = [],
              l = this.color,
              u = (l >> 16 & 255) / 255,
              c = (l >> 8 & 255) / 255,
              _ = (255 & l) / 255;
            for (a = Math.floor(r.length / 2), s = 0; s < a; s++) o.push(this.x + r[2 * s], this.y + r[2 * s + 1], u, c, _),
              h.push(this.x + r[2 * s], this.y + r[2 * s + 1]);
            for (this.earcutTriangles = nt.earcut(h, null, 2), a = this.earcutTriangles.length,
              s = 0; s < a; s++) n.push(this.earcutTriangles[s] + i);
            this.mUint16Array = new Uint16Array(n), this.mFloat32Array = new Float32Array(o);
          }
          t.append(this.mUint16Array), e.append(this.mFloat32Array);
        }, e;
      }(),
      Dt = function(t) {
        function e() {
          this._matrix = new x(), this._matrix4 = ft.defaultMatrix4.concat(), e.__super.call(this, 1e4),
            this.shaderValue = new St(0, 0);
        }
        s(e, "laya.webgl.submit.SubmitCanvas", rt);
        var i = e.prototype;
        return i.renderSubmit = function() {
          if (this._ctx_src._targets) return this._ctx_src._targets.flush(this._ctx_src),
            1;
          var t = yt.worldAlpha,
            e = yt.worldMatrix4,
            i = yt.worldMatrix,
            n = yt.worldFilters,
            s = yt.worldShaderDefines,
            r = this.shaderValue,
            a = this._matrix,
            o = this._matrix4,
            h = x.TEMP;
          return x.mul(a, i, h), o[0] = h.a, o[1] = h.b, o[4] = h.c, o[5] = h.d, o[12] = h.tx,
            o[13] = h.ty, yt.worldMatrix = h.clone(), yt.worldMatrix4 = o, yt.worldAlpha = yt.worldAlpha * r.alpha,
            r.filters && r.filters.length && (yt.worldFilters = r.filters, yt.worldShaderDefines = r.defines),
            this._ctx_src.flush(), yt.worldAlpha = t, yt.worldMatrix4 = e, yt.worldMatrix.destroy(),
            yt.worldMatrix = i, yt.worldFilters = n, yt.worldShaderDefines = s, 1;
        }, i.releaseRender = function() {
          var t = e._cache;
          this._ctx_src = null, t[t._length++] = this;
        }, i.getRenderType = function() {
          return 10003;
        }, e.create = function(t, i, n) {
          var s = e._cache._length ? e._cache[--e._cache._length] : new e();
          s._ctx_src = t;
          var r = s.shaderValue;
          return r.alpha = i, r.defines.setValue(0), n && n.length && r.setFilters(n), s;
        }, e._cache = (e._cache = [], e._cache._length = 0, e._cache), e;
      }(),
      Rt = function(t) {
        function e(t) {
          this._preIsSameTextureShader = !1, this._isSameTexture = !0, this._texs = new Array(),
            this._texsID = new Array(), this._vbPos = new Array(), void 0 === t && (t = 1e4),
            e.__super.call(this, t);
        }
        s(e, "laya.webgl.submit.SubmitTexture", rt);
        var i = e.prototype;
        return i.releaseRender = function() {
            var t = e._cache;
            t[t._length++] = this, this.shaderValue.release(), this._preIsSameTextureShader = !1,
              this._vb = null, this._texs.length = 0, this._vbPos.length = 0, this._isSameTexture = !0;
          }, i.addTexture = function(t, e) {
            this._texsID[this._texs.length] = t._uvID, this._texs.push(t), this._vbPos.push(e);
          }, i.checkTexture = function() {
            if (this._texs.length < 1) this._isSameTexture = !0;
            else {
              var t = this.shaderValue.textureHost.bitmap;
              if (null !== t)
                for (var e = this._vb.getFloat32Array(), i = 0, n = this._texs.length; i < n; i++) {
                  var s = this._texs[i];
                  s.active();
                  var r = s.uv;
                  if (this._texsID[i] !== s._uvID) {
                    this._texsID[i] = s._uvID;
                    var a = this._vbPos[i];
                    e[a + 2] = r[0], e[a + 3] = r[1], e[a + 6] = r[2], e[a + 7] = r[3], e[a + 10] = r[4],
                      e[a + 11] = r[5], e[a + 14] = r[6], e[a + 15] = r[7], this._vb.setNeedUpload();
                  }
                  s.bitmap !== t && (this._isSameTexture = !1);
                }
            }
          }, i.renderSubmit = function() {
            if (0 === this._numEle) return e._shaderSet = !1, 1;
            var t = this.shaderValue.textureHost;
            if (t) {
              var i = t.source;
              if (!t.bitmap || !i) return e._shaderSet = !1, 1;
              this.shaderValue.texture = i;
            }
            this._vb.bind_upload(this._ib);
            var n = xt.mainContext;
            if (H.activeBlendFunction !== this._blendFn && (n.enable(3042), this._blendFn(n),
                H.activeBlendFunction = this._blendFn), P.drawCall++, P.trianglesFaces += this._numEle / 3,
              this._preIsSameTextureShader && Ot.activeShader && e._shaderSet ? Ot.activeShader.uploadTexture2D(this.shaderValue.texture) : this.shaderValue.upload(),
              e._shaderSet = !0, this._texs.length > 1 && !this._isSameTexture)
              for (var s = t.bitmap, r = 0, a = Ot.activeShader, o = 0, h = this._texs.length; o < h; o++) {
                var l = this._texs[o];
                l.bitmap === s && o + 1 !== h || (a.uploadTexture2D(l.source), n.drawElements(4, 6 * (o - r + 1), 5123, this._startIdx + 6 * r * ft.BYTES_PIDX),
                  s = l.bitmap, r = o);
              } else n.drawElements(4, this._numEle, 5123, this._startIdx);
            return 1;
          }, e.create = function(t, i, n, s, r) {
            var a = e._cache._length ? e._cache[--e._cache._length] : new e();
            null == n && ((n = a._selfVb || (a._selfVb = Jt.create(-1))).clear(), s = 0), a._ib = i,
              a._vb = n, a._startIdx = s * ft.BYTES_PIDX, a._numEle = 0;
            var o = t._nBlendType;
            a._blendFn = t._targets ? H.targetFns[o] : H.fns[o], a.shaderValue = r, a.shaderValue.setValue(t._shader2D);
            var h = t._shader2D.filters;
            return h && a.shaderValue.setFilters(h), a;
          }, e._cache = (e._cache = [], e._cache._length = 0, e._cache), e._shaderSet = !0,
          e;
      }(),
      Nt = function(t) {
        function e() {
          e.__super.call(this, laya.webgl.utils.MeshTexture.const_stride, 0, 0), this.canReuse = !0,
            this.setAttributes(laya.webgl.utils.MeshTexture._fixattriInfo);
        }
        s(e, "laya.webgl.utils.MeshTexture", mt);
        var i = e.prototype;
        return i.addData = function(t, i, n, s, r, a) {
          for (var o = t.length / 2, h = this._vb.needSize(o * e.const_stride) >> 2, l = this._vb.getFloat32Array(), u = 0, c = 0; c < o; c++) {
            var _ = t[u],
              d = t[u + 1],
              p = _ * s.a + d * s.c + s.tx,
              f = _ * s.b + d * s.d + s.ty;
            l[h++] = p, l[h++] = f, l[h++] = i[u], l[h++] = i[u + 1], u += 2;
          }
          this._vb.setNeedUpload();
          var g = this.vertNum;
          if (g > 0) {
            (o = n.length) > e.tmpIdx.length && (e.tmpIdx = new Uint16Array(o));
            for (var m = 0; m < o; m++) e.tmpIdx[m] = n[m] + g;
            this._ib.appendU16Array(e.tmpIdx, n.length);
          } else this._ib.append(n);
          this._ib.setNeedUpload(), this.vertNum += o, this.indexNum += n.length;
        }, i.releaseMesh = function() {
          this._vb._byteLength = 0, this._ib._byteLength = 0, this.vertNum = 0, this.indexNum = 0,
            laya.webgl.utils.MeshTexture._POOL.push(this);
        }, i.destroy = function() {
          this._ib.destroy(), this._vb.destroy();
        }, e.getAMesh = function() {
          return laya.webgl.utils.MeshTexture._POOL.length ? laya.webgl.utils.MeshTexture._POOL.pop() : new e();
        }, e.const_stride = 16, e._POOL = [], n(e, ["_fixattriInfo", function() {
          return this._fixattriInfo = [5126, 2, 0, 5126, 2, 8];
        }, "tmpIdx", function() {
          return this.tmpIdx = new Uint16Array(4);
        }]), e;
      }(),
      Ot = function(t) {
        function e() {
          e.__super.call(this), this.lock = !0;
        }
        return s(e, "laya.webgl.shader.BaseShader", C), e.activeShader = null, e.bindShader = null,
          e;
      }(),
      Bt = function(t) {
        function e(t, i, n, s, r, a, o, h, l) {
          this._type = 0, this._svWidth = NaN, this._svHeight = NaN, this._preRenderTarget = null,
            this._alreadyResolved = !1, this._looked = !1, this._surfaceFormat = 0, this._surfaceType = 0,
            this._depthStencilFormat = 0, this._mipMap = !1, this._repeat = !1, this._minFifter = 0,
            this._magFifter = 0, this._destroy = !1, void 0 === n && (n = 6408), void 0 === s && (s = 5121),
            void 0 === r && (r = 34041), void 0 === a && (a = !1), void 0 === o && (o = !1),
            void 0 === h && (h = -1), void 0 === l && (l = -1), this._type = 1, this._w = t,
            this._h = i, this._surfaceFormat = n, this._surfaceType = s, this._depthStencilFormat = r,
            I.isConchWebGL && 34041 === this._depthStencilFormat && (this._depthStencilFormat = 33189),
            this._mipMap = a, this._repeat = o, this._minFifter = h, this._magFifter = l, this._createWebGLRenderTarget(),
            this.bitmap.lock = !0, e.__super.call(this, this.bitmap, N.INV_UV);
        }
        s(e, "laya.webgl.resource.RenderTarget2D", t);
        var n = e.prototype;
        return i.imps(n, {
          "laya.resource.IDispose": !0
        }), n.getType = function() {
          return this._type;
        }, n.getTexture = function() {
          return this;
        }, n.size = function(t, e) {
          this._w == t && this._h == e || (this._w = t, this._h = e, this.release(), 0 != this._w && 0 != this._h && this._createWebGLRenderTarget());
        }, n.release = function() {
          this.destroy();
        }, n.recycle = function() {
          e.POOL.push(this);
        }, n.start = function() {
          var t = xt.mainContext;
          return this._preRenderTarget = yt.curRenderTarget, yt.curRenderTarget = this, t.bindFramebuffer(36160, this.bitmap.frameBuffer),
            this._alreadyResolved = !1, 1 == this._type && (t.viewport(0, 0, this._w, this._h),
              this._svWidth = yt.width, this._svHeight = yt.height, yt.width = this._w, yt.height = this._h,
              Ot.activeShader = null), this;
        }, n.clear = function(t, e, i, n) {
          void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 1);
          var s = xt.mainContext;
          s.clearColor(t, e, i, n);
          var r = 16384;
          switch (this._depthStencilFormat) {
            case 33189:
              r |= 256;
              break;

            case 36168:
              r |= 1024;
              break;

            case 34041:
              r |= 256, r |= 1024;
          }
          s.clear(r);
        }, n.end = function() {
          var t = xt.mainContext;
          t.bindFramebuffer(36160, this._preRenderTarget ? this._preRenderTarget.bitmap.frameBuffer : null),
            this._alreadyResolved = !0, yt.curRenderTarget = this._preRenderTarget, 1 == this._type ? (t.viewport(0, 0, this._svWidth, this._svHeight),
              yt.width = this._svWidth, yt.height = this._svHeight, Ot.activeShader = null) : t.viewport(0, 0, i.stage.width, i.stage.height);
        }, n.getData = function(t, e, i, n) {
          var s = xt.mainContext;
          s.bindFramebuffer(36160, this.bitmap.frameBuffer);
          if (!(36053 === s.checkFramebufferStatus(36160))) return s.bindFramebuffer(36160, null),
            null;
          var r = new Uint8Array(this._w * this._h * 4);
          return s.readPixels(t, e, i, n, this._surfaceFormat, this._surfaceType, r), s.bindFramebuffer(36160, null),
            r;
        }, n.destroy = function(e) {
          void 0 === e && (e = !1), this._destroy || (this._loaded = !1, this.bitmap.offAll(),
            this.bitmap.disposeResource(), this.bitmap.dispose(), this.offAll(), this.bitmap = null,
            this._alreadyResolved = !1, this._destroy = !0, t.prototype.destroy.call(this));
        }, n.dispose = function() {}, n._createWebGLRenderTarget = function() {
          this.bitmap = new Xt(this.width, this.height, this._surfaceFormat, this._surfaceType, this._depthStencilFormat, this._mipMap, this._repeat, this._minFifter, this._magFifter),
            this.bitmap.activeResource(), this._alreadyResolved = !0, this._destroy = !1, this._loaded = !0,
            this.bitmap.on("recovered", this, function(t) {
              this.event("recovered");
            });
        }, r(0, n, "surfaceFormat", function() {
          return this._surfaceFormat;
        }), r(0, n, "magFifter", function() {
          return this._magFifter;
        }), r(0, n, "surfaceType", function() {
          return this._surfaceType;
        }), r(0, n, "mipMap", function() {
          return this._mipMap;
        }), r(0, n, "depthStencilFormat", function() {
          return this._depthStencilFormat;
        }), r(0, n, "minFifter", function() {
          return this._minFifter;
        }), r(0, n, "source", function() {
          return this._alreadyResolved ? i.superGet(N, this, "source") : null;
        }), e.create = function(t, i, n, s, r, a, o, h, l) {
          void 0 === n && (n = 6408), void 0 === s && (s = 5121), void 0 === r && (r = 34041),
            void 0 === a && (a = !1), void 0 === o && (o = !1), void 0 === h && (h = -1), void 0 === l && (l = -1);
          var u = e.POOL.pop();
          return u || (u = new e(t, i)), u.bitmap && u._w == t && u._h == i && u._surfaceFormat == n && u._surfaceType == s && u._depthStencilFormat == r && u._mipMap == a && u._repeat == o && u._minFifter == h && u._magFifter == l || (u._w = t,
              u._h = i, u._surfaceFormat = n, u._surfaceType = s, u._depthStencilFormat = r, I.isConchWebGL && 34041 === u._depthStencilFormat && (u._depthStencilFormat = 33189),
              u._mipMap = a, u._repeat = o, u._minFifter = h, u._magFifter = l, u.release(), u._createWebGLRenderTarget()),
            u;
        }, e.TYPE2D = 1, e.TYPE3D = 2, e.POOL = [], e;
      }(N),
      kt = function(t) {
        function e() {
          this._glBuffer = null, this._buffer = null, this._bufferType = 0, this._bufferUsage = 0,
            this._byteLength = 0, e.__super.call(this), e._gl = xt.mainContext;
        }
        s(e, "laya.webgl.utils.Buffer", C);
        var i = e.prototype;
        return i._bind = function() {
            this.activeResource(), e._bindActive[this._bufferType] !== this._glBuffer && (34962 === this._bufferType && (e._bindVertexBuffer = this._glBuffer),
              e._gl.bindBuffer(this._bufferType, e._bindActive[this._bufferType] = this._glBuffer),
              Ot.activeShader = null);
          }, i.recreateResource = function() {
            this._glBuffer || (this._glBuffer = e._gl.createBuffer()), this.completeCreate();
          }, i.disposeResource = function() {
            this._glBuffer && (xt.mainContext.deleteBuffer(this._glBuffer), this._glBuffer = null),
              this.memorySize = 0;
          }, r(0, i, "bufferUsage", function() {
            return this._bufferUsage;
          }), e._gl = null, e._bindActive = {}, e._bindVertexBuffer = null, e._enableAtributes = [],
          e;
      }(),
      Ft = function(t) {
        function e(t) {
          this.texcoord = null, this.offsetX = 300, this.offsetY = 0, e.__super.call(this, 512, 0);
          var i = 8 * ft.BYTES_PE;
          this.position = [2, 5126, !1, i, 0], this.texcoord = [2, 5126, !1, i, 2 * ft.BYTES_PE],
            this.color = [4, 5126, !1, i, 4 * ft.BYTES_PE];
        }
        return s(e, "laya.webgl.shader.d2.skinAnishader.SkinSV", St), e;
      }(),
      Ut = function(t) {
        function e(t) {
          e.__super.call(this, 2, 0), this.color = [];
        }
        s(e, "laya.webgl.shader.d2.value.Color2dSV", St);
        return e.prototype.setValue = function(t) {
          t.fillStyle && (this.color = t.fillStyle._color._color), t.strokeStyle && (this.color = t.strokeStyle._color._color);
        }, e;
      }(),
      Gt = function(t) {
        function e(t) {
          this.u_colorMatrix = null, this.strength = 0, this.colorMat = null, this.colorAlpha = null,
            this.u_TexRange = [0, 1, 0, 1], this.u_offset = [0, 0], this.texcoord = St._TEXCOORD,
            e.__super.call(this, 256, 0);
        }
        s(e, "laya.webgl.shader.d2.value.FillTextureSV", St);
        var i = e.prototype;
        return i.setValue = function(t) {
          this.ALPHA = t.ALPHA, t.filters && this.setFilters(t.filters);
        }, i.clear = function() {
          this.texture = null, this.shader = null, this.defines.setValue(0);
        }, e;
      }(),
      Vt = function(t) {
        function e(t) {
          this.u_colorMatrix = null, this.strength = 0, this.blurInfo = null, this.colorMat = null,
            this.colorAlpha = null, this.texcoord = St._TEXCOORD, void 0 === t && (t = 0), e.__super.call(this, 1, t);
        }
        s(e, "laya.webgl.shader.d2.value.TextureSV", St);
        var i = e.prototype;
        return i.setValue = function(t) {
          this.ALPHA = t.ALPHA, t.filters && this.setFilters(t.filters);
        }, i.clear = function() {
          this.texture = null, this.shader = null, this.defines.setValue(0);
        }, e;
      }(),
      Ht = function(t) {
        function e(t) {
          this.a_color = null, this.u_pos = [0, 0], e.__super.call(this, 4, 0), this.position = [2, 5126, !1, 5 * ft.BYTES_PE, 0],
            this.a_color = [3, 5126, !1, 5 * ft.BYTES_PE, 2 * ft.BYTES_PE];
        }
        return s(e, "laya.webgl.shader.d2.value.PrimitiveSV", St), e;
      }(),
      zt = function(t) {
        function e() {
          this._atlaser = null, this._flashCacheImage = null, this._flashCacheImageNeedFlush = !1,
            e.__super.call(this);
        }
        s(e, "laya.webgl.atlas.AtlasWebGLCanvas", t);
        var i = e.prototype;
        return i.recreateResource = function() {
          var t = xt.mainContext,
            e = this._source = t.createTexture(),
            i = bt.curBindTexTarget,
            n = bt.curBindTexValue;
          bt.bindTexture(t, 3553, e), t.texImage2D(3553, 0, 6408, this._w, this._h, 0, 6408, 5121, null),
            t.texParameteri(3553, 10241, 9729), t.texParameteri(3553, 10240, 9729), t.texParameteri(3553, 10242, 33071),
            t.texParameteri(3553, 10243, 33071), i && n && bt.bindTexture(t, i, n), this.memorySize = this._w * this._h * 4,
            this.completeCreate();
        }, i.disposeResource = function() {
          this._source && (xt.mainContext.deleteTexture(this._source), this._source = null,
            this.memorySize = 0);
        }, i.texSubImage2D = function(t, e, i) {
          if (I.isFlash) {
            this._flashCacheImage || (this._flashCacheImage = y.create(""), this._flashCacheImage._image.createCanvas(this._w, this._h));
            var n = i.bitmapdata;
            this._flashCacheImage._image.copyPixels(n, 0, 0, n.width, n.height, t, e), this._flashCacheImageNeedFlush || (this._flashCacheImageNeedFlush = !0);
          } else {
            var s = xt.mainContext,
              r = bt.curBindTexTarget,
              a = bt.curBindTexValue;
            bt.bindTexture(s, 3553, this._source), I.isConchWebGL ? (t - 1 >= 0 && s.texSubImage2DEx(!0, 3553, 0, t - 1, e, 6408, 5121, i),
              t + 1 <= this._w && s.texSubImage2DEx(!0, 3553, 0, t + 1, e, 6408, 5121, i), e - 1 >= 0 && s.texSubImage2DEx(!0, 3553, 0, t, e - 1, 6408, 5121, i),
              e + 1 <= this._h && s.texSubImage2DEx(!0, 3553, 0, t, e + 1, 6408, 5121, i), s.texSubImage2DEx(!0, 3553, 0, t, e, 6408, 5121, i)) : (s.pixelStorei(37441, !0),
              t - 1 >= 0 && s.texSubImage2D(3553, 0, t - 1, e, 6408, 5121, i), t + 1 <= this._w && s.texSubImage2D(3553, 0, t + 1, e, 6408, 5121, i),
              e - 1 >= 0 && s.texSubImage2D(3553, 0, t, e - 1, 6408, 5121, i), e + 1 <= this._h && s.texSubImage2D(3553, 0, t, e + 1, 6408, 5121, i),
              s.texSubImage2D(3553, 0, t, e, 6408, 5121, i), s.pixelStorei(37441, !1)), r && a && bt.bindTexture(s, r, a);
          }
        }, i.texSubImage2DPixel = function(t, e, i, n, s) {
          var r = xt.mainContext,
            a = bt.curBindTexTarget,
            o = bt.curBindTexValue;
          bt.bindTexture(r, 3553, this._source);
          var h = new Uint8Array(s.data);
          I.isConchWebGL ? r.texSubImage2DEx(!0, 3553, 0, t, e, i, n, 6408, 5121, h) : (r.pixelStorei(37441, !0),
              r.texSubImage2D(3553, 0, t, e, i, n, 6408, 5121, h), r.pixelStorei(37441, !1)),
            a && o && bt.bindTexture(r, a, o);
        }, r(0, i, "width", t.prototype._$get_width, function(t) {
          this._w = t;
        }), r(0, i, "height", t.prototype._$get_height, function(t) {
          this._h = t;
        }), e;
      }(l),
      Wt = function(t) {
        function e() {
          this.flipY = !0, this.alwaysChange = !1, e.__super.call(this);
        }
        s(e, "laya.webgl.resource.WebGLCanvas", l);
        var i = e.prototype;
        return i.getCanvas = function() {
          return this._canvas;
        }, i.clear = function() {
          this._ctx && this._ctx.clear();
        }, i.destroy = function() {
          this._ctx && this._ctx.destroy(), this._ctx = null;
        }, i._setContext = function(t) {
          this._ctx = t;
        }, i.getContext = function(t, i) {
          return this._ctx ? this._ctx : this._ctx = e._createContext(this);
        }, i.size = function(t, e) {
          this._w == t && this._h == e || (this._w = t, this._h = e, this._ctx && this._ctx.size(t, e),
            this._canvas && (this._canvas.height = e, this._canvas.width = t));
        }, i.activeResource = function(t) {
          void 0 === t && (t = !1), this._source || this.recreateResource();
        }, i.recreateResource = function() {
          this.createWebGlTexture(), this.completeCreate();
        }, i.disposeResource = function() {
          this._source && !this.iscpuSource && (xt.mainContext.deleteTexture(this._source),
            this._source = null, this.memorySize = 0);
        }, i.createWebGlTexture = function() {
          var t = xt.mainContext;
          this._canvas;
          var i = this._source = t.createTexture();
          this.iscpuSource = !1;
          var n = bt.curBindTexTarget,
            s = bt.curBindTexValue;
          bt.bindTexture(t, 3553, i), t.pixelStorei(37440, this.flipY ? 1 : 0), I.isConchWebGL ? t.texImage2DEx(e.premulAlpha, 3553, 0, 6408, 6408, 5121, this._imgData) : (e.premulAlpha && t.pixelStorei(37441, !0),
              t.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData), e.premulAlpha && t.pixelStorei(37441, !1)),
            t.texParameteri(3553, 10240, 9729), t.texParameteri(3553, 10241, 9729), t.texParameteri(3553, 10242, 33071),
            t.texParameteri(3553, 10243, 33071), t.pixelStorei(37440, 0), this.memorySize = this._w * this._h * 4,
            n && s && bt.bindTexture(t, n, s);
        }, i.reloadCanvasData = function() {
          var t = xt.mainContext;
          if (!this._source) throw "reloadCanvasData error, gl texture not created!";
          var i = bt.curBindTexTarget,
            n = bt.curBindTexValue;
          bt.bindTexture(t, 3553, this._source), I.isConchWebGL ? t.texImage2DEx(e.premulAlpha, 3553, 0, 6408, 6408, 5121, this._imgData) : (e.premulAlpha && t.pixelStorei(37441, !0),
              t.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData), e.premulAlpha && t.pixelStorei(37441, !1)),
            t.pixelStorei(37440, 0), i && n && bt.bindTexture(t, i, n);
        }, i.texSubImage2D = function(t, e, i) {
          var n = xt.mainContext,
            s = bt.curBindTexTarget,
            r = bt.curBindTexValue;
          bt.bindTexture(n, 3553, this._source), I.isConchWebGL ? n.texSubImage2DEx(!0, 3553, 0, e, i, 6408, 5121, t._source) : (n.pixelStorei(37441, !0),
              n.texSubImage2D(3553, 0, e, i, 6408, 5121, t._source), n.pixelStorei(37441, !1)),
            s && r && bt.bindTexture(n, s, r);
        }, i.toBase64 = function(t, e, i) {
          var n = null;
          this._canvas && (n = this._canvas.toDataURL(t, e)), i.call(this, n);
        }, r(0, i, "context", function() {
          return this._ctx;
        }), r(0, i, "source", function() {
          return this.alwaysChange && this.reloadCanvasData(), this._source;
        }), r(0, i, "asBitmap", null, function(t) {
          this._ctx && (this._ctx.asBitmap = t);
        }), e._createContext = null, e.premulAlpha = !1, e;
      }(),
      Yt = function(t) {
        function e(t, i) {
          this.CborderSize = 12, e.__super.call(this), this.char = t, this.isSpace = " " === t,
            this.xs = i.scaleX, this.ys = i.scaleY, this.font = i.font.toString(), this.fontSize = i.font.size,
            this.fillColor = i.fillColor, this.borderColor = i.borderColor, this.lineWidth = i.lineWidth,
            this.underLine = i.underLine;
          var n, s = I.isConchApp;
          s ? ((n = ConchTextCanvas)._source = ConchTextCanvas, n._source.canvas = ConchTextCanvas) : n = u.canvas.source,
            this.canvas = n, this._enableMerageInAtlas = !0, this._ctx = s ? n : this.canvas.getContext("2d", void 0);
          var r = O.measureText(this.char, this.font);
          this.cw = r.width * this.xs, this.ch = (r.height || this.fontSize) * this.ys, this.onresize(this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize),
            this.texture = new N(this);
        }
        s(e, "laya.webgl.resource.WebGLCharImage", l);
        var n = e.prototype;
        return i.imps(n, {
          "laya.webgl.resource.IMergeAtlasBitmap": !0
        }), n.active = function() {
          this.texture.active();
        }, n.recreateResource = function() {
          var t = I.isConchApp;
          if (this.onresize(this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize),
            this.canvas && (this.canvas.height = this._h, this.canvas.width = this._w), t) {
            var e = this.fontSize;
            1 == this.xs && 1 == this.ys || (e = parseInt(e * (this.xs > this.ys ? this.xs : this.ys) + ""));
            var i = "normal 100 " + e + "px Arial";
            this.borderColor && (i += " 1 " + this.borderColor), this._ctx.font = i, this._ctx.textBaseline = "top",
              this._ctx.fillStyle = this.fillColor, this._ctx.fillText(this.char, this.CborderSize, this.CborderSize, null, null, null);
          } else {
            if (this._ctx.save(), this._ctx.clearRect(0, 0, this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize),
              this._ctx.font = this.font, R.RightToLeft && (this._ctx.textAlign = "end"), this._ctx.textBaseline = "top",
              this._ctx.translate(this.CborderSize, this.CborderSize), 1 == this.xs && 1 == this.ys || this._ctx.scale(this.xs, this.ys),
              this.fillColor && this.borderColor ? (this._ctx.strokeStyle = this.borderColor,
                this._ctx.lineWidth = this.lineWidth, this._ctx.strokeText(this.char, 0, 0, null, null, 0, null),
                this._ctx.fillStyle = this.fillColor, this._ctx.fillText(this.char, 0, 0, null, null, null)) : -1 === this.lineWidth ? (this._ctx.fillStyle = this.fillColor ? this.fillColor : "white",
                this._ctx.fillText(this.char, 0, 0, null, null, null)) : (this._ctx.strokeStyle = this.borderColor ? this.borderColor : "white",
                this._ctx.lineWidth = this.lineWidth, this._ctx.strokeText(this.char, 0, 0, null, null, 0, null)),
              this.underLine) {
              this._ctx.lineWidth = 1, this._ctx.strokeStyle = this.fillColor, this._ctx.beginPath(),
                this._ctx.moveTo(0, this.fontSize + 1);
              var n = this._ctx.measureText(this.char).width + 1;
              this._ctx.lineTo(n, this.fontSize + 1), this._ctx.stroke();
            }
            this._ctx.restore();
          }
          this.borderSize = this.CborderSize, this.completeCreate();
        }, n.onresize = function(t, e) {
          this._w = t, this._h = e, this._allowMerageInAtlas = !0;
        }, n.clearAtlasSource = function() {}, r(0, n, "allowMerageInAtlas", function() {
          return this._allowMerageInAtlas;
        }), r(0, n, "atlasSource", function() {
          return this.canvas;
        }), r(0, n, "enableMerageInAtlas", function() {
          return this._enableMerageInAtlas;
        }, function(t) {
          this._enableMerageInAtlas = t;
        }), e.createOneChar = function(t, i) {
          return new e(t, i);
        }, e;
      }(),
      Xt = function(t) {
        function e(t, i, n, s, r, a, o, h, l) {
          void 0 === n && (n = 6408), void 0 === s && (s = 5121), void 0 === r && (r = 34041),
            void 0 === a && (a = !1), void 0 === o && (o = !1), void 0 === h && (h = -1), void 0 === l && (l = 1),
            e.__super.call(this), this._w = t, this._h = i, this._surfaceFormat = n, this._surfaceType = s,
            this._depthStencilFormat = r, I.isConchWebGL && 34041 === this._depthStencilFormat && (this._depthStencilFormat = 33189),
            this._mipMap = a, this._repeat = o, this._minFifter = h, this._magFifter = l;
        }
        s(e, "laya.webgl.resource.WebGLRenderTarget", l);
        var i = e.prototype;
        return i.recreateResource = function() {
          var t = xt.mainContext;
          this._frameBuffer || (this._frameBuffer = t.createFramebuffer()), this._source || (this._source = t.createTexture());
          var e = bt.curBindTexTarget,
            i = bt.curBindTexValue;
          bt.bindTexture(t, 3553, this._source), t.texImage2D(3553, 0, 6408, this._w, this._h, 0, this._surfaceFormat, this._surfaceType, null);
          var n = this._minFifter,
            s = this._magFifter,
            r = this._repeat ? 10497 : 33071,
            a = o.isPOT(this._w, this._h);
          if (a ? (this._mipMap ? -1 !== n || (n = 9987) : -1 !== n || (n = 9729), -1 !== s || (s = 9729),
              t.texParameteri(3553, 10241, n), t.texParameteri(3553, 10240, s), t.texParameteri(3553, 10242, r),
              t.texParameteri(3553, 10243, r), this._mipMap && t.generateMipmap(3553)) : (-1 !== n || (n = 9729), -1 !== s || (s = 9729), t.texParameteri(3553, 10241, n), t.texParameteri(3553, 10240, s),
              t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071)), t.bindFramebuffer(36160, this._frameBuffer),
            t.framebufferTexture2D(36160, 36064, 3553, this._source, 0), this._depthStencilFormat) switch (this._depthStencilBuffer || (this._depthStencilBuffer = t.createRenderbuffer()),
            t.bindRenderbuffer(36161, this._depthStencilBuffer), t.renderbufferStorage(36161, this._depthStencilFormat, this._w, this._h),
            this._depthStencilFormat) {
            case 33189:
              t.framebufferRenderbuffer(36160, 36096, 36161, this._depthStencilBuffer);
              break;

            case 36168:
              t.framebufferRenderbuffer(36160, 36128, 36161, this._depthStencilBuffer);
              break;

            case 34041:
              t.framebufferRenderbuffer(36160, 33306, 36161, this._depthStencilBuffer);
          }
          t.bindFramebuffer(36160, null), e && i && bt.bindTexture(t, e, i), t.bindRenderbuffer(36161, null),
            a && this._mipMap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4,
            this.completeCreate();
        }, i.disposeResource = function() {
          this._frameBuffer && (xt.mainContext.deleteTexture(this._source), xt.mainContext.deleteFramebuffer(this._frameBuffer),
            xt.mainContext.deleteRenderbuffer(this._depthStencilBuffer), this._source = null,
            this._frameBuffer = null, this._depthStencilBuffer = null, this.memorySize = 0);
        }, r(0, i, "depthStencilBuffer", function() {
          return this._depthStencilBuffer;
        }), r(0, i, "frameBuffer", function() {
          return this._frameBuffer;
        }), e;
      }(),
      Kt = function(t) {
        function e(t, i, n, s, r, a, o) {
          this.offsetX = 0, this.offsetY = 0, e.__super.call(this), this.repeat = !0, this.mipmap = !1,
            this.minFifter = -1, this.magFifter = -1, this.atlasImage = a, this.canvas = t,
            this._ctx = t.getContext("2d", void 0), this._w = s, this._h = r, this.offsetX = i,
            this.offsetY = n, this.src = o, this._enableMerageInAtlas = !0, G.enabled && this._w < G.atlasLimitWidth && this._h < G.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1;
        }
        s(e, "laya.webgl.resource.WebGLSubImage", l);
        var n = e.prototype;
        return i.imps(n, {
          "laya.webgl.resource.IMergeAtlasBitmap": !0
        }), n.size = function(t, e) {
          this._w = t, this._h = e, this._ctx && this._ctx.size(t, e), this.canvas && (this.canvas.height = e,
            this.canvas.width = t);
        }, n.recreateResource = function() {
          this.size(this._w, this._h), this._ctx.drawImage(this.atlasImage, this.offsetX, this.offsetY, this._w, this._h, 0, 0, this._w, this._h),
            this._allowMerageInAtlas && this._enableMerageInAtlas ? this.memorySize = 0 : this.createWebGlTexture(),
            this.completeCreate();
        }, n.createWebGlTexture = function() {
          var t = xt.mainContext;
          if (!this.canvas) throw "create GLTextur err:no data:" + this.canvas;
          var e = this._source = t.createTexture(),
            i = bt.curBindTexTarget,
            n = bt.curBindTexValue;
          bt.bindTexture(t, 3553, e), I.isConchWebGL ? t.texImage2DEx(!0, 3553, 0, 6408, 6408, 5121, this.canvas) : (t.pixelStorei(37441, !0),
            t.texImage2D(3553, 0, 6408, 6408, 5121, this.canvas), t.pixelStorei(37441, !1));
          var s = this.minFifter,
            r = this.magFifter,
            a = this.repeat ? 10497 : 33071,
            h = o.isPOT(this.width, this.height);
          h ? (this.mipmap ? -1 !== s || (s = 9987) : -1 !== s || (s = 9729), -1 !== r || (r = 9729),
              t.texParameteri(3553, 10240, r), t.texParameteri(3553, 10241, s), t.texParameteri(3553, 10242, a),
              t.texParameteri(3553, 10243, a), this.mipmap && t.generateMipmap(3553)) : (-1 !== s || (s = 9729), -1 !== r || (r = 9729), t.texParameteri(3553, 10241, s), t.texParameteri(3553, 10240, r),
              t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071)), i && n && bt.bindTexture(t, i, n),
            this.canvas = null, h && this.mipmap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4;
        }, n.disposeResource = function() {
          G.enabled && this._allowMerageInAtlas || !this._source || (xt.mainContext.deleteTexture(this._source),
            this._source = null, this.memorySize = 0);
        }, n.clearAtlasSource = function() {}, r(0, n, "allowMerageInAtlas", function() {
          return this._allowMerageInAtlas;
        }), r(0, n, "atlasSource", function() {
          return this.canvas;
        }), r(0, n, "enableMerageInAtlas", function() {
          return this._allowMerageInAtlas;
        }, function(t) {
          this._allowMerageInAtlas = t;
        }), e;
      }(),
      jt = function(t) {
        function e(t, i, n, s) {
          if (this._curActTexIndex = 0, this.tag = {}, this._program = null, this._params = null,
            this._paramsMap = {}, this._offset = 0, e.__super.call(this), !t || !i) throw "Shader Error";
          this._id = ++e._count, this._vs = t, this._ps = i, this._nameMap = s || {}, null != n && (e.sharders[n] = this);
        }
        s(e, "laya.webgl.shader.Shader", Ot);
        var i = e.prototype;
        return i.recreateResource = function() {
            this._compile(), this.completeCreate(), this.memorySize = 0;
          }, i.disposeResource = function() {
            xt.mainContext.deleteShader(this._vshader), xt.mainContext.deleteShader(this._pshader),
              xt.mainContext.deleteProgram(this._program), this._vshader = this._pshader = this._program = null,
              this._params = null, this._paramsMap = {}, this.memorySize = 0, this._curActTexIndex = 0;
          }, i._compile = function() {
            if (this._vs && this._ps && !this._params) {
              this._reCompile = !0, this._params = [];
              var t = [this._vs, this._ps],
                i = xt.mainContext;
              if (this._program = i.createProgram(), this._vshader = e._createShader(i, t[0], 35633),
                this._pshader = e._createShader(i, t[1], 35632), i.attachShader(this._program, this._vshader),
                i.attachShader(this._program, this._pshader), i.linkProgram(this._program), !I.isConchApp && !i.getProgramParameter(this._program, 35714)) throw i.getProgramInfoLog(this._program);
              var n, s = 0,
                r = 0,
                a = 0;
              for (a = I.isConchApp ? i.getProgramParameterEx(this._vs, this._ps, "", 35721) : i.getProgramParameter(this._program, 35721),
                s = 0; s < a; s++) {
                var o = null;
                n = {
                  vartype: "attribute",
                  glfun: null,
                  ivartype: 0,
                  attrib: o = I.isConchApp ? i.getActiveAttribEx(this._vs, this._ps, "", s) : i.getActiveAttrib(this._program, s),
                  location: i.getAttribLocation(this._program, o.name),
                  name: o.name,
                  type: o.type,
                  isArray: !1,
                  isSame: !1,
                  preValue: null,
                  indexOfParams: 0
                }, this._params.push(n);
              }
              var h = 0;
              for (h = I.isConchApp ? i.getProgramParameterEx(this._vs, this._ps, "", 35718) : i.getProgramParameter(this._program, 35718),
                s = 0; s < h; s++) {
                var l = null;
                l = I.isConchApp ? i.getActiveUniformEx(this._vs, this._ps, "", s) : i.getActiveUniform(this._program, s),
                  (n = {
                    vartype: "uniform",
                    glfun: null,
                    ivartype: 1,
                    attrib: o,
                    location: i.getUniformLocation(this._program, l.name),
                    name: l.name,
                    type: l.type,
                    isArray: !1,
                    isSame: !1,
                    preValue: null,
                    indexOfParams: 0
                  }).name.indexOf("[0]") > 0 && (n.name = n.name.substr(0, n.name.length - 3), n.isArray = !0,
                    n.location = i.getUniformLocation(this._program, n.name)), this._params.push(n);
              }
              for (s = 0, r = this._params.length; s < r; s++)
                if (n = this._params[s], n.indexOfParams = s,
                  n.index = 1, n.value = [n.location, null], n.codename = n.name, n.name = this._nameMap[n.codename] ? this._nameMap[n.codename] : n.codename,
                  this._paramsMap[n.name] = n, n._this = this, n.uploadedValue = [], "attribute" !== n.vartype) switch (n.type) {
                  case 5124:
                    n.fun = n.isArray ? this._uniform1iv : this._uniform1i;
                    break;

                  case 5126:
                    n.fun = n.isArray ? this._uniform1fv : this._uniform1f;
                    break;

                  case 35664:
                    n.fun = n.isArray ? this._uniform_vec2v : this._uniform_vec2;
                    break;

                  case 35665:
                    n.fun = n.isArray ? this._uniform_vec3v : this._uniform_vec3;
                    break;

                  case 35666:
                    n.fun = n.isArray ? this._uniform_vec4v : this._uniform_vec4;
                    break;

                  case 35678:
                    n.fun = this._uniform_sampler2D;
                    break;

                  case 35680:
                    n.fun = this._uniform_samplerCube;
                    break;

                  case 35676:
                    n.glfun = i.uniformMatrix4fv, n.fun = this._uniformMatrix4fv;
                    break;

                  case 35670:
                    n.fun = this._uniform1i;
                    break;

                  case 35674:
                  case 35675:
                  default:
                    throw new Error("compile shader err!");
                } else n.fun = this._attribute;
            }
          }, i.getUniform = function(t) {
            return this._paramsMap[t];
          }, i._attribute = function(t, e) {
            var i = xt.mainContext,
              n = kt._enableAtributes,
              s = t.location;
            return n[s] || i.enableVertexAttribArray(s), i.vertexAttribPointer(s, e[0], e[1], e[2], e[3], e[4] + this._offset),
              n[s] = kt._bindVertexBuffer, 1;
          }, i._uniform1f = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e ? (xt.mainContext.uniform1f(t.location, i[0] = e), 1) : 0;
          }, i._uniform1fv = function(t, e) {
            if (e.length < 4) {
              var i = t.uploadedValue;
              return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (xt.mainContext.uniform1fv(t.location, e),
                i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3], 1) : 0;
            }
            return xt.mainContext.uniform1fv(t.location, e), 1;
          }, i._uniform_vec2 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] ? (xt.mainContext.uniform2f(t.location, i[0] = e[0], i[1] = e[1]),
              1) : 0;
          }, i._uniform_vec2v = function(t, e) {
            if (e.length < 2) {
              var i = t.uploadedValue;
              return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (xt.mainContext.uniform2fv(t.location, e),
                i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3], 1) : 0;
            }
            return xt.mainContext.uniform2fv(t.location, e), 1;
          }, i._uniform_vec3 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] ? (xt.mainContext.uniform3f(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2]),
              1) : 0;
          }, i._uniform_vec3v = function(t, e) {
            return xt.mainContext.uniform3fv(t.location, e), 1;
          }, i._uniform_vec4 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (xt.mainContext.uniform4f(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3]),
              1) : 0;
          }, i._uniform_vec4v = function(t, e) {
            return xt.mainContext.uniform4fv(t.location, e), 1;
          }, i._uniformMatrix2fv = function(t, e) {
            return xt.mainContext.uniformMatrix2fv(t.location, !1, e), 1;
          }, i._uniformMatrix3fv = function(t, e) {
            return xt.mainContext.uniformMatrix3fv(t.location, !1, e), 1;
          }, i._uniformMatrix4fv = function(t, e) {
            return xt.mainContext.uniformMatrix4fv(t.location, !1, e), 1;
          }, i._uniform1i = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e ? (xt.mainContext.uniform1i(t.location, i[0] = e), 1) : 0;
          }, i._uniform1iv = function(t, e) {
            return xt.mainContext.uniform1iv(t.location, e), 1;
          }, i._uniform_ivec2 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] ? (xt.mainContext.uniform2i(t.location, i[0] = e[0], i[1] = e[1]),
              1) : 0;
          }, i._uniform_ivec2v = function(t, e) {
            return xt.mainContext.uniform2iv(t.location, e), 1;
          }, i._uniform_vec3i = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] ? (xt.mainContext.uniform3i(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2]),
              1) : 0;
          }, i._uniform_vec3vi = function(t, e) {
            return xt.mainContext.uniform3iv(t.location, e), 1;
          }, i._uniform_vec4i = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (xt.mainContext.uniform4i(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3]),
              1) : 0;
          }, i._uniform_vec4vi = function(t, e) {
            return xt.mainContext.uniform4iv(t.location, e), 1;
          }, i._uniform_sampler2D = function(t, i) {
            var n = xt.mainContext,
              s = t.uploadedValue;
            return null == s[0] ? (s[0] = this._curActTexIndex, n.uniform1i(t.location, this._curActTexIndex),
              n.activeTexture(e._TEXTURES[this._curActTexIndex]), bt.bindTexture(n, 3553, i),
              this._curActTexIndex++, 1) : (n.activeTexture(e._TEXTURES[s[0]]), bt.bindTexture(n, 3553, i),
              0);
          }, i._uniform_samplerCube = function(t, i) {
            var n = xt.mainContext,
              s = t.uploadedValue;
            return null == s[0] ? (s[0] = this._curActTexIndex, n.uniform1i(t.location, this._curActTexIndex),
              n.activeTexture(e._TEXTURES[this._curActTexIndex]), bt.bindTexture(n, 34067, i),
              this._curActTexIndex++, 1) : (n.activeTexture(e._TEXTURES[s[0]]), bt.bindTexture(n, 34067, i),
              0);
          }, i._noSetValue = function(t) {
            console.log("no....:" + t.name);
          }, i.uploadOne = function(t, e) {
            this.activeResource(), bt.UseProgram(this._program);
            var i = this._paramsMap[t];
            i.fun.call(this, i, e);
          }, i.uploadTexture2D = function(t) {
            P.shaderCall++;
            var e = xt.mainContext;
            e.activeTexture(33984), bt.bindTexture(e, 3553, t);
          }, i.upload = function(t, e) {
            Ot.activeShader = Ot.bindShader = this, this._lastUseFrameCount === P.loopCount || this.activeResource(),
              bt.UseProgram(this._program), this._reCompile ? (e = this._params, this._reCompile = !1) : e = e || this._params;
            xt.mainContext;
            for (var i, n, s = e.length, r = 0, a = 0; a < s; a++) null !== (n = t[(i = e[a]).name]) && (r += i.fun.call(this, i, n));
            P.shaderCall += r;
          }, i.uploadArray = function(t, e, i) {
            Ot.activeShader = this, Ot.bindShader = this, this.activeResource(), bt.UseProgram(this._program);
            this._params;
            for (var n, s, r = 0, a = e - 2; a >= 0; a -= 2)(s = this._paramsMap[t[a]]) && null != (n = t[a + 1]) && (i && i[s.name] && i[s.name].bind(),
              r += s.fun.call(this, s, n));
            P.shaderCall += r;
          }, i.getParams = function() {
            return this._params;
          }, e.getShader = function(t) {
            return e.sharders[t];
          }, e.create = function(t, i, n, s) {
            return new e(t, i, n, s);
          }, e.withCompile = function(t, i, n, s) {
            if (n && e.sharders[n]) return e.sharders[n];
            var r = e._preCompileShader[2e-4 * t];
            if (!r) throw new Error("withCompile shader err!" + t);
            return r.createShader(i, n, s);
          }, e.withCompile2D = function(t, i, n, s, r) {
            if (s && e.sharders[s]) return e.sharders[s];
            var a = e._preCompileShader[2e-4 * t + i];
            if (!a) throw new Error("withCompile shader err!" + t + " " + i);
            return a.createShader(n, s, r);
          }, e.addInclude = function(t, e) {
            vt.addInclude(t, e);
          }, e.preCompile = function(t, i, n, s) {
            var r = 2e-4 * t;
            e._preCompileShader[r] = new vt(r, i, n, s);
          }, e.preCompile2D = function(t, i, n, s, r) {
            var a = 2e-4 * t + i;
            e._preCompileShader[a] = new vt(a, n, s, r);
          }, e._createShader = function(t, e, i) {
            var n = t.createShader(i);
            return t.shaderSource(n, e), t.compileShader(n), n;
          }, e._TEXTURES = [33984, 33985, 33986, 33987, 33988, 33989, 33990, , 33991, 33992],
          e._count = 0, e._preCompileShader = {}, e.SHADERNAME2ID = 2e-4, e.sharders = (e.sharders = [],
            e.sharders.length = 32, e.sharders), n(e, ["nameKey", function() {
            return this.nameKey = new A();
          }]), e;
      }(),
      $t = function(t) {
        function e() {
          this._maxsize = 0, this._upload = !0, this._uploadSize = 0, e.__super.call(this),
            this.lock = !0;
        }
        s(e, "laya.webgl.utils.Buffer2D", t);
        var i = e.prototype;
        return i.needSize = function(t) {
          var e = this._byteLength;
          if (t) {
            var i = this._byteLength + t;
            i <= this._buffer.byteLength || this._resizeBuffer(i << 1, !0), this._byteLength = i;
          }
          return e;
        }, i._bufferData = function() {
          this._maxsize = Math.max(this._maxsize, this._byteLength), P.loopCount % 30 == 0 && (this._buffer.byteLength > this._maxsize + 64 && (this.memorySize = this._buffer.byteLength,
                this._buffer = this._buffer.slice(0, this._maxsize + 64), this._checkArrayUse()),
              this._maxsize = this._byteLength), this._uploadSize < this._buffer.byteLength && (this._uploadSize = this._buffer.byteLength,
              kt._gl.bufferData(this._bufferType, this._uploadSize, this._bufferUsage), this.memorySize = this._uploadSize),
            kt._gl.bufferSubData(this._bufferType, 0, this._buffer);
        }, i._bufferSubData = function(t, e, i) {
          if (void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), this._maxsize = Math.max(this._maxsize, this._byteLength),
            P.loopCount % 30 == 0 && (this._buffer.byteLength > this._maxsize + 64 && (this.memorySize = this._buffer.byteLength,
                this._buffer = this._buffer.slice(0, this._maxsize + 64), this._checkArrayUse()),
              this._maxsize = this._byteLength), this._uploadSize < this._buffer.byteLength && (this._uploadSize = this._buffer.byteLength,
              kt._gl.bufferData(this._bufferType, this._uploadSize, this._bufferUsage), this.memorySize = this._uploadSize),
            e || i) {
            var n = this._buffer.slice(e, i);
            kt._gl.bufferSubData(this._bufferType, t, n);
          } else kt._gl.bufferSubData(this._bufferType, t, this._buffer);
        }, i._checkArrayUse = function() {}, i._bind_upload = function() {
          return !!this._upload && (this._upload = !1, this._bind(), this._bufferData(), !0);
        }, i._bind_subUpload = function(t, e, i) {
          return void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), !!this._upload && (this._upload = !1, this._bind(), this._bufferSubData(t, e, i), !0);
        }, i._resizeBuffer = function(t, e) {
          if (t < this._buffer.byteLength) return this;
          if (this.memorySize = t, e && this._buffer && this._buffer.byteLength > 0) {
            var i = new ArrayBuffer(t);
            new Uint8Array(i).set(new Uint8Array(this._buffer), 0), this._buffer = i;
          } else this._buffer = new ArrayBuffer(t);
          return this._checkArrayUse(), this._upload = !0, this;
        }, i.append = function(t) {
          this._upload = !0;
          var e, i = 0;
          i = t.byteLength, t instanceof Uint8Array ? (this._resizeBuffer(this._byteLength + i, !0),
              e = new Uint8Array(this._buffer, this._byteLength)) : t instanceof Uint16Array ? (this._resizeBuffer(this._byteLength + i, !0),
              e = new Uint16Array(this._buffer, this._byteLength)) : t instanceof Float32Array && (this._resizeBuffer(this._byteLength + i, !0),
              e = new Float32Array(this._buffer, this._byteLength)), e.set(t, 0), this._byteLength += i,
            this._checkArrayUse();
        }, i.appendU16Array = function(t, e) {
          this._resizeBuffer(this._byteLength + 2 * e, !0);
          for (var i = new Uint16Array(this._buffer, this._byteLength, e), n = 0; n < e; n++) i[n] = t[n];
          this._byteLength += 2 * e, this._checkArrayUse();
        }, i.appendEx = function(t, e) {
          this._upload = !0;
          var i = 0;
          i = t.byteLength, this._resizeBuffer(this._byteLength + i, !0), new e(this._buffer, this._byteLength).set(t, 0),
            this._byteLength += i, this._checkArrayUse();
        }, i.appendEx2 = function(t, e, i, n) {
          void 0 === n && (n = 1), this._upload = !0;
          var s, r = 0;
          r = i * n, this._resizeBuffer(this._byteLength + r, !0), s = new e(this._buffer, this._byteLength);
          var a = 0;
          for (a = 0; a < i; a++) s[a] = t[a];
          this._byteLength += r, this._checkArrayUse();
        }, i.getBuffer = function() {
          return this._buffer;
        }, i.setNeedUpload = function() {
          this._upload = !0;
        }, i.getNeedUpload = function() {
          return this._upload;
        }, i.upload = function() {
          var t = this._bind_upload();
          return kt._gl.bindBuffer(this._bufferType, null), kt._bindActive[this._bufferType] = null,
            Ot.activeShader = null, t;
        }, i.subUpload = function(t, e, i) {
          void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0);
          var n = this._bind_subUpload();
          return kt._gl.bindBuffer(this._bufferType, null), kt._bindActive[this._bufferType] = null,
            Ot.activeShader = null, n;
        }, i.disposeResource = function() {
          t.prototype.disposeResource.call(this), this._upload = !0, this._uploadSize = 0;
        }, i.clear = function() {
          this._byteLength = 0, this._upload = !0;
        }, r(0, i, "bufferLength", function() {
          return this._buffer.byteLength;
        }), r(0, i, "byteLength", null, function(t) {
          this._byteLength !== t && (t <= this._buffer.byteLength || this._resizeBuffer(2 * t + 256, !0),
            this._byteLength = t);
        }), e.__int__ = function(t) {
          Zt.QuadrangleIB = Zt.create(35044), gt.fillIBQuadrangle(Zt.QuadrangleIB, 16);
        }, e.FLOAT32 = 4, e.SHORT = 2, e;
      }(kt),
      qt = (function(t) {
        function e(t) {
          this.u_blurX = !1, this.u_color = null, this.u_offset = null, this.u_strength = NaN,
            this.u_texW = 0, this.u_texH = 0, e.__super.call(this, 9);
        }
        s(e, "laya.webgl.shader.d2.value.GlowSV", t);
        var i = e.prototype;
        i.setValue = function(e) {
          t.prototype.setValue.call(this, e);
        }, i.clear = function() {
          t.prototype.clear.call(this);
        };
      }(Vt), function(t) {
        function e(t) {
          e.__super.call(this, 64), this.defines.add(64);
        }
        s(e, "laya.webgl.shader.d2.value.TextSV", t);
        var i = e.prototype;
        return i.release = function() {
          e.pool[e._length++] = this, this.clear();
        }, i.clear = function() {
          t.prototype.clear.call(this);
        }, e.create = function() {
          return e._length ? e.pool[--e._length] : new e(null);
        }, e.pool = [], e._length = 0, e;
      }(Vt)),
      Qt = function(t) {
        function e(t, i, n, s) {
          this._params2dQuick1 = null, this._params2dQuick2 = null, this._shaderValueWidth = NaN,
            this._shaderValueHeight = NaN, e.__super.call(this, t, i, n, s);
        }
        s(e, "laya.webgl.shader.d2.Shader2X", t);
        var i = e.prototype;
        return i.upload2dQuick1 = function(t) {
          this.upload(t, this._params2dQuick1 || this._make2dQuick1());
        }, i._make2dQuick1 = function() {
          if (!this._params2dQuick1) {
            this.activeResource(), this._params2dQuick1 = [];
            for (var t, e = this._params, i = 0, n = e.length; i < n; i++) t = e[i], (I.isFlash || "size" !== t.name && "position" !== t.name && "texcoord" !== t.name) && this._params2dQuick1.push(t);
          }
          return this._params2dQuick1;
        }, i.disposeResource = function() {
          t.prototype.disposeResource.call(this), this._params2dQuick1 = null, this._params2dQuick2 = null;
        }, i.upload2dQuick2 = function(t) {
          this.upload(t, this._params2dQuick2 || this._make2dQuick2());
        }, i._make2dQuick2 = function() {
          if (!this._params2dQuick2) {
            this.activeResource(), this._params2dQuick2 = [];
            for (var t, e = this._params, i = 0, n = e.length; i < n; i++) t = e[i], (I.isFlash || "size" !== t.name) && this._params2dQuick2.push(t);
          }
          return this._params2dQuick2;
        }, e.create = function(t, i, n, s) {
          return new e(t, i, n, s);
        }, e;
      }(jt),
      Zt = function(t) {
        function e(t) {
          this._uint8Array = null, this._uint16Array = null, void 0 === t && (t = 35044),
            e.__super.call(this), this._bufferUsage = t, this._bufferType = 34963, I.isFlash || (this._buffer = new ArrayBuffer(8));
        }
        s(e, "laya.webgl.utils.IndexBuffer2D", $t);
        var i = e.prototype;
        return i._checkArrayUse = function() {
          this._uint8Array && (this._uint8Array = new Uint8Array(this._buffer)), this._uint16Array && (this._uint16Array = new Uint16Array(this._buffer));
        }, i.getUint8Array = function() {
          return this._uint8Array || (this._uint8Array = new Uint8Array(this._buffer));
        }, i.getUint16Array = function() {
          return this._uint16Array || (this._uint16Array = new Uint16Array(this._buffer));
        }, i.destory = function() {
          this._uint16Array = null, this._uint8Array = null, this._buffer = null;
        }, e.QuadrangleIB = null, e.create = function(t) {
          return void 0 === t && (t = 35044), new e(t);
        }, e;
      }(),
      Jt = function(t) {
        function e(t, i) {
          this._floatArray32 = null, this._vertexStride = 0, e.__super.call(this), this._vertexStride = t,
            this._bufferUsage = i, this._bufferType = 34962, I.isFlash || (this._buffer = new ArrayBuffer(8)),
            this.getFloat32Array();
        }
        s(e, "laya.webgl.utils.VertexBuffer2D", t);
        var i = e.prototype;
        return i.getFloat32Array = function() {
          return this._floatArray32 || (this._floatArray32 = new Float32Array(this._buffer));
        }, i.bind = function(t) {
          t && t._bind(), this._bind();
        }, i.insertData = function(t, e) {
          this.getFloat32Array().set(t, e), this._upload = !0;
        }, i.bind_upload = function(t) {
          t._bind_upload() || t._bind(), this._bind_upload() || this._bind();
        }, i._checkArrayUse = function() {
          this._floatArray32 && (this._floatArray32 = new Float32Array(this._buffer));
        }, i.disposeResource = function() {
          t.prototype.disposeResource.call(this);
          var e = kt._enableAtributes;
          if (!I.isConchWebGL)
            for (var i = 0; i < 10; i++) xt.mainContext.disableVertexAttribArray(i),
              e[i] = null;
        }, i.destory = function() {
          this._byteLength = 0, this._upload = !0, this._buffer = null, this._floatArray32 = null;
        }, r(0, i, "vertexStride", function() {
          return this._vertexStride;
        }), e.create = function(t, i) {
          return void 0 === i && (i = 35048), new e(t, i);
        }, e;
      }($t),
      te = function(t) {
        function e(t, i, n, s) {
          if (this._format = 0, this._mipmap = !1, this._allowMerageInAtlas = !1, this._enableMerageInAtlas = !1,
            this.repeat = !1, this._image = null, this.minFifter = 0, this.magFifter = 0, void 0 === n && (n = 6408),
            void 0 === s && (s = !0), e.__super.call(this, t, i), this._format = n, this._mipmap = s,
            this.repeat = !1, this.minFifter = -1, this.magFifter = -1, "string" == typeof t) this._url = t,
            this._src = t, this._image = new u.window.Image(), i && (i.onload && (this.onload = i.onload),
              i.onerror && (this.onerror = i.onerror), i.onCreate && i.onCreate(this)), this._image.crossOrigin = t && 0 == t.indexOf("data:") ? null : "",
            t && (this._image.src = t);
          else if (t instanceof ArrayBuffer) {
            this._src = i, this._url = this._src;
            var r = new c(t);
            r.readUTFBytes(4), r.readUTFBytes(2), r.getInt16();
            r.endian = "bigEndian", this._w = r.getInt16(), this._h = r.getInt16();
            r.getInt16(), r.getInt16();
            this._image = new Uint8Array(t, r.pos), this._format = xt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL,
              G.enabled && this._w < G.atlasLimitWidth && this._h < G.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1;
          } else this._src = i, this._url = this._src, this._image = t.source || t, this.onresize();
          this._$5__enableMerageInAtlas = !0;
        }
        s(e, "laya.webgl.resource.WebGLImage", y);
        var n = e.prototype;
        return i.imps(n, {
          "laya.webgl.resource.IMergeAtlasBitmap": !0
        }), n._init_ = function(t, e) {}, n._createWebGlTexture = function() {
          if (!this._image) throw "create GLTextur err:no data:" + this._image;
          var t = xt.mainContext,
            e = this._source = t.createTexture(),
            i = bt.curBindTexTarget,
            n = bt.curBindTexValue;
          if (bt.bindTexture(t, 3553, e), I.isConchWebGL) switch (this._format) {
            case 6408:
              t.texImage2DEx(!0, 3553, 0, this._format, 6408, 5121, this._image);
              break;

            case xt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
              t.compressedTexImage2D(3553, 0, this._format, this._w, this._h, 0, this._image);
          } else {
            switch (t.pixelStorei(37441, !0), this._format) {
              case 6408:
                t.texImage2D(3553, 0, this._format, 6408, 5121, this._image);
                break;

              case xt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                t.compressedTexImage2D(3553, 0, this._format, this._w, this._h, 0, this._image);
            }
            t.pixelStorei(37441, !1);
          }
          var s = this.minFifter,
            r = this.magFifter,
            a = this.repeat ? 10497 : 33071,
            h = o.isPOT(this._w, this._h);
          h ? (this.mipmap ? -1 !== s || (s = 9987) : -1 !== s || (s = 9729), -1 !== r || (r = 9729),
              t.texParameteri(3553, 10241, s), t.texParameteri(3553, 10240, r), t.texParameteri(3553, 10242, a),
              t.texParameteri(3553, 10243, a), this.mipmap && t.generateMipmap(3553)) : (-1 !== s || (s = 9729), -1 !== r || (r = 9729), t.texParameteri(3553, 10241, s), t.texParameteri(3553, 10240, r),
              t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071)), i && n && bt.bindTexture(t, i, n),
            this._image.onload = null, this._image = null, h && this.mipmap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4,
            this._recreateLock = !1;
        }, n.recreateResource = function() {
          var t = this;
          if (null != this._src && "" !== this._src)
            if (this._needReleaseAgain = !1, this._image) {
              if (this._recreateLock) return;
              this._allowMerageInAtlas && this._$5__enableMerageInAtlas ? (this.memorySize = 0,
                this._recreateLock = !1) : this._createWebGlTexture(), this.completeCreate();
            } else {
              this._recreateLock = !0;
              var e = this;
              this._image = new u.window.Image(), this._image.crossOrigin = 0 == this._src.indexOf("data:") ? null : "",
                this._image.onload = function() {
                  if (e._needReleaseAgain) return e._needReleaseAgain = !1, e._image.onload = null,
                    void(e._image = null);
                  e._allowMerageInAtlas && e._enableMerageInAtlas ? (t.memorySize = 0, t._recreateLock = !1) : e._createWebGlTexture(),
                    e.completeCreate();
                }, this._image.src = this._src;
            }
        }, n.disposeResource = function() {
          this._recreateLock && (this._needReleaseAgain = !0), this._source && (xt.mainContext.deleteTexture(this._source),
            this._source = null, this._image = null, this.memorySize = 0);
        }, n.onresize = function() {
          this._w = this._image.width, this._h = this._image.height, G.enabled && this._w < G.atlasLimitWidth && this._h < G.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1;
        }, n.clearAtlasSource = function() {
          this._image = null;
        }, r(0, n, "format", function() {
          return this._format;
        }), r(0, n, "enableMerageInAtlas", function() {
          return this._$5__enableMerageInAtlas;
        }, function(t) {
          this._$5__enableMerageInAtlas = t;
        }), r(0, n, "mipmap", function() {
          return this._mipmap;
        }), r(0, n, "allowMerageInAtlas", function() {
          return this._allowMerageInAtlas;
        }), r(0, n, "atlasSource", function() {
          return this._image;
        }), r(0, n, "onload", null, function(t) {
          var e = this;
          this._onload = t, this._image && (this._image.onload = null != this._onload ? function() {
            e.onresize(), e._onload();
          } : null);
        }), r(0, n, "onerror", null, function(t) {
          var e = this;
          this._onerror = t, this._image && (this._image.onerror = null != this._onerror ? function() {
            e._onerror();
          } : null);
        }), e;
      }();
    i.__init([dt, U, It, vt]);
  }(window, document, Laya), "function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function(t, e) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    for (var i in Laya) {
      var n = Laya[i];
      n && n.__isclass && (e[i] = n);
    }
  }),
  function(t, e, i) {
    i.un, i.uns;
    var n = i.static,
      s = i.class,
      r = i.getset,
      a = i.__newvec,
      o = laya.maths.Bezier,
      h = laya.utils.Browser,
      l = laya.utils.Byte,
      u = (laya.events.Event,
        laya.events.EventDispatcher),
      c = laya.display.Graphics,
      _ = laya.resource.HTMLCanvas,
      d = laya.utils.Handler,
      p = laya.net.Loader,
      f = laya.maths.MathUtil,
      g = laya.maths.Matrix,
      m = (laya.display.Node,
        laya.maths.Point, laya.maths.Rectangle),
      y = laya.renders.Render,
      v = (laya.renders.RenderContext,
        laya.resource.Resource),
      x = laya.utils.RunDriver,
      b = laya.display.Sprite,
      w = laya.utils.Stat,
      I = laya.resource.Texture,
      S = laya.net.URL,
      C = laya.utils.Utils,
      T = function() {
        function t() {
          this.nodes = null, this.name = null, this.playTime = NaN, this.bone3DMap = null,
            this.totalKeyframeDatasLength = 0;
        }
        return s(t, "laya.ani.AnimationContent"), t;
      }(),
      E = function() {
        function t() {
          this.name = null, this.parentIndex = 0, this.parent = null, this.keyframeWidth = 0,
            this.lerpType = 0, this.interpolationMethod = null, this.childs = null, this.keyFrame = null,
            this.playTime = NaN, this.extenData = null, this.dataOffset = 0;
        }
        return s(t, "laya.ani.AnimationNodeContent"), t;
      }(),
      M = function() {
        function t() {}
        return s(t, "laya.ani.AnimationParser01"), t.parse = function(t, e) {
          var i = e.__getBuffer(),
            n = 0,
            s = 0,
            r = 0,
            a = 0,
            o = 0,
            h = 0,
            u = 0,
            c = e.readUTFString();
          t._aniClassName = c;
          var _, d = e.readUTFString().split("\n"),
            p = e.getUint8(),
            f = e.getUint32(),
            g = e.getUint32();
          f > 0 && (_ = i.slice(f, g));
          var m = new l(_);
          for (g > 0 && (t._publicExtData = i.slice(g, i.byteLength)), t._useParent = !!e.getUint8(),
            t._anis.length = p, n = 0; n < p; n++) {
            var y = t._anis[n] = new T();
            y.nodes = new Array();
            var v = y.name = d[e.getUint16()];
            t._aniMap[v] = n, y.bone3DMap = {}, y.playTime = e.getFloat32();
            var x = y.nodes.length = e.getUint8();
            for (y.totalKeyframeDatasLength = 0, s = 0; s < x; s++) {
              var b = y.nodes[s] = new E();
              b.childs = [];
              var w = e.getInt16();
              w >= 0 && (b.name = d[w], y.bone3DMap[b.name] = s), b.keyFrame = new Array(), b.parentIndex = e.getInt16(), -1 == b.parentIndex ? b.parent = null : b.parent = y.nodes[b.parentIndex], b.lerpType = e.getUint8();
              var I = e.getUint32();
              m.pos = I;
              var S = b.keyframeWidth = m.getUint16();
              if (y.totalKeyframeDatasLength += S, 0 === b.lerpType || 1 === b.lerpType)
                for (b.interpolationMethod = [],
                  b.interpolationMethod.length = S, r = 0; r < S; r++) b.interpolationMethod[r] = it.interpolation[m.getUint8()];
              null != b.parent && b.parent.childs.push(b);
              var C = e.getUint16();
              C > 0 && (b.extenData = i.slice(e.pos, e.pos + C), e.pos += C);
              var M = e.getUint16();
              b.keyFrame.length = M;
              var L, P = 0;
              for (r = 0, a = M; r < a; r++) {
                if (L = b.keyFrame[r] = new Q(), L.duration = e.getFloat32(), L.startTime = P, 2 === b.lerpType) {
                  L.interpolationData = [];
                  var A = e.getUint8(),
                    D = 0;
                  switch (D = e.getFloat32()) {
                    case 254:
                      for (L.interpolationData.length = S, u = 0; u < S; u++) L.interpolationData[u] = 0;
                      break;

                    case 255:
                      for (L.interpolationData.length = S, u = 0; u < S; u++) L.interpolationData[u] = 5;
                      break;

                    default:
                      for (L.interpolationData.push(D), h = 1; h < A; h++) L.interpolationData.push(e.getFloat32());
                  }
                }
                for (L.data = new Float32Array(S), o = 0; o < S; o++) L.data[o] = e.getFloat32(),
                  L.data[o] > -1e-8 && L.data[o] < 1e-8 && (L.data[o] = 0);
                P += L.duration;
              }
              L.startTime = y.playTime, b.playTime = y.playTime, t._calculateKeyFrame(b, M, S);
            }
          }
        }, t;
      }(),
      L = function() {
        function t() {}
        return s(t, "laya.ani.AnimationParser02"), t.READ_DATA = function() {
          t._DATA.offset = t._reader.getUint32(), t._DATA.size = t._reader.getUint32();
        }, t.READ_BLOCK = function() {
          for (var e = t._BLOCK.count = t._reader.getUint16(), i = t._BLOCK.blockStarts = [], n = t._BLOCK.blockLengths = [], s = 0; s < e; s++) i.push(t._reader.getUint32()),
            n.push(t._reader.getUint32());
        }, t.READ_STRINGS = function() {
          var e = t._reader.getUint32(),
            i = t._reader.getUint16(),
            n = t._reader.pos;
          t._reader.pos = e + t._DATA.offset;
          for (var s = 0; s < i; s++) t._strings[s] = t._reader.readUTFString();
          t._reader.pos = n;
        }, t.parse = function(e, i) {
          t._templet = e, t._reader = i;
          i.__getBuffer();
          t.READ_DATA(), t.READ_BLOCK(), t.READ_STRINGS();
          for (var n = 0, s = t._BLOCK.count; n < s; n++) {
            var r = i.getUint16(),
              a = t._strings[r],
              o = t["READ_" + a];
            if (null == o) throw new Error("model file err,no this function:" + r + " " + a);
            o.call();
          }
        }, t.READ_ANIMATIONS = function() {
          var e = t._reader,
            i = e.__getBuffer(),
            n = 0,
            s = 0,
            r = 0,
            a = 0,
            o = e.getUint16(),
            h = [];
          for (h.length = o, n = 0; n < o; n++) h[n] = it.interpolation[e.getByte()];
          var l = e.getUint8();
          for (t._templet._anis.length = l, n = 0; n < l; n++) {
            var u = t._templet._anis[n] = {};
            u.nodes = new Array();
            var c = u.name = t._strings[e.getUint16()];
            t._templet._aniMap[c] = n, u.bone3DMap = {}, u.playTime = e.getFloat32();
            var _ = u.nodes.length = e.getInt16();
            for (u.totalKeyframeDatasLength = 0, s = 0; s < _; s++) {
              var d = u.nodes[s] = {};
              d.keyframeWidth = o, d.childs = [];
              var p = e.getUint16();
              p >= 0 && (d.name = t._strings[p], u.bone3DMap[d.name] = s), d.keyFrame = new Array(),
                d.parentIndex = e.getInt16(), -1 == d.parentIndex ? d.parent = null : d.parent = u.nodes[d.parentIndex],
                u.totalKeyframeDatasLength += o, d.interpolationMethod = h, null != d.parent && d.parent.childs.push(d);
              var f = e.getUint16();
              d.keyFrame.length = f;
              var g = null,
                m = null;
              for (r = 0, a = f; r < a; r++) {
                (g = d.keyFrame[r] = {}).startTime = e.getFloat32(), m && (m.duration = g.startTime - m.startTime);
                var y = t._DATA.offset,
                  v = e.getUint32(),
                  x = 4 * o,
                  b = i.slice(y + v, y + v + x);
                g.data = new Float32Array(b), m = g;
              }
              g.duration = 0, d.playTime = u.playTime, t._templet._calculateKeyFrame(d, f, o);
            }
          }
        }, t._templet = null, t._reader = null, t._strings = [], n(t, ["_BLOCK", function() {
          return this._BLOCK = {
            count: 0
          };
        }, "_DATA", function() {
          return this._DATA = {
            offset: 0,
            size: 0
          };
        }]), t;
      }(),
      P = (function() {
        function t() {}
        s(t, "laya.ani.AnimationState"), t.stopped = 0, t.paused = 1, t.playing = 2;
      }(), function() {
        function t() {
          this.name = null, this.root = null, this.parentBone = null, this.length = 10, this.transform = null,
            this.inheritScale = !0, this.inheritRotation = !0, this.rotation = NaN, this.resultRotation = NaN,
            this.d = -1, this._tempMatrix = null, this._sprite = null, this.resultTransform = new $(),
            this.resultMatrix = new g(), this._children = [];
        }
        s(t, "laya.ani.bone.Bone");
        var e = t.prototype;
        return e.setTempMatrix = function(t) {
          this._tempMatrix = t;
          var e = 0,
            i = 0;
          for (e = 0, i = this._children.length; e < i; e++) this._children[e].setTempMatrix(this._tempMatrix);
        }, e.update = function(t) {
          this.rotation = this.transform.skX;
          var e;
          if (t) e = this.resultTransform.getMatrix(), g.mul(e, t, this.resultMatrix), this.resultRotation = this.rotation;
          else if (this.resultRotation = this.rotation + this.parentBone.resultRotation,
            this.parentBone)
            if (this.inheritRotation && this.inheritScale) e = this.resultTransform.getMatrix(),
              g.mul(e, this.parentBone.resultMatrix, this.resultMatrix);
            else {
              var i = this.parentBone,
                n = NaN,
                s = NaN,
                r = NaN,
                a = this.parentBone.resultMatrix;
              e = this.resultTransform.getMatrix();
              var o = a.a * e.tx + a.c * e.ty + a.tx,
                h = a.b * e.tx + a.d * e.ty + a.ty,
                l = new g();
              this.inheritRotation ? (n = Math.atan2(i.resultMatrix.b, i.resultMatrix.a), s = Math.cos(n),
                r = Math.sin(n), l.setTo(s, r, -r, s, 0, 0), g.mul(this._tempMatrix, l, g.TEMP),
                g.TEMP.copyTo(l), e = this.resultTransform.getMatrix(), g.mul(e, l, this.resultMatrix),
                this.resultTransform.scX * this.resultTransform.scY < 0 && this.resultMatrix.rotate(.5 * Math.PI),
                this.resultMatrix.tx = o, this.resultMatrix.ty = h) : (this.inheritScale, e = this.resultTransform.getMatrix(),
                g.TEMP.identity(), g.TEMP.d = this.d, g.mul(e, g.TEMP, this.resultMatrix), this.resultMatrix.tx = o,
                this.resultMatrix.ty = h);
            }
          else(e = this.resultTransform.getMatrix()).copyTo(this.resultMatrix);
          var u = 0,
            c = 0;
          for (u = 0, c = this._children.length; u < c; u++) this._children[u].update();
        }, e.updateChild = function() {
          var t = 0,
            e = 0;
          for (t = 0, e = this._children.length; t < e; t++) this._children[t].update();
        }, e.setRotation = function(t) {
          this._sprite && (this._sprite.rotation = 180 * t / Math.PI);
        }, e.updateDraw = function(e, n) {
          t.ShowBones && !t.ShowBones[this.name] || (this._sprite ? (this._sprite.x = e + this.resultMatrix.tx,
            this._sprite.y = n + this.resultMatrix.ty) : (this._sprite = new b(), this._sprite.graphics.drawCircle(0, 0, 5, "#ff0000"),
            this._sprite.graphics.drawLine(0, 0, this.length, 0, "#00ff00"), this._sprite.graphics.fillText(this.name, 0, 0, "20px Arial", "#00ff00", "center"),
            i.stage.addChild(this._sprite), this._sprite.x = e + this.resultMatrix.tx, this._sprite.y = n + this.resultMatrix.ty));
          var s = 0,
            r = 0;
          for (s = 0, r = this._children.length; s < r; s++) this._children[s].updateDraw(e, n);
        }, e.addChild = function(t) {
          this._children.push(t), t.parentBone = this;
        }, e.findBone = function(t) {
          if (this.name == t) return this;
          var e, i, n = 0,
            s = 0;
          for (n = 0, s = this._children.length; n < s; n++)
            if (e = this._children[n], i = e.findBone(t)) return i;
          return null;
        }, e.localToWorld = function(t) {
          var e = t[0],
            i = t[1];
          t[0] = e * this.resultMatrix.a + i * this.resultMatrix.c + this.resultMatrix.tx,
            t[1] = e * this.resultMatrix.b + i * this.resultMatrix.d + this.resultMatrix.ty;
        }, t.ShowBones = {}, t;
      }()),
      A = function() {
        function t() {
          this.name = null, this.parent = null, this.attachmentName = null, this.srcDisplayIndex = -1,
            this.type = "src", this.templet = null, this.currSlotData = null, this.currTexture = null,
            this.currDisplayData = null, this.displayIndex = -1, this._diyTexture = null, this._parentMatrix = null,
            this._resultMatrix = null, this._replaceDic = {}, this._curDiyUV = null, this._curDiyVS = null,
            this._skinSprite = null, this.deformData = null, this._mVerticleArr = null;
        }
        s(t, "laya.ani.bone.BoneSlot");
        var e = t.prototype;
        return e.showSlotData = function(t, e) {
          void 0 === e && (e = !0), this.currSlotData = t, e && (this.displayIndex = this.srcDisplayIndex),
            this.currDisplayData = null, this.currTexture = null;
        }, e.showDisplayByName = function(t) {
          this.currSlotData && this.showDisplayByIndex(this.currSlotData.getDisplayByName(t));
        }, e.replaceDisplayByName = function(t, e) {
          if (this.currSlotData) {
            var i = 0;
            i = this.currSlotData.getDisplayByName(t);
            var n = 0;
            n = this.currSlotData.getDisplayByName(e), this.replaceDisplayByIndex(i, n);
          }
        }, e.replaceDisplayByIndex = function(t, e) {
          this.currSlotData && (this._replaceDic[t] = e, this.displayIndex == t && this.showDisplayByIndex(t));
        }, e.showDisplayByIndex = function(t) {
          if (null != this._replaceDic[t] && (t = this._replaceDic[t]), this.currSlotData && t > -1 && t < this.currSlotData.displayArr.length) {
            if (this.displayIndex = t, this.currDisplayData = this.currSlotData.displayArr[t],
              this.currDisplayData) {
              var e = this.currDisplayData.name;
              this.currTexture = this.templet.getTexture(e), this.currTexture && 0 == this.currDisplayData.type && this.currDisplayData.uvs && (!y.isConchApp || y.isConchApp && b.RUNTIMEVERION > "0.9.15") && (this.currTexture = this.currDisplayData.createTexture(this.currTexture));
            }
          } else this.displayIndex = -1, this.currDisplayData = null, this.currTexture = null;
        }, e.replaceSkin = function(t) {
          this._diyTexture = t, this._curDiyUV && (this._curDiyUV.length = 0), this.currDisplayData && this._diyTexture == this.currDisplayData.texture && (this._diyTexture = null);
        }, e.setParentMatrix = function(t) {
          this._parentMatrix = t;
        }, e.draw = function(e, i, n, s) {
          if (void 0 === n && (n = !1), void 0 === s && (s = 1), (null != this._diyTexture || null != this.currTexture) && null != this.currDisplayData || this.currDisplayData && 3 == this.currDisplayData.type) {
            var r = this.currTexture;
            this._diyTexture && (r = this._diyTexture);
            var a;
            switch (this.currDisplayData.type) {
              case 0:
                if (e) {
                  var o = this.getDisplayMatrix();
                  if (this._parentMatrix) {
                    var h = !1;
                    if (o) {
                      g.mul(o, this._parentMatrix, g.TEMP);
                      var l;
                      if (n ? (null == this._resultMatrix && (this._resultMatrix = new g()), l = this._resultMatrix) : l = new g(), !y.isWebGL && this.currDisplayData.uvs || y.isWebGL && this._diyTexture && this.currDisplayData.uvs) {
                        var u = t._tempMatrix;
                        u.identity(), this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5] && (u.d = -1),
                          this.currDisplayData.uvs[0] > this.currDisplayData.uvs[4] && this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5] && (h = !0,
                            u.rotate(-Math.PI / 2)), g.mul(u, g.TEMP, l);
                      } else g.TEMP.copyTo(l);
                      h ? e.drawTexture(r, -this.currDisplayData.height / 2, -this.currDisplayData.width / 2, this.currDisplayData.height, this.currDisplayData.width, l) : e.drawTexture(r, -this.currDisplayData.width / 2, -this.currDisplayData.height / 2, this.currDisplayData.width, this.currDisplayData.height, l);
                    }
                  }
                }
                break;

              case 1:
                if (n ? (null == this._skinSprite && (this._skinSprite = t.createSkinMesh()), a = this._skinSprite) : a = t.createSkinMesh(),
                  null == a) return;
                var c;
                if (null == this.currDisplayData.bones) {
                  var _ = this.currDisplayData.weights;
                  this.deformData && (_ = this.deformData);
                  var d;
                  this._diyTexture ? (this._curDiyUV || (this._curDiyUV = []), 0 == this._curDiyUV.length && (this._curDiyUV = q.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV),
                      this._curDiyUV = q.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV)),
                    d = this._curDiyUV) : d = this.currDisplayData.uvs, this._mVerticleArr = _;
                  this.currDisplayData.triangles.length;
                  c = this.currDisplayData.triangles, a.init2(r, null, c, this._mVerticleArr, d);
                  var p = this.getDisplayMatrix();
                  if (this._parentMatrix && p) {
                    g.mul(p, this._parentMatrix, g.TEMP);
                    var f;
                    n ? (null == this._resultMatrix && (this._resultMatrix = new g()), f = this._resultMatrix) : f = new g(),
                      g.TEMP.copyTo(f), a.transform = f;
                  }
                } else this.skinMesh(i, a, s);
                e.drawSkin(a);
                break;

              case 2:
                if (n ? (null == this._skinSprite && (this._skinSprite = t.createSkinMesh()), a = this._skinSprite) : a = t.createSkinMesh(),
                  null == a) return;
                this.skinMesh(i, a, s), e.drawSkin(a);
            }
          }
        }, e.skinMesh = function(t, e, i) {
          var n, s = this.currTexture,
            r = this.currDisplayData.bones;
          this._diyTexture ? (s = this._diyTexture, this._curDiyUV || (this._curDiyUV = []),
            0 == this._curDiyUV.length && (this._curDiyUV = q.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV),
              this._curDiyUV = q.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV)),
            n = this._curDiyUV) : n = this.currDisplayData.uvs;
          var a, o, h = this.currDisplayData.weights,
            l = this.currDisplayData.triangles,
            u = 0,
            c = 0,
            _ = 0,
            d = NaN,
            p = NaN,
            f = 0,
            g = 0,
            m = [],
            y = 0,
            v = 0;
          if (this.deformData && this.deformData.length > 0) {
            var x = 0;
            for (y = 0, v = r.length; y < v;) {
              for (_ = r[y++] + y, u = 0, c = 0; y < _; y++) o = t[r[y]], d = h[f] + this.deformData[x++],
                p = h[f + 1] + this.deformData[x++], g = h[f + 2], u += (d * o.a + p * o.c + o.tx) * g,
                c += (d * o.b + p * o.d + o.ty) * g, f += 3;
              m.push(u, c);
            }
          } else
            for (y = 0, v = r.length; y < v;) {
              for (_ = r[y++] + y, u = 0, c = 0; y < _; y++) o = t[r[y]], d = h[f], p = h[f + 1],
                g = h[f + 2], u += (d * o.a + p * o.c + o.tx) * g, c += (d * o.b + p * o.d + o.ty) * g,
                f += 3;
              m.push(u, c);
            }
          this._mVerticleArr = m, a = l, e.init2(s, null, a, this._mVerticleArr, n);
        }, e.drawBonePoint = function(t) {
          t && this._parentMatrix && t.drawCircle(this._parentMatrix.tx, this._parentMatrix.ty, 5, "#ff0000");
        }, e.getDisplayMatrix = function() {
          return this.currDisplayData ? this.currDisplayData.transform.getMatrix() : null;
        }, e.getMatrix = function() {
          return this._resultMatrix;
        }, e.copy = function() {
          var e = new t();
          return e.type = "copy", e.name = this.name, e.attachmentName = this.attachmentName,
            e.srcDisplayIndex = this.srcDisplayIndex, e.parent = this.parent, e.displayIndex = this.displayIndex,
            e.templet = this.templet, e.currSlotData = this.currSlotData, e.currTexture = this.currTexture,
            e.currDisplayData = this.currDisplayData, e;
        }, t.createSkinMesh = function() {
          return y.isWebGL || y.isConchApp ? x.skinAniSprite() : y.isWebGL ? null : st.useSimpleMeshInCanvas ? new nt() : new et();
        }, n(t, ["_tempMatrix", function() {
          return this._tempMatrix = new g();
        }]), t;
      }(),
      D = function() {
        function t() {
          this.mesh = null, this.transform = null, this.context = null, this.mode = 0;
        }
        s(t, "laya.ani.bone.canvasmesh.CanvasMeshRender");
        var e = t.prototype;
        return e.renderToContext = function(t) {
          this.context = t.ctx || t, this.mesh && (0 == this.mode ? this._renderWithIndexes(this.mesh) : this._renderNoIndexes(this.mesh));
        }, e._renderNoIndexes = function(t) {
          var e = 0,
            i = t.vertices.length / 2,
            n = 0;
          for (e = 0; e < i - 2; e++) n = 2 * e, this._renderDrawTriangle(t, n, n + 2, n + 4);
        }, e._renderWithIndexes = function(t) {
          var e = t.indexes,
            i = 0,
            n = e.length;
          for (i = 0; i < n; i += 3) {
            var s = 2 * e[i],
              r = 2 * e[i + 1],
              a = 2 * e[i + 2];
            this._renderDrawTriangle(t, s, r, a);
          }
        }, e._renderDrawTriangle = function(t, e, i, n) {
          var s = this.context,
            r = t.uvs,
            a = t.vertices,
            o = t.texture,
            h = o.bitmap,
            l = h.source,
            u = o.width,
            c = o.height,
            _ = h.width,
            d = h.height,
            p = NaN,
            f = NaN,
            g = NaN,
            m = NaN,
            y = NaN,
            v = NaN;
          if (t.useUvTransform) {
            var x = t.uvTransform;
            p = (r[e] * x.a + r[e + 1] * x.c + x.tx) * _, f = (r[i] * x.a + r[i + 1] * x.c + x.tx) * _,
              g = (r[n] * x.a + r[n + 1] * x.c + x.tx) * _, m = (r[e] * x.b + r[e + 1] * x.d + x.ty) * d,
              y = (r[i] * x.b + r[i + 1] * x.d + x.ty) * d, v = (r[n] * x.b + r[n + 1] * x.d + x.ty) * d;
          } else p = r[e] * _, f = r[i] * _, g = r[n] * _, m = r[e + 1] * d, y = r[i + 1] * d,
            v = r[n + 1] * d;
          var b = a[e],
            w = a[i],
            I = a[n],
            S = a[e + 1],
            C = a[i + 1],
            T = a[n + 1];
          if (t.canvasPadding > 0) {
            var E = t.canvasPadding,
              M = t.canvasPadding,
              L = (b + w + I) / 3,
              P = (S + C + T) / 3,
              A = b - L,
              D = S - P,
              R = Math.sqrt(A * A + D * D);
            b = L + A / R * (R + E), S = P + D / R * (R + M), D = C - P, w = L + (A = w - L) / (R = Math.sqrt(A * A + D * D)) * (R + E),
              C = P + D / R * (R + M), D = T - P, I = L + (A = I - L) / (R = Math.sqrt(A * A + D * D)) * (R + E),
              T = P + D / R * (R + M);
          }
          if (s.save(), this.transform) {
            var N = this.transform;
            s.transform(N.a, N.b, N.c, N.d, N.tx, N.ty);
          }
          s.beginPath(), s.moveTo(b, S), s.lineTo(w, C), s.lineTo(I, T), s.closePath(), s.clip();
          var O = 1 / (p * y + m * g + f * v - y * g - m * f - p * v),
            B = b * y + m * I + w * v - y * I - m * w - b * v,
            k = p * w + b * g + f * I - w * g - b * f - p * I,
            F = p * y * I + m * w * g + b * f * v - b * y * g - m * f * I - p * w * v,
            U = S * y + m * T + C * v - y * T - m * C - S * v,
            G = p * C + S * g + f * T - C * g - S * f - p * T,
            V = p * y * T + m * C * g + S * f * v - S * y * g - m * f * T - p * C * v;
          s.transform(B * O, U * O, k * O, G * O, F * O, V * O), s.drawImage(l, o.uv[0] * _, o.uv[1] * d, u, c, o.uv[0] * _, o.uv[1] * d, u, c),
            s.restore();
        }, t;
      }(),
      R = function() {
        function t() {
          this.texture = null, this.uvs = [0, 0, 1, 0, 1, 1, 0, 1], this.vertices = [0, 0, 100, 0, 100, 100, 0, 100],
            this.indexes = [0, 1, 3, 3, 1, 2], this.uvTransform = null, this.useUvTransform = !1,
            this.canvasPadding = 1;
        }
        s(t, "laya.ani.bone.canvasmesh.MeshData");
        return t.prototype.getBounds = function() {
          return m._getWrapRec(this.vertices);
        }, t;
      }(),
      N = function() {
        function t() {
          this.skinName = null, this.deformSlotDataList = [];
        }
        return s(t, "laya.ani.bone.DeformAniData"), t;
      }(),
      O = function() {
        function t() {
          this.deformSlotDisplayList = [];
        }
        return s(t, "laya.ani.bone.DeformSlotData"), t;
      }(),
      B = function() {
        function t() {
          this.boneSlot = null, this.slotIndex = -1, this.attachment = null, this.deformData = null,
            this.frameIndex = 0, this.timeList = [], this.vectices = [], this.tweenKeyList = [];
        }
        s(t, "laya.ani.bone.DeformSlotDisplayData");
        var e = t.prototype;
        return e.binarySearch1 = function(t, e) {
          var i = 0,
            n = t.length - 2;
          if (0 == n) return 1;
          for (var s = n >>> 1;;) {
            if (t[Math.floor(s + 1)] <= e ? i = s + 1 : n = s, i == n) return i + 1;
            s = i + n >>> 1;
          }
          return 0;
        }, e.apply = function(t, e, i) {
          if (void 0 === i && (i = 1), t += .05, !(this.timeList.length <= 0)) {
            var n = 0;
            if (!(t < this.timeList[0])) {
              var s = this.vectices[0].length,
                r = [],
                a = this.binarySearch1(this.timeList, t);
              if (this.frameIndex = a, t >= this.timeList[this.timeList.length - 1]) {
                var o = this.vectices[this.vectices.length - 1];
                if (i < 1)
                  for (n = 0; n < s; n++) r[n] += (o[n] - r[n]) * i;
                else
                  for (n = 0; n < s; n++) r[n] = o[n];
                this.deformData = r;
              } else {
                this.tweenKeyList[this.frameIndex];
                var h = this.vectices[this.frameIndex - 1],
                  l = this.vectices[this.frameIndex],
                  u = this.timeList[this.frameIndex - 1],
                  c = this.timeList[this.frameIndex];
                i = this.tweenKeyList[a - 1] ? (t - u) / (c - u) : 0;
                var _ = NaN;
                for (n = 0; n < s; n++) _ = h[n], r[n] = _ + (l[n] - _) * i;
                this.deformData = r;
              }
            }
          }
        }, t;
      }(),
      k = function() {
        function t() {
          this.time = NaN, this.drawOrder = [];
        }
        return s(t, "laya.ani.bone.DrawOrderData"), t;
      }(),
      F = function() {
        function t() {
          this.name = null, this.intValue = 0, this.floatValue = NaN, this.stringValue = null,
            this.time = NaN;
        }
        return s(t, "laya.ani.bone.EventData"), t;
      }(),
      U = function() {
        function t(t, e) {
          this._targetBone = null, this._bones = null, this._data = null, this.name = null,
            this.mix = NaN, this.bendDirection = NaN, this.isSpine = !0, this._sp = null, this.isDebug = !1,
            this._data = t, this._targetBone = e[t.targetBoneIndex], this.isSpine = t.isSpine,
            null == this._bones && (this._bones = []), this._bones.length = 0;
          for (var i = 0, n = t.boneIndexs.length; i < n; i++) this._bones.push(e[t.boneIndexs[i]]);
          this.name = t.name, this.mix = t.mix, this.bendDirection = t.bendDirection;
        }
        s(t, "laya.ani.bone.IkConstraint");
        var e = t.prototype;
        return e.apply = function() {
          switch (this._bones.length) {
            case 1:
              this._applyIk1(this._bones[0], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.mix);
              break;

            case 2:
              this.isSpine ? this._applyIk2(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix) : this._applyIk3(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix);
          }
        }, e._applyIk1 = function(e, i, n, s) {
          var r = e.parentBone,
            a = 1 / (r.resultMatrix.a * r.resultMatrix.d - r.resultMatrix.b * r.resultMatrix.c),
            o = i - r.resultMatrix.tx,
            h = n - r.resultMatrix.ty,
            l = (o * r.resultMatrix.d - h * r.resultMatrix.c) * a - e.transform.x,
            u = (h * r.resultMatrix.a - o * r.resultMatrix.b) * a - e.transform.y,
            c = Math.atan2(u, l) * t.radDeg - 0 - e.transform.skX;
          e.transform.scX < 0 && (c += 180), c > 180 ? c -= 360 : c < -180 && (c += 360),
            e.transform.skX = e.transform.skY = e.transform.skX + c * s, e.update();
        }, e.updatePos = function(t, e) {
          this._sp && this._sp.pos(t, e);
        }, e._applyIk2 = function(e, n, s, r, a, o) {
          if (0 != o) {
            var h = e.resultTransform.x,
              l = e.resultTransform.y,
              u = e.transform.scX,
              c = e.transform.scY,
              _ = n.transform.scX,
              d = 0,
              p = 0,
              f = 0;
            u < 0 ? (u = -u, d = 180, f = -1) : (d = 0, f = 1), c < 0 && (c = -c, f = -f), _ < 0 ? (_ = -_,
              p = 180) : p = 0;
            var g = n.resultTransform.x,
              m = NaN,
              y = NaN,
              v = NaN,
              x = e.resultMatrix.a,
              w = e.resultMatrix.c,
              I = e.resultMatrix.b,
              S = e.resultMatrix.d,
              C = Math.abs(u - c) <= 1e-4;
            C ? (y = x * g + w * (m = n.resultTransform.y) + e.resultMatrix.tx, v = I * g + S * m + e.resultMatrix.ty) : (m = 0,
              y = x * g + e.resultMatrix.tx, v = I * g + e.resultMatrix.ty), this.isDebug && (this._sp || (this._sp = new b(),
                i.stage.addChild(this._sp)), this._sp.graphics.clear(), this._sp.graphics.drawCircle(s, r, 15, "#ffff00"),
              this._sp.graphics.drawCircle(y, v, 15, "#ff00ff")), e.setRotation(Math.atan2(v - e.resultMatrix.ty, y - e.resultMatrix.tx));
            var T = e.parentBone;
            x = T.resultMatrix.a, w = T.resultMatrix.c, I = T.resultMatrix.b;
            var E = 1 / (x * (S = T.resultMatrix.d) - w * I),
              M = s - T.resultMatrix.tx,
              L = r - T.resultMatrix.ty,
              P = (M * S - L * w) * E - h,
              A = (L * x - M * I) * E - l,
              D = ((M = y - T.resultMatrix.tx) * S - (L = v - T.resultMatrix.ty) * w) * E - h,
              R = (L * x - M * I) * E - l,
              N = Math.sqrt(D * D + R * R),
              O = n.length * _,
              B = NaN,
              k = NaN;
            if (C) {
              var F = (P * P + A * A - N * N - (O *= u) * O) / (2 * N * O);
              F < -1 ? F = -1 : F > 1 && (F = 1), k = Math.acos(F) * a, x = N + O * F, w = O * Math.sin(k),
                B = Math.atan2(A * x - P * w, P * x + A * w);
            } else {
              var U = (x = u * O) * x,
                G = (w = c * O) * w,
                V = P * P + A * A,
                H = Math.atan2(A, P),
                z = -2 * G * N,
                W = G - U;
              if ((S = z * z - 4 * W * (I = G * N * N + U * V - U * G)) > 0) {
                var Y = Math.sqrt(S);
                z < 0 && (Y = -Y);
                var X = (Y = -(z + Y) / 2) / W,
                  K = I / Y,
                  j = Math.abs(X) < Math.abs(K) ? X : K;
                j * j <= V && (L = Math.sqrt(V - j * j) * a, B = H - Math.atan2(L, j), k = Math.atan2(L / c, (j - N) / u));
              }
              var $ = 0,
                q = Number.MAX_VALUE,
                Q = 0,
                Z = 0,
                J = 0,
                tt = 0,
                et = 0,
                it = 0;
              (S = (M = N + x) * M) > tt && (J = 0, tt = S, et = M), (S = (M = N - x) * M) < q && ($ = Math.PI,
                q = S, Q = M);
              var nt = Math.acos(-x * N / (U - G));
              (S = (M = x * Math.cos(nt) + N) * M + (L = w * Math.sin(nt)) * L) < q && ($ = nt,
                q = S, Q = M, Z = L), S > tt && (J = nt, tt = S, et = M, it = L), V <= (q + tt) / 2 ? (B = H - Math.atan2(Z * a, Q),
                k = $ * a) : (B = H - Math.atan2(it * a, et), k = J * a);
            }
            var st = Math.atan2(m, g) * f,
              rt = e.resultTransform.skX;
            (B = (B - st) * t.radDeg + d - rt) > 180 ? B -= 360 : B < -180 && (B += 360), e.resultTransform.x = h,
              e.resultTransform.y = l, e.resultTransform.skX = e.resultTransform.skY = rt + B * o,
              rt = n.resultTransform.skX, (k = ((k + st) * t.radDeg - 0) * f + p - (rt %= 360)) > 180 ? k -= 360 : k < -180 && (k += 360),
              n.resultTransform.x = g, n.resultTransform.y = m, n.resultTransform.skX = n.resultTransform.skY = n.resultTransform.skY + k * o,
              e.update();
          }
        }, e._applyIk3 = function(e, n, s, r, a, o) {
          if (0 != o) {
            var h = NaN,
              l = NaN,
              u = n.resultMatrix.a * n.length,
              c = n.resultMatrix.b * n.length,
              _ = u * u + c * c,
              d = Math.sqrt(_),
              p = e.resultMatrix.tx,
              f = e.resultMatrix.ty,
              g = n.resultMatrix.tx,
              m = n.resultMatrix.ty,
              y = g - p,
              v = m - f,
              x = y * y + v * v,
              w = Math.sqrt(x),
              I = (y = s - e.resultMatrix.tx) * y + (v = r - e.resultMatrix.ty) * v,
              S = Math.sqrt(I);
            if (d + w <= S || S + d <= w || S + w <= d) {
              var C = NaN;
              g = p + (C = d + w <= S ? 1 : -1) * (s - p) * w / S, m = f + C * (r - f) * w / S;
            } else {
              var T = (x - _ + I) / (2 * I),
                E = Math.sqrt(x - T * T * I) / S,
                M = p + y * T,
                L = f + v * T,
                P = -v * E,
                A = y * E;
              a > 0 ? (g = M - P, m = L - A) : (g = M + P, m = L + A);
            }
            h = g, l = m, this.isDebug && (this._sp || (this._sp = new b(), i.stage.addChild(this._sp)),
              this._sp.graphics.clear(), this._sp.graphics.drawCircle(p, f, 15, "#ff00ff"), this._sp.graphics.drawCircle(s, r, 15, "#ffff00"),
              this._sp.graphics.drawCircle(h, l, 15, "#ff00ff"));
            var D = NaN;
            D = Math.atan2(l - e.resultMatrix.ty, h - e.resultMatrix.tx), e.setRotation(D);
            var R;
            (R = t._tempMatrix).identity(), R.rotate(D), R.scale(e.resultMatrix.getScaleX(), e.resultMatrix.getScaleY()),
              R.translate(e.resultMatrix.tx, e.resultMatrix.ty), R.copyTo(e.resultMatrix), e.updateChild();
            var N = NaN;
            N = Math.atan2(r - l, s - h), n.setRotation(N);
            var O;
            (O = t._tempMatrix).identity(), O.rotate(N), O.scale(n.resultMatrix.getScaleX(), n.resultMatrix.getScaleY()),
              O.translate(h, l), R.copyTo(n.resultMatrix), n.updateChild();
          }
        }, n(t, ["radDeg", function() {
          return this.radDeg = 180 / Math.PI;
        }, "degRad", function() {
          return this.degRad = Math.PI / 180;
        }, "_tempMatrix", function() {
          return this._tempMatrix = new g();
        }]), t;
      }(),
      G = function() {
        function t() {
          this.name = null, this.targetBoneName = null, this.bendDirection = 1, this.mix = 1,
            this.isSpine = !0, this.targetBoneIndex = -1, this.boneNames = [], this.boneIndexs = [];
        }
        return s(t, "laya.ani.bone.IkConstraintData"), t;
      }(),
      V = function() {
        function t() {}
        return s(t, "laya.ani.bone.MeshTools"), t.findEdge = function(t, e, i) {
          void 0 === e && (e = 0), void 0 === i && (i = !0);
          var n = 0,
            s = 0,
            r = 0;
          for (s = t.length, r = -1, n = 0; n < s; n += 2)(r < 0 || i == t[r + e] < t[n + e]) && (r = n);
          return r;
        }, t.findBestTriangle = function(e) {
          var i = 0;
          i = t.findEdge(e, 1, !0);
          var n = 0;
          n = t.findEdge(e, 1, !1);
          var s = 0;
          s = t.findEdge(e, 0, !0);
          var r = 0;
          r = t.findEdge(e, 0, !1);
          var a;
          return a = t._bestTriangle, a.length = 0, a.push(s, r), a.indexOf(i) < 0 && a.push(i),
            a.indexOf(n) < 0 && a.push(n), a;
        }, t.solveMesh = function(e, i) {
          (i = i || []).length = 0;
          var n;
          n = e.uvs;
          var s;
          s = e.vertices;
          var r, a, o = 0,
            h = 0,
            l = 0;
          o = (a = t.findBestTriangle(n))[0], h = a[1], l = a[2], t._absArr.length = 0;
          return t.isNormalUV(e.texture.uv) && t.adptTexture(e), r = t.solvePoints(e.texture.uv, n[o], n[o + 1], n[h] - n[o], n[h + 1] - n[o + 1], n[l] - n[o], n[l + 1] - n[o + 1], t._absArr),
            t.transPoints(r, s[o], s[o + 1], s[h] - s[o], s[h + 1] - s[o + 1], s[l] - s[o], s[l + 1] - s[o + 1], i);
        }, t.findWrapRect = function(e) {
          var i = 0;
          i = t.findEdge(e, 1, !0);
          var n = 0;
          n = t.findEdge(e, 1, !1);
          var s = 0;
          s = t.findEdge(e, 0, !0);
          var r = 0;
          r = t.findEdge(e, 0, !1);
          var a = NaN;
          a = e[s];
          var o = NaN;
          o = e[r];
          var h = NaN;
          h = e[i + 1];
          var l = NaN;
          return [o, l = e[n + 1], a - o, h - l];
        }, t.adptTexture = function(e) {
          var i;
          i = t.findWrapRect(e.uvs);
          var n, s, r = (n = e.texture).width,
            a = n.height;
          s = I.create(n, i[0] * r, i[1] * a, i[2] * r, i[3] * a), e.texture = s;
        }, t.isNormalUV = function(t) {
          return 0 == t[0] && 0 == t[1] && 1 == t[4] && 1 == t[5];
        }, t.solvePoints = function(e, i, n, s, r, a, o, h) {
          h = h || [];
          var l = 0,
            u = 0;
          u = e.length;
          var c;
          for (l = 0; l < u; l += 2) c = t.solve2(e[l], e[l + 1], i, n, s, r, a, o), h.push(c[0], c[1]);
          return h;
        }, t.transPoints = function(e, i, n, s, r, a, o, h) {
          h = h || [];
          var l = 0,
            u = 0;
          u = e.length;
          for (l = 0; l < u; l += 2) t.transPoint(e[l], e[l + 1], i, n, s, r, a, o, h);
          return h;
        }, t.transPoint = function(t, e, i, n, s, r, a, o, h) {
          var l = NaN,
            u = NaN;
          return l = i + s * t + a * e, u = n + r * t + o * e, (h = h || []).push(l, u), h;
        }, t.solve2 = function(e, i, n, s, r, a, o, h, l, u) {
          void 0 === l && (l = !1), u = u || [];
          var c = NaN,
            _ = NaN;
          if (0 == r) return t.solve2(e, i, n, s, o, h, r, a, !0, u);
          var d = NaN,
            p = NaN;
          return d = e - n, p = i - s, _ = (p - d * a / r) / (h - o * a / r), c = (d - _ * o) / r,
            l ? u.push(_, c) : u.push(c, _), u;
        }, t.solve = function(e, i, n, s) {
          return t.solve2(e.x, e.y, i.x, i.y, n.x, n.y, s.x, s.y);
        }, t._bestTriangle = [], t._absArr = [], t;
      }(),
      H = function() {
        function t(t, e) {
          this.target = null, this.data = null, this.bones = null, this.position = NaN, this.spacing = NaN,
            this.rotateMix = NaN, this.translateMix = NaN, this._debugKey = !1, this._spaces = null,
            this._segments = [], this._curves = [], this.data = t, this.position = t.position,
            this.spacing = t.spacing, this.rotateMix = t.rotateMix, this.translateMix = t.translateMix,
            this.bones = [];
          for (var i = this.data.bones, n = 0, s = i.length; n < s; n++) this.bones.push(e[i[n]]);
        }
        s(t, "laya.ani.bone.PathConstraint");
        var e = t.prototype;
        return e.apply = function(t, e) {
          if (this.target) {
            var i = this.translateMix,
              n = this.translateMix,
              s = n > 0,
              r = this.data.spacingMode,
              a = "length" == r,
              o = this.data.rotateMode,
              h = "tangent" == o,
              l = "chainScale" == o,
              u = [],
              c = this.bones.length,
              _ = h ? c : c + 1,
              d = [];
            this._spaces = d, d[0] = this.position;
            var p = this.spacing;
            if (l || a)
              for (var f = 0, g = _ - 1; f < g;) {
                var m = this.bones[f],
                  y = m.length,
                  v = y * m.resultMatrix.a,
                  x = y * m.resultMatrix.b;
                y = Math.sqrt(v * v + x * x), l && (u[f] = y), d[++f] = a ? Math.max(0, y + p) : p;
              } else
                for (f = 1; f < _; f++) d[f] = p;
            var b = this.computeWorldPositions(this.target, t, e, _, h, "percent" == this.data.positionMode, "percent" == r);
            if (this._debugKey) {
              for (f = 0; f < b.length; f++) e.drawCircle(b[f++], b[f++], 5, "#00ff00");
              var w = [];
              for (f = 0; f < b.length; f++) w.push(b[f++], b[f++]);
              e.drawLines(0, 0, w, "#ff0000");
            }
            var I = b[0],
              S = b[1],
              C = this.data.offsetRotation,
              T = "chain" == o && 0 == C,
              E = NaN;
            for (f = 0, E = 3; f < c; f++, E += 3) {
              (m = this.bones[f]).resultMatrix.tx += (I - m.resultMatrix.tx) * i, m.resultMatrix.ty += (S - m.resultMatrix.ty) * i;
              var M = (v = b[E]) - I,
                L = (x = b[E + 1]) - S;
              if (l && 0 != (y = u[f])) {
                var P = (Math.sqrt(M * M + L * L) / y - 1) * n + 1;
                m.resultMatrix.a *= P, m.resultMatrix.c *= P;
              }
              if (I = v, S = x, s) {
                var A = m.resultMatrix.a,
                  D = m.resultMatrix.c,
                  R = m.resultMatrix.b,
                  N = m.resultMatrix.d,
                  O = NaN,
                  B = NaN,
                  k = NaN;
                O = h ? b[E - 1] : 0 == d[f + 1] ? b[E + 2] : Math.atan2(L, M), O -= Math.atan2(R, A) - C / 180 * Math.PI,
                  T && (B = Math.cos(O), k = Math.sin(O), I += ((y = m.length) * (B * A - k * R) - M) * n,
                    S += (y * (k * A + B * R) - L) * n), O > Math.PI ? O -= 2 * Math.PI : O < -Math.PI && (O += 2 * Math.PI),
                  O *= n, B = Math.cos(O), k = Math.sin(O), m.resultMatrix.a = B * A - k * R, m.resultMatrix.c = B * D - k * N,
                  m.resultMatrix.b = k * A + B * R, m.resultMatrix.d = k * D + B * N;
              }
            }
          }
        }, e.computeWorldVertices2 = function(e, i, n, s, r, a) {
          var o, h, l = e.currDisplayData.bones,
            u = e.currDisplayData.weights,
            c = e.currDisplayData.triangles,
            _ = 0,
            d = 0,
            p = 0,
            f = 0,
            g = 0,
            m = 0,
            y = 0,
            v = 0,
            x = 0,
            b = 0,
            w = 0;
          if (null != l) {
            for (_ = 0; _ < n; _ += 2) d += (f = l[d]) + 1, p += f;
            var I = i;
            for (g = a, m = 3 * p; g < s; g += 2) {
              for (y = 0, v = 0, f = l[d++], f += d; d < f; d++, m += 3) {
                o = I[l[d]].resultMatrix, x = u[m], b = u[m + 1];
                var S = u[m + 2];
                y += (x * o.a + b * o.c + o.tx) * S, v += (x * o.b + b * o.d + o.ty) * S;
              }
              r[g] = y, r[g + 1] = v;
            }
          } else {
            c || (c = u), e.deformData && (c = e.deformData);
            var C;
            if (C = e.parent, i)
              for (w = i.length, _ = 0; _ < w; _++)
                if (i[_].name == C) {
                  h = i[_];
                  break;
                }
            var T;
            h && (T = h.resultMatrix), T || (T = t._tempMt);
            var E = T.tx,
              M = T.ty,
              L = T.a,
              P = T.b,
              A = T.c,
              D = T.d;
            for (h && (D *= h.d), d = n, g = a; g < s; d += 2, g += 2) x = c[d], b = c[d + 1],
              r[g] = x * L + b * P + E, r[g + 1] = -(x * A + b * D + M);
          }
        }, e.computeWorldPositions = function(t, e, i, n, s, r, a) {
          t.currDisplayData.bones, t.currDisplayData.weights, t.currDisplayData.triangles;
          var o = [],
            h = 0,
            l = t.currDisplayData.verLen,
            u = this.position,
            c = this._spaces,
            _ = [],
            d = [],
            p = l / 6,
            f = -1,
            g = NaN,
            m = 0,
            y = 0,
            v = NaN,
            x = NaN,
            b = NaN,
            w = NaN;
          if (p--, l -= 4, this.computeWorldVertices2(t, e, 2, l, o, 0), this._debugKey)
            for (h = 0; h < o.length;) i.drawCircle(o[h++], o[h++], 10, "#ff0000");
          _ = o, this._curves.length = p;
          var I = this._curves;
          g = 0;
          var S = _[0],
            C = _[1],
            T = 0,
            E = 0,
            M = 0,
            L = 0,
            P = 0,
            A = 0,
            D = NaN,
            R = NaN,
            N = NaN,
            O = NaN,
            B = NaN,
            k = NaN,
            F = NaN,
            U = NaN,
            G = 0;
          for (h = 0, G = 2; h < p; h++, G += 6) T = _[G], E = _[G + 1], M = _[G + 2], L = _[G + 3],
            B = 2 * (D = .1875 * (S - 2 * T + M)) + (N = .09375 * (3 * (T - M) - S + (P = _[G + 4]))),
            k = 2 * (R = .1875 * (C - 2 * E + L)) + (O = .09375 * (3 * (E - L) - C + (A = _[G + 5]))),
            F = .75 * (T - S) + D + .16666667 * N, U = .75 * (E - C) + R + .16666667 * O, g += Math.sqrt(F * F + U * U),
            F += B, U += k, B += N, k += O, g += Math.sqrt(F * F + U * U), F += B, U += k, g += Math.sqrt(F * F + U * U),
            F += B + N, U += k + O, g += Math.sqrt(F * F + U * U), I[h] = g, S = P, C = A;
          if (r && (u *= g), a)
            for (h = 0; h < n; h++) c[h] *= g;
          var V = this._segments,
            H = 0,
            z = 0;
          for (h = 0, m = 0, y = 0, z = 0; h < n; h++, m += 3)
            if (x = c[h], u += x, (v = u) < 0) this.addBeforePosition(v, _, 0, d, m);
            else if (v > g) this.addAfterPosition(v - g, _, l - 4, d, m);
          else {
            for (;; y++)
              if (w = I[y], !(v > w)) {
                0 == y ? v /= w : v = (v - (b = I[y - 1])) / (w - b);
                break;
              }
            if (y != f) {
              f = y;
              var W = 6 * y;
              for (S = _[W], C = _[W + 1], T = _[W + 2], E = _[W + 3], M = _[W + 4], L = _[W + 5],
                B = 2 * (D = .03 * (S - 2 * T + M)) + (N = .006 * (3 * (T - M) - S + (P = _[W + 6]))),
                k = 2 * (R = .03 * (C - 2 * E + L)) + (O = .006 * (3 * (E - L) - C + (A = _[W + 7]))),
                F = .3 * (T - S) + D + .16666667 * N, U = .3 * (E - C) + R + .16666667 * O, H = Math.sqrt(F * F + U * U),
                V[0] = H, W = 1; W < 8; W++) F += B, U += k, B += N, k += O, H += Math.sqrt(F * F + U * U),
                V[W] = H;
              F += B, U += k, H += Math.sqrt(F * F + U * U), V[8] = H, F += B + N, U += k + O,
                H += Math.sqrt(F * F + U * U), V[9] = H, z = 0;
            }
            for (v *= H;; z++)
              if (w = V[z], !(v > w)) {
                0 == z ? v /= w : v = z + (v - (b = V[z - 1])) / (w - b);
                break;
              }
            this.addCurvePosition(.1 * v, S, C, T, E, M, L, P, A, d, m, s || h > 0 && 0 == x);
          }
          return d;
        }, e.addBeforePosition = function(t, e, i, n, s) {
          var r = e[i],
            a = e[i + 1],
            o = e[i + 2] - r,
            h = e[i + 3] - a,
            l = Math.atan2(h, o);
          n[s] = r + t * Math.cos(l), n[s + 1] = a + t * Math.sin(l), n[s + 2] = l;
        }, e.addAfterPosition = function(t, e, i, n, s) {
          var r = e[i + 2],
            a = e[i + 3],
            o = r - e[i],
            h = a - e[i + 1],
            l = Math.atan2(h, o);
          n[s] = r + t * Math.cos(l), n[s + 1] = a + t * Math.sin(l), n[s + 2] = l;
        }, e.addCurvePosition = function(t, e, i, n, s, r, a, o, h, l, u, c) {
          0 == t && (t = 1e-4);
          var _ = t * t,
            d = _ * t,
            p = 1 - t,
            f = p * p,
            g = f * p,
            m = p * t,
            y = 3 * m,
            v = p * y,
            x = y * t,
            b = e * g + n * v + r * x + o * d,
            w = i * g + s * v + a * x + h * d;
          l[u] = b, l[u + 1] = w, l[u + 2] = c ? Math.atan2(w - (i * f + s * m * 2 + a * _), b - (e * f + n * m * 2 + r * _)) : 0;
        }, t.NONE = -1, t.BEFORE = -2, t.AFTER = -3, n(t, ["_tempMt", function() {
          return this._tempMt = new g();
        }]), t;
      }(),
      z = function() {
        function t() {
          this.name = null, this.target = null, this.positionMode = null, this.spacingMode = null,
            this.rotateMode = null, this.offsetRotation = NaN, this.position = NaN, this.spacing = NaN,
            this.rotateMix = NaN, this.translateMix = NaN, this.bones = [];
        }
        return s(t, "laya.ani.bone.PathConstraintData"), t;
      }(),
      W = function() {
        function t() {
          this.name = null, this.slotArr = [];
        }
        return s(t, "laya.ani.bone.SkinData"), t;
      }(),
      Y = function() {
        function t() {
          this.name = null, this.attachmentName = null, this.type = 0, this.transform = null,
            this.width = NaN, this.height = NaN, this.texture = null, this.bones = null, this.uvs = null,
            this.weights = null, this.triangles = null, this.vertices = null, this.lengths = null,
            this.verLen = 0;
        }
        s(t, "laya.ani.bone.SkinSlotDisplayData");
        var e = t.prototype;
        return e.createTexture = function(t) {
          return this.texture ? this.texture : (this.texture = new I(t.bitmap, this.uvs),
            this.uvs[0] > this.uvs[4] && this.uvs[1] > this.uvs[5] ? (this.texture.width = t.height,
              this.texture.height = t.width, this.texture.offsetX = -t.offsetX, this.texture.offsetY = -t.offsetY,
              this.texture.sourceWidth = t.sourceHeight, this.texture.sourceHeight = t.sourceWidth) : (this.texture.width = t.width,
              this.texture.height = t.height, this.texture.offsetX = -t.offsetX, this.texture.offsetY = -t.offsetY,
              this.texture.sourceWidth = t.sourceWidth, this.texture.sourceHeight = t.sourceHeight),
            y.isWebGL || this.uvs[1] > this.uvs[5] && (this.texture.offsetY = this.texture.sourceHeight - this.texture.height - this.texture.offsetY),
            this.texture);
        }, e.destory = function() {
          this.texture && this.texture.destroy();
        }, t;
      }(),
      X = function() {
        function t() {
          this.name = null, this.displayArr = [];
        }
        s(t, "laya.ani.bone.SlotData");
        return t.prototype.getDisplayByName = function(t) {
          for (var e = 0, i = this.displayArr.length; e < i; e++)
            if (this.displayArr[e].attachmentName == t) return e;
          return -1;
        }, t;
      }(),
      K = function() {
        function t(t, e) {
          this._data = null, this._bones = null, this.target = null, this.rotateMix = NaN,
            this.translateMix = NaN, this.scaleMix = NaN, this.shearMix = NaN, this._temp = a(2, 0),
            this._data = t, null == this._bones && (this._bones = []), this.target = e[t.targetIndex];
          var i = 0,
            n = 0;
          for (i = 0, n = t.boneIndexs.length; i < n; i++) this._bones.push(e[t.boneIndexs[i]]);
          this.rotateMix = t.rotateMix, this.translateMix = t.translateMix, this.scaleMix = t.scaleMix,
            this.shearMix = t.shearMix;
        }
        s(t, "laya.ani.bone.TfConstraint");
        return t.prototype.apply = function() {
          for (var t, e = this.target.resultMatrix.a, i = this.target.resultMatrix.b, n = this.target.resultMatrix.c, s = this.target.resultMatrix.d, r = 0, a = this._bones.length; r < a; r++) {
            if (t = this._bones[r], this.rotateMix > 0) {
              var o = t.resultMatrix.a,
                h = t.resultMatrix.b,
                l = t.resultMatrix.c,
                u = t.resultMatrix.d,
                c = Math.atan2(n, e) - Math.atan2(l, o) + this._data.offsetRotation * Math.PI / 180;
              c > Math.PI ? c -= 2 * Math.PI : c < -Math.PI && (c += 2 * Math.PI), c *= this.rotateMix;
              var _ = Math.cos(c),
                d = Math.sin(c);
              t.resultMatrix.a = _ * o - d * l, t.resultMatrix.b = _ * h - d * u, t.resultMatrix.c = d * o + _ * l,
                t.resultMatrix.d = d * h + _ * u;
            }
            if (this.translateMix && (this._temp[0] = this._data.offsetX, this._temp[1] = this._data.offsetY,
                this.target.localToWorld(this._temp), t.resultMatrix.tx += (this._temp[0] - t.resultMatrix.tx) * this.translateMix,
                t.resultMatrix.ty += (this._temp[1] - t.resultMatrix.ty) * this.translateMix, t.updateChild()),
              this.scaleMix > 0) {
              var p = Math.sqrt(t.resultMatrix.a * t.resultMatrix.a + t.resultMatrix.c * t.resultMatrix.c),
                f = Math.sqrt(e * e + n * n),
                g = p > 1e-5 ? (p + (f - p + this._data.offsetScaleX) * this.scaleMix) / p : 0;
              t.resultMatrix.a *= g, t.resultMatrix.c *= g, p = Math.sqrt(t.resultMatrix.b * t.resultMatrix.b + t.resultMatrix.d * t.resultMatrix.d),
                f = Math.sqrt(i * i + s * s), g = p > 1e-5 ? (p + (f - p + this._data.offsetScaleY) * this.scaleMix) / p : 0,
                t.resultMatrix.b *= g, t.resultMatrix.d *= g;
            }
            if (this.shearMix > 0) {
              h = t.resultMatrix.b, u = t.resultMatrix.d;
              var m = Math.atan2(u, h);
              (c = Math.atan2(s, i) - Math.atan2(n, e) - (m - Math.atan2(t.resultMatrix.c, t.resultMatrix.a))) > Math.PI ? c -= 2 * Math.PI : c < -Math.PI && (c += 2 * Math.PI),
                c = m + (c + this._data.offsetShearY * Math.PI / 180) * this.shearMix, g = Math.sqrt(h * h + u * u),
                t.resultMatrix.b = Math.cos(c) * g, t.resultMatrix.d = Math.sin(c) * g;
            }
          }
        }, t;
      }(),
      j = function() {
        function t() {
          this.name = null, this.targetIndex = 0, this.rotateMix = NaN, this.translateMix = NaN,
            this.scaleMix = NaN, this.shearMix = NaN, this.offsetRotation = NaN, this.offsetX = NaN,
            this.offsetY = NaN, this.offsetScaleX = NaN, this.offsetScaleY = NaN, this.offsetShearY = NaN,
            this.boneIndexs = [];
        }
        return s(t, "laya.ani.bone.TfConstraintData"), t;
      }(),
      $ = function() {
        function t() {
          this.skX = 0, this.skY = 0, this.scX = 1, this.scY = 1, this.x = 0, this.y = 0,
            this.skewX = 0, this.skewY = 0, this.mMatrix = null;
        }
        s(t, "laya.ani.bone.Transform");
        var e = t.prototype;
        return e.initData = function(t) {
          void 0 != t.x && (this.x = t.x), void 0 != t.y && (this.y = t.y), void 0 != t.skX && (this.skX = t.skX),
            void 0 != t.skY && (this.skY = t.skY), void 0 != t.scX && (this.scX = t.scX), void 0 != t.scY && (this.scY = t.scY);
        }, e.getMatrix = function() {
          var t;
          return (t = this.mMatrix ? this.mMatrix : this.mMatrix = new g()).identity(), t.scale(this.scX, this.scY),
            (this.skewX || this.skewY) && this.skew(t, this.skewX * Math.PI / 180, this.skewY * Math.PI / 180),
            t.rotate(this.skX * Math.PI / 180), t.translate(this.x, this.y), t;
        }, e.skew = function(t, e, i) {
          var n = Math.sin(i),
            s = Math.cos(i),
            r = Math.sin(e),
            a = Math.cos(e);
          return t.setTo(t.a * a - t.b * n, t.a * r + t.b * s, t.c * a - t.d * n, t.c * r + t.d * s, t.tx * a - t.ty * n, t.tx * r + t.ty * s),
            t;
        }, t;
      }(),
      q = function() {
        function t() {}
        return s(t, "laya.ani.bone.UVTools"), t.getRelativeUV = function(t, e, i) {
          var n = t[0],
            s = t[2] - t[0],
            r = t[1],
            a = t[5] - t[1];
          i || (i = []), i.length = e.length;
          var o = 0,
            h = 0;
          h = i.length;
          var l = 1 / s,
            u = 1 / a;
          for (o = 0; o < h; o += 2) i[o] = (e[o] - n) * l, i[o + 1] = (e[o + 1] - r) * u;
          return i;
        }, t.getAbsoluteUV = function(t, e, i) {
          if (0 == t[0] && 0 == t[1] && 1 == t[4] && 1 == t[5]) return i ? (C.copyArray(i, e),
            i) : e;
          var n = t[0],
            s = t[2] - t[0],
            r = t[1],
            a = t[5] - t[1];
          i || (i = []), i.length = e.length;
          var o = 0,
            h = 0;
          for (h = i.length, o = 0; o < h; o += 2) i[o] = e[o] * s + n, i[o + 1] = e[o + 1] * a + r;
          return i;
        }, t;
      }(),
      Q = function() {
        function t() {
          this.startTime = NaN, this.duration = NaN, this.interpolationData = null, this.data = null,
            this.nextData = null;
        }
        return s(t, "laya.ani.KeyFramesContent"), t;
      }(),
      Z = function() {
        function t() {}
        return s(t, "laya.ani.math.BezierLerp"), t.getBezierRate = function(e, i, n, s, r) {
          var a = t._getBezierParamKey(i, n, s, r),
            o = 100 * a + e;
          if (t._bezierResultCache[o]) return t._bezierResultCache[o];
          var h = t._getBezierPoints(i, n, s, r, a),
            l = 0,
            u = 0;
          for (u = h.length, l = 0; l < u; l += 2)
            if (e <= h[l]) return t._bezierResultCache[o] = h[l + 1],
              h[l + 1];
          return t._bezierResultCache[o] = 1, 1;
        }, t._getBezierParamKey = function(t, e, i, n) {
          return 100 * (100 * (100 * (100 * t + e) + i) + n);
        }, t._getBezierPoints = function(e, i, n, s, r) {
          if (t._bezierPointsCache[r]) return t._bezierPointsCache[r];
          var a;
          a = [0, 0, e, i, n, s, 1, 1];
          var h;
          return h = new o().getBezierPoints(a, 100, 3), t._bezierPointsCache[r] = h, h;
        }, t._bezierResultCache = {}, t._bezierPointsCache = {}, t;
      }(),
      J = function(t) {
        function e() {
          this._destroyed = !1, this._templet = null, this._currentTime = NaN, this._currentFrameTime = NaN,
            this._playStart = NaN, this._playEnd = NaN, this._playDuration = NaN, this._overallDuration = NaN,
            this._stopWhenCircleFinish = !1, this._elapsedPlaybackTime = NaN, this._startUpdateLoopCount = NaN,
            this._currentAnimationClipIndex = 0, this._currentKeyframeIndex = 0, this._paused = !1,
            this._cacheFrameRate = 0, this._cacheFrameRateInterval = NaN, this._cachePlayRate = NaN,
            this._fullFrames = null, this.isCache = !0, this.playbackRate = 1, this.returnToZeroStopped = !1,
            e.__super.call(this), this._destroyed = !1, this._currentAnimationClipIndex = -1,
            this._currentKeyframeIndex = -1, this._currentTime = 0, this._overallDuration = Number.MAX_VALUE,
            this._stopWhenCircleFinish = !1, this._elapsedPlaybackTime = 0, this._startUpdateLoopCount = -1,
            this._cachePlayRate = 1, this.cacheFrameRate = 60, this.returnToZeroStopped = !1;
        }
        s(e, "laya.ani.AnimationPlayer", u);
        var n = e.prototype;
        return i.imps(n, {
          "laya.resource.IDestroy": !0
        }), n._onTempletLoadedComputeFullKeyframeIndices = function(t, e, i) {
          this._templet === i && this._cachePlayRate === t && this._cacheFrameRate === e && this._computeFullKeyframeIndices();
        }, n._computeFullKeyframeIndices = function() {
          for (var t = this._fullFrames = [], e = this._templet, i = this._cacheFrameRateInterval * this._cachePlayRate, n = 0, s = e.getAnimationCount(); n < s; n++) {
            for (var r = [], a = 0, o = e.getAnimation(n).nodes.length; a < o; a++) {
              for (var h = e.getAnimation(n).nodes[a], l = Math.floor(h.playTime / i + .01), u = new Uint16Array(l + 1), c = -1, _ = 0, d = h.keyFrame.length; _ < d; _++) {
                var p = h.keyFrame[_],
                  f = p.startTime,
                  g = f + p.duration + i;
                do {
                  for (var m = Math.floor(f / i + .5), y = c + 1; y < m; y++) u[y] = _;
                  c = m, u[m] = _, f += i;
                } while (f <= g);
              }
              r.push(u);
            }
            t.push(r);
          }
        }, n._onAnimationTempletLoaded = function() {
          this.destroyed || this._calculatePlayDuration();
        }, n._calculatePlayDuration = function() {
          if (0 !== this.state) {
            var t = this._templet.getAniDuration(this._currentAnimationClipIndex);
            0 === this._playEnd && (this._playEnd = t), this._playEnd > t && (this._playEnd = t),
              this._playDuration = this._playEnd - this._playStart;
          }
        }, n._setPlayParams = function(t, e) {
          this._currentTime = t, this._currentKeyframeIndex = Math.max(Math.floor(this.currentPlayTime / e + .01), 0),
            this._currentFrameTime = this._currentKeyframeIndex * e;
        }, n._setPlayParamsWhenStop = function(t, e) {
          this._currentTime = t, this._currentKeyframeIndex = Math.max(Math.floor(t / e + .01), 0),
            this._currentFrameTime = this._currentKeyframeIndex * e, this._currentAnimationClipIndex = -1;
        }, n._update = function(t) {
          if (-1 !== this._currentAnimationClipIndex && !this._paused && this._templet && this._templet.loaded) {
            var e = this._cacheFrameRateInterval * this._cachePlayRate,
              i = 0;
            this._startUpdateLoopCount !== w.loopCount && (i = t * this.playbackRate, this._elapsedPlaybackTime += i);
            var n = this.playDuration;
            if (0 !== this._overallDuration && this._elapsedPlaybackTime >= this._overallDuration || 0 === this._overallDuration && this._elapsedPlaybackTime >= n) return this._setPlayParamsWhenStop(n, e),
              void this.event("stopped");
            if (i += this._currentTime, n > 0)
              if (i >= n)
                do {
                  if (i -= n, this._stopWhenCircleFinish) return this._setPlayParamsWhenStop(n, e),
                    this._stopWhenCircleFinish = !1, void this.event("stopped");
                  i < n && (this._setPlayParams(i, e), this.event("complete"));
                } while (i >= n);
              else this._setPlayParams(i, e);
            else {
              if (this._stopWhenCircleFinish) return this._setPlayParamsWhenStop(n, e), this._stopWhenCircleFinish = !1,
                void this.event("stopped");
              this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0, this.event("complete");
            }
          }
        }, n._destroy = function() {
          this.offAll(), this._templet = null, this._fullFrames = null, this._destroyed = !0;
        }, n.play = function(t, e, i, n, s) {
          if (void 0 === t && (t = 0), void 0 === e && (e = 1), void 0 === i && (i = 2147483647),
            void 0 === n && (n = 0), void 0 === s && (s = 0), !this._templet) throw new Error("AnimationPlayer:templet must not be null,maybe you need to set url.");
          if (i < 0 || n < 0 || s < 0) throw new Error("AnimationPlayer:overallDuration,playStart and playEnd must large than zero.");
          if (0 !== s && n > s) throw new Error("AnimationPlayer:start must less than end.");
          this._currentTime = 0, this._currentFrameTime = 0, this._elapsedPlaybackTime = 0,
            this.playbackRate = e, this._overallDuration = i, this._playStart = n, this._playEnd = s,
            this._paused = !1, this._currentAnimationClipIndex = t, this._currentKeyframeIndex = 0,
            this._startUpdateLoopCount = w.loopCount, this.event("played"), this._templet.loaded ? this._calculatePlayDuration() : this._templet.once("loaded", this, this._onAnimationTempletLoaded),
            this._update(0);
        }, n.playByFrame = function(t, e, i, n, s, r) {
          void 0 === t && (t = 0), void 0 === e && (e = 1), void 0 === i && (i = 2147483647),
            void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === r && (r = 30);
          var a = 1e3 / r;
          this.play(t, e, i, n * a, s * a);
        }, n.stop = function(t) {
          void 0 === t && (t = !0), t ? (this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0,
            this._currentAnimationClipIndex = -1, this.event("stopped")) : this._stopWhenCircleFinish = !0;
        }, r(0, n, "playEnd", function() {
          return this._playEnd;
        }), r(0, n, "templet", function() {
          return this._templet;
        }, function(t) {
          0 === !this.state && this.stop(!0), this._templet !== t && (this._templet = t, t.loaded ? this._computeFullKeyframeIndices() : t.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [this._cachePlayRate, this._cacheFrameRate]));
        }), r(0, n, "playStart", function() {
          return this._playStart;
        }), r(0, n, "playDuration", function() {
          return this._playDuration;
        }), r(0, n, "state", function() {
          return -1 === this._currentAnimationClipIndex ? 0 : this._paused ? 1 : 2;
        }), r(0, n, "currentKeyframeIndex", function() {
          return this._currentKeyframeIndex;
        }), r(0, n, "overallDuration", function() {
          return this._overallDuration;
        }), r(0, n, "currentFrameTime", function() {
          return this._currentFrameTime;
        }), r(0, n, "currentAnimationClipIndex", function() {
          return this._currentAnimationClipIndex;
        }), r(0, n, "currentPlayTime", function() {
          return this._currentTime + this._playStart;
        }), r(0, n, "cachePlayRate", function() {
          return this._cachePlayRate;
        }, function(t) {
          this._cachePlayRate !== t && (this._cachePlayRate = t, this._templet && (this._templet.loaded ? this._computeFullKeyframeIndices() : this._templet.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [t, this._cacheFrameRate])));
        }), r(0, n, "cacheFrameRate", function() {
          return this._cacheFrameRate;
        }, function(t) {
          this._cacheFrameRate !== t && (this._cacheFrameRate = t, this._cacheFrameRateInterval = 1e3 / this._cacheFrameRate,
            this._templet && (this._templet.loaded ? this._computeFullKeyframeIndices() : this._templet.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [this._cachePlayRate, t])));
        }), r(0, n, "currentTime", null, function(t) {
          if (-1 !== this._currentAnimationClipIndex && this._templet && this._templet.loaded) {
            if (t < this._playStart || t > this._playEnd) throw new Error("AnimationPlayer:value must large than playStartTime,small than playEndTime.");
            this._startUpdateLoopCount = w.loopCount;
            var e = this._cacheFrameRateInterval * this._cachePlayRate;
            this._currentTime = t, this._currentKeyframeIndex = Math.max(Math.floor(this.currentPlayTime / e), 0),
              this._currentFrameTime = this._currentKeyframeIndex * e;
          }
        }), r(0, n, "paused", function() {
          return this._paused;
        }, function(t) {
          this._paused = t, t && this.event("paused");
        }), r(0, n, "cacheFrameRateInterval", function() {
          return this._cacheFrameRateInterval;
        }), r(0, n, "destroyed", function() {
          return this._destroyed;
        }), e;
      }(),
      tt = function(t) {
        function e() {
          e.__super.call(this), y.isConchNode && (this.drawSkin = function(t) {
            t.transform || (t.transform = g.EMPTY), this._addCmd([t]), this.setSkinMesh && this.setSkinMesh(t._ps, t.mVBData, t.mEleNum, 0, t.mTexture, t.transform);
          });
        }
        s(e, "laya.ani.GraphicsAni", c);
        return e.prototype.drawSkin = function(t) {
          var e = [t];
          this._saveToCmd(y._context._drawSkin, e);
        }, e.create = function() {
          return e._caches.pop() || new e();
        }, e.recycle = function(t) {
          t.clear(), e._caches.push(t);
        }, e._caches = [], e;
      }(),
      et = function(t) {
        function e() {
          e.__super.call(this), this.mesh = new R();
        }
        s(e, "laya.ani.bone.canvasmesh.SkinMeshCanvas", D);
        var i = e.prototype;
        return i.init2 = function(t, e, i, n, s) {
          this.transform && (this.transform = null);
          var r;
          i ? r = i : (r = []).push(0, 1, 3, 3, 1, 2), this.mesh.texture = t, this.mesh.indexes = r,
            this.mesh.vertices = n, this.mesh.uvs = s;
        }, i.render = function(t, i, n) {
          this.mesh.texture && (this.transform ? (this.transform.translate(i, n), this.renderToContext(t),
            this.transform.translate(-i, -n)) : (this.transform = e._tempMatrix, this.transform.identity(),
            this.transform.translate(i, n), this.renderToContext(t), this.transform.translate(-i, -n),
            this.transform = null));
        }, n(e, ["_tempMatrix", function() {
          return this._tempMatrix = new g();
        }]), e;
      }(),
      it = function(t) {
        function e() {
          this._aniMap = {}, this.unfixedLastAniIndex = -1, e.__super.call(this), this._anis = new Array();
        }
        s(e, "laya.ani.AnimationTemplet", v);
        var n = e.prototype;
        return n.parse = function(t) {
            var e = new l(t);
            this._aniVersion = e.readUTFString(), M.parse(this, e);
          }, n._calculateKeyFrame = function(t, e, i) {
            var n = t.keyFrame;
            n[e] = n[0];
            for (var s = 0; s < e; s++) {
              var r = n[s];
              r.nextData = 0 === r.duration ? r.data : n[s + 1].data;
            }
            n.length--;
          }, n.onAsynLoaded = function(t, e, i) {
            var n = new l(e);
            switch (this._aniVersion = n.readUTFString(), this._aniVersion) {
              case "LAYAANIMATION:02":
                L.parse(this, n);
                break;

              default:
                M.parse(this, n);
            }
            this._endLoaded();
          }, n.disposeResource = function() {
            this._aniVersion = null, this._anis = null, this._aniMap = null, this._publicExtData = null,
              this.unfixedCurrentFrameIndexes = null, this.unfixedCurrentTimes = null, this.unfixedKeyframes = null,
              this._aniClassName = null, this._animationDatasCache = null;
          }, n.getAnimationCount = function() {
            return this._anis.length;
          }, n.getAnimation = function(t) {
            return this._anis[t];
          }, n.getAniDuration = function(t) {
            return this._anis[t].playTime;
          }, n.getNodes = function(t) {
            return this._anis[t].nodes;
          }, n.getNodeIndexWithName = function(t, e) {
            return this._anis[t].bone3DMap[e];
          }, n.getNodeCount = function(t) {
            return this._anis[t].nodes.length;
          }, n.getTotalkeyframesLength = function(t) {
            return this._anis[t].totalKeyframeDatasLength;
          }, n.getPublicExtData = function() {
            return this._publicExtData;
          }, n.getAnimationDataWithCache = function(t, e, i, n) {
            var s = e[i];
            if (s) {
              var r = s[t];
              return r ? r[n] : null;
            }
            return null;
          }, n.setAnimationDataWithCache = function(t, e, i, n, s) {
            var r = e[i] || (e[i] = {});
            (r[t] || (r[t] = []))[n] = s;
          }, n.getOriginalData = function(t, i, n, s, r) {
            for (var a = this._anis[t].nodes, o = 0, h = 0, l = a.length, u = 0; h < l; h++) {
              var c, _ = a[h];
              c = _.keyFrame[n[h][s]], _.dataOffset = u;
              var d = r - c.startTime,
                p = _.lerpType;
              if (p) switch (p) {
                case 0:
                case 1:
                  for (o = 0; o < _.keyframeWidth;) o += _.interpolationMethod[o](_, o, i, u + o, c.data, d, null, c.duration, c.nextData);
                  break;

                case 2:
                  var f = c.interpolationData,
                    g = f.length,
                    m = 0;
                  for (o = 0; o < g;) {
                    var y = f[o];
                    switch (y) {
                      case 6:
                      case 7:
                        o += e.interpolation[y](_, m, i, u + m, c.data, d, null, c.duration, c.nextData, f, o + 1);
                        break;

                      default:
                        o += e.interpolation[y](_, m, i, u + m, c.data, d, null, c.duration, c.nextData);
                    }
                    m++;
                  }
              } else
                for (o = 0; o < _.keyframeWidth;) o += _.interpolationMethod[o](_, o, i, u + o, c.data, d, null, c.duration, c.nextData);
              u += _.keyframeWidth;
            }
          }, n.getNodesCurrentFrameIndex = function(t, e) {
            var i = this._anis[t].nodes;
            t !== this.unfixedLastAniIndex && (this.unfixedCurrentFrameIndexes = new Uint32Array(i.length),
              this.unfixedCurrentTimes = new Float32Array(i.length), this.unfixedLastAniIndex = t);
            for (var n = 0, s = i.length; n < s; n++) {
              var r = i[n];
              for (e < this.unfixedCurrentTimes[n] && (this.unfixedCurrentFrameIndexes[n] = 0),
                this.unfixedCurrentTimes[n] = e; this.unfixedCurrentFrameIndexes[n] < r.keyFrame.length && !(r.keyFrame[this.unfixedCurrentFrameIndexes[n]].startTime > this.unfixedCurrentTimes[n]);) this.unfixedCurrentFrameIndexes[n]++;
              this.unfixedCurrentFrameIndexes[n]--;
            }
            return this.unfixedCurrentFrameIndexes;
          }, n.getOriginalDataUnfixedRate = function(t, i, n) {
            var s = this._anis[t].nodes;
            t !== this.unfixedLastAniIndex && (this.unfixedCurrentFrameIndexes = new Uint32Array(s.length),
              this.unfixedCurrentTimes = new Float32Array(s.length), this.unfixedKeyframes = a(s.length),
              this.unfixedLastAniIndex = t);
            for (var r = 0, o = 0, h = s.length, l = 0; o < h; o++) {
              var u = s[o];
              for (n < this.unfixedCurrentTimes[o] && (this.unfixedCurrentFrameIndexes[o] = 0),
                this.unfixedCurrentTimes[o] = n; this.unfixedCurrentFrameIndexes[o] < u.keyFrame.length && !(u.keyFrame[this.unfixedCurrentFrameIndexes[o]].startTime > this.unfixedCurrentTimes[o]);) this.unfixedKeyframes[o] = u.keyFrame[this.unfixedCurrentFrameIndexes[o]],
                this.unfixedCurrentFrameIndexes[o]++;
              var c = this.unfixedKeyframes[o];
              u.dataOffset = l;
              var _ = n - c.startTime;
              if (u.lerpType) switch (u.lerpType) {
                case 0:
                case 1:
                  for (r = 0; r < u.keyframeWidth;) r += u.interpolationMethod[r](u, r, i, l + r, c.data, _, null, c.duration, c.nextData);
                  break;

                case 2:
                  var d = c.interpolationData,
                    p = d.length,
                    f = 0;
                  for (r = 0; r < p;) {
                    var g = d[r];
                    switch (g) {
                      case 6:
                      case 7:
                        r += e.interpolation[g](u, f, i, l + f, c.data, _, null, c.duration, c.nextData, d, r + 1);
                        break;

                      default:
                        r += e.interpolation[g](u, f, i, l + f, c.data, _, null, c.duration, c.nextData);
                    }
                    f++;
                  }
              } else
                for (r = 0; r < u.keyframeWidth;) r += u.interpolationMethod[r](u, r, i, l + r, c.data, _, null, c.duration, c.nextData);
              l += u.keyframeWidth;
            }
          }, e._LinearInterpolation_0 = function(t, e, i, n, s, r, a, o, h, l) {
            var u = 0 === o ? 0 : r / o;
            return i[n] = (1 - u) * s[e] + u * h[e], 1;
          }, e._QuaternionInterpolation_1 = function(t, e, i, n, s, r, a, o, h, l) {
            var u = 0 === o ? 0 : r / o;
            return f.slerpQuaternionArray(s, e, h, e, u, i, n), 4;
          }, e._AngleInterpolation_2 = function(t, e, i, n, s, r, a, o, h, l) {
            return 0;
          }, e._RadiansInterpolation_3 = function(t, e, i, n, s, r, a, o, h, l) {
            return 0;
          }, e._Matrix4x4Interpolation_4 = function(t, e, i, n, s, r, a, o, h, l) {
            for (var u = 0; u < 16; u++, e++) i[n + u] = s[e] + r * a[e];
            return 16;
          }, e._NoInterpolation_5 = function(t, e, i, n, s, r, a, o, h, l) {
            return i[n] = s[e], 1;
          }, e._BezierInterpolation_6 = function(t, e, i, n, s, r, a, o, h, l, u) {
            return void 0 === u && (u = 0), i[n] = s[e] + (h[e] - s[e]) * Z.getBezierRate(r / o, l[u], l[u + 1], l[u + 2], l[u + 3]),
              5;
          }, e._BezierInterpolation_7 = function(t, e, i, n, s, r, a, o, h, l, u) {
            return void 0 === u && (u = 0), i[n] = l[u + 4] + l[u + 5] * Z.getBezierRate((.001 * r + l[u + 6]) / l[u + 7], l[u], l[u + 1], l[u + 2], l[u + 3]),
              9;
          }, e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }, e.interpolation = [e._LinearInterpolation_0, e._QuaternionInterpolation_1, e._AngleInterpolation_2, e._RadiansInterpolation_3, e._Matrix4x4Interpolation_4, e._NoInterpolation_5, e._BezierInterpolation_6, e._BezierInterpolation_7],
          e;
      }(),
      nt = (function(t) {
        function e() {
          this.isCached = !1, this.canvas = null, this.tex = null, this.rec = null, e.__super.call(this);
        }
        s(e, "laya.ani.bone.canvasmesh.CacheAbleSkinMesh", et);
        var i = e.prototype;
        i.getCanvasPic = function() {
          var t = new _("2D"),
            i = t.getContext("2d");
          this.rec = this.mesh.getBounds(), t.size(this.rec.width, this.rec.height);
          var n;
          return n = this.transform, this.transform = e.tempMt, this.transform.identity(),
            this.transform.translate(-this.rec.x, -this.rec.y), this.renderToContext(i), this.transform.translate(+this.rec.x, +this.rec.y),
            this.transform = n, new I(t);
        }, i.render = function(t, e, i) {
          this.mesh.texture && (this.isCached || (this.isCached = !0, this.tex = this.getCanvasPic()),
            this.transform ? (this.transform.translate(e, i), this._renderTextureToContext(t),
              this.transform.translate(-e, -i)) : (this.transform = et._tempMatrix, this.transform.identity(),
              this.transform.translate(e, i), this._renderTextureToContext(t), this.transform.translate(-e, -i),
              this.transform = null));
        }, i._renderTextureToContext = function(t) {
          this.context = t.ctx || t, t.save();
          var e;
          if (e = this.tex, this.transform) {
            var i = this.transform;
            t.transform(i.a, i.b, i.c, i.d, i.tx, i.ty);
          }
          this.rec = this.mesh.getBounds(), t.translate(this.rec.x, this.rec.y), t.drawTexture(e, 0, 0, e.width, e.height, 0, 0),
            t.restore();
        }, n(e, ["tempMt", function() {
          return this.tempMt = new g();
        }]);
      }(), function(t) {
        function e() {
          this.cacheOK = !1, this.cacheCmdOK = !1, this.transformCmds = [], this.drawCmds = [],
            e.__super.call(this), this.tempMesh = new R();
        }
        s(e, "laya.ani.bone.canvasmesh.SimpleSkinMeshCanvas", t);
        var i = e.prototype;
        return i.init2 = function(e, i, n, s, r) {
          t.prototype.init2.call(this, e, i, n, s, r), this.cacheOK = !1, this.cacheCmdOK = !1,
            this.transformCmds.length = 6, this.drawCmds.length = 9;
        }, i.renderToContext = function(t) {
          if (this.context = t.ctx || t, this.mesh) {
            if (this.mesh.uvs.length <= 8) return void(0 == this.mode ? this._renderWithIndexes(this.mesh) : this._renderNoIndexes(this.mesh));
            this.cacheOK || (this.tempMesh.texture = this.mesh.texture, this.tempMesh.uvs = this.mesh.texture.uv,
                this.tempMesh.vertices = V.solveMesh(this.mesh, this.tempMesh.vertices), this.cacheOK = !0),
              0 == this.mode ? this._renderWithIndexes(this.tempMesh) : this._renderNoIndexes(this.tempMesh);
          }
        }, i._renderWithIndexes = function(t) {
          if (this.cacheCmdOK) this.renderByCache(t);
          else {
            var e = t.indexes,
              i = 0,
              n = e.length;
            for (n > 1 && (n = 1), i = 0; i < n; i += 3) {
              var s = 2 * e[i],
                r = 2 * e[i + 1],
                a = 2 * e[i + 2];
              this._renderDrawTriangle(t, s, r, a);
            }
            this.cacheCmdOK = !0;
          }
        }, i._renderDrawTriangle = function(t, e, i, n) {
          var s = this.context,
            r = t.uvs,
            a = t.vertices,
            o = t.texture,
            h = o.bitmap,
            l = h.source,
            u = o.width,
            c = o.height,
            _ = h.width,
            d = h.height,
            p = NaN,
            f = NaN,
            g = NaN,
            m = NaN,
            y = NaN,
            v = NaN;
          if (t.useUvTransform) {
            var x = t.uvTransform;
            p = (r[e] * x.a + r[e + 1] * x.c + x.tx) * _, f = (r[i] * x.a + r[i + 1] * x.c + x.tx) * _,
              g = (r[n] * x.a + r[n + 1] * x.c + x.tx) * _, m = (r[e] * x.b + r[e + 1] * x.d + x.ty) * d,
              y = (r[i] * x.b + r[i + 1] * x.d + x.ty) * d, v = (r[n] * x.b + r[n + 1] * x.d + x.ty) * d;
          } else p = r[e] * _, f = r[i] * _, g = r[n] * _, m = r[e + 1] * d, y = r[i + 1] * d,
            v = r[n + 1] * d;
          var b = a[e],
            w = a[i],
            I = a[n],
            S = a[e + 1],
            C = a[i + 1],
            T = a[n + 1],
            E = 1 / (p * y + m * g + f * v - y * g - m * f - p * v),
            M = b * y + m * I + w * v - y * I - m * w - b * v,
            L = p * w + b * g + f * I - w * g - b * f - p * I,
            P = p * y * I + m * w * g + b * f * v - b * y * g - m * f * I - p * w * v,
            A = S * y + m * T + C * v - y * T - m * C - S * v,
            D = p * C + S * g + f * T - C * g - S * f - p * T,
            R = p * y * T + m * C * g + S * f * v - S * y * g - m * f * T - p * C * v;
          if (this.transformCmds[0] = M * E, this.transformCmds[1] = A * E, this.transformCmds[2] = L * E,
            this.transformCmds[3] = D * E, this.transformCmds[4] = P * E, this.transformCmds[5] = R * E,
            this.drawCmds[0] = l, this.drawCmds[1] = o.uv[0] * _, this.drawCmds[2] = o.uv[1] * d,
            this.drawCmds[3] = u, this.drawCmds[4] = c, this.drawCmds[5] = o.uv[0] * _, this.drawCmds[6] = o.uv[1] * d,
            this.drawCmds[7] = u, this.drawCmds[8] = c, s.save(), this.transform) {
            var N = this.transform;
            s.transform(N.a, N.b, N.c, N.d, N.tx, N.ty);
          }
          s.transform.apply(s, this.transformCmds), s.drawImage.apply(s, this.drawCmds), s.restore();
        }, i.renderByCache = function(t) {
          var e = this.context;
          if (e.save(), this.transform) {
            var i = this.transform;
            e.transform(i.a, i.b, i.c, i.d, i.tx, i.ty);
          }
          e.transform.apply(e, this.transformCmds), e.drawImage.apply(e, this.drawCmds), e.restore();
        }, e;
      }(et)),
      st = function(t) {
        function e(t, i) {
          this._templet = null, this._player = null, this._curOriginalData = null, this._boneMatrixArray = [],
            this._lastTime = 0, this._currAniName = null, this._currAniIndex = -1, this._pause = !0,
            this._aniClipIndex = -1, this._clipIndex = -1, this._skinIndex = 0, this._skinName = "default",
            this._aniMode = 0, this._graphicsCache = null, this._boneSlotDic = null, this._bindBoneBoneSlotDic = null,
            this._boneSlotArray = null, this._index = -1, this._total = -1, this._indexControl = !1,
            this._aniPath = null, this._texturePath = null, this._complete = null, this._loadAniMode = 0,
            this._yReverseMatrix = null, this._ikArr = null, this._tfArr = null, this._pathDic = null,
            this._rootBone = null, this._boneList = null, this._aniSectionDic = null, this._eventIndex = 0,
            this._drawOrderIndex = 0, this._drawOrder = null, this._lastAniClipIndex = -1, this._lastUpdateAniClipIndex = -1,
            e.__super.call(this), void 0 === i && (i = 0), t && this.init(t, i);
        }
        s(e, "laya.ani.bone.Skeleton", t);
        var n = e.prototype;
        return n.init = function(t, e) {
          void 0 === e && (e = 0);
          var i = 0,
            n = 0;
          if (1 == e)
            for (this._graphicsCache = [], i = 0, n = t.getAnimationCount(); i < n; i++) this._graphicsCache.push([]);
          if (this._yReverseMatrix = t.yReverseMatrix, this._aniMode = e, this._templet = t,
            this._player = new J(), this._player.cacheFrameRate = t.rate, this._player.templet = t,
            this._player.play(), this._parseSrcBoneMatrix(), this._boneList = t.mBoneArr, this._rootBone = t.mRootBone,
            this._aniSectionDic = t.aniSectionDic, t.ikArr.length > 0)
            for (this._ikArr = [],
              i = 0, n = t.ikArr.length; i < n; i++) this._ikArr.push(new U(t.ikArr[i], this._boneList));
          if (t.pathArr.length > 0) {
            var s, r;
            null == this._pathDic && (this._pathDic = {});
            var a;
            for (i = 0, n = t.pathArr.length; i < n; i++) s = t.pathArr[i], r = new H(s, this._boneList),
              (a = this._boneSlotDic[s.name]) && ((r = new H(s, this._boneList)).target = a),
              this._pathDic[s.name] = r;
          }
          if (t.tfArr.length > 0)
            for (this._tfArr = [], i = 0, n = t.tfArr.length; i < n; i++) this._tfArr.push(new K(t.tfArr[i], this._boneList));
          if (t.skinDataArray.length > 0) {
            var o = this._templet.skinDataArray[this._skinIndex];
            this._skinName = o.name;
          }
          this._player.on("played", this, this._onPlay), this._player.on("stopped", this, this._onStop),
            this._player.on("paused", this, this._onPause);
        }, n.load = function(t, e, n) {
          void 0 === n && (n = 0), this._aniPath = t, this._complete = e, this._loadAniMode = n,
            i.loader.load([{
              url: t,
              type: "arraybuffer"
            }], d.create(this, this._onLoaded));
        }, n._onLoaded = function() {
          var t = p.getRes(this._aniPath);
          if (null != t) {
            null == rt.TEMPLET_DICTIONARY && (rt.TEMPLET_DICTIONARY = {});
            var e;
            (e = rt.TEMPLET_DICTIONARY[this._aniPath]) ? e.isParseFail ? this._parseFail() : e.isParserComplete ? this._parseComplete() : (e.on("complete", this, this._parseComplete),
              e.on("error", this, this._parseFail)): ((e = new rt())._setUrl(this._aniPath),
              rt.TEMPLET_DICTIONARY[this._aniPath] = e, e.on("complete", this, this._parseComplete),
              e.on("error", this, this._parseFail), e.isParserComplete = !1, e.parseData(null, t));
          }
        }, n._parseComplete = function() {
          var t = rt.TEMPLET_DICTIONARY[this._aniPath];
          t && (this.init(t, this._loadAniMode), this.play(0, !0)), this._complete && this._complete.runWith(this);
        }, n._parseFail = function() {
          console.log("[Error]:" + this._aniPath + "解析失败");
        }, n._onPlay = function() {
          this.event("played");
        }, n._onStop = function() {
          var t, e = this._templet.eventAniArr[this._aniClipIndex];
          if (e && this._eventIndex < e.length)
            for (; this._eventIndex < e.length; this._eventIndex++)(t = e[this._eventIndex]).time >= this._player.playStart && t.time <= this._player.playEnd && this.event("label", t);
          this._eventIndex = 0, this._drawOrder = null, this.event("stopped");
        }, n._onPause = function() {
          this.event("paused");
        }, n._parseSrcBoneMatrix = function() {
          var t = 0,
            e = 0;
          for (e = this._templet.srcBoneMatrixArr.length, t = 0; t < e; t++) this._boneMatrixArray.push(new g());
          if (0 == this._aniMode) this._boneSlotDic = this._templet.boneSlotDic, this._bindBoneBoneSlotDic = this._templet.bindBoneBoneSlotDic,
            this._boneSlotArray = this._templet.boneSlotArray;
          else {
            null == this._boneSlotDic && (this._boneSlotDic = {}), null == this._bindBoneBoneSlotDic && (this._bindBoneBoneSlotDic = {}),
              null == this._boneSlotArray && (this._boneSlotArray = []);
            var i, n, s = this._templet.boneSlotArray;
            for (t = 0, e = s.length; t < e; t++) i = s[t], null == (n = this._bindBoneBoneSlotDic[i.parent]) && (this._bindBoneBoneSlotDic[i.parent] = n = []),
              this._boneSlotDic[i.name] = i = i.copy(), n.push(i), this._boneSlotArray.push(i);
          }
        }, n._emitMissedEvents = function(t, e, i) {
          void 0 === i && (i = 0);
          var n = this._templet.eventAniArr[this._player.currentAnimationClipIndex];
          if (n) {
            var s, r = 0,
              a = 0;
            for (a = n.length, r = i; r < a; r++)(s = n[r]).time >= this._player.playStart && s.time <= this._player.playEnd && this.event("label", s);
          }
        }, n._update = function(t) {
          if (void 0 === t && (t = !0), !(this._pause || t && this._indexControl)) {
            var e = this.timer.currTimer,
              i = this._player.currentKeyframeIndex,
              n = e - this._lastTime;
            if (t ? this._player._update(n) : i = -1, this._lastTime = e, this._player && (this._index = this._clipIndex = this._player.currentKeyframeIndex, !(this._index < 0 || n > 0 && this._clipIndex == i && this._lastUpdateAniClipIndex == this._aniClipIndex))) {
              this._lastUpdateAniClipIndex = this._aniClipIndex, i > this._clipIndex && 0 != this._eventIndex && (this._emitMissedEvents(this._player.playStart, this._player.playEnd, this._eventIndex),
                this._eventIndex = 0);
              var s, r = this._templet.eventAniArr[this._aniClipIndex];
              r && this._eventIndex < r.length && ((s = r[this._eventIndex]).time >= this._player.playStart && s.time <= this._player.playEnd ? this._player.currentPlayTime >= s.time && (this.event("label", s),
                this._eventIndex++) : this._eventIndex++);
              var a;
              if (0 == this._aniMode) {
                if (a = this._templet.getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex)) return void(this.graphics != a && (this.graphics = a));
                var o = 0,
                  h = 0;
                for (h = this._clipIndex; !this._templet.getGrahicsDataWithCache(this._aniClipIndex, h - 1) && h > 0;) h--;
                if (h < this._clipIndex)
                  for (o = h; o < this._clipIndex; o++) this._createGraphics(o);
              } else if (1 == this._aniMode) {
                if (a = this._getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex)) return void(this.graphics != a && (this.graphics = a));
                for (h = this._clipIndex; !this._getGrahicsDataWithCache(this._aniClipIndex, h - 1) && h > 0;) h--;
                if (h < this._clipIndex)
                  for (o = h; o < this._clipIndex; o++) this._createGraphics(o);
              }
              this._createGraphics();
            }
          }
        }, n._createGraphics = function(t) {
          void 0 === t && (t = -1), -1 == t && (t = this._clipIndex);
          var e, i = t * this._player.cacheFrameRateInterval,
            n = this._templet.drawOrderAniArr[this._aniClipIndex];
          if (n && n.length > 0)
            for (this._drawOrderIndex = 0, e = n[this._drawOrderIndex]; i >= e.time && (this._drawOrder = e.drawOrder,
                this._drawOrderIndex++, !(this._drawOrderIndex >= n.length));) e = n[this._drawOrderIndex];
          var s;
          0 == this._aniMode || 1 == this._aniMode ? this.graphics = tt.create() : this.graphics instanceof laya.ani.GraphicsAni ? this.graphics.clear() : this.graphics = tt.create(),
            s = this.graphics;
          var r = this._templet.getNodes(this._aniClipIndex);
          this._templet.getOriginalData(this._aniClipIndex, this._curOriginalData, this._player._fullFrames[this._aniClipIndex], t, i);
          var a, o, h, u, c = this._aniSectionDic[this._aniClipIndex],
            _ = 0,
            d = 0,
            p = 0,
            f = 0,
            m = 0,
            y = this._templet.srcBoneMatrixArr.length;
          for (d = 0, m = c[0]; d < y; d++) u = this._boneList[d], h = this._templet.srcBoneMatrixArr[d],
            u.resultTransform.scX = h.scX * this._curOriginalData[_++], u.resultTransform.skX = h.skX + this._curOriginalData[_++],
            u.resultTransform.skY = h.skY + this._curOriginalData[_++], u.resultTransform.scY = h.scY * this._curOriginalData[_++],
            u.resultTransform.x = h.x + this._curOriginalData[_++], u.resultTransform.y = h.y + this._curOriginalData[_++],
            8 === this._templet.tMatrixDataLen && (u.resultTransform.skewX = h.skewX + this._curOriginalData[_++],
              u.resultTransform.skewY = h.skewY + this._curOriginalData[_++]);
          var v, x = {},
            b = {};
          for (m += c[1]; d < m; d++) x[(v = r[d]).name] = this._curOriginalData[_++], b[v.name] = this._curOriginalData[_++],
            this._curOriginalData[_++], this._curOriginalData[_++], this._curOriginalData[_++],
            this._curOriginalData[_++];
          var w = {},
            I = {};
          for (m += c[2]; d < m; d++) w[(v = r[d]).name] = this._curOriginalData[_++], I[v.name] = this._curOriginalData[_++],
            this._curOriginalData[_++], this._curOriginalData[_++], this._curOriginalData[_++],
            this._curOriginalData[_++];
          if (this._pathDic) {
            var S;
            for (m += c[3]; d < m; d++)
              if (v = r[d], S = this._pathDic[v.name]) {
                switch (new l(v.extenData).getByte()) {
                  case 1:
                    S.position = this._curOriginalData[_++];
                    break;

                  case 2:
                    S.spacing = this._curOriginalData[_++];
                    break;

                  case 3:
                    S.rotateMix = this._curOriginalData[_++], S.translateMix = this._curOriginalData[_++];
                }
              }
          }
          if (this._yReverseMatrix ? this._rootBone.update(this._yReverseMatrix) : this._rootBone.update(g.TEMP.identity()),
            this._ikArr) {
            var C;
            for (d = 0, m = this._ikArr.length; d < m; d++) C = this._ikArr[d], w.hasOwnProperty(C.name) && (C.bendDirection = w[C.name]),
              I.hasOwnProperty(C.name) && (C.mix = I[C.name]), C.apply();
          }
          if (this._pathDic)
            for (var T in this._pathDic)(S = this._pathDic[T]).apply(this._boneList, s);
          if (this._tfArr) {
            for (d = 0, f = this._tfArr.length; d < f; d++) this._tfArr[d].apply();
          }
          for (d = 0, f = this._boneList.length; d < f; d++)
            if (u = this._boneList[d], o = this._bindBoneBoneSlotDic[u.name],
              u.resultMatrix.copyTo(this._boneMatrixArray[d]), o)
              for (p = 0, m = o.length; p < m; p++)(a = o[p]) && a.setParentMatrix(u.resultMatrix);
          var E, M = {},
            L = this._templet.deformAniArr;
          if (L && L.length > 0) {
            if (this._lastAniClipIndex != this._aniClipIndex)
              for (this._lastAniClipIndex = this._aniClipIndex,
                d = 0, m = this._boneSlotArray.length; d < m; d++)(a = this._boneSlotArray[d]).deformData = null;
            var P = L[this._aniClipIndex];
            E = P.default, this._setDeform(E, M, this._boneSlotArray, i);
            var A;
            for (A in P) "default" != A && A != this._skinName && (E = P[A], this._setDeform(E, M, this._boneSlotArray, i));
            E = P[this._skinName], this._setDeform(E, M, this._boneSlotArray, i);
          }
          var D, R, N;
          if (this._drawOrder)
            for (d = 0, m = this._drawOrder.length; d < m; d++) D = x[(a = this._boneSlotArray[this._drawOrder[d]]).name],
              R = b[a.name], isNaN(R) || (s.save(), s.alpha(R)), isNaN(D) || -2 == D || (this._templet.attachmentNames ? a.showDisplayByName(this._templet.attachmentNames[D]) : a.showDisplayByIndex(D)),
              M[this._drawOrder[d]] ? (N = M[this._drawOrder[d]], a.currDisplayData && N[a.currDisplayData.attachmentName] ? a.deformData = N[a.currDisplayData.attachmentName] : a.deformData = null) : a.deformData = null,
              isNaN(R) ? a.draw(s, this._boneMatrixArray, 2 == this._aniMode) : a.draw(s, this._boneMatrixArray, 2 == this._aniMode, R),
              isNaN(R) || s.restore();
          else
            for (d = 0, m = this._boneSlotArray.length; d < m; d++) D = x[(a = this._boneSlotArray[d]).name],
              R = b[a.name], isNaN(R) || (s.save(), s.alpha(R)), isNaN(D) || -2 == D || (this._templet.attachmentNames ? a.showDisplayByName(this._templet.attachmentNames[D]) : a.showDisplayByIndex(D)),
              M[d] ? (N = M[d], a.currDisplayData && N[a.currDisplayData.attachmentName] ? a.deformData = N[a.currDisplayData.attachmentName] : a.deformData = null) : a.deformData = null,
              isNaN(R) ? a.draw(s, this._boneMatrixArray, 2 == this._aniMode) : a.draw(s, this._boneMatrixArray, 2 == this._aniMode, R),
              isNaN(R) || s.restore();
          0 == this._aniMode ? this._templet.setGrahicsDataWithCache(this._aniClipIndex, t, s) : 1 == this._aniMode && this._setGrahicsDataWithCache(this._aniClipIndex, t, s);
        }, n._setDeform = function(t, e, i, n) {
          if (t) {
            var s, r, a, o = 0,
              h = 0,
              l = 0;
            if (t)
              for (o = 0, h = t.deformSlotDataList.length; o < h; o++)
                for (s = t.deformSlotDataList[o],
                  l = 0; l < s.deformSlotDisplayList.length; l++) a = i[(r = s.deformSlotDisplayList[l]).slotIndex],
                  r.apply(n, a), e[r.slotIndex] || (e[r.slotIndex] = {}), e[r.slotIndex][r.attachment] = r.deformData;
          }
        }, n.getAnimNum = function() {
          return this._templet.getAnimationCount();
        }, n.getAniNameByIndex = function(t) {
          return this._templet.getAniNameByIndex(t);
        }, n.getSlotByName = function(t) {
          return this._boneSlotDic[t];
        }, n.showSkinByName = function(t, e) {
          void 0 === e && (e = !0), this.showSkinByIndex(this._templet.getSkinIndexByName(t), e);
        }, n.showSkinByIndex = function(t, e) {
          void 0 === e && (e = !0);
          for (var i = 0; i < this._boneSlotArray.length; i++) this._boneSlotArray[i].showSlotData(null, e);
          if (this._templet.showSkinByIndex(this._boneSlotDic, t, e)) {
            var n = this._templet.skinDataArray[t];
            this._skinIndex = t, this._skinName = n.name;
          }
          this._clearCache();
        }, n.showSlotSkinByIndex = function(t, e) {
          if (0 != this._aniMode) {
            var i = this.getSlotByName(t);
            i && i.showDisplayByIndex(e), this._clearCache();
          }
        }, n.showSlotSkinByName = function(t, e) {
          if (0 != this._aniMode) {
            var i = this.getSlotByName(t);
            i && i.showDisplayByName(e), this._clearCache();
          }
        }, n.replaceSlotSkinName = function(t, e, i) {
          if (0 != this._aniMode) {
            var n = this.getSlotByName(t);
            n && n.replaceDisplayByName(e, i), this._clearCache();
          }
        }, n.replaceSlotSkinByIndex = function(t, e, i) {
          if (0 != this._aniMode) {
            var n = this.getSlotByName(t);
            n && n.replaceDisplayByIndex(e, i), this._clearCache();
          }
        }, n.setSlotSkin = function(t, e) {
          if (0 != this._aniMode) {
            var i = this.getSlotByName(t);
            i && i.replaceSkin(e), this._clearCache();
          }
        }, n._clearCache = function() {
          if (1 == this._aniMode)
            for (var t = 0, e = this._graphicsCache.length; t < e; t++) {
              for (var i = 0, n = this._graphicsCache[t].length; i < n; i++) {
                var s = this._graphicsCache[t][i];
                s != this.graphics && tt.recycle(s);
              }
              this._graphicsCache[t].length = 0;
            }
        }, n.play = function(t, e, i, n, s, r) {
          void 0 === i && (i = !0), void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === r && (r = !0),
            this._indexControl = !1;
          var a = -1,
            o = NaN;
          if (o = e ? 2147483647 : 0, "string" == typeof t)
            for (var l = 0, u = this._templet.getAnimationCount(); l < u; l++) {
              var c = this._templet.getAnimation(l);
              if (c && t == c.name) {
                a = l;
                break;
              }
            } else a = t;
          a > -1 && a < this.getAnimNum() && (this._aniClipIndex = a, (i || this._pause || this._currAniIndex != a) && (this._currAniIndex = a,
            this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(a)),
            this._drawOrder = null, this._eventIndex = 0, this._player.play(a, this._player.playbackRate, o, n, s),
            r && this._templet.showSkinByIndex(this._boneSlotDic, this._skinIndex), this._pause && (this._pause = !1,
              this._lastTime = h.now(), this.timer.frameLoop(1, this, this._update, null, !0)),
            this._update()));
        }, n.stop = function() {
          this._pause || (this._pause = !0, this._player && this._player.stop(!0), this.timer.clear(this, this._update));
        }, n.playbackRate = function(t) {
          this._player && (this._player.playbackRate = t);
        }, n.paused = function() {
          this._pause || (this._pause = !0, this._player && (this._player.paused = !0), this.timer.clear(this, this._update));
        }, n.resume = function() {
          this._indexControl = !1, this._pause && (this._pause = !1, this._player && (this._player.paused = !1),
            this._lastTime = h.now(), this.timer.frameLoop(1, this, this._update, null, !0));
        }, n._getGrahicsDataWithCache = function(t, e) {
          return this._graphicsCache[t][e];
        }, n._setGrahicsDataWithCache = function(t, e, i) {
          this._graphicsCache[t][e] = i;
        }, n.destroy = function(e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._templet = null,
            this._player && this._player.offAll(), this._player = null, this._curOriginalData = null,
            this._boneMatrixArray.length = 0, this._lastTime = 0, this.timer.clear(this, this._update);
        }, r(0, n, "url", function() {
          return this._aniPath;
        }, function(t) {
          this.load(t);
        }), r(0, n, "index", function() {
          return this._index;
        }, function(t) {
          this.player && (this._index = t, this._player.currentTime = 1e3 * this._index / this._player.cacheFrameRate,
            this._indexControl = !0, this._update(!1));
        }), r(0, n, "total", function() {
          return this._templet && this._player ? this._total = Math.floor(this._templet.getAniDuration(this._player.currentAnimationClipIndex) / 1e3 * this._player.cacheFrameRate) : this._total = -1,
            this._total;
        }), r(0, n, "templet", function() {
          return this._templet;
        }), r(0, n, "player", function() {
          return this._player;
        }), e.useSimpleMeshInCanvas = !1, e;
      }(b),
      rt = (function(t) {
        function e(t) {
          this._start = 0, this._Pos = 0, this._data = null, this._curIndex = 0, this._preIndex = 0,
            this._playIndex = 0, this._playing = !1, this._ended = !0, this._count = 0, this._ids = null,
            this._loadedImage = {}, this._idOfSprite = null, this._parentMovieClip = null, this._movieClipList = null,
            this._labels = null, this.basePath = null, this._atlasPath = null, this._url = null,
            this._isRoot = !1, this._completeHandler = null, this._endFrame = -1, this.interval = 30,
            this.loop = !1, e.__super.call(this), this._ids = {}, this._idOfSprite = [], this._reset(),
            this._playing = !1, this._parentMovieClip = t, t ? (this._isRoot = !1, this._movieClipList = t._movieClipList,
              this._movieClipList.push(this)) : (this._movieClipList = [this], this._isRoot = !0,
              this._setUpNoticeType(1));
        }
        s(e, "laya.ani.swf.MovieClip", t);
        var n = e.prototype;
        n.destroy = function(e) {
          void 0 === e && (e = !0), this._clear(), t.prototype.destroy.call(this, e);
        }, n._setDisplay = function(e) {
          t.prototype._setDisplay.call(this, e), this._isRoot && this._$3__onDisplay(e);
        }, n._$3__onDisplay = function(t) {
          t ? this.timer.loop(this.interval, this, this.updates, null, !0) : this.timer.clear(this, this.updates);
        }, n.updates = function() {
          if (!this._parentMovieClip) {
            var t = 0,
              e = 0;
            for (e = this._movieClipList.length, t = 0; t < e; t++) this._movieClipList[t] && this._movieClipList[t]._update();
          }
        }, n.addLabel = function(t, e) {
          this._labels || (this._labels = {}), this._labels[e] = t;
        }, n.removeLabel = function(t) {
          if (t) {
            if (!this._labels)
              for (var e in this._labels)
                if (this._labels[e] === t) {
                  delete this._labels[e];
                  break;
                }
          } else this._labels = null;
        }, n._update = function() {
          if (this._data && this._playing) {
            if (this._playIndex++, this._playIndex >= this._count) {
              if (!this.loop) return this._playIndex--, void this.stop();
              this._playIndex = 0;
            }
            if (this._parse(this._playIndex), this._labels && this._labels[this._playIndex] && this.event("label", this._labels[this._playIndex]), -1 != this._endFrame && this._endFrame == this._playIndex) {
              if (this._endFrame = -1, null != this._completeHandler) {
                var t = this._completeHandler;
                this._completeHandler = null, t.run();
              }
              this.stop();
            }
          }
        }, n.stop = function() {
          this._playing = !1;
        }, n.gotoAndStop = function(t) {
          this.index = t, this.stop();
        }, n._clear = function() {
          if (this.stop(), this._idOfSprite.length = 0, !this._parentMovieClip) {
            this.timer.clear(this, this.updates);
            var t = 0,
              e = 0;
            for (e = this._movieClipList.length, t = 0; t < e; t++) this._movieClipList[t] != this && this._movieClipList[t]._clear();
            this._movieClipList.length = 0;
          }
          this._atlasPath && p.clearRes(this._atlasPath);
          var i;
          for (i in this._loadedImage) this._loadedImage[i] && (p.clearRes(i), this._loadedImage[i] = !1);
          this.removeChildren(), this.graphics = null, this._parentMovieClip = null;
        }, n.play = function(t, e) {
          void 0 === t && (t = 0), void 0 === e && (e = !0), this.loop = e, this._playing = !0,
            this._data && this._displayFrame(t);
        }, n._displayFrame = function(t) {
          void 0 === t && (t = -1), -1 != t && (this._curIndex > t && this._reset(), this._parse(t));
        }, n._reset = function(t) {
          void 0 === t && (t = !0), t && 1 != this._curIndex && this.removeChildren(), this._preIndex = this._curIndex = -1,
            this._Pos = this._start;
        }, n._parse = function(t) {
          var i, n, s, r = 0,
            a = 0,
            o = 0,
            h = !1,
            l = this._idOfSprite,
            u = this._data;
          for (this._ended && this._reset(), u.pos = this._Pos, this._ended = !1, this._playIndex = t,
            this._curIndex > t && t < this._preIndex && (this._reset(!0), u.pos = this._Pos); this._curIndex <= t && !this._ended;) switch (u.getUint16()) {
            case 12:
              if (r = u.getUint16(), a = this._ids[u.getUint16()], this._Pos = u.pos, u.pos = a,
                0 == (o = u.getUint8())) {
                var c = u.getUint16();
                if (!(n = l[r])) {
                  n = l[r] = new b();
                  var _ = new b();
                  _.loadImage(this.basePath + c + ".png"), this._loadedImage[this.basePath + c + ".png"] = !0,
                    n.addChild(_), _.size(u.getFloat32(), u.getFloat32());
                  var d = u._getMatrix();
                  _.transform = d;
                }
                n.alpha = 1;
              } else 1 == o && ((i = l[r]) || (l[r] = i = new e(this), i.interval = this.interval,
                i._ids = this._ids, i.basePath = this.basePath, i._setData(u, a), i._initState(),
                i.play(0)), i.alpha = 1);
              u.pos = this._Pos;
              break;

            case 3:
              var p = l[u.getUint16()];
              p && (this.addChild(p), p.zOrder = u.getUint16(), h = !0);
              break;

            case 4:
              (p = l[u.getUint16()]) && p.removeSelf();
              break;

            case 5:
              l[u.getUint16()][e._ValueList[u.getUint16()]] = u.getFloat32();
              break;

            case 6:
              l[u.getUint16()].visible = u.getUint8() > 0;
              break;

            case 7:
              var f = (n = l[u.getUint16()]).transform || g.create();
              f.setTo(u.getFloat32(), u.getFloat32(), u.getFloat32(), u.getFloat32(), u.getFloat32(), u.getFloat32()),
                n.transform = f;
              break;

            case 8:
              l[u.getUint16()].setPos(u.getFloat32(), u.getFloat32());
              break;

            case 9:
              l[u.getUint16()].setSize(u.getFloat32(), u.getFloat32());
              break;

            case 10:
              l[u.getUint16()].alpha = u.getFloat32();
              break;

            case 11:
              l[u.getUint16()].setScale(u.getFloat32(), u.getFloat32());
              break;

            case 98:
              s = u.getString(), this.event(s), "stop" == s && this.stop();
              break;

            case 99:
              this._curIndex = u.getUint16(), h && this.updateZOrder();
              break;

            case 100:
              this._count = this._curIndex + 1, this._ended = !0, this._playing && (this.event("enterframe"),
                this.event("end"), this.event("complete")), this._reset(!1);
          }
          this._playing && !this._ended && this.event("enterframe"), this._Pos = u.pos;
        }, n._setData = function(t, e) {
          this._data = t, this._start = e + 3;
        }, n.load = function(t, e, n) {
          void 0 === e && (e = !1), this._url = t = S.formatURL(t), e && (this._atlasPath = n || t.split(".swf")[0] + ".json"),
            this.stop(), this._clear(), this._movieClipList = [this];
          var s;
          s = [{
            url: t,
            type: "arraybuffer"
          }], this._atlasPath && s.push({
            url: this._atlasPath,
            type: "atlas"
          }), i.loader.load(s, d.create(this, this._onLoaded));
        }, n._onLoaded = function() {
          var t;
          (t = p.getRes(this._url)) ? (this.basePath = this._atlasPath ? p.getAtlas(this._atlasPath).dir : this._url.split(".swf")[0] + "/image/",
            this._initData(t)) : this.event("error", "file not find");
        }, n._initState = function() {
          this._reset(), this._ended = !1;
          var t = this._playing;
          for (this._playing = !1, this._curIndex = 0; !this._ended;) this._parse(++this._curIndex);
          this._playing = t;
        }, n._initData = function(t) {
          this._data = new l(t);
          var e = 0,
            i = this._data.getUint16();
          for (e = 0; e < i; e++) this._ids[this._data.getInt16()] = this._data.getInt32();
          this.interval = 1e3 / this._data.getUint16(), this._setData(this._data, this._ids[32767]),
            this._initState(), this.play(0), this.event("loaded"), this._parentMovieClip || this.timer.loop(this.interval, this, this.updates, null, !0);
        }, n.playTo = function(t, e, i) {
          this._completeHandler = i, this._endFrame = e, this.play(t, !1);
        }, r(0, n, "index", function() {
          return this._playIndex;
        }, function(t) {
          this._playIndex = t, this._data && this._displayFrame(this._playIndex), this._labels && this._labels[t] && this.event("label", this._labels[t]);
        }), r(0, n, "count", function() {
          return this._count;
        }), r(0, n, "playing", function() {
          return this._playing;
        }), r(0, n, "url", null, function(t) {
          this.load(t);
        }), e._ValueList = ["x", "y", "width", "height", "scaleX", "scaleY", "rotation", "alpha"];
      }(b), function(t) {
        function e() {
          this._mainTexture = null, this._textureJson = null, this._graphicsCache = [], this.srcBoneMatrixArr = [],
            this.ikArr = [], this.tfArr = [], this.pathArr = [], this.boneSlotDic = {}, this.bindBoneBoneSlotDic = {},
            this.boneSlotArray = [], this.skinDataArray = [], this.skinDic = {}, this.subTextureDic = {},
            this.isParseFail = !1, this.yReverseMatrix = null, this.drawOrderAniArr = [], this.eventAniArr = [],
            this.attachmentNames = null, this.deformAniArr = [], this._isDestroyed = !1, this._rate = 30,
            this.isParserComplete = !1, this.aniSectionDic = {}, this._skBufferUrl = null, this._textureDic = {},
            this._loadList = null, this._path = null, this.tMatrixDataLen = 0, this.mRootBone = null,
            e.__super.call(this), this.skinSlotDisplayDataArr = [], this.mBoneArr = [];
        }
        s(e, "laya.ani.bone.Templet", t);
        var n = e.prototype;
        return n.loadAni = function(t) {
            this._skBufferUrl = t, i.loader.load(t, d.create(this, this.onComplete), null, "arraybuffer");
          }, n.onComplete = function(t) {
            if (this._isDestroyed) this.destroy();
            else {
              var e = p.getRes(this._skBufferUrl);
              e ? (this._path = this._skBufferUrl.slice(0, this._skBufferUrl.lastIndexOf("/")) + "/",
                this.parseData(null, e)) : this.event("error", "load failed:" + this._skBufferUrl);
            }
          }, n.parseData = function(t, e, i) {
            void 0 === i && (i = 30), !this._path && this.url && (this._path = this.url.slice(0, this.url.lastIndexOf("/")) + "/"),
              this._mainTexture = t, this._mainTexture && y.isWebGL && t.bitmap && (t.bitmap.enableMerageInAtlas = !1),
              this._rate = i, this.parse(e);
          }, n.buildArmature = function(t) {
            return void 0 === t && (t = 0), new st(this, t);
          }, n.parse = function(i) {
            t.prototype.parse.call(this, i), this._endLoaded(), this._aniVersion != e.LAYA_ANIMATION_VISION && (console.log("[Error] 版本不一致，请使用IDE版本配套的重新导出" + this._aniVersion + "->" + e.LAYA_ANIMATION_VISION),
              this._loaded = !1), this.loaded ? this._mainTexture ? this._parsePublicExtData() : this._parseTexturePath() : (this.event("error", this),
              this.isParseFail = !0);
          }, n._parseTexturePath = function() {
            if (this._isDestroyed) this.destroy();
            else {
              var t = 0;
              this._loadList = [];
              var e, n = new l(this.getPublicExtData()),
                s = 0,
                r = 0,
                a = 0,
                o = n.getInt32(),
                h = n.readUTFString(),
                u = h.split("\n");
              for (t = 0; t < o; t++) e = this._path + u[2 * t], h = u[2 * t + 1], n.getFloat32(),
                n.getFloat32(), s = n.getFloat32(), r = n.getFloat32(), a = n.getFloat32(), isNaN(a) ? 0 : a,
                a = n.getFloat32(), isNaN(a) ? 0 : a, a = n.getFloat32(), isNaN(a) ? s : a, a = n.getFloat32(),
                isNaN(a) ? r : a, -1 == this._loadList.indexOf(e) && this._loadList.push(e);
              i.loader.load(this._loadList, d.create(this, this._textureComplete));
            }
          }, n._textureComplete = function() {
            for (var t, e, i = 0, n = this._loadList.length; i < n; i++) e = this._loadList[i],
              t = this._textureDic[e] = p.getRes(e), y.isWebGL && t && t.bitmap && (t.bitmap.enableMerageInAtlas = !1);
            this._parsePublicExtData();
          }, n._parsePublicExtData = function() {
            var t = 0,
              e = 0,
              i = 0,
              n = 0,
              s = 0;
            for (t = 0, s = this.getAnimationCount(); t < s; t++) this._graphicsCache.push([]);
            var r = !1;
            r = "Dragon" != this._aniClassName;
            var a, o, h = new l(this.getPublicExtData()),
              u = 0,
              c = 0,
              _ = 0,
              d = 0,
              p = 0,
              f = 0,
              m = 0,
              y = 0,
              v = 0,
              x = h.getInt32(),
              b = h.readUTFString(),
              w = b.split("\n");
            for (t = 0; t < x; t++) {
              if (a = this._mainTexture, o = this._path + w[2 * t], b = w[2 * t + 1], null == this._mainTexture && (a = this._textureDic[o]), !a) return this.event("error", this), void(this.isParseFail = !0);
              u = h.getFloat32(), c = h.getFloat32(), _ = h.getFloat32(), d = h.getFloat32(),
                v = h.getFloat32(), p = isNaN(v) ? 0 : v, v = h.getFloat32(), f = isNaN(v) ? 0 : v,
                v = h.getFloat32(), m = isNaN(v) ? _ : v, v = h.getFloat32(), y = isNaN(v) ? d : v,
                this.subTextureDic[b] = I.create(a, u, c, _, d, -p, -f, m, y);
            }
            this._mainTexture = a;
            var S, C = h.getUint16();
            for (t = 0; t < C; t++)(S = []).push(h.getUint16()), S.push(h.getUint16()), S.push(h.getUint16()),
              S.push(h.getUint16()), this.aniSectionDic[t] = S;
            var T, E, M, L, D, R = h.getInt16(),
              U = {};
            for (t = 0; t < R; t++) T = new P(), 0 == t ? D = T : T.root = D, T.d = r ? -1 : 1,
              M = h.readUTFString(), L = h.readUTFString(), T.length = h.getFloat32(), 1 == h.getByte() && (T.inheritRotation = !1),
              1 == h.getByte() && (T.inheritScale = !1), T.name = M, L && ((E = U[L]) ? E.addChild(T) : this.mRootBone = T),
              U[M] = T, this.mBoneArr.push(T);
            this.tMatrixDataLen = h.getUint16();
            var V, H = h.getUint16(),
              K = Math.floor(H / this.tMatrixDataLen),
              q = this.srcBoneMatrixArr;
            for (t = 0; t < K; t++)(V = new $()).scX = h.getFloat32(), V.skX = h.getFloat32(),
              V.skY = h.getFloat32(), V.scY = h.getFloat32(), V.x = h.getFloat32(), V.y = h.getFloat32(),
              8 === this.tMatrixDataLen && (V.skewX = h.getFloat32(), V.skewY = h.getFloat32()),
              q.push(V), (T = this.mBoneArr[t]).transform = V;
            var Q, Z = h.getUint16(),
              J = 0;
            for (t = 0; t < Z; t++) {
              for (Q = new G(), J = h.getUint16(), e = 0; e < J; e++) Q.boneNames.push(h.readUTFString()),
                Q.boneIndexs.push(h.getInt16());
              Q.name = h.readUTFString(), Q.targetBoneName = h.readUTFString(), Q.targetBoneIndex = h.getInt16(),
                Q.bendDirection = h.getFloat32(), Q.mix = h.getFloat32(), Q.isSpine = r, this.ikArr.push(Q);
            }
            var tt, et = h.getUint16(),
              it = 0;
            for (t = 0; t < et; t++) {
              for (tt = new j(), it = h.getUint16(), e = 0; e < it; e++) tt.boneIndexs.push(h.getInt16());
              tt.name = h.getUTFString(), tt.targetIndex = h.getInt16(), tt.rotateMix = h.getFloat32(),
                tt.translateMix = h.getFloat32(), tt.scaleMix = h.getFloat32(), tt.shearMix = h.getFloat32(),
                tt.offsetRotation = h.getFloat32(), tt.offsetX = h.getFloat32(), tt.offsetY = h.getFloat32(),
                tt.offsetScaleX = h.getFloat32(), tt.offsetScaleY = h.getFloat32(), tt.offsetShearY = h.getFloat32(),
                this.tfArr.push(tt);
            }
            var nt, st = h.getUint16(),
              rt = 0;
            for (t = 0; t < st; t++) {
              for ((nt = new z()).name = h.readUTFString(), rt = h.getUint16(), e = 0; e < rt; e++) nt.bones.push(h.getInt16());
              nt.target = h.readUTFString(), nt.positionMode = h.readUTFString(), nt.spacingMode = h.readUTFString(),
                nt.rotateMode = h.readUTFString(), nt.offsetRotation = h.getFloat32(), nt.position = h.getFloat32(),
                nt.spacing = h.getFloat32(), nt.rotateMix = h.getFloat32(), nt.translateMix = h.getFloat32(),
                this.pathArr.push(nt);
            }
            var at, ot, ht, lt, ut = 0,
              ct = 0,
              _t = 0,
              dt = NaN,
              pt = 0,
              ft = h.getInt16();
            for (t = 0; t < ft; t++) {
              var gt = h.getUint8(),
                mt = {};
              this.deformAniArr.push(mt);
              for (var yt = 0; yt < gt; yt++)
                for ((at = new N()).skinName = h.getUTFString(),
                  mt[at.skinName] = at, ut = h.getInt16(), e = 0; e < ut; e++)
                  for (ot = new O(),
                    at.deformSlotDataList.push(ot), ct = h.getInt16(), i = 0; i < ct; i++)
                    for (ht = new B(),
                      ot.deformSlotDisplayList.push(ht), ht.slotIndex = h.getInt16(), ht.attachment = h.getUTFString(),
                      _t = h.getInt16(), n = 0; n < _t; n++)
                      for (1 == h.getByte() ? ht.tweenKeyList.push(!0) : ht.tweenKeyList.push(!1),
                        dt = h.getFloat32(), ht.timeList.push(dt), lt = [], ht.vectices.push(lt), pt = h.getInt16(),
                        s = 0; s < pt; s++) lt.push(h.getFloat32());
            }
            var vt, xt, bt = h.getInt16(),
              wt = 0,
              It = 0;
            for (t = 0; t < bt; t++) {
              for (wt = h.getInt16(), vt = [], e = 0; e < wt; e++) {
                for ((xt = new k()).time = h.getFloat32(), It = h.getInt16(), i = 0; i < It; i++) xt.drawOrder.push(h.getInt16());
                vt.push(xt);
              }
              this.drawOrderAniArr.push(vt);
            }
            var St, Ct, Tt = h.getInt16(),
              Et = 0;
            for (t = 0; t < Tt; t++) {
              for (Et = h.getInt16(), St = [], e = 0; e < Et; e++)(Ct = new F()).name = h.getUTFString(),
                Ct.intValue = h.getInt32(), Ct.floatValue = h.getFloat32(), Ct.stringValue = h.getUTFString(),
                Ct.time = h.getFloat32(), St.push(Ct);
              this.eventAniArr.push(St);
            }
            var Mt = h.getInt16();
            if (Mt > 0)
              for (this.attachmentNames = [], t = 0; t < Mt; t++) this.attachmentNames.push(h.getUTFString());
            var Lt, Pt, At = h.getInt16();
            for (t = 0; t < At; t++)(Lt = new A()).name = h.readUTFString(), Lt.parent = h.readUTFString(),
              Lt.attachmentName = h.readUTFString(), Lt.srcDisplayIndex = Lt.displayIndex = h.getInt16(),
              Lt.templet = this, this.boneSlotDic[Lt.name] = Lt, null == (Pt = this.bindBoneBoneSlotDic[Lt.parent]) && (this.bindBoneBoneSlotDic[Lt.parent] = Pt = []),
              Pt.push(Lt), this.boneSlotArray.push(Lt);
            var Dt, Rt, Nt, Ot = h.readUTFString().split("\n"),
              Bt = 0,
              kt = h.getUint8(),
              Ft = 0,
              Ut = 0,
              Gt = 0,
              Vt = 0,
              Ht = 0,
              zt = 0,
              Wt = 0;
            for (t = 0; t < kt; t++) {
              for ((Dt = new W()).name = Ot[Bt++], Ft = h.getUint8(), e = 0; e < Ft; e++) {
                for ((Rt = new X()).name = Ot[Bt++], Lt = this.boneSlotDic[Rt.name], Ut = h.getUint8(),
                  i = 0; i < Ut; i++) {
                  if (Nt = new Y(), this.skinSlotDisplayDataArr.push(Nt), Nt.name = Ot[Bt++], Nt.attachmentName = Ot[Bt++],
                    Nt.transform = new $(), Nt.transform.scX = h.getFloat32(), Nt.transform.skX = h.getFloat32(),
                    Nt.transform.skY = h.getFloat32(), Nt.transform.scY = h.getFloat32(), Nt.transform.x = h.getFloat32(),
                    Nt.transform.y = h.getFloat32(), Rt.displayArr.push(Nt), Nt.width = h.getFloat32(),
                    Nt.height = h.getFloat32(), Nt.type = h.getUint8(), Nt.verLen = h.getUint16(), (R = h.getUint16()) > 0)
                    for (Nt.bones = [],
                      n = 0; n < R; n++) {
                      var Yt = h.getUint16();
                      Nt.bones.push(Yt);
                    }
                  if ((Gt = h.getUint16()) > 0)
                    for (Nt.uvs = [], n = 0; n < Gt; n++) Nt.uvs.push(h.getFloat32());
                  if ((Vt = h.getUint16()) > 0)
                    for (Nt.weights = [], n = 0; n < Vt; n++) Nt.weights.push(h.getFloat32());
                  if ((Ht = h.getUint16()) > 0)
                    for (Nt.triangles = [], n = 0; n < Ht; n++) Nt.triangles.push(h.getUint16());
                  if ((zt = h.getUint16()) > 0)
                    for (Nt.vertices = [], n = 0; n < zt; n++) Nt.vertices.push(h.getFloat32());
                  if ((Wt = h.getUint16()) > 0)
                    for (Nt.lengths = [], n = 0; n < Wt; n++) Nt.lengths.push(h.getFloat32());
                }
                Dt.slotArr.push(Rt);
              }
              this.skinDic[Dt.name] = Dt, this.skinDataArray.push(Dt);
            }
            1 == h.getUint8() ? (this.yReverseMatrix = new g(1, 0, 0, -1, 0, 0), D && D.setTempMatrix(this.yReverseMatrix)) : D && D.setTempMatrix(new g()),
              this.showSkinByIndex(this.boneSlotDic, 0), this.isParserComplete = !0, this.event("complete", this);
          }, n.getTexture = function(t) {
            var e = this.subTextureDic[t];
            return e || (e = this.subTextureDic[t.substr(0, t.length - 1)]), null == e ? this._mainTexture : e;
          }, n.showSkinByIndex = function(t, e, i) {
            if (void 0 === i && (i = !0), e < 0 && e >= this.skinDataArray.length) return !1;
            var n, s, r = 0,
              a = 0,
              o = this.skinDataArray[e];
            if (o) {
              for (r = 0, a = o.slotArr.length; r < a; r++)(s = o.slotArr[r]) && (n = t[s.name]) && (n.showSlotData(s, i),
                i && "undefined" != n.attachmentName && "null" != n.attachmentName ? n.showDisplayByName(n.attachmentName) : n.showDisplayByIndex(n.displayIndex));
              return !0;
            }
            return !1;
          }, n.getSkinIndexByName = function(t) {
            for (var e = 0, i = this.skinDataArray.length; e < i; e++)
              if (this.skinDataArray[e].name == t) return e;
            return -1;
          }, n.getGrahicsDataWithCache = function(t, e) {
            return this._graphicsCache[t][e];
          }, n.setGrahicsDataWithCache = function(t, e, i) {
            this._graphicsCache[t][e] = i;
          }, n.destroy = function() {
            this._isDestroyed = !0;
            var t;
            for (var i in this.subTextureDic)(t = this.subTextureDic[i]) && t.destroy();
            for (i in this._textureDic)(t = this._textureDic[i]) && t.destroy();
            for (var n = 0, s = this.skinSlotDisplayDataArr.length; n < s; n++) this.skinSlotDisplayDataArr[n].destory();
            this.skinSlotDisplayDataArr.length = 0, this.url && delete e.TEMPLET_DICTIONARY[this.url],
              laya.resource.Resource.prototype.destroy.call(this);
          }, n.getAniNameByIndex = function(t) {
            var e = this.getAnimation(t);
            return e ? e.name : null;
          }, r(0, n, "rate", function() {
            return this._rate;
          }, function(t) {
            this._rate = t;
          }), e.LAYA_ANIMATION_VISION = "LAYAANIMATION:1.6.0", e.TEMPLET_DICTIONARY = null,
          e;
      }(it));
  }(window, document, Laya), "function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function(t, e) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    for (var i in Laya) {
      var n = Laya[i];
      n && n.__isclass && (e[i] = n);
    }
  }),
  function(t, e, i) {
    i.un, i.uns, i.static;
    var n = i.class,
      s = i.getset,
      r = (i.__newvec, laya.utils.Browser, laya.utils.Color),
      a = laya.filters.ColorFilterAction,
      o = laya.filters.webgl.ColorFilterActionGL,
      h = laya.filters.Filter,
      l = laya.filters.webgl.FilterActionGL,
      u = laya.maths.Matrix,
      c = (laya.maths.Rectangle,
        laya.renders.Render),
      _ = (laya.renders.RenderContext, laya.webgl.resource.RenderTarget2D),
      d = laya.utils.RunDriver,
      p = (laya.webgl.shader.d2.ShaderDefines2D,
        laya.display.Sprite, laya.resource.Texture, laya.webgl.shader.d2.value.Value2D),
      f = function() {
        function t() {
          this.data = null;
        }
        n(t, "laya.filters.FilterAction");
        var e = t.prototype;
        return i.imps(e, {
          "laya.filters.IFilterAction": !0
        }), e.apply = function(t) {
          return null;
        }, t;
      }(),
      g = function() {
        function t() {}
        return n(t, "laya.filters.WebGLFilter"), t.enable = function() {
          t.isInit || (t.isInit = !0, c.isWebGL && (d.createFilterAction = function(t) {
            var e;
            switch (t) {
              case 32:
                e = new o();
                break;

              case 16:
                e = new m();
                break;

              case 8:
                e = new y();
            }
            return e;
          }));
        }, t.isInit = !1, t.__init$ = function() {
          d.createFilterAction = function(t) {
            var e;
            switch (t) {
              case 16:
              case 8:
                e = new f();
                break;

              case 32:
                e = new a();
            }
            return e;
          };
        }, t;
      }(),
      m = (function(t) {
        function e(t) {
          this.strength = NaN, this.strength_sig2_2sig2_gauss1 = [], e.__super.call(this),
            void 0 === t && (t = 4), c.isWebGL && g.enable(), this.strength = t, this._action = d.createFilterAction(16),
            this._action.data = this;
        }
        n(e, "laya.filters.BlurFilter", h);
        var i = e.prototype;
        i.callNative = function(t) {
          t.conchModel && t.conchModel.blurFilter && t.conchModel.blurFilter(this.strength);
        }, s(0, i, "action", function() {
          return this._action;
        }), s(0, i, "type", function() {
          return 16;
        });
      }(), function(t) {
        function e(t, i, n, s) {
          this._color = null, e.__super.call(this), this._elements = new Float32Array(9),
            void 0 === i && (i = 4), void 0 === n && (n = 6), void 0 === s && (s = 6), c.isWebGL && g.enable(),
            this._color = new r(t), this.blur = Math.min(i, 20), this.offX = n, this.offY = s,
            this._action = d.createFilterAction(8), this._action.data = this;
        }
        n(e, "laya.filters.GlowFilter", h);
        var i = e.prototype;
        i.getColor = function() {
          return this._color._color;
        }, i.callNative = function(t) {
          t.conchModel && t.conchModel.glowFilter && t.conchModel.glowFilter(this._color.strColor, this._elements[4], this._elements[5], this._elements[6]);
        }, s(0, i, "type", function() {
          return 8;
        }), s(0, i, "action", function() {
          return this._action;
        }), s(0, i, "offY", function() {
          return this._elements[6];
        }, function(t) {
          this._elements[6] = t;
        }), s(0, i, "offX", function() {
          return this._elements[5];
        }, function(t) {
          this._elements[5] = t;
        }), s(0, i, "blur", function() {
          return this._elements[4];
        }, function(t) {
          this._elements[4] = t;
        });
      }(), function(t) {
        function e() {
          this.data = null, e.__super.call(this);
        }
        n(e, "laya.filters.webgl.BlurFilterActionGL", l);
        var i = e.prototype;
        return i.setValueMix = function(t) {
          t.defines.add(this.data.type);
        }, i.apply3d = function(t, e, i, n, s) {
          var r = t.getValue("bounds"),
            a = p.create(1, 0);
          a.setFilters([this.data]);
          u.EMPTY.identity(), i.ctx.drawTarget(t, 0, 0, r.width, r.height, u.EMPTY, "src", a),
            a.setFilters(null);
        }, i.setValue = function(t) {
          t.strength = this.data.strength;
          var e = this.data.strength / 3,
            i = e * e;
          this.data.strength_sig2_2sig2_gauss1[0] = this.data.strength, this.data.strength_sig2_2sig2_gauss1[1] = i,
            this.data.strength_sig2_2sig2_gauss1[2] = 2 * i, this.data.strength_sig2_2sig2_gauss1[3] = 1 / (2 * Math.PI * i),
            t.strength_sig2_2sig2_gauss1 = this.data.strength_sig2_2sig2_gauss1;
        }, s(0, i, "typeMix", function() {
          return 16;
        }), e;
      }()),
      y = function(t) {
        function e() {
          this.data = null, this._initKey = !1, this._textureWidth = 0, this._textureHeight = 0,
            e.__super.call(this);
        }
        n(e, "laya.filters.webgl.GlowFilterActionGL", l);
        var r = e.prototype;
        return i.imps(r, {
          "laya.filters.IFilterActionGL": !0
        }), r.setValueMix = function(t) {}, r.apply3d = function(t, e, i, n, s) {
          var r = t.getValue("bounds");
          t.addValue("color", this.data.getColor());
          var a = r.width,
            o = r.height;
          this._textureWidth = a, this._textureHeight = o;
          var h, l = u.TEMP;
          return l.identity(), (h = p.create(1, 0)).setFilters([this.data]), i.ctx.drawTarget(t, 0, 0, this._textureWidth, this._textureHeight, l, "src", h, null),
            h = p.create(1, 0), i.ctx.drawTarget(t, 0, 0, this._textureWidth, this._textureHeight, l, "src", h),
            null;
        }, r.setSpriteWH = function(t) {
          this._textureWidth = t.width, this._textureHeight = t.height;
        }, r.setValue = function(t) {
          t.u_offsetX = this.data.offX, t.u_offsetY = -this.data.offY, t.u_strength = 1, t.u_blurX = this.data.blur,
            t.u_blurY = this.data.blur, t.u_textW = this._textureWidth, t.u_textH = this._textureHeight,
            t.u_color = this.data.getColor();
        }, s(0, r, "typeMix", function() {
          return 8;
        }), e.tmpTarget = function(t, e, i, n, s) {
          var r = t.getValue("bounds");
          t.getValue("out").end();
          var a = _.create(r.width, r.height);
          a.start();
          var o = t.getValue("color");
          o && a.clear(o[0], o[1], o[2], 0), t.addValue("tmpTarget", a);
        }, e.startOut = function(t, e, i, n, s) {
          t.getValue("tmpTarget").end();
          var r = t.getValue("out");
          r.start();
          var a = t.getValue("color");
          a && r.clear(a[0], a[1], a[2], 0);
        }, e.recycleTarget = function(t, e, i, n, s) {
          t.getValue("src");
          t.getValue("tmpTarget").recycle();
        }, e;
      }();
    i.__init([g]);
  }(window, document, Laya), "function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function(t, e) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    for (var i in Laya) {
      var n = Laya[i];
      n && n.__isclass && (e[i] = n);
    }
  }),
  function(t, e, i) {
    i.un, i.uns;
    var n = i.static,
      s = i.class,
      r = i.getset,
      a = (i.__newvec, laya.display.Animation),
      o = (laya.utils.Browser,
        laya.utils.ClassUtils),
      h = laya.filters.ColorFilter,
      l = laya.utils.Ease,
      u = laya.events.Event,
      c = (laya.events.EventDispatcher,
        laya.display.css.Font),
      _ = laya.display.FrameAnimation,
      d = laya.display.Graphics,
      p = laya.utils.Handler,
      f = laya.display.Input,
      g = laya.net.Loader,
      m = (laya.display.Node,
        laya.maths.Point),
      y = laya.maths.Rectangle,
      v = laya.renders.Render,
      x = laya.display.Sprite,
      b = laya.display.Text,
      w = laya.resource.Texture,
      I = laya.utils.Tween,
      S = laya.utils.Utils,
      C = laya.utils.WeakObject;
    i.interface("laya.ui.IItem"), i.interface("laya.ui.ISelect"), i.interface("laya.ui.IRender"),
      i.interface("laya.ui.IComponent"), i.interface("laya.ui.IBox", "IComponent");
    var T = function() {
        function t() {
          this.enable = !1, this.top = NaN, this.bottom = NaN, this.left = NaN, this.right = NaN,
            this.centerX = NaN, this.centerY = NaN, this.anchorX = NaN, this.anchorY = NaN;
        }
        return s(t, "laya.ui.LayoutStyle"), n(t, ["EMPTY", function() {
          return this.EMPTY = new t();
        }]), t;
      }(),
      E = function() {
        function t() {}
        return s(t, "laya.ui.Styles"), t.labelColor = "#000000", t.buttonStateNum = 3, t.scrollBarMinNum = 15,
          t.scrollBarDelayTime = 500, n(t, ["defaultSizeGrid", function() {
            return this.defaultSizeGrid = [4, 4, 4, 4, 0];
          }, "labelPadding", function() {
            return this.labelPadding = [2, 2, 2, 2];
          }, "inputLabelPadding", function() {
            return this.inputLabelPadding = [1, 1, 1, 3];
          }, "buttonLabelColors", function() {
            return this.buttonLabelColors = ["#32556b", "#32cc6b", "#ff0000", "#C0C0C0"];
          }, "comboBoxItemColors", function() {
            return this.comboBoxItemColors = ["#5e95b6", "#ffffff", "#000000", "#8fa4b1", "#ffffff"];
          }]), t;
      }(),
      M = function() {
        function t() {}
        return s(t, "laya.ui.UIUtils"), t.fillArray = function(t, e, i) {
          var n = t.concat();
          if (e)
            for (var s = e.split(","), r = 0, a = Math.min(n.length, s.length); r < a; r++) {
              var o = s[r];
              n[r] = "true" == o || "false" != o && o, null != i && (n[r] = i(o));
            }
          return n;
        }, t.toColor = function(t) {
          return S.toHexColor(t);
        }, t.gray = function(e, i) {
          void 0 === i && (i = !0), i ? t.addFilter(e, t.grayFilter) : t.clearFilter(e, h);
        }, t.addFilter = function(t, e) {
          var i = t.filters || [];
          i.push(e), t.filters = i;
        }, t.clearFilter = function(t, e) {
          var n = t.filters;
          if (null != n && n.length > 0) {
            for (var s = n.length - 1; s > -1; s--) {
              var r = n[s];
              i.__typeof(r, e) && n.splice(s, 1);
            }
            t.filters = n;
          }
        }, t._getReplaceStr = function(e) {
          return t.escapeSequence[e];
        }, t.adptString = function(e) {
          return e.replace(/\\(\w)/g, t._getReplaceStr);
        }, t.getBindFun = function(e) {
          var n = t._funMap.get(e);
          if (null == n) {
            var s = '"' + e + '"',
              r = "(function(data){if(data==null)return;with(data){try{\nreturn " + (s = s.replace(/^"\${|}"$/g, "").replace(/\${/g, '"+').replace(/}/g, '+"')) + "\n}catch(e){}}})";
            n = i._runScript(r), t._funMap.set(e, n);
          }
          return n;
        }, n(t, ["grayFilter", function() {
          return this.grayFilter = new h([.3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, 0, 0, 0, 1, 0]);
        }, "escapeSequence", function() {
          return this.escapeSequence = {
            "\\n": "\n",
            "\\t": "\t"
          };
        }, "_funMap", function() {
          return this._funMap = new C();
        }]), t;
      }(),
      L = function() {
        function t() {}
        return s(t, "UIConfig"), t.touchScrollEnable = !0, t.mouseWheelEnable = !0, t.showButtons = !0,
          t.popupBgColor = "#000000", t.popupBgAlpha = .5, t.closeDialogOnSide = !0, t;
      }(),
      P = function(t) {
        function e() {
          this.autoCacheCmd = !0, this._width = 0, this._height = 0, this._source = null,
            this._sizeGrid = null, this._isChanged = !1, this._offset = null, e.__super.call(this);
        }
        s(e, "laya.ui.AutoBitmap", t);
        var n = e.prototype;
        return n.destroy = function() {
          t.prototype.destroy.call(this), this._source = null, this._sizeGrid = null, this._offset = null;
        }, n._setChanged = function() {
          this._isChanged || (this._isChanged = !0, i.timer.callLater(this, this.changeSource));
        }, n.changeSource = function() {
          this._isChanged = !1;
          var t = this._source;
          if (t && t.bitmap) {
            var i = this.width,
              n = this.height,
              s = this._sizeGrid,
              r = t.sourceWidth,
              a = t.sourceHeight;
            if (!s || r === i && a === n) this.cleanByTexture(t, this._offset ? this._offset[0] : 0, this._offset ? this._offset[1] : 0, i, n);
            else {
              t.$_GID || (t.$_GID = S.getGID());
              var o = t.$_GID + "." + i + "." + n + "." + s.join(".");
              if (S.isOKCmdList(C.I.get(o))) return void(this.cmds = C.I.get(o));
              this.clear();
              var h = s[0],
                l = s[1],
                u = s[2],
                c = s[3],
                _ = s[4],
                d = !1;
              if (i == r && (c = l = 0), n == a && (h = u = 0), c + l > i) {
                var p = i;
                d = !0, i = c + l, this.save(), this.clipRect(0, 0, p, n);
              }
              c && h && this.drawTexture(e.getTexture(t, 0, 0, c, h), 0, 0, c, h), l && h && this.drawTexture(e.getTexture(t, r - l, 0, l, h), i - l, 0, l, h),
                c && u && this.drawTexture(e.getTexture(t, 0, a - u, c, u), 0, n - u, c, u), l && u && this.drawTexture(e.getTexture(t, r - l, a - u, l, u), i - l, n - u, l, u),
                h && this.drawBitmap(_, e.getTexture(t, c, 0, r - c - l, h), c, 0, i - c - l, h),
                u && this.drawBitmap(_, e.getTexture(t, c, a - u, r - c - l, u), c, n - u, i - c - l, u),
                c && this.drawBitmap(_, e.getTexture(t, 0, h, c, a - h - u), 0, h, c, n - h - u),
                l && this.drawBitmap(_, e.getTexture(t, r - l, h, l, a - h - u), i - l, h, l, n - h - u),
                this.drawBitmap(_, e.getTexture(t, c, h, r - c - l, a - h - u), c, h, i - c - l, n - h - u),
                d && this.restore(), this.autoCacheCmd && !v.isConchApp && C.I.set(o, this.cmds);
            }
            this._repaint();
          }
        }, n.drawBitmap = function(t, e, i, n, s, r) {
          void 0 === s && (s = 0), void 0 === r && (r = 0), s < .1 || r < .1 || (!t || e.width == s && e.height == r ? this.drawTexture(e, i, n, s, r) : this.fillTexture(e, i, n, s, r));
        }, n.clear = function(e) {
          void 0 === e && (e = !0), t.prototype.clear.call(this, !1);
        }, r(0, n, "sizeGrid", function() {
          return this._sizeGrid;
        }, function(t) {
          this._sizeGrid = t, this._setChanged();
        }), r(0, n, "width", function() {
          return this._width ? this._width : this._source ? this._source.sourceWidth : 0;
        }, function(t) {
          this._width != t && (this._width = t, this._setChanged());
        }), r(0, n, "height", function() {
          return this._height ? this._height : this._source ? this._source.sourceHeight : 0;
        }, function(t) {
          this._height != t && (this._height = t, this._setChanged());
        }), r(0, n, "source", function() {
          return this._source;
        }, function(t) {
          t ? (this._source = t, this._setChanged()) : (this._source = null, this.clear());
        }), e.getTexture = function(t, e, i, n, s) {
          n <= 0 && (n = 1), s <= 0 && (s = 1), t.$_GID || (t.$_GID = S.getGID());
          var r = t.$_GID + "." + e + "." + i + "." + n + "." + s,
            a = C.I.get(r);
          return a && a.source || (a = w.createFromTexture(t, e, i, n, s), C.I.set(r, a)),
            a;
        }, e;
      }(d),
      A = (function(t) {
        function e() {
          e.__super.call(this);
        }
        s(e, "laya.ui.UIEvent", u), e.SHOW_TIP = "showtip", e.HIDE_TIP = "hidetip";
      }(), function(t) {
        function e() {
          this._comXml = null, this._dataSource = null, this._toolTip = null, this._tag = null,
            this._disabled = !1, this._gray = !1, this.layoutEnabled = !0, e.__super.call(this),
            this._layout = T.EMPTY, this.preinitialize(), this.createChildren(), this.initialize();
        }
        s(e, "laya.ui.Component", t);
        var n = e.prototype;
        return i.imps(n, {
            "laya.ui.IComponent": !0
          }), n.destroy = function(e) {
            void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._dataSource = this._layout = null,
              this._tag = null, this._toolTip = null;
          }, n.preinitialize = function() {}, n.createChildren = function() {}, n.initialize = function() {},
          n.callLater = function(t, e) {
            i.timer.callLater(this, t, e);
          }, n.runCallLater = function(t) {
            i.timer.runCallLater(this, t);
          }, n.commitMeasure = function() {}, n.changeSize = function() {
            this.event("resize");
          }, n.getLayout = function() {
            return this._layout === T.EMPTY && (this._layout = new T()), this._layout;
          }, n._setLayoutEnabled = function(t) {
            this._layout && this._layout.enable != t && (this._layout.enable = t, this.on("added", this, this.onAdded),
              this.on("removed", this, this.onRemoved), this.parent && this.onAdded());
          }, n.onRemoved = function() {
            this.parent.off("resize", this, this.onCompResize);
          }, n.onAdded = function() {
            this.parent.on("resize", this, this.onCompResize), this.resetLayoutX(), this.resetLayoutY();
          }, n.onCompResize = function() {
            this._layout && this._layout.enable && (this.resetLayoutX(), this.resetLayoutY());
          }, n.resetLayoutX = function() {
            var t = this._layout;
            if (isNaN(t.anchorX) || (this.pivotX = t.anchorX * this.width), this.layoutEnabled) {
              var e = this.parent;
              e && (isNaN(t.centerX) ? isNaN(t.left) ? isNaN(t.right) || (this.x = Math.round(e.width - this.displayWidth - t.right + this.pivotX * this.scaleX)) : (this.x = Math.round(t.left + this.pivotX * this.scaleX),
                isNaN(t.right) || (this.width = (e._width - t.left - t.right) / (this.scaleX || .01))) : this.x = Math.round(.5 * (e.width - this.displayWidth) + t.centerX + this.pivotX * this.scaleX));
            }
          }, n.resetLayoutY = function() {
            var t = this._layout;
            if (isNaN(t.anchorY) || (this.pivotY = t.anchorY * this.height), this.layoutEnabled) {
              var e = this.parent;
              e && (isNaN(t.centerY) ? isNaN(t.top) ? isNaN(t.bottom) || (this.y = Math.round(e.height - this.displayHeight - t.bottom + this.pivotY * this.scaleY)) : (this.y = Math.round(t.top + this.pivotY * this.scaleY),
                isNaN(t.bottom) || (this.height = (e._height - t.top - t.bottom) / (this.scaleY || .01))) : this.y = Math.round(.5 * (e.height - this.displayHeight) + t.centerY + this.pivotY * this.scaleY));
            }
          }, n.onMouseOver = function(t) {
            i.stage.event("showtip", this._toolTip);
          }, n.onMouseOut = function(t) {
            i.stage.event("hidetip", this._toolTip);
          }, r(0, n, "displayWidth", function() {
            return this.width * this.scaleX;
          }), r(0, n, "width", function() {
            return this._width ? this._width : this.measureWidth;
          }, function(t) {
            this._width != t && (this._width = t, this.conchModel && this.conchModel.size(this._width, this._height),
              this.callLater(this.changeSize), !this._layout.enable || isNaN(this._layout.centerX) && isNaN(this._layout.right) && isNaN(this._layout.anchorX) || this.resetLayoutX());
          }), r(0, n, "measureWidth", function() {
            var t = 0;
            this.commitMeasure();
            for (var e = this.numChildren - 1; e > -1; e--) {
              var i = this.getChildAt(e);
              i.visible && (t = Math.max(i.x + i.width * i.scaleX, t));
            }
            return t;
          }), r(0, n, "displayHeight", function() {
            return this.height * this.scaleY;
          }), r(0, n, "height", function() {
            return this._height ? this._height : this.measureHeight;
          }, function(t) {
            this._height != t && (this._height = t, this.conchModel && this.conchModel.size(this._width, this._height),
              this.callLater(this.changeSize), !this._layout.enable || isNaN(this._layout.centerY) && isNaN(this._layout.bottom) && isNaN(this._layout.anchorY) || this.resetLayoutY());
          }), r(0, n, "dataSource", function() {
            return this._dataSource;
          }, function(t) {
            this._dataSource = t;
            for (var e in this._dataSource) this.hasOwnProperty(e) && "function" != typeof this[e] && (this[e] = this._dataSource[e]);
          }), r(0, n, "scaleY", t.prototype._$get_scaleY, function(t) {
            i.superGet(x, this, "scaleY") != t && (i.superSet(x, this, "scaleY", t), this.callLater(this.changeSize),
              this._layout.enable && this.resetLayoutY());
          }), r(0, n, "measureHeight", function() {
            var t = 0;
            this.commitMeasure();
            for (var e = this.numChildren - 1; e > -1; e--) {
              var i = this.getChildAt(e);
              i.visible && (t = Math.max(i.y + i.height * i.scaleY, t));
            }
            return t;
          }), r(0, n, "scaleX", t.prototype._$get_scaleX, function(t) {
            i.superGet(x, this, "scaleX") != t && (i.superSet(x, this, "scaleX", t), this.callLater(this.changeSize),
              this._layout.enable && this.resetLayoutX());
          }), r(0, n, "top", function() {
            return this._layout.top;
          }, function(t) {
            t != this._layout.top && (this.getLayout().top = t, this._setLayoutEnabled(!0)),
              this.resetLayoutY();
          }), r(0, n, "bottom", function() {
            return this._layout.bottom;
          }, function(t) {
            t != this._layout.bottom && (this.getLayout().bottom = t, this._setLayoutEnabled(!0)),
              this.resetLayoutY();
          }), r(0, n, "left", function() {
            return this._layout.left;
          }, function(t) {
            t != this._layout.left && (this.getLayout().left = t, this._setLayoutEnabled(!0)),
              this.resetLayoutX();
          }), r(0, n, "right", function() {
            return this._layout.right;
          }, function(t) {
            t != this._layout.right && (this.getLayout().right = t, this._setLayoutEnabled(!0)),
              this.resetLayoutX();
          }), r(0, n, "centerX", function() {
            return this._layout.centerX;
          }, function(t) {
            t != this._layout.centerX && (this.getLayout().centerX = t, this._setLayoutEnabled(!0)),
              this.resetLayoutX();
          }), r(0, n, "centerY", function() {
            return this._layout.centerY;
          }, function(t) {
            t != this._layout.centerY && (this.getLayout().centerY = t, this._setLayoutEnabled(!0)),
              this.resetLayoutY();
          }), r(0, n, "anchorX", function() {
            return this._layout.anchorX;
          }, function(t) {
            t != this._layout.anchorX && (this.getLayout().anchorX = t, this._setLayoutEnabled(!0)),
              this.resetLayoutX();
          }), r(0, n, "anchorY", function() {
            return this._layout.anchorY;
          }, function(t) {
            t != this._layout.anchorY && (this.getLayout().anchorY = t, this._setLayoutEnabled(!0)),
              this.resetLayoutY();
          }), r(0, n, "tag", function() {
            return this._tag;
          }, function(t) {
            this._tag = t;
          }), r(0, n, "toolTip", function() {
            return this._toolTip;
          }, function(t) {
            this._toolTip != t && (this._toolTip = t, null != t ? (this.on("mouseover", this, this.onMouseOver),
              this.on("mouseout", this, this.onMouseOut)) : (this.off("mouseover", this, this.onMouseOver),
              this.off("mouseout", this, this.onMouseOut)));
          }), r(0, n, "comXml", function() {
            return this._comXml;
          }, function(t) {
            this._comXml = t;
          }), r(0, n, "gray", function() {
            return this._gray;
          }, function(t) {
            t !== this._gray && (this._gray = t, M.gray(this, t));
          }), r(0, n, "disabled", function() {
            return this._disabled;
          }, function(t) {
            t !== this._disabled && (this.gray = this._disabled = t, this.mouseEnabled = !t);
          }), e;
      }(x)),
      D = function(t) {
        function e() {
          this.lockLayer = null, this.popupEffect = function(t) {
              t.scale(1, 1), I.from(t, {
                x: i.stage.width / 2,
                y: i.stage.height / 2,
                scaleX: 0,
                scaleY: 0
              }, 300, l.backOut, p.create(this, this.doOpen, [t]));
            }, this.closeEffect = function(t, e) {
              I.to(t, {
                x: i.stage.width / 2,
                y: i.stage.height / 2,
                scaleX: 0,
                scaleY: 0
              }, 300, l.strongOut, p.create(this, this.doClose, [t, e]));
            }, e.__super.call(this), this.maskLayer = new x(), this.popupEffectHandler = new p(this, this.popupEffect),
            this.closeEffectHandler = new p(this, this.closeEffect), this.mouseEnabled = this.maskLayer.mouseEnabled = !0,
            this.zOrder = 1e3, i.stage.addChild(this), i.stage.on("resize", this, this._onResize),
            L.closeDialogOnSide && this.maskLayer.on("click", this, this._closeOnSide), this._onResize(null);
        }
        s(e, "laya.ui.DialogManager", x);
        var n = e.prototype;
        return n._closeOnSide = function() {
          var t = this.getChildAt(this.numChildren - 1);
          t instanceof laya.ui.Dialog && t.close("side");
        }, n.setLockView = function(t) {
          this.lockLayer || (this.lockLayer = new R(), this.lockLayer.mouseEnabled = !0, this.lockLayer.size(i.stage.width, i.stage.height)),
            this.lockLayer.removeChildren(), t && (t.centerX = t.centerY = 0, this.lockLayer.addChild(t));
        }, n._onResize = function(t) {
          var e = this.maskLayer.width = i.stage.width,
            n = this.maskLayer.height = i.stage.height;
          this.lockLayer && this.lockLayer.size(e, n), this.maskLayer.graphics.clear(), this.maskLayer.graphics.drawRect(0, 0, e, n, L.popupBgColor),
            this.maskLayer.alpha = L.popupBgAlpha;
          for (var s = this.numChildren - 1; s > -1; s--) {
            var r = this.getChildAt(s);
            r.popupCenter && this._centerDialog(r);
          }
        }, n._centerDialog = function(t) {
          t.x = Math.round((i.stage.width - t.width >> 1) + t.pivotX), t.y = Math.round((i.stage.height - t.height >> 1) + t.pivotY);
        }, n.open = function(t, e, i) {
          void 0 === e && (e = !1), void 0 === i && (i = !1), e && this._closeAll(), t.popupCenter && this._centerDialog(t),
            this.addChild(t), (t.isModal || this._$P.hasZorder) && this.timer.callLater(this, this._checkMask),
            i && null != t.popupEffect ? t.popupEffect.runWith(t) : this.doOpen(t), this.event("open");
        }, n.doOpen = function(t) {
          t.onOpened();
        }, n.lock = function(t) {
          this.lockLayer && (t ? this.addChild(this.lockLayer) : this.lockLayer.removeSelf());
        }, n.close = function(t, e, i) {
          void 0 === i && (i = !1), i && null != t.closeEffect ? t.closeEffect.runWith([t, e]) : this.doClose(t, e),
            this.event("close");
        }, n.doClose = function(t, e) {
          t.removeSelf(), t.isModal && this._checkMask(), t.closeHandler && t.closeHandler.runWith(e),
            t.onClosed(e);
        }, n.closeAll = function() {
          this._closeAll(), this.event("close");
        }, n._closeAll = function() {
          for (var t = this.numChildren - 1; t > -1; t--) {
            var e = this.getChildAt(t);
            e && null != e.close && this.doClose(e);
          }
        }, n.getDialogsByGroup = function(t) {
          for (var e = [], i = this.numChildren - 1; i > -1; i--) {
            var n = this.getChildAt(i);
            n && n.group === t && e.push(n);
          }
          return e;
        }, n.closeByGroup = function(t) {
          for (var e = [], i = this.numChildren - 1; i > -1; i--) {
            var n = this.getChildAt(i);
            n && n.group === t && (n.close(), e.push(n));
          }
          return e;
        }, n._checkMask = function() {
          this.maskLayer.removeSelf();
          for (var t = this.numChildren - 1; t > -1; t--) {
            var e = this.getChildAt(t);
            if (e && e.isModal) return void this.addChildAt(this.maskLayer, t);
          }
        }, e;
      }(),
      R = function(t) {
        function e() {
          e.__super.call(this);
        }
        s(e, "laya.ui.Box", t);
        var n = e.prototype;
        return i.imps(n, {
          "laya.ui.IBox": !0
        }), r(0, n, "dataSource", t.prototype._$get_dataSource, function(t) {
          this._dataSource = t;
          for (var e in t) {
            var i = this.getChildByName(e);
            i ? i.dataSource = t[e] : this.hasOwnProperty(e) && "function" != typeof this[e] && (this[e] = t[e]);
          }
        }), e;
      }(A),
      N = function(t) {
        function e(t, i) {
          this.toggle = !1, this._bitmap = null, this._text = null, this._strokeColors = null,
            this._state = 0, this._selected = !1, this._skin = null, this._autoSize = !0, this._sources = null,
            this._clickHandler = null, this._stateChanged = !1, e.__super.call(this), this._labelColors = E.buttonLabelColors,
            this._stateNum = E.buttonStateNum, void 0 === i && (i = ""), this.skin = t, this.label = i;
        }
        s(e, "laya.ui.Button", t);
        var a = e.prototype;
        return i.imps(a, {
          "laya.ui.ISelect": !0
        }), a.destroy = function(e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._bitmap && this._bitmap.destroy(),
            this._text && this._text.destroy(e), this._bitmap = null, this._text = null, this._clickHandler = null,
            this._labelColors = this._sources = this._strokeColors = null;
        }, a.createChildren = function() {
          this.graphics = this._bitmap = new P();
        }, a.createText = function() {
          this._text || (this._text = new b(), this._text.overflow = b.HIDDEN, this._text.align = "center",
            this._text.valign = "middle", this._text.width = this._width, this._text.height = this._height);
        }, a.initialize = function() {
          1 !== this._mouseEnableState && (this.mouseEnabled = !0, this._setBit(2, !0)), this._createListener("mouseover", this, this.onMouse, null, !1, !1),
            this._createListener("mouseout", this, this.onMouse, null, !1, !1), this._createListener("mousedown", this, this.onMouse, null, !1, !1),
            this._createListener("mouseup", this, this.onMouse, null, !1, !1), this._createListener("click", this, this.onMouse, null, !1, !1);
        }, a.onMouse = function(t) {
          if (!1 !== this.toggle || !this._selected) return "click" === t.type ? (this.toggle && (this.selected = !this._selected),
            void(this._clickHandler && this._clickHandler.run())) : void(!this._selected && (this.state = e.stateMap[t.type]));
        }, a.changeClips = function() {
          var t = g.getRes(this._skin);
          if (t) {
            var e = t.sourceWidth,
              i = t.sourceHeight / this._stateNum;
            t.$_GID || (t.$_GID = S.getGID());
            var n = t.$_GID + "-" + this._stateNum,
              s = C.I.get(n);
            if (S.isOkTextureList(s) || (s = null), s) this._sources = s;
            else {
              if (this._sources = [], 1 === this._stateNum) this._sources.push(t);
              else
                for (var r = 0; r < this._stateNum; r++) this._sources.push(w.createFromTexture(t, 0, i * r, e, i));
              C.I.set(n, this._sources);
            }
            this._autoSize ? (this._bitmap.width = this._width || e, this._bitmap.height = this._height || i,
              this._text && (this._text.width = this._bitmap.width, this._text.height = this._bitmap.height)) : this._text && (this._text.x = e);
          } else console.log("lose skin", this._skin);
        }, a.changeState = function() {
          this._stateChanged = !1, this.runCallLater(this.changeClips);
          var t = this._state < this._stateNum ? this._state : this._stateNum - 1;
          this._sources && (this._bitmap.source = this._sources[t]), this.label && (this._text.color = this._labelColors[t],
            this._strokeColors && (this._text.strokeColor = this._strokeColors[t]));
        }, a._setStateChanged = function() {
          this._stateChanged || (this._stateChanged = !0, this.callLater(this.changeState));
        }, r(0, a, "labelStrokeColor", function() {
          return this.createText(), this._text.strokeColor;
        }, function(t) {
          this.createText(), this._text.strokeColor = t;
        }), r(0, a, "measureHeight", function() {
          return this.runCallLater(this.changeClips), this._text ? Math.max(this._bitmap.height, this._text.height) : this._bitmap.height;
        }), r(0, a, "skin", function() {
          return this._skin;
        }, function(t) {
          this._skin != t && (this._skin = t, this.callLater(this.changeClips), this._setStateChanged());
        }), r(0, a, "state", function() {
          return this._state;
        }, function(t) {
          this._state != t && (this._state = t, this._setStateChanged());
        }), r(0, a, "text", function() {
          return this.createText(), this._text;
        }), r(0, a, "stateNum", function() {
          return this._stateNum;
        }, function(t) {
          "string" == typeof t && (t = parseInt(t)), this._stateNum != t && (this._stateNum = t < 1 ? 1 : t > 3 ? 3 : t,
            this.callLater(this.changeClips));
        }), r(0, a, "strokeColors", function() {
          return this._strokeColors ? this._strokeColors.join(",") : "";
        }, function(t) {
          this._strokeColors = M.fillArray(E.buttonLabelColors, t, String), this._setStateChanged();
        }), r(0, a, "labelColors", function() {
          return this._labelColors.join(",");
        }, function(t) {
          this._labelColors = M.fillArray(E.buttonLabelColors, t, String), this._setStateChanged();
        }), r(0, a, "measureWidth", function() {
          return this.runCallLater(this.changeClips), this._autoSize ? this._bitmap.width : (this.runCallLater(this.changeState),
            this._bitmap.width + (this._text ? this._text.width : 0));
        }), r(0, a, "label", function() {
          return this._text ? this._text.text : null;
        }, function(t) {
          (this._text || t) && (this.createText(), this._text.text != t && (t && !this._text.parent && this.addChild(this._text),
            this._text.text = (t + "").replace(/\\n/g, "\n"), this._setStateChanged()));
        }), r(0, a, "selected", function() {
          return this._selected;
        }, function(t) {
          this._selected != t && (this._selected = t, this.state = this._selected ? 2 : 0,
            this.event("change"));
        }), r(0, a, "labelPadding", function() {
          return this.createText(), this._text.padding.join(",");
        }, function(t) {
          this.createText(), this._text.padding = M.fillArray(E.labelPadding, t, Number);
        }), r(0, a, "labelSize", function() {
          return this.createText(), this._text.fontSize;
        }, function(t) {
          this.createText(), this._text.fontSize = t;
        }), r(0, a, "labelStroke", function() {
          return this.createText(), this._text.stroke;
        }, function(t) {
          this.createText(), this._text.stroke = t;
        }), r(0, a, "labelBold", function() {
          return this.createText(), this._text.bold;
        }, function(t) {
          this.createText(), this._text.bold = t;
        }), r(0, a, "labelFont", function() {
          return this.createText(), this._text.font;
        }, function(t) {
          this.createText(), this._text.font = t;
        }), r(0, a, "labelAlign", function() {
          return this.createText(), this._text.align;
        }, function(t) {
          this.createText(), this._text.align = t;
        }), r(0, a, "clickHandler", function() {
          return this._clickHandler;
        }, function(t) {
          this._clickHandler = t;
        }), r(0, a, "sizeGrid", function() {
          return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null;
        }, function(t) {
          this._bitmap.sizeGrid = M.fillArray(E.defaultSizeGrid, t, Number);
        }), r(0, a, "width", t.prototype._$get_width, function(t) {
          i.superSet(A, this, "width", t), this._autoSize && (this._bitmap.width = t, this._text && (this._text.width = t));
        }), r(0, a, "height", t.prototype._$get_height, function(t) {
          i.superSet(A, this, "height", t), this._autoSize && (this._bitmap.height = t, this._text && (this._text.height = t));
        }), r(0, a, "dataSource", t.prototype._$get_dataSource, function(t) {
          this._dataSource = t, "number" == typeof t || "string" == typeof t ? this.label = t + "" : i.superSet(A, this, "dataSource", t);
        }), r(0, a, "iconOffset", function() {
          return this._bitmap._offset ? this._bitmap._offset.join(",") : null;
        }, function(t) {
          this._bitmap._offset = t ? M.fillArray([1, 1], t, Number) : [];
        }), n(e, ["stateMap", function() {
          return this.stateMap = {
            mouseup: 0,
            mouseover: 1,
            mousedown: 2,
            mouseout: 0
          };
        }]), e;
      }(A),
      O = function(t) {
        function e(t, i, n) {
          this._sources = null, this._bitmap = null, this._skin = null, this._clipX = 1, this._clipY = 1,
            this._clipWidth = 0, this._clipHeight = 0, this._autoPlay = !1, this._interval = 50,
            this._complete = null, this._isPlaying = !1, this._index = 0, this._clipChanged = !1,
            this._group = null, this._toIndex = -1, e.__super.call(this), void 0 === i && (i = 1),
            void 0 === n && (n = 1), this._clipX = i, this._clipY = n, this.skin = t;
        }
        s(e, "laya.ui.Clip", t);
        var n = e.prototype;
        return n.destroy = function(e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, !0), this._bitmap && this._bitmap.destroy(),
            this._bitmap = null, this._sources = null;
        }, n.dispose = function() {
          this.destroy(!0), i.loader.clearRes(this._skin);
        }, n.createChildren = function() {
          this.graphics = this._bitmap = new P();
        }, n._onDisplay = function(t) {
          this._isPlaying ? this._displayedInStage ? this.play() : this.stop() : this._autoPlay && this.play();
        }, n.changeClip = function() {
          if (this._clipChanged = !1, this._skin) {
            var t = g.getRes(this._skin);
            t ? this.loadComplete(this._skin, t) : i.loader.load(this._skin, p.create(this, this.loadComplete, [this._skin]));
          }
        }, n.loadComplete = function(t, e) {
          if (t === this._skin && e) {
            var i = this._clipWidth || Math.ceil(e.sourceWidth / this._clipX),
              n = this._clipHeight || Math.ceil(e.sourceHeight / this._clipY),
              s = this._skin + i + n,
              r = C.I.get(s);
            if (S.isOkTextureList(r) || (r = null), r) this._sources = r;
            else {
              this._sources = [];
              for (var a = 0; a < this._clipY; a++)
                for (var o = 0; o < this._clipX; o++) this._sources.push(w.createFromTexture(e, i * o, n * a, i, n));
              C.I.set(s, this._sources);
            }
            this.index = this._index, this.event("loaded"), this.onCompResize();
          }
        }, n.play = function(t, e) {
          void 0 === t && (t = 0), void 0 === e && (e = -1), this._isPlaying = !0, this.index = t,
            this._toIndex = e, this._index++, i.timer.loop(this.interval, this, this._loop),
            this.on("display", this, this._onDisplay), this.on("undisplay", this, this._onDisplay);
        }, n._loop = function() {
          this._style.visible && this._sources && (this._index++, this._toIndex > -1 && this._index >= this._toIndex ? this.stop() : this._index >= this._sources.length && (this._index = 0),
            this.index = this._index);
        }, n.stop = function() {
          this._isPlaying = !1, i.timer.clear(this, this._loop), this.event("complete");
        }, n._setClipChanged = function() {
          this._clipChanged || (this._clipChanged = !0, this.callLater(this.changeClip));
        }, r(0, n, "interval", function() {
          return this._interval;
        }, function(t) {
          this._interval != t && (this._interval = t, this._isPlaying && this.play());
        }), r(0, n, "skin", function() {
          return this._skin;
        }, function(t) {
          this._skin != t && (this._skin = t, t ? this._setClipChanged() : this._bitmap.source = null);
        }), r(0, n, "sources", function() {
          return this._sources;
        }, function(t) {
          this._sources = t, this.index = this._index, this.event("loaded");
        }), r(0, n, "clipX", function() {
          return this._clipX;
        }, function(t) {
          this._clipX = t || 1, this._setClipChanged();
        }), r(0, n, "clipY", function() {
          return this._clipY;
        }, function(t) {
          this._clipY = t || 1, this._setClipChanged();
        }), r(0, n, "total", function() {
          return this.runCallLater(this.changeClip), this._sources ? this._sources.length : 0;
        }), r(0, n, "clipWidth", function() {
          return this._clipWidth;
        }, function(t) {
          this._clipWidth = t, this._setClipChanged();
        }), r(0, n, "sizeGrid", function() {
          return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null;
        }, function(t) {
          this._bitmap.sizeGrid = M.fillArray(E.defaultSizeGrid, t, Number);
        }), r(0, n, "group", function() {
          return this._group;
        }, function(t) {
          t && this._skin && g.setGroup(this._skin, t), this._group = t;
        }), r(0, n, "clipHeight", function() {
          return this._clipHeight;
        }, function(t) {
          this._clipHeight = t, this._setClipChanged();
        }), r(0, n, "width", t.prototype._$get_width, function(t) {
          i.superSet(A, this, "width", t), this._bitmap.width = t;
        }), r(0, n, "height", t.prototype._$get_height, function(t) {
          i.superSet(A, this, "height", t), this._bitmap.height = t;
        }), r(0, n, "measureWidth", function() {
          return this.runCallLater(this.changeClip), this._bitmap.width;
        }), r(0, n, "measureHeight", function() {
          return this.runCallLater(this.changeClip), this._bitmap.height;
        }), r(0, n, "index", function() {
          return this._index;
        }, function(t) {
          this._index = t, this._bitmap && this._sources && (this._bitmap.source = this._sources[t]),
            this.event("change");
        }), r(0, n, "autoPlay", function() {
          return this._autoPlay;
        }, function(t) {
          this._autoPlay != t && (this._autoPlay = t, t ? this.play() : this.stop());
        }), r(0, n, "isPlaying", function() {
          return this._isPlaying;
        }, function(t) {
          this._isPlaying = t;
        }), r(0, n, "dataSource", t.prototype._$get_dataSource, function(t) {
          this._dataSource = t, "number" == typeof t && Math.floor(t) == t || "string" == typeof t ? this.index = parseInt(t) : i.superSet(A, this, "dataSource", t);
        }), r(0, n, "bitmap", function() {
          return this._bitmap;
        }), e;
      }(A),
      B = function(t) {
        function e() {
          this.changeHandler = null, this._gridSize = 11, this._bgColor = "#ffffff", this._borderColor = "#000000",
            this._inputColor = "#000000", this._inputBgColor = "#efefef", this._colorPanel = null,
            this._colorTiles = null, this._colorBlock = null, this._colorInput = null, this._colorButton = null,
            this._colors = [], this._selectedColor = "#000000", this._panelChanged = !1, e.__super.call(this);
        }
        s(e, "laya.ui.ColorPicker", t);
        var n = e.prototype;
        return n.destroy = function(e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._colorPanel && this._colorPanel.destroy(e),
            this._colorButton && this._colorButton.destroy(e), this._colorPanel = null, this._colorTiles = null,
            this._colorBlock = null, this._colorInput = null, this._colorButton = null, this._colors = null,
            this.changeHandler = null;
        }, n.createChildren = function() {
          this.addChild(this._colorButton = new N()), this._colorPanel = new R(), this._colorPanel.size(230, 166),
            this._colorPanel.addChild(this._colorTiles = new x()), this._colorPanel.addChild(this._colorBlock = new x()),
            this._colorPanel.addChild(this._colorInput = new f());
        }, n.initialize = function() {
          this._colorButton.on("click", this, this.onColorButtonClick), this._colorBlock.pos(5, 5),
            this._colorInput.pos(60, 5), this._colorInput.size(60, 20), this._colorInput.on("change", this, this.onColorInputChange),
            this._colorInput.on("keydown", this, this.onColorFieldKeyDown), this._colorTiles.pos(5, 30),
            this._colorTiles.on("mousemove", this, this.onColorTilesMouseMove), this._colorTiles.on("click", this, this.onColorTilesClick),
            this._colorTiles.size(20 * this._gridSize, 12 * this._gridSize), this._colorPanel.on("mousedown", this, this.onPanelMouseDown),
            this.bgColor = this._bgColor;
        }, n.onPanelMouseDown = function(t) {
          t.stopPropagation();
        }, n.changePanel = function() {
          this._panelChanged = !1;
          var t = this._colorPanel.graphics;
          t.clear(), t.drawRect(0, 0, 230, 166, this._bgColor, this._borderColor), this.drawBlock(this._selectedColor),
            this._colorInput.borderColor = this._borderColor, this._colorInput.bgColor = this._inputBgColor,
            this._colorInput.color = this._inputColor, (t = this._colorTiles.graphics).clear();
          for (var e = [0, 3355443, 6710886, 10066329, 13421772, 16777215, 16711680, 65280, 255, 16776960, 65535, 16711935], i = 0; i < 12; i++)
            for (var n = 0; n < 20; n++) {
              var s = 0;
              s = 0 === n ? e[i] : 1 === n ? 0 : 51 * (((3 * i + n / 6) % 3 << 0) + 3 * (i / 6 << 0)) << 16 | n % 6 * 51 << 8 | (i << 0) % 6 * 51;
              var r = M.toColor(s);
              this._colors.push(r);
              var a = n * this._gridSize,
                o = i * this._gridSize;
              t.drawRect(a, o, this._gridSize, this._gridSize, r, "#000000");
            }
        }, n.onColorButtonClick = function(t) {
          this._colorPanel.parent ? this.close() : this.open();
        }, n.open = function() {
          var t = this.localToGlobal(new m()),
            e = t.x + this._colorPanel.width <= i.stage.width ? t.x : i.stage.width - this._colorPanel.width,
            n = t.y + this._colorButton.height;
          n = n + this._colorPanel.height <= i.stage.height ? n : t.y - this._colorPanel.height,
            this._colorPanel.pos(e, n), this._colorPanel.zOrder = 1001, i._currentStage.addChild(this._colorPanel),
            i.stage.on("mousedown", this, this.removeColorBox);
        }, n.close = function() {
          i.stage.off("mousedown", this, this.removeColorBox), this._colorPanel.removeSelf();
        }, n.removeColorBox = function(t) {
          this.close();
        }, n.onColorFieldKeyDown = function(t) {
          13 == t.keyCode && (this._colorInput.text ? this.selectedColor = this._colorInput.text : this.selectedColor = null,
            this.close(), t.stopPropagation());
        }, n.onColorInputChange = function(t) {
          this._colorInput.text ? this.drawBlock(this._colorInput.text) : this.drawBlock("#FFFFFF");
        }, n.onColorTilesClick = function(t) {
          this.selectedColor = this.getColorByMouse(), this.close();
        }, n.onColorTilesMouseMove = function(t) {
          this._colorInput.focus = !1;
          var e = this.getColorByMouse();
          this._colorInput.text = e, this.drawBlock(e);
        }, n.getColorByMouse = function() {
          var t = this._colorTiles.getMousePoint(),
            e = Math.floor(t.x / this._gridSize),
            i = Math.floor(t.y / this._gridSize);
          return this._colors[20 * i + e];
        }, n.drawBlock = function(t) {
          var e = this._colorBlock.graphics;
          e.clear();
          var i = t || "#ffffff";
          e.drawRect(0, 0, 50, 20, i, this._borderColor), t || e.drawLine(0, 0, 50, 20, "#ff0000");
        }, n.changeColor = function() {
          var t = this.graphics;
          t.clear();
          var e = this._selectedColor || "#000000";
          t.drawRect(0, 0, this._colorButton.width, this._colorButton.height, e);
        }, n._setPanelChanged = function() {
          this._panelChanged || (this._panelChanged = !0, this.callLater(this.changePanel));
        }, r(0, n, "inputBgColor", function() {
          return this._inputBgColor;
        }, function(t) {
          this._inputBgColor = t, this._setPanelChanged();
        }), r(0, n, "selectedColor", function() {
          return this._selectedColor;
        }, function(t) {
          this._selectedColor != t && (this._selectedColor = this._colorInput.text = t, this.drawBlock(t),
            this.changeColor(), this.changeHandler && this.changeHandler.runWith(this._selectedColor),
            this.event("change", u.EMPTY.setTo("change", this, this)));
        }), r(0, n, "skin", function() {
          return this._colorButton.skin;
        }, function(t) {
          this._colorButton.skin = t, this.changeColor();
        }), r(0, n, "bgColor", function() {
          return this._bgColor;
        }, function(t) {
          this._bgColor = t, this._setPanelChanged();
        }), r(0, n, "borderColor", function() {
          return this._borderColor;
        }, function(t) {
          this._borderColor = t, this._setPanelChanged();
        }), r(0, n, "inputColor", function() {
          return this._inputColor;
        }, function(t) {
          this._inputColor = t, this._setPanelChanged();
        }), e;
      }(A),
      k = function(t) {
        function e(t, i) {
          this._visibleNum = 6, this._button = null, this._list = null, this._isOpen = !1,
            this._itemSize = 12, this._labels = [], this._selectedIndex = -1, this._selectHandler = null,
            this._itemHeight = NaN, this._listHeight = NaN, this._listChanged = !1, this._itemChanged = !1,
            this._scrollBarSkin = null, this._isCustomList = !1, this.itemRender = null, e.__super.call(this),
            this._itemColors = E.comboBoxItemColors, this.skin = t, this.labels = i;
        }
        s(e, "laya.ui.ComboBox", t);
        var n = e.prototype;
        return n.destroy = function(e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._button && this._button.destroy(e),
            this._list && this._list.destroy(e), this._button = null, this._list = null, this._itemColors = null,
            this._labels = null, this._selectHandler = null;
        }, n.createChildren = function() {
          this.addChild(this._button = new N()), this._button.text.align = "left", this._button.labelPadding = "0,0,0,5",
            this._button.on("mousedown", this, this.onButtonMouseDown);
        }, n._createList = function() {
          this._list = new K(), this._scrollBarSkin && (this._list.vScrollBarSkin = this._scrollBarSkin),
            this._setListEvent(this._list);
        }, n._setListEvent = function(t) {
          this._list.selectEnable = !0, this._list.on("mousedown", this, this.onListDown),
            this._list.mouseHandler = p.create(this, this.onlistItemMouse, null, !1), this._list.scrollBar && this._list.scrollBar.on("mousedown", this, this.onScrollBarDown);
        }, n.onListDown = function(t) {
          t.stopPropagation();
        }, n.onScrollBarDown = function(t) {
          t.stopPropagation();
        }, n.onButtonMouseDown = function(t) {
          this.callLater(this.switchTo, [!this._isOpen]);
        }, n.changeList = function() {
          this._listChanged = !1;
          var t = this.width - 2,
            e = this._itemColors[2];
          this._itemHeight = this._itemSize + 6, this._list.itemRender = this.itemRender || {
            type: "Box",
            child: [{
              type: "Label",
              props: {
                name: "label",
                x: 1,
                padding: "3,3,3,3",
                width: t,
                height: this._itemHeight,
                fontSize: this._itemSize,
                color: e
              }
            }]
          }, this._list.repeatY = this._visibleNum, this._list.refresh();
        }, n.onlistItemMouse = function(t, e) {
          var i = t.type;
          if ("mouseover" === i || "mouseout" === i) {
            if (this._isCustomList) return;
            var n = this._list.getCell(e);
            if (!n) return;
            var s = n.getChildByName("label");
            s && ("mouseover" === i ? (s.bgColor = this._itemColors[0], s.color = this._itemColors[1]) : (s.bgColor = null,
              s.color = this._itemColors[2]));
          } else "click" === i && (this.selectedIndex = e, this.isOpen = !1);
        }, n.switchTo = function(t) {
          this.isOpen = t;
        }, n.changeOpen = function() {
          this.isOpen = !this._isOpen;
        }, n.changeItem = function() {
          if (this._itemChanged = !1, this._listHeight = this._labels.length > 0 ? Math.min(this._visibleNum, this._labels.length) * this._itemHeight : this._itemHeight, !this._isCustomList) {
            var t = this._list.graphics;
            t.clear(), t.drawRect(0, 0, this.width - 1, this._listHeight, this._itemColors[4], this._itemColors[3]);
          }
          var e = this._list.array || [];
          e.length = 0;
          for (var i = 0, n = this._labels.length; i < n; i++) e.push({
            label: this._labels[i]
          });
          this._list.height = this._listHeight, this._list.array = e;
        }, n.changeSelected = function() {
          this._button.label = this.selectedLabel;
        }, n._onStageMouseWheel = function(t) {
          this._list && !this._list.contains(t.target) && this.removeList(null);
        }, n.removeList = function(t) {
          i.stage.off("mousedown", this, this.removeList), i.stage.off("mousewheel", this, this._onStageMouseWheel),
            this.isOpen = !1;
        }, r(0, n, "selectedIndex", function() {
          return this._selectedIndex;
        }, function(t) {
          this._selectedIndex != t && (this._selectedIndex = t, this._labels.length > 0 ? this.changeSelected() : this.callLater(this.changeSelected),
            this.event("change", [u.EMPTY.setTo("change", this, this)]), this._selectHandler && this._selectHandler.runWith(this._selectedIndex));
        }), r(0, n, "measureHeight", function() {
          return this._button.height;
        }), r(0, n, "skin", function() {
          return this._button.skin;
        }, function(t) {
          this._button.skin != t && (this._button.skin = t, this._listChanged = !0);
        }), r(0, n, "measureWidth", function() {
          return this._button.width;
        }), r(0, n, "width", t.prototype._$get_width, function(t) {
          i.superSet(A, this, "width", t), this._button.width = this._width, this._itemChanged = !0,
            this._listChanged = !0;
        }), r(0, n, "selectedLabel", function() {
          return this._selectedIndex > -1 && this._selectedIndex < this._labels.length ? this._labels[this._selectedIndex] : null;
        }, function(t) {
          this.selectedIndex = this._labels.indexOf(t);
        }), r(0, n, "labels", function() {
          return this._labels.join(",");
        }, function(t) {
          this._labels.length > 0 && (this.selectedIndex = -1), t ? this._labels = t.split(",") : this._labels.length = 0,
            this._itemChanged = !0;
        }), r(0, n, "height", t.prototype._$get_height, function(t) {
          i.superSet(A, this, "height", t), this._button.height = this._height;
        }), r(0, n, "selectHandler", function() {
          return this._selectHandler;
        }, function(t) {
          this._selectHandler = t;
        }), r(0, n, "visibleNum", function() {
          return this._visibleNum;
        }, function(t) {
          this._visibleNum = t, this._listChanged = !0;
        }), r(0, n, "labelBold", function() {
          return this._button.text.bold;
        }, function(t) {
          this._button.text.bold = t;
        }), r(0, n, "itemColors", function() {
          return String(this._itemColors);
        }, function(t) {
          this._itemColors = M.fillArray(this._itemColors, t, String), this._listChanged = !0;
        }), r(0, n, "itemSize", function() {
          return this._itemSize;
        }, function(t) {
          this._itemSize = t, this._listChanged = !0;
        }), r(0, n, "scrollBar", function() {
          return this.list.scrollBar;
        }), r(0, n, "isOpen", function() {
          return this._isOpen;
        }, function(t) {
          if (this._isOpen != t)
            if (this._isOpen = t, this._button.selected = this._isOpen,
              this._isOpen) {
              this._list || this._createList(), this._listChanged && !this._isCustomList && this.changeList(),
                this._itemChanged && this.changeItem();
              var e = this.localToGlobal(m.TEMP.setTo(0, 0)),
                n = e.y + this._button.height;
              n = n + this._listHeight <= i.stage.height ? n : e.y - this._listHeight, this._list.pos(e.x, n),
                this._list.zOrder = 1001, i._currentStage.addChild(this._list), i.stage.once("mousedown", this, this.removeList),
                i.stage.on("mousewheel", this, this._onStageMouseWheel), this._list.selectedIndex = this._selectedIndex;
            } else this._list && this._list.removeSelf();
        }), r(0, n, "scrollBarSkin", function() {
          return this._scrollBarSkin;
        }, function(t) {
          this._scrollBarSkin = t;
        }), r(0, n, "sizeGrid", function() {
          return this._button.sizeGrid;
        }, function(t) {
          this._button.sizeGrid = t;
        }), r(0, n, "button", function() {
          return this._button;
        }), r(0, n, "list", function() {
          return this._list || this._createList(), this._list;
        }, function(t) {
          t && (t.removeSelf(), this._isCustomList = !0, this._list = t, this._setListEvent(t),
            this._itemHeight = t.getCell(0).height + t.spaceY);
        }), r(0, n, "dataSource", t.prototype._$get_dataSource, function(t) {
          this._dataSource = t, "number" == typeof t && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.labels = t.join(",") : i.superSet(A, this, "dataSource", t);
        }), r(0, n, "labelColors", function() {
          return this._button.labelColors;
        }, function(t) {
          this._button.labelColors != t && (this._button.labelColors = t);
        }), r(0, n, "labelPadding", function() {
          return this._button.text.padding.join(",");
        }, function(t) {
          this._button.text.padding = M.fillArray(E.labelPadding, t, Number);
        }), r(0, n, "labelSize", function() {
          return this._button.text.fontSize;
        }, function(t) {
          this._button.text.fontSize = t;
        }), r(0, n, "labelFont", function() {
          return this._button.text.font;
        }, function(t) {
          this._button.text.font = t;
        }), r(0, n, "stateNum", function() {
          return this._button.stateNum;
        }, function(t) {
          this._button.stateNum = t;
        }), e;
      }(A),
      F = function(t) {
        function e(t) {
          this.rollRatio = .95, this.changeHandler = null, this.scaleBar = !0, this.autoHide = !1,
            this.elasticDistance = 0, this.elasticBackTime = 500, this.upButton = null, this.downButton = null,
            this.slider = null, this._scrollSize = 1, this._skin = null, this._thumbPercent = 1,
            this._target = null, this._lastPoint = null, this._lastOffset = 0, this._checkElastic = !1,
            this._isElastic = !1, this._value = NaN, this._hide = !1, this._clickOnly = !0,
            this._offsets = null, e.__super.call(this), this._showButtons = L.showButtons, this._touchScrollEnable = L.touchScrollEnable,
            this._mouseWheelEnable = L.mouseWheelEnable, this.skin = t, this.max = 1;
        }
        s(e, "laya.ui.ScrollBar", t);
        var n = e.prototype;
        return n.destroy = function(e) {
          void 0 === e && (e = !0), this.stopScroll(), this.target = null, t.prototype.destroy.call(this, e),
            this.upButton && this.upButton.destroy(e), this.downButton && this.downButton.destroy(e),
            this.slider && this.slider.destroy(e), this.upButton = this.downButton = null, this.slider = null,
            this.changeHandler = null, this._offsets = null;
        }, n.createChildren = function() {
          this.addChild(this.slider = new U()), this.addChild(this.upButton = new N()), this.addChild(this.downButton = new N());
        }, n.initialize = function() {
          this.slider.showLabel = !1, this.slider.on("change", this, this.onSliderChange),
            this.slider.setSlider(0, 0, 0), this.upButton.on("mousedown", this, this.onButtonMouseDown),
            this.downButton.on("mousedown", this, this.onButtonMouseDown);
        }, n.onSliderChange = function() {
          this._value != this.slider.value && (this.value = this.slider.value);
        }, n.onButtonMouseDown = function(t) {
          var e = t.currentTarget === this.upButton;
          this.slide(e), i.timer.once(E.scrollBarDelayTime, this, this.startLoop, [e]),
            i.stage.once("mouseup", this, this.onStageMouseUp);
        }, n.startLoop = function(t) {
          i.timer.frameLoop(1, this, this.slide, [t]);
        }, n.slide = function(t) {
          t ? this.value -= this._scrollSize : this.value += this._scrollSize;
        }, n.onStageMouseUp = function(t) {
          i.timer.clear(this, this.startLoop), i.timer.clear(this, this.slide);
        }, n.changeScrollBar = function() {
          this.upButton.visible = this._showButtons, this.downButton.visible = this._showButtons,
            this._showButtons && (this.upButton.skin = this._skin.replace(".png", "$up.png"),
              this.downButton.skin = this._skin.replace(".png", "$down.png")), this.slider.isVertical ? this.slider.y = this._showButtons ? this.upButton.height : 0 : this.slider.x = this._showButtons ? this.upButton.width : 0,
            this.resetPositions(), this.repaint();
        }, n.changeSize = function() {
          t.prototype.changeSize.call(this), this.repaint(), this.resetPositions(), this.event("change"),
            this.changeHandler && this.changeHandler.runWith(this.value);
        }, n.resetPositions = function() {
          this.slider.isVertical ? this.slider.height = this.height - (this._showButtons ? this.upButton.height + this.downButton.height : 0) : this.slider.width = this.width - (this._showButtons ? this.upButton.width + this.downButton.width : 0),
            this.resetButtonPosition();
        }, n.resetButtonPosition = function() {
          this.slider.isVertical ? this.downButton.y = this.slider.y + this.slider.height : this.downButton.x = this.slider.x + this.slider.width;
        }, n.setScroll = function(t, e, i) {
          this.runCallLater(this.changeSize), this.slider.setSlider(t, e, i), this.slider.bar.visible = e > 0, !this._hide && this.autoHide && (this.visible = !1);
        }, n.onTargetMouseWheel = function(t) {
          this.value -= t.delta * this._scrollSize, this.target = this._target;
        }, n.onTargetMouseDown = function(t) {
          this._clickOnly = !0, this._lastOffset = 0, this._checkElastic = !1, this._lastPoint || (this._lastPoint = new m()),
            this._lastPoint.setTo(i.stage.mouseX, i.stage.mouseY), i.timer.clear(this, this.tweenMove),
            I.clearTween(this), i.stage.once("mouseup", this, this.onStageMouseUp2), i.stage.once("mouseout", this, this.onStageMouseUp2),
            i.timer.frameLoop(1, this, this.loop);
        }, n.loop = function() {
          var t = i.stage.mouseY,
            e = i.stage.mouseX;
          if (this._lastOffset = this.isVertical ? t - this._lastPoint.y : e - this._lastPoint.x,
            this._clickOnly) {
            if (!(Math.abs(this._lastOffset * (this.isVertical ? i.stage._canvasTransform.getScaleY() : i.stage._canvasTransform.getScaleX())) > 1)) return;
            this._clickOnly = !1, this._offsets || (this._offsets = []), this._offsets.length = 0,
              this._target.mouseEnabled = !1, !this.hide && this.autoHide && (this.alpha = 1,
                this.visible = !0), this.event("start");
          }
          this._offsets.push(this._lastOffset), this._lastPoint.x = e, this._lastPoint.y = t,
            0 !== this._lastOffset && (this._checkElastic || (this.elasticDistance > 0 ? this._checkElastic || 0 == this._lastOffset || (this._lastOffset > 0 && this._value <= this.min || this._lastOffset < 0 && this._value >= this.max ? (this._isElastic = !0,
              this._checkElastic = !0) : this._isElastic = !1) : this._checkElastic = !0), this._isElastic ? this._value <= this.min ? this.value -= this._lastOffset * Math.max(0, 1 - (this.min - this._value) / this.elasticDistance) : this._value >= this.max && (this.value -= this._lastOffset * Math.max(0, 1 - (this._value - this.max) / this.elasticDistance)) : this.value -= this._lastOffset);
        }, n.onStageMouseUp2 = function(t) {
          if (i.stage.off("mouseup", this, this.onStageMouseUp2), i.stage.off("mouseout", this, this.onStageMouseUp2),
            i.timer.clear(this, this.loop), !(this._clickOnly && this._value >= this.min && this._value <= this.max))
            if (this._target.mouseEnabled = !0,
              this._isElastic) this._value < this.min ? I.to(this, {
              value: this.min
            }, this.elasticBackTime, l.sineOut, p.create(this, this.elasticOver)) : this._value > this.max && I.to(this, {
              value: this.max
            }, this.elasticBackTime, l.sineOut, p.create(this, this.elasticOver));
            else {
              if (!this._offsets) return;
              this._offsets.length < 1 && (this._offsets[0] = this.isVertical ? i.stage.mouseY - this._lastPoint.y : i.stage.mouseX - this._lastPoint.x);
              for (var e = 0, n = Math.min(this._offsets.length, 3), s = 0; s < n; s++) e += this._offsets[this._offsets.length - 1 - s];
              if (this._lastOffset = e / n, (e = Math.abs(this._lastOffset)) < 2) return void this.event("end");
              e > 60 && (this._lastOffset = this._lastOffset > 0 ? 60 : -60);
              var r = Math.round(Math.abs(this.elasticDistance * (this._lastOffset / 240)));
              i.timer.frameLoop(1, this, this.tweenMove, [r]);
            }
        }, n.elasticOver = function() {
          this._isElastic = !1, !this.hide && this.autoHide && I.to(this, {
            alpha: 0
          }, 500), this.event("end");
        }, n.tweenMove = function(t) {
          this._lastOffset *= this.rollRatio;
          var e = NaN;
          if (t > 0 && (this._lastOffset > 0 && this.value <= this.min ? (this._isElastic = !0,
              e = .5 * -(this.min - t - this.value), this._lastOffset > e && (this._lastOffset = e)) : this._lastOffset < 0 && this.value >= this.max && (this._isElastic = !0,
              e = .5 * -(this.max + t - this.value), this._lastOffset < e && (this._lastOffset = e))),
            this.value -= this._lastOffset, Math.abs(this._lastOffset) < 1) {
            if (i.timer.clear(this, this.tweenMove), this._isElastic) return void(this._value < this.min ? I.to(this, {
              value: this.min
            }, this.elasticBackTime, l.sineOut, p.create(this, this.elasticOver)) : this._value > this.max ? I.to(this, {
              value: this.max
            }, this.elasticBackTime, l.sineOut, p.create(this, this.elasticOver)) : this.elasticOver());
            this.event("end"), !this.hide && this.autoHide && I.to(this, {
              alpha: 0
            }, 500);
          }
        }, n.stopScroll = function() {
          this.onStageMouseUp2(null), i.timer.clear(this, this.tweenMove), I.clearTween(this);
        }, r(0, n, "measureHeight", function() {
          return this.slider.isVertical ? 100 : this.slider.height;
        }), r(0, n, "skin", function() {
          return this._skin;
        }, function(t) {
          this._skin != t && (this._skin = t, this.slider.skin = this._skin, this.callLater(this.changeScrollBar));
        }), r(0, n, "max", function() {
          return this.slider.max;
        }, function(t) {
          this.slider.max = t;
        }), r(0, n, "showButtons", function() {
          return this._showButtons;
        }, function(t) {
          this._showButtons = t, this.callLater(this.changeScrollBar);
        }), r(0, n, "measureWidth", function() {
          return this.slider.isVertical ? this.slider.width : 100;
        }), r(0, n, "min", function() {
          return this.slider.min;
        }, function(t) {
          this.slider.min = t;
        }), r(0, n, "value", function() {
          return this._value;
        }, function(t) {
          t !== this._value && (this._value = t, this._isElastic || (this.slider._value != t && (this.slider._value = t,
              this.slider.changeValue()), this._value = this.slider._value), this.event("change"),
            this.changeHandler && this.changeHandler.runWith(this._value));
        }), r(0, n, "isVertical", function() {
          return this.slider.isVertical;
        }, function(t) {
          this.slider.isVertical = t;
        }), r(0, n, "sizeGrid", function() {
          return this.slider.sizeGrid;
        }, function(t) {
          this.slider.sizeGrid = t;
        }), r(0, n, "scrollSize", function() {
          return this._scrollSize;
        }, function(t) {
          this._scrollSize = t;
        }), r(0, n, "dataSource", t.prototype._$get_dataSource, function(t) {
          this._dataSource = t, "number" == typeof t || "string" == typeof t ? this.value = Number(t) : i.superSet(A, this, "dataSource", t);
        }), r(0, n, "thumbPercent", function() {
          return this._thumbPercent;
        }, function(t) {
          this.runCallLater(this.changeScrollBar), this.runCallLater(this.changeSize), t = t >= 1 ? .99 : t,
            this._thumbPercent = t, this.scaleBar && (this.slider.isVertical ? this.slider.bar.height = Math.max(this.slider.height * t, E.scrollBarMinNum) : this.slider.bar.width = Math.max(this.slider.width * t, E.scrollBarMinNum));
        }), r(0, n, "target", function() {
          return this._target;
        }, function(t) {
          this._target && (this._target.off("mousewheel", this, this.onTargetMouseWheel),
              this._target.off("mousedown", this, this.onTargetMouseDown)), this._target = t,
            t && (this._mouseWheelEnable && this._target.on("mousewheel", this, this.onTargetMouseWheel),
              this._touchScrollEnable && this._target.on("mousedown", this, this.onTargetMouseDown));
        }), r(0, n, "hide", function() {
          return this._hide;
        }, function(t) {
          this._hide = t, this.visible = !t;
        }), r(0, n, "touchScrollEnable", function() {
          return this._touchScrollEnable;
        }, function(t) {
          this._touchScrollEnable = t, this.target = this._target;
        }), r(0, n, "mouseWheelEnable", function() {
          return this._mouseWheelEnable;
        }, function(t) {
          this._mouseWheelEnable = t;
        }), r(0, n, "tick", function() {
          return this.slider.tick;
        }, function(t) {
          this.slider.tick = t;
        }), e;
      }(A),
      U = function(t) {
        function e(t) {
          this.changeHandler = null, this.isVertical = !0, this.showLabel = !0, this._allowClickBack = !1,
            this._max = 100, this._min = 0, this._tick = 1, this._value = 0, this._skin = null,
            this._bg = null, this._progress = null, this._bar = null, this._tx = NaN, this._ty = NaN,
            this._maxMove = NaN, this._globalSacle = null, e.__super.call(this), this.skin = t;
        }
        s(e, "laya.ui.Slider", t);
        var a = e.prototype;
        return a.destroy = function(e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._bg && this._bg.destroy(e),
            this._bar && this._bar.destroy(e), this._progress && this._progress.destroy(e),
            this._bg = null, this._bar = null, this._progress = null, this.changeHandler = null;
        }, a.createChildren = function() {
          this.addChild(this._bg = new G()), this.addChild(this._bar = new N());
        }, a.initialize = function() {
          this._bar.on("mousedown", this, this.onBarMouseDown), this._bg.sizeGrid = this._bar.sizeGrid = "4,4,4,4,0",
            this._progress && (this._progress.sizeGrid = this._bar.sizeGrid), this.allowClickBack = !0;
        }, a.onBarMouseDown = function(t) {
          this._globalSacle || (this._globalSacle = new m()), this._globalSacle.setTo(this.globalScaleX || .01, this.globalScaleY || .01),
            this._maxMove = this.isVertical ? this.height - this._bar.height : this.width - this._bar.width,
            this._tx = i.stage.mouseX, this._ty = i.stage.mouseY, i.stage.on("mousemove", this, this.mouseMove),
            i.stage.once("mouseup", this, this.mouseUp), i.stage.once("mouseout", this, this.mouseUp),
            this.showValueText();
        }, a.showValueText = function() {
          if (this.showLabel) {
            var t = laya.ui.Slider.label;
            this.addChild(t), t.textField.changeText(this._value + ""), this.isVertical ? (t.x = this._bar.x + 20,
              t.y = .5 * (this._bar.height - t.height) + this._bar.y) : (t.y = this._bar.y - 20,
              t.x = .5 * (this._bar.width - t.width) + this._bar.x);
          }
        }, a.hideValueText = function() {
          laya.ui.Slider.label && laya.ui.Slider.label.removeSelf();
        }, a.mouseUp = function(t) {
          i.stage.off("mousemove", this, this.mouseMove), i.stage.off("mouseup", this, this.mouseUp),
            i.stage.off("mouseout", this, this.mouseUp), this.sendChangeEvent("changed"), this.hideValueText();
        }, a.mouseMove = function(t) {
          var e = this._value;
          this.isVertical ? (this._bar.y += (i.stage.mouseY - this._ty) / this._globalSacle.y,
              this._bar.y > this._maxMove ? this._bar.y = this._maxMove : this._bar.y < 0 && (this._bar.y = 0),
              this._value = this._bar.y / this._maxMove * (this._max - this._min) + this._min,
              this._progress && (this._progress.height = this._bar.y + .5 * this._bar.height)) : (this._bar.x += (i.stage.mouseX - this._tx) / this._globalSacle.x,
              this._bar.x > this._maxMove ? this._bar.x = this._maxMove : this._bar.x < 0 && (this._bar.x = 0),
              this._value = this._bar.x / this._maxMove * (this._max - this._min) + this._min,
              this._progress && (this._progress.width = this._bar.x + .5 * this._bar.width)),
            this._tx = i.stage.mouseX, this._ty = i.stage.mouseY;
          var n = Math.pow(10, (this._tick + "").length - 1);
          this._value = Math.round(Math.round(this._value / this._tick) * this._tick * n) / n,
            this._value != e && this.sendChangeEvent(), this.showValueText();
        }, a.sendChangeEvent = function(t) {
          void 0 === t && (t = "change"), this.event(t), this.changeHandler && this.changeHandler.runWith(this._value);
        }, a.setBarPoint = function() {
          this.isVertical ? this._bar.x = Math.round(.5 * (this._bg.width - this._bar.width)) : this._bar.y = Math.round(.5 * (this._bg.height - this._bar.height));
        }, a.changeSize = function() {
          t.prototype.changeSize.call(this), this.isVertical ? this._bg.height = this.height : this._bg.width = this.width,
            this.setBarPoint(), this.changeValue();
        }, a.setSlider = function(t, e, i) {
          this._value = -1, this._min = t, this._max = e > t ? e : t, this.value = i < t ? t : i > e ? e : i;
        }, a.changeValue = function() {
          var t = Math.pow(10, (this._tick + "").length - 1);
          this._value = Math.round(Math.round(this._value / this._tick) * this._tick * t) / t,
            this._value = this._value > this._max ? this._max : this._value < this._min ? this._min : this._value;
          var e = this._max - this._min;
          0 === e && (e = 1), this.isVertical ? (this._bar.y = (this._value - this._min) / e * (this.height - this._bar.height),
            this._progress && (this._progress.height = this._bar.y + .5 * this._bar.height)) : (this._bar.x = (this._value - this._min) / e * (this.width - this._bar.width),
            this._progress && (this._progress.width = this._bar.x + .5 * this._bar.width));
        }, a.onBgMouseDown = function(t) {
          var e = this._bg.getMousePoint();
          this.isVertical ? this.value = e.y / (this.height - this._bar.height) * (this._max - this._min) + this._min : this.value = e.x / (this.width - this._bar.width) * (this._max - this._min) + this._min;
        }, r(0, a, "measureHeight", function() {
          return Math.max(this._bg.height, this._bar.height);
        }), r(0, a, "skin", function() {
          return this._skin;
        }, function(t) {
          if (this._skin != t) {
            this._skin = t, this._bg.skin = this._skin, this._bar.skin = this._skin.replace(".png", "$bar.png");
            var e = this._skin.replace(".png", "$progress.png");
            g.getRes(e) && (this._progress || (this.addChild(this._progress = new G()), this._progress.sizeGrid = this._bar.sizeGrid,
                this.setChildIndex(this._progress, 1)), this._progress.skin = e), this.setBarPoint(),
              this.callLater(this.changeValue);
          }
        }), r(0, a, "allowClickBack", function() {
          return this._allowClickBack;
        }, function(t) {
          this._allowClickBack != t && (this._allowClickBack = t, t ? this._bg.on("mousedown", this, this.onBgMouseDown) : this._bg.off("mousedown", this, this.onBgMouseDown));
        }), r(0, a, "max", function() {
          return this._max;
        }, function(t) {
          this._max != t && (this._max = t, this.callLater(this.changeValue));
        }), r(0, a, "measureWidth", function() {
          return Math.max(this._bg.width, this._bar.width);
        }), r(0, a, "tick", function() {
          return this._tick;
        }, function(t) {
          this._tick != t && (this._tick = t, this.callLater(this.changeValue));
        }), r(0, a, "sizeGrid", function() {
          return this._bg.sizeGrid;
        }, function(t) {
          this._bg.sizeGrid = t, this._bar.sizeGrid = t, this._progress && (this._progress.sizeGrid = this._bar.sizeGrid);
        }), r(0, a, "min", function() {
          return this._min;
        }, function(t) {
          this._min != t && (this._min = t, this.callLater(this.changeValue));
        }), r(0, a, "value", function() {
          return this._value;
        }, function(t) {
          if (this._value != t) {
            var e = this._value;
            this._value = t, this.changeValue(), this._value != e && this.sendChangeEvent();
          }
        }), r(0, a, "dataSource", t.prototype._$get_dataSource, function(t) {
          this._dataSource = t, "number" == typeof t || "string" == typeof t ? this.value = Number(t) : i.superSet(A, this, "dataSource", t);
        }), r(0, a, "bar", function() {
          return this._bar;
        }), n(e, ["label", function() {
          return this.label = new V();
        }]), e;
      }(A),
      G = function(t) {
        function e(t) {
          this._bitmap = null, this._skin = null, this._group = null, e.__super.call(this),
            this.skin = t;
        }
        s(e, "laya.ui.Image", t);
        var n = e.prototype;
        return n.destroy = function(e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, !0), this._bitmap && this._bitmap.destroy(),
            this._bitmap = null;
        }, n.dispose = function() {
          this.destroy(!0), i.loader.clearRes(this._skin);
        }, n.createChildren = function() {
          this.graphics = this._bitmap = new P(), this._bitmap.autoCacheCmd = !1;
        }, n.setSource = function(t, e) {
          t === this._skin && e && (this.source = e, this.onCompResize());
        }, r(0, n, "source", function() {
          return this._bitmap.source;
        }, function(t) {
          this._bitmap && (this._bitmap.source = t, this.event("loaded"), this.repaint());
        }), r(0, n, "dataSource", t.prototype._$get_dataSource, function(t) {
          this._dataSource = t, "string" == typeof t ? this.skin = t : i.superSet(A, this, "dataSource", t);
        }), r(0, n, "measureHeight", function() {
          return this._bitmap.height;
        }), r(0, n, "skin", function() {
          return this._skin;
        }, function(t) {
          if (this._skin != t)
            if (this._skin = t, t) {
              var e = g.getRes(t);
              e ? (this.source = e, this.onCompResize()) : i.loader.load(this._skin, p.create(this, this.setSource, [this._skin]), null, "image", 1, !0, this._group);
            } else this.source = null;
        }), r(0, n, "group", function() {
          return this._group;
        }, function(t) {
          t && this._skin && g.setGroup(this._skin, t), this._group = t;
        }), r(0, n, "sizeGrid", function() {
          return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null;
        }, function(t) {
          this._bitmap.sizeGrid = M.fillArray(E.defaultSizeGrid, t, Number);
        }), r(0, n, "measureWidth", function() {
          return this._bitmap.width;
        }), r(0, n, "width", t.prototype._$get_width, function(t) {
          i.superSet(A, this, "width", t), this._bitmap.width = 0 == t ? 1e-7 : t;
        }), r(0, n, "height", t.prototype._$get_height, function(t) {
          i.superSet(A, this, "height", t), this._bitmap.height = 0 == t ? 1e-7 : t;
        }), e;
      }(A),
      V = function(t) {
        function e(t) {
          this._tf = null, e.__super.call(this), void 0 === t && (t = ""), c.defaultColor = E.labelColor,
            this.text = t;
        }
        s(e, "laya.ui.Label", t);
        var n = e.prototype;
        return n.destroy = function(e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._tf = null;
        }, n.createChildren = function() {
          this.addChild(this._tf = new b());
        }, n.changeText = function(t) {
          this._tf.changeText(t);
        }, r(0, n, "padding", function() {
          return this._tf.padding.join(",");
        }, function(t) {
          this._tf.padding = M.fillArray(E.labelPadding, t, Number);
        }), r(0, n, "bold", function() {
          return this._tf.bold;
        }, function(t) {
          this._tf.bold = t;
        }), r(0, n, "align", function() {
          return this._tf.align;
        }, function(t) {
          this._tf.align = t;
        }), r(0, n, "text", function() {
          return this._tf.text;
        }, function(t) {
          this._tf.text != t && (t && (t = M.adptString(t + "")), this._tf.text = t, this.event("change"),
            this._width && this._height || this.onCompResize());
        }), r(0, n, "italic", function() {
          return this._tf.italic;
        }, function(t) {
          this._tf.italic = t;
        }), r(0, n, "wordWrap", function() {
          return this._tf.wordWrap;
        }, function(t) {
          this._tf.wordWrap = t;
        }), r(0, n, "font", function() {
          return this._tf.font;
        }, function(t) {
          this._tf.font = t;
        }), r(0, n, "dataSource", t.prototype._$get_dataSource, function(t) {
          this._dataSource = t, "number" == typeof t || "string" == typeof t ? this.text = t + "" : i.superSet(A, this, "dataSource", t);
        }), r(0, n, "color", function() {
          return this._tf.color;
        }, function(t) {
          this._tf.color = t;
        }), r(0, n, "valign", function() {
          return this._tf.valign;
        }, function(t) {
          this._tf.valign = t;
        }), r(0, n, "leading", function() {
          return this._tf.leading;
        }, function(t) {
          this._tf.leading = t;
        }), r(0, n, "fontSize", function() {
          return this._tf.fontSize;
        }, function(t) {
          this._tf.fontSize = t;
        }), r(0, n, "bgColor", function() {
          return this._tf.bgColor;
        }, function(t) {
          this._tf.bgColor = t;
        }), r(0, n, "borderColor", function() {
          return this._tf.borderColor;
        }, function(t) {
          this._tf.borderColor = t;
        }), r(0, n, "stroke", function() {
          return this._tf.stroke;
        }, function(t) {
          this._tf.stroke = t;
        }), r(0, n, "strokeColor", function() {
          return this._tf.strokeColor;
        }, function(t) {
          this._tf.strokeColor = t;
        }), r(0, n, "textField", function() {
          return this._tf;
        }), r(0, n, "measureWidth", function() {
          return this._tf.width;
        }), r(0, n, "measureHeight", function() {
          return this._tf.height;
        }), r(0, n, "width", function() {
          return this._width || this._tf.text ? i.superGet(A, this, "width") : 0;
        }, function(t) {
          i.superSet(A, this, "width", t), this._tf.width = t;
        }), r(0, n, "height", function() {
          return this._height || this._tf.text ? i.superGet(A, this, "height") : 0;
        }, function(t) {
          i.superSet(A, this, "height", t), this._tf.height = t;
        }), r(0, n, "overflow", function() {
          return this._tf.overflow;
        }, function(t) {
          this._tf.overflow = t;
        }), r(0, n, "underline", function() {
          return this._tf.underline;
        }, function(t) {
          this._tf.underline = t;
        }), r(0, n, "underlineColor", function() {
          return this._tf.underlineColor;
        }, function(t) {
          this._tf.underlineColor = t;
        }), e;
      }(A),
      H = function(t) {
        function e(t) {
          this.changeHandler = null, this._bg = null, this._bar = null, this._skin = null,
            this._value = .5, e.__super.call(this), this.skin = t;
        }
        s(e, "laya.ui.ProgressBar", t);
        var n = e.prototype;
        return n.destroy = function(e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._bg && this._bg.destroy(e),
            this._bar && this._bar.destroy(e), this._bg = this._bar = null, this.changeHandler = null;
        }, n.createChildren = function() {
          this.addChild(this._bg = new G()), this.addChild(this._bar = new G()), this._bar._bitmap.autoCacheCmd = !1;
        }, n.changeValue = function() {
          if (this.sizeGrid) {
            var t = this.sizeGrid.split(","),
              e = Number(t[3]),
              i = Number(t[1]),
              n = (this.width - e - i) * this._value;
            this._bar.width = e + i + n, this._bar.visible = this._bar.width > e + i;
          } else this._bar.width = this.width * this._value;
        }, r(0, n, "measureHeight", function() {
          return this._bg.height;
        }), r(0, n, "skin", function() {
          return this._skin;
        }, function(t) {
          this._skin != t && (this._skin = t, this._bg.skin = this._skin, this._bar.skin = this._skin.replace(".png", "$bar.png"),
            this.callLater(this.changeValue));
        }), r(0, n, "measureWidth", function() {
          return this._bg.width;
        }), r(0, n, "height", t.prototype._$get_height, function(t) {
          i.superSet(A, this, "height", t), this._bg.height = this._height, this._bar.height = this._height;
        }), r(0, n, "bar", function() {
          return this._bar;
        }), r(0, n, "value", function() {
          return this._value;
        }, function(t) {
          this._value != t && (t = t > 1 ? 1 : t < 0 ? 0 : t, this._value = t, this.callLater(this.changeValue),
            this.event("change"), this.changeHandler && this.changeHandler.runWith(t));
        }), r(0, n, "bg", function() {
          return this._bg;
        }), r(0, n, "sizeGrid", function() {
          return this._bg.sizeGrid;
        }, function(t) {
          this._bg.sizeGrid = this._bar.sizeGrid = t;
        }), r(0, n, "width", t.prototype._$get_width, function(t) {
          i.superSet(A, this, "width", t), this._bg.width = this._width, this.callLater(this.changeValue);
        }), r(0, n, "dataSource", t.prototype._$get_dataSource, function(t) {
          this._dataSource = t, "number" == typeof t || "string" == typeof t ? this.value = Number(t) : i.superSet(A, this, "dataSource", t);
        }), e;
      }(A),
      z = (function(t) {
        function e() {
          this._tipBox = null, this._tipText = null, this._defaultTipHandler = null, e.__super.call(this),
            this._tipBox = new A(), this._tipBox.addChild(this._tipText = new b()), this._tipText.x = this._tipText.y = 5,
            this._tipText.color = e.tipTextColor, this._defaultTipHandler = this._showDefaultTip,
            i.stage.on("showtip", this, this._onStageShowTip), i.stage.on("hidetip", this, this._onStageHideTip),
            this.zOrder = 1100;
        }
        s(e, "laya.ui.TipManager", A);
        var n = e.prototype;
        n._onStageHideTip = function(t) {
            i.timer.clear(this, this._showTip), this.closeAll(), this.removeSelf();
          }, n._onStageShowTip = function(t) {
            i.timer.once(e.tipDelay, this, this._showTip, [t], !0);
          }, n._showTip = function(t) {
            if ("string" == typeof t) {
              var e = String(t);
              Boolean(e) && this._defaultTipHandler(e);
            } else t instanceof laya.utils.Handler ? t.run() : "function" == typeof t && t.apply();
            i.stage.on("mousemove", this, this._onStageMouseMove), i.stage.on("mousedown", this, this._onStageMouseDown),
              this._onStageMouseMove(null);
          }, n._onStageMouseDown = function(t) {
            this.closeAll();
          }, n._onStageMouseMove = function(t) {
            this._showToStage(this, e.offsetX, e.offsetY);
          }, n._showToStage = function(t, e, n) {
            void 0 === e && (e = 0), void 0 === n && (n = 0);
            var s = t.getBounds();
            t.x = i.stage.mouseX + e, t.y = i.stage.mouseY + n, t.x + s.width > i.stage.width && (t.x -= s.width + e),
              t.y + s.height > i.stage.height && (t.y -= s.height + n);
          }, n.closeAll = function() {
            i.timer.clear(this, this._showTip), i.stage.off("mousemove", this, this._onStageMouseMove),
              i.stage.off("mousedown", this, this._onStageMouseDown), this.removeChildren();
          }, n.showDislayTip = function(t) {
            this.addChild(t), this._showToStage(this), i._currentStage.addChild(this);
          }, n._showDefaultTip = function(t) {
            this._tipText.text = t;
            var n = this._tipBox.graphics;
            n.clear(), n.drawRect(0, 0, this._tipText.width + 10, this._tipText.height + 10, e.tipBackColor),
              this.addChild(this._tipBox), this._showToStage(this), i._currentStage.addChild(this);
          }, r(0, n, "defaultTipHandler", function() {
            return this._defaultTipHandler;
          }, function(t) {
            this._defaultTipHandler = t;
          }), e.offsetX = 10, e.offsetY = 15, e.tipTextColor = "#ffffff", e.tipBackColor = "#111111",
          e.tipDelay = 200;
      }(), function(t) {
        function e() {
          this._idMap = null, this._aniList = null, this._watchMap = {}, e.__super.call(this);
        }
        var r;
        s(e, "laya.ui.View", R);
        var h = e.prototype;
        return h.createView = function(t) {
          if (t.animations && !this._idMap && (this._idMap = {}), e.createComp(t, this, this),
            t.animations) {
            var i, n, s = [],
              r = t.animations,
              a = 0,
              o = r.length;
            for (a = 0; a < o; a++) {
              switch (i = new _(), n = r[a], i._setUp(this._idMap, n), this[n.name] = i, i._setControlNode(this),
                n.action) {
                case 1:
                  i.play(0, !1);
                  break;

                case 2:
                  i.play(0, !0);
              }
              s.push(i);
            }
            this._aniList = s;
          }
          this._width > 0 && null == t.props.hitTestPrior && !this.mouseThrough && (this.hitTestPrior = !0);
        }, h.onEvent = function(t, e) {}, h.loadUI = function(t) {
          var i = e.uiMap[t];
          i && this.createView(i);
        }, h.destroy = function(t) {
          void 0 === t && (t = !0), this._aniList && (this._aniList.length = 0), this._idMap = null,
            this._aniList = null, this._watchMap = null, laya.ui.Component.prototype.destroy.call(this, t);
        }, h.changeData = function(t) {
          var e = this._watchMap[t];
          if (e) {
            console.log("change", t);
            for (var i = 0, n = e.length; i < n; i++) {
              e[i].exe(this);
            }
          }
        }, e._regs = function() {
          for (var t in e.uiClassMap) o.regClass(t, e.uiClassMap[t]);
        }, e.createComp = function(t, n, s, r) {
          if (!(n = n || e.getCompInstance(t))) return console.warn("can not create:" + t.type),
            null;
          var a = t.child;
          if (a)
            for (var h = n instanceof laya.ui.List, l = 0, u = a.length; l < u; l++) {
              var c = a[l];
              if (!n.hasOwnProperty("itemRender") || "render" != c.props.name && "render" !== c.props.renderType)
                if ("Graphic" == c.type) o.addGraphicsToSprite(c, n);
                else if (o.isDrawType(c.type)) o.addGraphicToSprite(c, n, !0);
              else {
                if (h) {
                  var _ = [],
                    d = e.createComp(c, null, s, _);
                  _.length && (d._$bindData = _);
                } else d = e.createComp(c, null, s, r);
                "Script" == c.type ? "owner" in d ? d.owner = n : "target" in d && (d.target = n) : "mask" == c.props.renderType || "mask" == c.props.name ? n.mask = d : d instanceof laya.display.Sprite && n.addChild(d);
              } else n.itemRender = c;
            }
          var p = t.props;
          for (var f in p) {
            var g = p[f];
            e.eventDic[f] ? g && s && n.on(f, s, s.onEvent, [g]) : e.setCompValue(n, f, g, s, r);
          }
          return i.__typeof(n, "laya.ui.IItem") && n.initItems(), t.compId && s && s._idMap && (s._idMap[t.compId] = n),
            n;
        }, e.setCompValue = function(t, n, s, a, h) {
          if ("string" == typeof s && s.indexOf("${") > -1) {
            if (e._sheet || (e._sheet = o.getClass("laya.data.Table")), !e._sheet) return void console.warn("Can not find class Sheet");
            if (h) h.push(t, n, s);
            else if (a) {
              -1 == s.indexOf("].") && (s = s.replace(".", "[0]."));
              var l = new r(t, n, s);
              l.exe(a);
              for (var u, c, _ = s.replace(/\[.*?\]\./g, "."); null != (u = e._parseWatchData.exec(_));) {
                for (var d = u[1]; null != (c = e._parseKeyWord.exec(d));) {
                  var p = c[0],
                    f = a._watchMap[p] || (a._watchMap[p] = []);
                  f.push(l), e._sheet.I.notifer.on(p, a, a.changeData, [p]);
                }
                (f = a._watchMap[d] || (a._watchMap[d] = [])).push(l), e._sheet.I.notifer.on(d, a, a.changeData, [d]);
              }
            }
          } else if ("var" === n && a) a[s] = t;
          else if ("onClick" == n) {
            var g = i._runScript("(function(){" + s + "})");
            t.on("click", a, g);
          } else t[n] = "true" === s || "false" !== s && s;
        }, e.getCompInstance = function(t) {
          var n, s = t.props ? t.props.runtime : null;
          return n = s ? e.viewClassMap[s] || e.uiClassMap[s] || i.__classmap[s] : e.uiClassMap[t.type],
            t.props && t.props.hasOwnProperty("renderType") && "instance" == t.props.renderType ? n.instance : n ? new n() : null;
        }, e.regComponent = function(t, i) {
          e.uiClassMap[t] = i, o.regClass(t, i);
        }, e.regViewRuntime = function(t, i) {
          e.viewClassMap[t] = i;
        }, e.uiMap = {}, e.viewClassMap = {}, e._sheet = null, n(e, ["uiClassMap", function() {
          return this.uiClassMap = {
            ViewStack: tt,
            LinkButton: N,
            TextArea: lt,
            ColorPicker: B,
            Box: R,
            Button: N,
            CheckBox: W,
            Clip: O,
            ComboBox: k,
            Component: A,
            HScrollBar: j,
            HSlider: q,
            Image: G,
            Label: V,
            List: K,
            Panel: $,
            ProgressBar: H,
            Radio: Z,
            RadioGroup: ot,
            ScrollBar: F,
            Slider: U,
            Tab: ht,
            TextInput: it,
            View: e,
            VScrollBar: et,
            VSlider: nt,
            Tree: J,
            HBox: rt,
            VBox: at,
            Sprite: x,
            Animation: a,
            Text: b,
            FontClip: X
          };
        }, "eventDic", function() {
          return this.eventDic = {
            mousedown: !0,
            mouseup: !0,
            mousemove: !0,
            mouseover: !0,
            mouseout: !0,
            click: !0,
            doubleclick: !0,
            rightmousedown: !0,
            rightmouseup: !0,
            rightclick: !0
          };
        }, "_parseWatchData", function() {
          return this._parseWatchData = /\${(.*?)}/g;
        }, "_parseKeyWord", function() {
          return this._parseKeyWord = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g;
        }]), e.__init$ = function() {
          e._regs(), r = function() {
            function t(t, e, i) {
              this.comp = null, this.prop = null, this.value = null, this.comp = t, this.prop = e,
                this.value = i;
            }
            s(t, "");
            return t.prototype.exe = function(t) {
              var e = M.getBindFun(this.value);
              this.comp[this.prop] = e.call(this, t);
            }, t;
          }();
        }, e;
      }()),
      W = function(t) {
        function e(t, i) {
          void 0 === i && (i = ""), e.__super.call(this, t, i);
        }
        s(e, "laya.ui.CheckBox", t);
        var n = e.prototype;
        return n.preinitialize = function() {
          laya.ui.Component.prototype.preinitialize.call(this), this.toggle = !0, this._autoSize = !1;
        }, n.initialize = function() {
          t.prototype.initialize.call(this), this.createText(), this._text.align = "left",
            this._text.valign = "top", this._text.width = 0;
        }, r(0, n, "dataSource", t.prototype._$get_dataSource, function(t) {
          this._dataSource = t, "boolean" == typeof t ? this.selected = t : "string" == typeof t ? this.selected = "true" === t : i.superSet(N, this, "dataSource", t);
        }), e;
      }(N),
      Y = function(t) {
        function e() {
          this._space = 0, this._align = "none", this._itemChanged = !1, e.__super.call(this);
        }
        s(e, "laya.ui.LayoutBox", R);
        var i = e.prototype;
        return i.addChild = function(t) {
          return t.on("resize", this, this.onResize), this._setItemChanged(), laya.display.Node.prototype.addChild.call(this, t);
        }, i.onResize = function(t) {
          this._setItemChanged();
        }, i.addChildAt = function(t, e) {
          return t.on("resize", this, this.onResize), this._setItemChanged(), laya.display.Node.prototype.addChildAt.call(this, t, e);
        }, i.removeChild = function(t) {
          return t.off("resize", this, this.onResize), this._setItemChanged(), laya.display.Node.prototype.removeChild.call(this, t);
        }, i.removeChildAt = function(t) {
          return this.getChildAt(t).off("resize", this, this.onResize), this._setItemChanged(),
            laya.display.Node.prototype.removeChildAt.call(this, t);
        }, i.refresh = function() {
          this._setItemChanged();
        }, i.changeItems = function() {
          this._itemChanged = !1;
        }, i.sortItem = function(t) {
          t && t.sort(function(t, e) {
            return t.y - e.y;
          });
        }, i._setItemChanged = function() {
          this._itemChanged || (this._itemChanged = !0, this.callLater(this.changeItems));
        }, r(0, i, "space", function() {
          return this._space;
        }, function(t) {
          this._space = t, this._setItemChanged();
        }), r(0, i, "align", function() {
          return this._align;
        }, function(t) {
          this._align = t, this._setItemChanged();
        }), e;
      }(),
      X = function(t) {
        function e(t, i) {
          this._valueArr = null, this._indexMap = null, this._sheet = null, this._direction = "horizontal",
            this._spaceX = 0, this._spaceY = 0, this._align = "left", this._wordsW = 0, this._wordsH = 0,
            e.__super.call(this), t && (this.skin = t), i && (this.sheet = i);
        }
        s(e, "laya.ui.FontClip", t);
        var n = e.prototype;
        return n.createChildren = function() {
          this._bitmap = new P(), this.on("loaded", this, this._onClipLoaded);
        }, n._onClipLoaded = function() {
          this.callLater(this.changeValue);
        }, n.changeValue = function() {
          if (this._sources && this._valueArr) {
            this.graphics.clear(!0);
            var t;
            if (t = this._sources[0]) {
              var e = "horizontal" === this._direction;
              e ? (this._wordsW = this._valueArr.length * (t.sourceWidth + this.spaceX), this._wordsH = t.sourceHeight) : (this._wordsW = t.sourceWidth,
                this._wordsH = (t.sourceHeight + this.spaceY) * this._valueArr.length);
              var i = 0;
              if (this._width) switch (this._align) {
                case "center":
                  i = .5 * (this._width - this._wordsW);
                  break;

                case "right":
                  i = this._width - this._wordsW;
                  break;

                default:
                  i = 0;
              }
              for (var n = 0, s = this._valueArr.length; n < s; n++) {
                var r = this._indexMap[this._valueArr.charAt(n)];
                this.sources[r] && (t = this.sources[r], e ? this.graphics.drawTexture(t, i + n * (t.sourceWidth + this.spaceX), 0, t.sourceWidth, t.sourceHeight) : this.graphics.drawTexture(t, 0 + i, n * (t.sourceHeight + this.spaceY), t.sourceWidth, t.sourceHeight));
              }
              this._width || (this.resetLayoutX(), this.callLater(this.changeSize)), this._height || (this.resetLayoutY(),
                this.callLater(this.changeSize));
            }
          }
        }, n.destroy = function(e) {
          void 0 === e && (e = !0), this._valueArr = null, this._indexMap = null, this.graphics.clear(!0),
            this.removeSelf(), this.off("loaded", this, this._onClipLoaded), t.prototype.destroy.call(this, e);
        }, r(0, n, "sheet", function() {
          return this._sheet;
        }, function(t) {
          t += "", this._sheet = t;
          var e = t.split(" ");
          this._clipX = String(e[0]).length, this.clipY = e.length, this._indexMap = {};
          for (var i = 0; i < this._clipY; i++)
            for (var n = e[i].split(""), s = 0, r = n.length; s < r; s++) this._indexMap[n[s]] = i * this._clipX + s;
        }), r(0, n, "height", t.prototype._$get_height, function(t) {
          i.superSet(O, this, "height", t), this.callLater(this.changeValue);
        }), r(0, n, "direction", function() {
          return this._direction;
        }, function(t) {
          this._direction = t, this.callLater(this.changeValue);
        }), r(0, n, "value", function() {
          return this._valueArr ? this._valueArr : "";
        }, function(t) {
          t += "", this._valueArr = t, this.callLater(this.changeValue);
        }), r(0, n, "width", t.prototype._$get_width, function(t) {
          i.superSet(O, this, "width", t), this.callLater(this.changeValue);
        }), r(0, n, "spaceX", function() {
          return this._spaceX;
        }, function(t) {
          this._spaceX = t, "horizontal" === this._direction && this.callLater(this.changeValue);
        }), r(0, n, "spaceY", function() {
          return this._spaceY;
        }, function(t) {
          this._spaceY = t, "horizontal" !== this._direction && this.callLater(this.changeValue);
        }), r(0, n, "align", function() {
          return this._align;
        }, function(t) {
          this._align = t, this.callLater(this.changeValue);
        }), r(0, n, "measureWidth", function() {
          return this._wordsW;
        }), r(0, n, "measureHeight", function() {
          return this._wordsH;
        }), e;
      }(O),
      K = function(t) {
        function e() {
          this.selectHandler = null, this.renderHandler = null, this.mouseHandler = null,
            this.selectEnable = !1, this.totalPage = 0, this._content = null, this._scrollBar = null,
            this._itemRender = null, this._repeatX = 0, this._repeatY = 0, this._repeatX2 = 0,
            this._repeatY2 = 0, this._spaceX = 0, this._spaceY = 0, this._array = null, this._startIndex = 0,
            this._selectedIndex = -1, this._page = 0, this._isVertical = !0, this._cellSize = 20,
            this._cellOffset = 0, this._isMoved = !1, this.cacheContent = !1, this._createdLine = 0,
            this._cellChanged = !1, e.__super.call(this), this._cells = [], this._offset = new m();
        }
        s(e, "laya.ui.List", t);
        var n = e.prototype;
        return i.imps(n, {
          "laya.ui.IRender": !0,
          "laya.ui.IItem": !0
        }), n.destroy = function(t) {
          void 0 === t && (t = !0), this._content && this._content.destroy(t), this._scrollBar && this._scrollBar.destroy(t),
            laya.ui.Component.prototype.destroy.call(this, t), this._content = null, this._scrollBar = null,
            this._itemRender = null, this._cells = null, this._array = null, this.selectHandler = this.renderHandler = this.mouseHandler = null;
        }, n.createChildren = function() {
          this.addChild(this._content = new R());
        }, n.onScrollStart = function() {
          this._$P.cacheAs || (this._$P.cacheAs = i.superGet(R, this, "cacheAs")), i.superSet(R, this, "cacheAs", "none"),
            this._scrollBar.once("end", this, this.onScrollEnd);
        }, n.onScrollEnd = function() {
          i.superSet(R, this, "cacheAs", this._$P.cacheAs);
        }, n._removePreScrollBar = function() {
          var t = this.removeChildByName("scrollBar");
          t && t.destroy(!0);
        }, n.changeCells = function() {
          if (this._cellChanged = !1, this._itemRender) {
            this.scrollBar = this.getChildByName("scrollBar");
            var t = this._getOneCell(),
              e = t.width + this._spaceX || 1,
              i = t.height + this._spaceY || 1;
            this._width > 0 && (this._repeatX2 = this._isVertical ? Math.round(this._width / e) : Math.ceil(this._width / e)),
              this._height > 0 && (this._repeatY2 = this._isVertical ? Math.ceil(this._height / i) : Math.round(this._height / i));
            var n = this._width ? this._width : e * this.repeatX - this._spaceX,
              s = this._height ? this._height : i * this.repeatY - this._spaceY;
            this._cellSize = this._isVertical ? i : e, this._cellOffset = this._isVertical ? i * Math.max(this._repeatY2, this._repeatY) - s - this._spaceY : e * Math.max(this._repeatX2, this._repeatX) - n - this._spaceX,
              this._isVertical && this._scrollBar ? this._scrollBar.height = s : !this._isVertical && this._scrollBar && (this._scrollBar.width = n),
              this.setContentSize(n, s);
            var r = this._isVertical ? this.repeatX : this.repeatY,
              a = (this._isVertical ? this.repeatY : this.repeatX) + (this._scrollBar ? 1 : 0);
            this._createItems(0, r, a), this._createdLine = a, this._array && (this.array = this._array,
              this.runCallLater(this.renderItems));
          }
        }, n._getOneCell = function() {
          if (0 === this._cells.length) {
            var t = this.createItem();
            if (this._offset.setTo(t.x, t.y), this.cacheContent) return t;
            this._cells.push(t);
          }
          return this._cells[0];
        }, n._createItems = function(t, e, i) {
          var n = this._content,
            s = this._getOneCell(),
            r = s.width + this._spaceX,
            a = s.height + this._spaceY;
          if (this.cacheContent) {
            var o = new R();
            o.cacheAsBitmap = !0, o.pos((this._isVertical ? 0 : t) * r, (this._isVertical ? t : 0) * a),
              this._content.addChild(o), this._content.optimizeScrollRect = !0, n = o;
          } else {
            for (var h = [], l = this._cells.length - 1; l > -1; l--) {
              var u = this._cells[l];
              u.removeSelf(), h.push(u);
            }
            this._cells.length = 0;
          }
          for (var c = t; c < i; c++)
            for (var _ = 0; _ < e; _++)(s = h && h.length ? h.pop() : this.createItem()).x = (this._isVertical ? _ : c) * r - n.x,
              s.y = (this._isVertical ? c : _) * a - n.y, s.name = "item" + (c * e + _), n.addChild(s),
              this.addCell(s);
        }, n.createItem = function() {
          var t = [];
          if ("function" == typeof this._itemRender) var e = new this._itemRender();
          else e = z.createComp(this._itemRender, null, null, t);
          if (0 == t.length && e._watchMap) {
            var i = e._watchMap;
            for (var n in i)
              for (var s = i[n], r = 0; r < s.length; r++) {
                var a = s[r];
                t.push(a.comp, a.prop, a.value);
              }
          }
          return t.length && (e._$bindData = t), e;
        }, n.addCell = function(t) {
          t.on("click", this, this.onCellMouse), t.on("rightclick", this, this.onCellMouse),
            t.on("mouseover", this, this.onCellMouse), t.on("mouseout", this, this.onCellMouse),
            t.on("mousedown", this, this.onCellMouse), t.on("mouseup", this, this.onCellMouse),
            this._cells.push(t);
        }, n.initItems = function() {
          if (!this._itemRender && null != this.getChildByName("item0")) {
            this.repeatX = 1;
            var t = 0;
            t = 0;
            for (var e = 0; e < 1e4; e++) {
              var i = this.getChildByName("item" + e); {
                if (!i) break;
                this.addCell(i), t++;
              }
            }
            this.repeatY = t;
          }
        }, n.setContentSize = function(t, e) {
          this._content.width = t, this._content.height = e, (this._scrollBar || 0 != this._offset.x || 0 != this._offset.y) && (this._content.scrollRect || (this._content.scrollRect = new y()),
              this._content.scrollRect.setTo(-this._offset.x, -this._offset.y, t, e), this._content.scrollRect = this._content.scrollRect),
            this.event("resize");
        }, n.onCellMouse = function(t) {
          "mousedown" === t.type && (this._isMoved = !1);
          var e = t.currentTarget,
            i = this._startIndex + this._cells.indexOf(e);
          i < 0 || ("click" === t.type || "rightclick" === t.type ? this.selectEnable && !this._isMoved ? this.selectedIndex = i : this.changeCellState(e, !0, 0) : "mouseover" !== t.type && "mouseout" !== t.type || this._selectedIndex === i || this.changeCellState(e, "mouseover" === t.type, 0),
            this.mouseHandler && this.mouseHandler.runWith([t, i]));
        }, n.changeCellState = function(t, e, i) {
          var n = t.getChildByName("selectBox");
          n && (this.selectEnable = !0, n.visible = e, n.index = i);
        }, n.changeSize = function() {
          laya.ui.Component.prototype.changeSize.call(this), this.setContentSize(this.width, this.height),
            this._scrollBar && this.callLater(this.onScrollBarChange);
        }, n.onScrollBarChange = function(t) {
          this.runCallLater(this.changeCells);
          var e = this._scrollBar.value,
            i = this._isVertical ? this.repeatX : this.repeatY,
            n = this._isVertical ? this.repeatY : this.repeatX,
            s = Math.floor(e / this._cellSize);
          if (this.cacheContent) a = n + 1, this._createdLine - s < a && (this._createItems(this._createdLine, i, this._createdLine + a),
            this.renderItems(this._createdLine * i, 0), this._createdLine += a);
          else {
            var r = s * i,
              a = 0;
            if (r > this._startIndex) {
              a = r - this._startIndex;
              var o = !0,
                h = this._startIndex + i * (n + 1);
              this._isMoved = !0;
            } else r < this._startIndex && (a = this._startIndex - r, o = !1, h = this._startIndex - 1,
              this._isMoved = !0);
            for (var l = 0; l < a; l++) {
              if (o) {
                var u = this._cells.shift();
                this._cells[this._cells.length] = u;
                var c = h + l;
              } else u = this._cells.pop(), this._cells.unshift(u), c = h - l;
              var _ = Math.floor(c / i) * this._cellSize;
              this._isVertical ? u.y = _ : u.x = _, this.renderItem(u, c);
            }
            this._startIndex = r, this.changeSelectStatus();
          }
          var d = this._content.scrollRect;
          this._isVertical ? (d.y = e - this._offset.y, d.x = -this._offset.x) : (d.y = -this._offset.y,
            d.x = e - this._offset.x), this._content.scrollRect = d;
        }, n.posCell = function(t, e) {
          if (this._scrollBar) {
            var i = this._isVertical ? this.repeatX : this.repeatY,
              n = (this._isVertical ? this.repeatY : this.repeatX,
                Math.floor(e / i) * this._cellSize);
            this._isVertical ? t.y = n : t.x = n;
          }
        }, n.changeSelectStatus = function() {
          for (var t = 0, e = this._cells.length; t < e; t++) this.changeCellState(this._cells[t], this._selectedIndex === this._startIndex + t, 1);
        }, n.renderItems = function(t, e) {
          void 0 === t && (t = 0), void 0 === e && (e = 0);
          for (var i = t, n = e || this._cells.length; i < n; i++) this.renderItem(this._cells[i], this._startIndex + i);
          this.changeSelectStatus();
        }, n.renderItem = function(t, e) {
          this._array && e >= 0 && e < this._array.length ? (t.visible = !0, t._$bindData ? (t._dataSource = this._array[e],
              this._bindData(t, this._array[e])) : t.dataSource = this._array[e], this.cacheContent || this.posCell(t, e),
            this.hasListener("render") && this.event("render", [t, e]), this.renderHandler && this.renderHandler.runWith([t, e])) : (t.visible = !1,
            t.dataSource = null);
        }, n._bindData = function(t, e) {
          for (var i = t._$bindData, n = 0, s = i.length; n < s; n++) {
            var r = i[n++],
              a = i[n++],
              o = i[n],
              h = M.getBindFun(o);
            r[a] = h.call(this, e);
          }
        }, n.refresh = function() {
          this.array = this._array;
        }, n.getItem = function(t) {
          return t > -1 && t < this._array.length ? this._array[t] : null;
        }, n.changeItem = function(t, e) {
          t > -1 && t < this._array.length && (this._array[t] = e, t >= this._startIndex && t < this._startIndex + this._cells.length && this.renderItem(this.getCell(t), t));
        }, n.setItem = function(t, e) {
          this.changeItem(t, e);
        }, n.addItem = function(t) {
          this._array.push(t), this.array = this._array;
        }, n.addItemAt = function(t, e) {
          this._array.splice(e, 0, t), this.array = this._array;
        }, n.deleteItem = function(t) {
          this._array.splice(t, 1), this.array = this._array;
        }, n.getCell = function(t) {
          return this.runCallLater(this.changeCells), t > -1 && this._cells ? this._cells[(t - this._startIndex) % this._cells.length] : null;
        }, n.scrollTo = function(t) {
          if (this._scrollBar) {
            var e = this._isVertical ? this.repeatX : this.repeatY;
            this._scrollBar.value = Math.floor(t / e) * this._cellSize;
          } else this.startIndex = t;
        }, n.tweenTo = function(t, e, i) {
          if (void 0 === e && (e = 200), this._scrollBar) {
            var n = this._isVertical ? this.repeatX : this.repeatY;
            I.to(this._scrollBar, {
              value: Math.floor(t / n) * this._cellSize
            }, e, null, i, 0, !0);
          } else this.startIndex = t, i && i.run();
        }, n._setCellChanged = function() {
          this._cellChanged || (this._cellChanged = !0, this.callLater(this.changeCells));
        }, n.commitMeasure = function() {
          this.runCallLater(this.changeCells);
        }, r(0, n, "cacheAs", t.prototype._$get_cacheAs, function(t) {
          i.superSet(R, this, "cacheAs", t), this._scrollBar && (this._$P.cacheAs = null,
            "none" !== t ? this._scrollBar.on("start", this, this.onScrollStart) : this._scrollBar.off("start", this, this.onScrollStart));
        }), r(0, n, "content", function() {
          return this._content;
        }), r(0, n, "height", t.prototype._$get_height, function(t) {
          t != this._height && (i.superSet(R, this, "height", t), this._setCellChanged());
        }), r(0, n, "itemRender", function() {
          return this._itemRender;
        }, function(t) {
          if (this._itemRender != t) {
            this._itemRender = t;
            for (var e = this._cells.length - 1; e > -1; e--) this._cells[e].destroy();
            this._cells.length = 0, this._setCellChanged();
          }
        }), r(0, n, "vScrollBarSkin", function() {
          return this._scrollBar ? this._scrollBar.skin : null;
        }, function(t) {
          this._removePreScrollBar();
          var e = new et();
          e.name = "scrollBar", e.right = 0, t && " " != t && (e.skin = t), this.scrollBar = e,
            this.addChild(e), this._setCellChanged();
        }), r(0, n, "page", function() {
          return this._page;
        }, function(t) {
          this._page = t, this._array && (this._page = t > 0 ? t : 0, this._page = this._page < this.totalPage ? this._page : this.totalPage - 1,
            this.startIndex = this._page * this.repeatX * this.repeatY);
        }), r(0, n, "hScrollBarSkin", function() {
          return this._scrollBar ? this._scrollBar.skin : null;
        }, function(t) {
          this._removePreScrollBar();
          var e = new j();
          e.name = "scrollBar", e.bottom = 0, t && " " != t && (e.skin = t), this.scrollBar = e,
            this.addChild(e), this._setCellChanged();
        }), r(0, n, "repeatX", function() {
          return this._repeatX > 0 ? this._repeatX : this._repeatX2 > 0 ? this._repeatX2 : 1;
        }, function(t) {
          this._repeatX = t, this._setCellChanged();
        }), r(0, n, "scrollBar", function() {
          return this._scrollBar;
        }, function(t) {
          this._scrollBar != t && (this._scrollBar = t, t && (this._isVertical = this._scrollBar.isVertical,
            this.addChild(this._scrollBar), this._scrollBar.on("change", this, this.onScrollBarChange)));
        }), r(0, n, "width", t.prototype._$get_width, function(t) {
          t != this._width && (i.superSet(R, this, "width", t), this._setCellChanged());
        }), r(0, n, "repeatY", function() {
          return this._repeatY > 0 ? this._repeatY : this._repeatY2 > 0 ? this._repeatY2 : 1;
        }, function(t) {
          this._repeatY = t, this._setCellChanged();
        }), r(0, n, "spaceX", function() {
          return this._spaceX;
        }, function(t) {
          this._spaceX = t, this._setCellChanged();
        }), r(0, n, "spaceY", function() {
          return this._spaceY;
        }, function(t) {
          this._spaceY = t, this._setCellChanged();
        }), r(0, n, "selectedIndex", function() {
          return this._selectedIndex;
        }, function(t) {
          this._selectedIndex != t && (this._selectedIndex = t, this.changeSelectStatus(),
            this.event("change"), this.startIndex = this._startIndex), this.selectHandler && this.selectHandler.runWith(t);
        }), r(0, n, "selectedItem", function() {
          return -1 != this._selectedIndex ? this._array[this._selectedIndex] : null;
        }, function(t) {
          this.selectedIndex = this._array.indexOf(t);
        }), r(0, n, "length", function() {
          return this._array ? this._array.length : 0;
        }), r(0, n, "selection", function() {
          return this.getCell(this._selectedIndex);
        }, function(t) {
          this.selectedIndex = this._startIndex + this._cells.indexOf(t);
        }), r(0, n, "startIndex", function() {
          return this._startIndex;
        }, function(t) {
          this._startIndex = t > 0 ? t : 0, this.callLater(this.renderItems);
        }), r(0, n, "array", function() {
          return this._array;
        }, function(t) {
          this.runCallLater(this.changeCells), this._array = t || [];
          var e = this._array.length;
          if (this.totalPage = Math.ceil(e / (this.repeatX * this.repeatY)), this._selectedIndex = this._selectedIndex < e ? this._selectedIndex : e - 1,
            this.startIndex = this._startIndex, this._scrollBar) {
            this._scrollBar.stopScroll();
            var i = this._isVertical ? this.repeatX : this.repeatY,
              n = this._isVertical ? this.repeatY : this.repeatX,
              s = Math.ceil(e / i);
            (this._cellOffset > 0 ? this.totalPage + 1 : this.totalPage) > 1 ? (this._scrollBar.scrollSize = this._cellSize,
              this._scrollBar.thumbPercent = n / s, this._scrollBar.setScroll(0, (s - n) * this._cellSize + this._cellOffset, this._scrollBar.value),
              this._scrollBar.target = this._content) : (this._scrollBar.setScroll(0, 0, 0), this._scrollBar.target = this._content);
          }
        }), r(0, n, "dataSource", t.prototype._$get_dataSource, function(t) {
          this._dataSource = t, "number" == typeof t && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.array = t : i.superSet(R, this, "dataSource", t);
        }), r(0, n, "cells", function() {
          return this.runCallLater(this.changeCells), this._cells;
        }), e;
      }(R),
      j = function(t) {
        function e() {
          e.__super.call(this);
        }
        s(e, "laya.ui.HScrollBar", t);
        return e.prototype.initialize = function() {
          t.prototype.initialize.call(this), this.slider.isVertical = !1;
        }, e;
      }(F),
      $ = function(t) {
        function e() {
          this._content = null, this._vScrollBar = null, this._hScrollBar = null, this._scrollChanged = !1,
            e.__super.call(this), this.width = this.height = 100;
        }
        s(e, "laya.ui.Panel", t);
        var n = e.prototype;
        return n.destroy = function(t) {
          void 0 === t && (t = !0), laya.ui.Component.prototype.destroy.call(this, t), this._content && this._content.destroy(t),
            this._vScrollBar && this._vScrollBar.destroy(t), this._hScrollBar && this._hScrollBar.destroy(t),
            this._vScrollBar = null, this._hScrollBar = null, this._content = null;
        }, n.destroyChildren = function() {
          this._content.destroyChildren();
        }, n.createChildren = function() {
          laya.display.Node.prototype.addChild.call(this, this._content = new R());
        }, n.addChild = function(t) {
          return t.on("resize", this, this.onResize), this._setScrollChanged(), this._content.addChild(t);
        }, n.onResize = function() {
          this._setScrollChanged();
        }, n.addChildAt = function(t, e) {
          return t.on("resize", this, this.onResize), this._setScrollChanged(), this._content.addChildAt(t, e);
        }, n.removeChild = function(t) {
          return t.off("resize", this, this.onResize), this._setScrollChanged(), this._content.removeChild(t);
        }, n.removeChildAt = function(t) {
          return this.getChildAt(t).off("resize", this, this.onResize), this._setScrollChanged(),
            this._content.removeChildAt(t);
        }, n.removeChildren = function(t, e) {
          void 0 === t && (t = 0), void 0 === e && (e = 2147483647);
          for (var i = this._content.numChildren - 1; i > -1; i--) this._content.removeChildAt(i);
          return this._setScrollChanged(), this;
        }, n.getChildAt = function(t) {
          return this._content.getChildAt(t);
        }, n.getChildByName = function(t) {
          return this._content.getChildByName(t);
        }, n.getChildIndex = function(t) {
          return this._content.getChildIndex(t);
        }, n.changeScroll = function() {
          this._scrollChanged = !1;
          var t = this.contentWidth || 1,
            e = this.contentHeight || 1,
            i = this._vScrollBar,
            n = this._hScrollBar,
            s = i && e > this._height,
            r = n && t > this._width,
            a = s ? this._width - i.width : this._width,
            o = r ? this._height - n.height : this._height;
          i && (i.x = this._width - i.width, i.y = 0, i.height = this._height - (r ? n.height : 0),
              i.scrollSize = Math.max(.033 * this._height, 1), i.thumbPercent = o / e, i.setScroll(0, e - o, i.value)),
            n && (n.x = 0, n.y = this._height - n.height, n.width = this._width - (s ? i.width : 0),
              n.scrollSize = Math.max(.033 * this._width, 1), n.thumbPercent = a / t, n.setScroll(0, t - a, n.value));
        }, n.changeSize = function() {
          laya.ui.Component.prototype.changeSize.call(this), this.setContentSize(this._width, this._height);
        }, n.setContentSize = function(t, e) {
          var i = this._content;
          i.width = t, i.height = e, i.scrollRect || (i.scrollRect = new y()), i.scrollRect.setTo(0, 0, t, e),
            i.scrollRect = i.scrollRect;
        }, n.onScrollBarChange = function(t) {
          var e = this._content.scrollRect;
          if (e) {
            var i = Math.round(t.value);
            t.isVertical ? e.y = i : e.x = i, this._content.scrollRect = e;
          }
        }, n.scrollTo = function(t, e) {
          void 0 === t && (t = 0), void 0 === e && (e = 0), this.vScrollBar && (this.vScrollBar.value = e),
            this.hScrollBar && (this.hScrollBar.value = t);
        }, n.refresh = function() {
          this.changeScroll();
        }, n.onScrollStart = function() {
          this._$P.cacheAs || (this._$P.cacheAs = i.superGet(R, this, "cacheAs")), i.superSet(R, this, "cacheAs", "none"),
            this._hScrollBar && this._hScrollBar.once("end", this, this.onScrollEnd), this._vScrollBar && this._vScrollBar.once("end", this, this.onScrollEnd);
        }, n.onScrollEnd = function() {
          i.superSet(R, this, "cacheAs", this._$P.cacheAs);
        }, n._setScrollChanged = function() {
          this._scrollChanged || (this._scrollChanged = !0, this.callLater(this.changeScroll));
        }, r(0, n, "numChildren", function() {
          return this._content.numChildren;
        }), r(0, n, "hScrollBarSkin", function() {
          return this._hScrollBar ? this._hScrollBar.skin : null;
        }, function(t) {
          null == this._hScrollBar && (laya.display.Node.prototype.addChild.call(this, this._hScrollBar = new j()),
            this._hScrollBar.on("change", this, this.onScrollBarChange, [this._hScrollBar]),
            this._hScrollBar.target = this._content, this._setScrollChanged()), this._hScrollBar.skin = t;
        }), r(0, n, "contentWidth", function() {
          for (var t = 0, e = this._content.numChildren - 1; e > -1; e--) {
            var i = this._content.getChildAt(e);
            t = Math.max(i.x + i.width * i.scaleX, t);
          }
          return t;
        }), r(0, n, "contentHeight", function() {
          for (var t = 0, e = this._content.numChildren - 1; e > -1; e--) {
            var i = this._content.getChildAt(e);
            t = Math.max(i.y + i.height * i.scaleY, t);
          }
          return t;
        }), r(0, n, "width", t.prototype._$get_width, function(t) {
          i.superSet(R, this, "width", t), this._setScrollChanged();
        }), r(0, n, "hScrollBar", function() {
          return this._hScrollBar;
        }), r(0, n, "content", function() {
          return this._content;
        }), r(0, n, "height", t.prototype._$get_height, function(t) {
          i.superSet(R, this, "height", t), this._setScrollChanged();
        }), r(0, n, "vScrollBarSkin", function() {
          return this._vScrollBar ? this._vScrollBar.skin : null;
        }, function(t) {
          null == this._vScrollBar && (laya.display.Node.prototype.addChild.call(this, this._vScrollBar = new et()),
            this._vScrollBar.on("change", this, this.onScrollBarChange, [this._vScrollBar]),
            this._vScrollBar.target = this._content, this._setScrollChanged()), this._vScrollBar.skin = t;
        }), r(0, n, "vScrollBar", function() {
          return this._vScrollBar;
        }), r(0, n, "cacheAs", t.prototype._$get_cacheAs, function(t) {
          i.superSet(R, this, "cacheAs", t), this._$P.cacheAs = null, "none" !== t ? (this._hScrollBar && this._hScrollBar.on("start", this, this.onScrollStart),
            this._vScrollBar && this._vScrollBar.on("start", this, this.onScrollStart)) : (this._hScrollBar && this._hScrollBar.off("start", this, this.onScrollStart),
            this._vScrollBar && this._vScrollBar.off("start", this, this.onScrollStart));
        }), e;
      }(R),
      q = function(t) {
        function e(t) {
          e.__super.call(this, t), this.isVertical = !1;
        }
        return s(e, "laya.ui.HSlider", U), e;
      }(),
      Q = function(t) {
        function e(t, i) {
          this.selectHandler = null, this._items = null, this._selectedIndex = -1, this._skin = null,
            this._direction = "horizontal", this._space = 0, this._labels = null, this._labelColors = null,
            this._labelFont = null, this._labelStrokeColor = null, this._strokeColors = null,
            this._labelStroke = NaN, this._labelSize = 0, this._labelBold = !1, this._labelPadding = null,
            this._labelAlign = null, this._stateNum = 0, this._labelChanged = !1, e.__super.call(this),
            this.skin = i, this.labels = t;
        }
        s(e, "laya.ui.UIGroup", t);
        var n = e.prototype;
        return i.imps(n, {
          "laya.ui.IItem": !0
        }), n.preinitialize = function() {
          this.mouseEnabled = !0;
        }, n.destroy = function(t) {
          void 0 === t && (t = !0), laya.ui.Component.prototype.destroy.call(this, t), this._items && (this._items.length = 0),
            this._items = null, this.selectHandler = null;
        }, n.addItem = function(t, e) {
          void 0 === e && (e = !0);
          var i = t,
            n = this._items.length;
          if (i.name = "item" + n, this.addChild(i), this.initItems(), e && n > 0) {
            var s = this._items[n - 1];
            "horizontal" == this._direction ? i.x = s.x + s.width + this._space : i.y = s.y + s.height + this._space;
          } else e && (i.x = 0, i.y = 0);
          return n;
        }, n.delItem = function(t, e) {
          void 0 === e && (e = !0);
          var i = this._items.indexOf(t);
          if (-1 != i) {
            var n = t;
            this.removeChild(n);
            for (var s = i + 1, r = this._items.length; s < r; s++) {
              var a = this._items[s];
              a.name = "item" + (s - 1), e && ("horizontal" == this._direction ? a.x -= n.width + this._space : a.y -= n.height + this._space);
            }
            if (this.initItems(), this._selectedIndex > -1) {
              var o = 0;
              o = this._selectedIndex < this._items.length ? this._selectedIndex : this._selectedIndex - 1,
                this._selectedIndex = -1, this.selectedIndex = o;
            }
          }
        }, n.initItems = function() {
          this._items || (this._items = []), this._items.length = 0;
          for (var t = 0; t < 1e4; t++) {
            var e = this.getChildByName("item" + t);
            if (null == e) break;
            this._items.push(e), e.selected = t === this._selectedIndex, e.clickHandler = p.create(this, this.itemClick, [t], !1);
          }
        }, n.itemClick = function(t) {
          this.selectedIndex = t;
        }, n.setSelect = function(t, e) {
          this._items && t > -1 && t < this._items.length && (this._items[t].selected = e);
        }, n.createItem = function(t, e) {
          return null;
        }, n.changeLabels = function() {
          if (this._labelChanged = !1, this._items)
            for (var t = 0, e = 0, i = this._items.length; e < i; e++) {
              var n = this._items[e];
              this._skin && (n.skin = this._skin), this._labelColors && (n.labelColors = this._labelColors),
                this._labelSize && (n.labelSize = this._labelSize), this._labelStroke && (n.labelStroke = this._labelStroke),
                this._labelStrokeColor && (n.labelStrokeColor = this._labelStrokeColor), this._strokeColors && (n.strokeColors = this._strokeColors),
                this._labelBold && (n.labelBold = this._labelBold), this._labelPadding && (n.labelPadding = this._labelPadding),
                this._labelAlign && (n.labelAlign = this._labelAlign), this._stateNum && (n.stateNum = this._stateNum),
                this._labelFont && (n.labelFont = this._labelFont), "horizontal" === this._direction ? (n.y = 0,
                  n.x = t, t += n.width + this._space) : (n.x = 0, n.y = t, t += n.height + this._space);
            }
          this.changeSize();
        }, n.commitMeasure = function() {
          this.runCallLater(this.changeLabels);
        }, n._setLabelChanged = function() {
          this._labelChanged || (this._labelChanged = !0, this.callLater(this.changeLabels));
        }, r(0, n, "labelStrokeColor", function() {
          return this._labelStrokeColor;
        }, function(t) {
          this._labelStrokeColor != t && (this._labelStrokeColor = t, this._setLabelChanged());
        }), r(0, n, "skin", function() {
          return this._skin;
        }, function(t) {
          this._skin != t && (this._skin = t, this._setLabelChanged());
        }), r(0, n, "selectedIndex", function() {
          return this._selectedIndex;
        }, function(t) {
          this._selectedIndex != t && (this.setSelect(this._selectedIndex, !1), this._selectedIndex = t,
            this.setSelect(t, !0), this.event("change"), this.selectHandler && this.selectHandler.runWith(this._selectedIndex));
        }), r(0, n, "labels", function() {
          return this._labels;
        }, function(t) {
          if (this._labels != t) {
            if (this._labels = t, this.removeChildren(), this._setLabelChanged(), this._labels)
              for (var e = this._labels.split(","), i = 0, n = e.length; i < n; i++) {
                var s = this.createItem(this._skin, e[i]);
                s.name = "item" + i, this.addChild(s);
              }
            this.initItems();
          }
        }), r(0, n, "strokeColors", function() {
          return this._strokeColors;
        }, function(t) {
          this._strokeColors != t && (this._strokeColors = t, this._setLabelChanged());
        }), r(0, n, "labelColors", function() {
          return this._labelColors;
        }, function(t) {
          this._labelColors != t && (this._labelColors = t, this._setLabelChanged());
        }), r(0, n, "labelStroke", function() {
          return this._labelStroke;
        }, function(t) {
          this._labelStroke != t && (this._labelStroke = t, this._setLabelChanged());
        }), r(0, n, "labelSize", function() {
          return this._labelSize;
        }, function(t) {
          this._labelSize != t && (this._labelSize = t, this._setLabelChanged());
        }), r(0, n, "stateNum", function() {
          return this._stateNum;
        }, function(t) {
          this._stateNum != t && (this._stateNum = t, this._setLabelChanged());
        }), r(0, n, "labelBold", function() {
          return this._labelBold;
        }, function(t) {
          this._labelBold != t && (this._labelBold = t, this._setLabelChanged());
        }), r(0, n, "labelFont", function() {
          return this._labelFont;
        }, function(t) {
          this._labelFont != t && (this._labelFont = t, this._setLabelChanged());
        }), r(0, n, "labelPadding", function() {
          return this._labelPadding;
        }, function(t) {
          this._labelPadding != t && (this._labelPadding = t, this._setLabelChanged());
        }), r(0, n, "direction", function() {
          return this._direction;
        }, function(t) {
          this._direction = t, this._setLabelChanged();
        }), r(0, n, "space", function() {
          return this._space;
        }, function(t) {
          this._space = t, this._setLabelChanged();
        }), r(0, n, "items", function() {
          return this._items;
        }), r(0, n, "selection", function() {
          return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;
        }, function(t) {
          this.selectedIndex = this._items.indexOf(t);
        }), r(0, n, "dataSource", t.prototype._$get_dataSource, function(t) {
          this._dataSource = t, "number" == typeof t && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.labels = t.join(",") : i.superSet(R, this, "dataSource", t);
        }), e;
      }(R),
      Z = function(t) {
        function e(t, i) {
          this._value = null, void 0 === i && (i = ""), e.__super.call(this, t, i);
        }
        s(e, "laya.ui.Radio", t);
        var i = e.prototype;
        return i.destroy = function(e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._value = null;
        }, i.preinitialize = function() {
          laya.ui.Component.prototype.preinitialize.call(this), this.toggle = !1, this._autoSize = !1;
        }, i.initialize = function() {
          t.prototype.initialize.call(this), this.createText(), this._text.align = "left",
            this._text.valign = "top", this._text.width = 0, this.on("click", this, this.onClick);
        }, i.onClick = function(t) {
          this.selected = !0;
        }, r(0, i, "value", function() {
          return null != this._value ? this._value : this.label;
        }, function(t) {
          this._value = t;
        }), e;
      }(N),
      J = function(t) {
        function e() {
          this._list = null, this._source = null, this._renderHandler = null, this._spaceLeft = 10,
            this._spaceBottom = 0, this._keepStatus = !0, e.__super.call(this), this.width = this.height = 200;
        }
        s(e, "laya.ui.Tree", t);
        var n = e.prototype;
        return i.imps(n, {
          "laya.ui.IRender": !0
        }), n.destroy = function(t) {
          void 0 === t && (t = !0), laya.ui.Component.prototype.destroy.call(this, t), this._list && this._list.destroy(t),
            this._list = null, this._source = null, this._renderHandler = null;
        }, n.createChildren = function() {
          this.addChild(this._list = new K()), this._list.renderHandler = p.create(this, this.renderItem, null, !1),
            this._list.repeatX = 1, this._list.on("change", this, this.onListChange);
        }, n.onListChange = function(t) {
          this.event("change");
        }, n.getArray = function() {
          var t, e = [];
          for (var i in this._source) t = this._source[i], this.getParentOpenStatus(t) && (t.x = this._spaceLeft * this.getDepth(t),
            e.push(t));
          return e;
        }, n.getDepth = function(t, e) {
          return void 0 === e && (e = 0), null == t.nodeParent ? e : this.getDepth(t.nodeParent, e + 1);
        }, n.getParentOpenStatus = function(t) {
          var e = t.nodeParent;
          return null == e || !!e.isOpen && (null == e.nodeParent || this.getParentOpenStatus(e));
        }, n.renderItem = function(t, e) {
          var i = t.dataSource;
          if (i) {
            t.left = i.x;
            var n = t.getChildByName("arrow");
            n && (i.hasChild ? (n.visible = !0, n.index = i.isOpen ? 1 : 0, n.tag = e, n.off("click", this, this.onArrowClick),
              n.on("click", this, this.onArrowClick)) : n.visible = !1);
            var s = t.getChildByName("folder");
            s && (2 == s.clipY ? s.index = i.isDirectory ? 0 : 1 : s.index = i.isDirectory ? i.isOpen ? 1 : 0 : 2),
              this._renderHandler && this._renderHandler.runWith([t, e]);
          }
        }, n.onArrowClick = function(t) {
          var e = t.currentTarget.tag;
          this._list.array[e].isOpen = !this._list.array[e].isOpen, this.event("open"), this._list.array = this.getArray();
        }, n.setItemState = function(t, e) {
          this._list.array[t] && (this._list.array[t].isOpen = e, this._list.array = this.getArray());
        }, n.fresh = function() {
          this._list.array = this.getArray(), this.repaint();
        }, n.parseXml = function(t, e, i, n) {
          var s, r = t.childNodes,
            a = r.length;
          if (!n) {
            s = {};
            var o, h = t.attributes;
            for (var l in h) {
              var u = (o = h[l]).nodeName,
                c = o.nodeValue;
              s[u] = "true" == c || "false" != c && c;
            }
            s.nodeParent = i, a > 0 && (s.isDirectory = !0), s.hasChild = a > 0, e.push(s);
          }
          for (var _ = 0; _ < a; _++) {
            var d = r[_];
            this.parseXml(d, e, s, !1);
          }
        }, n.parseOpenStatus = function(t, e) {
          for (var i = 0, n = e.length; i < n; i++) {
            var s = e[i];
            if (s.isDirectory)
              for (var r = 0, a = t.length; r < a; r++) {
                var o = t[r];
                if (o.isDirectory && this.isSameParent(o, s) && s.label == o.label) {
                  s.isOpen = o.isOpen;
                  break;
                }
              }
          }
        }, n.isSameParent = function(t, e) {
          return null == t.nodeParent && null == e.nodeParent || null != t.nodeParent && null != e.nodeParent && (t.nodeParent.label == e.nodeParent.label && this.isSameParent(t.nodeParent, e.nodeParent));
        }, n.filter = function(t) {
          if (Boolean(t)) {
            var e = [];
            this.getFilterSource(this._source, e, t), this._list.array = e;
          } else this._list.array = this.getArray();
        }, n.getFilterSource = function(t, e, i) {
          i = i.toLocaleLowerCase();
          var n;
          for (var s in t) !(n = t[s]).isDirectory && String(n.label).toLowerCase().indexOf(i) > -1 && (n.x = 0,
            e.push(n)), n.child && n.child.length > 0 && this.getFilterSource(n.child, e, i);
        }, r(0, n, "spaceBottom", function() {
          return this._list.spaceY;
        }, function(t) {
          this._list.spaceY = t;
        }), r(0, n, "keepStatus", function() {
          return this._keepStatus;
        }, function(t) {
          this._keepStatus = t;
        }), r(0, n, "itemRender", function() {
          return this._list.itemRender;
        }, function(t) {
          this._list.itemRender = t;
        }), r(0, n, "array", function() {
          return this._list.array;
        }, function(t) {
          this._keepStatus && this._list.array && t && this.parseOpenStatus(this._list.array, t),
            this._source = t, this._list.array = this.getArray();
        }), r(0, n, "mouseHandler", function() {
          return this._list.mouseHandler;
        }, function(t) {
          this._list.mouseHandler = t;
        }), r(0, n, "dataSource", t.prototype._$get_dataSource, function(t) {
          this._dataSource = t, i.superSet(R, this, "dataSource", t);
        }), r(0, n, "source", function() {
          return this._source;
        }), r(0, n, "scrollBar", function() {
          return this._list.scrollBar;
        }), r(0, n, "list", function() {
          return this._list;
        }), r(0, n, "scrollBarSkin", function() {
          return this._list.vScrollBarSkin;
        }, function(t) {
          this._list.vScrollBarSkin = t;
        }), r(0, n, "renderHandler", function() {
          return this._renderHandler;
        }, function(t) {
          this._renderHandler = t;
        }), r(0, n, "selectedIndex", function() {
          return this._list.selectedIndex;
        }, function(t) {
          this._list.selectedIndex = t;
        }), r(0, n, "spaceLeft", function() {
          return this._spaceLeft;
        }, function(t) {
          this._spaceLeft = t;
        }), r(0, n, "selectedItem", function() {
          return this._list.selectedItem;
        }, function(t) {
          this._list.selectedItem = t;
        }), r(0, n, "width", t.prototype._$get_width, function(t) {
          i.superSet(R, this, "width", t), this._list.width = t;
        }), r(0, n, "height", t.prototype._$get_height, function(t) {
          i.superSet(R, this, "height", t), this._list.height = t;
        }), r(0, n, "xml", null, function(t) {
          var e = [];
          this.parseXml(t.childNodes[0], e, null, !0), this.array = e;
        }), r(0, n, "selectedPath", function() {
          return this._list.selectedItem ? this._list.selectedItem.path : null;
        }), e;
      }(R),
      tt = function(t) {
        function e() {
          this._items = null, this._selectedIndex = 0, e.__super.call(this), this._setIndexHandler = p.create(this, this.setIndex, null, !1);
        }
        s(e, "laya.ui.ViewStack", t);
        var n = e.prototype;
        return i.imps(n, {
          "laya.ui.IItem": !0
        }), n.setItems = function(t) {
          this.removeChildren();
          for (var e = 0, i = 0, n = t.length; i < n; i++) {
            var s = t[i];
            s && (s.name = "item" + e, this.addChild(s), e++);
          }
          this.initItems();
        }, n.addItem = function(t) {
          t.name = "item" + this._items.length, this.addChild(t), this.initItems();
        }, n.initItems = function() {
          this._items = [];
          for (var t = 0; t < 1e4; t++) {
            var e = this.getChildByName("item" + t);
            if (null == e) break;
            this._items.push(e), e.visible = t == this._selectedIndex;
          }
        }, n.setSelect = function(t, e) {
          this._items && t > -1 && t < this._items.length && (this._items[t].visible = e);
        }, n.setIndex = function(t) {
          this.selectedIndex = t;
        }, r(0, n, "dataSource", t.prototype._$get_dataSource, function(t) {
          if (this._dataSource = t, "number" == typeof t && Math.floor(t) == t || "string" == typeof t) this.selectedIndex = parseInt(t);
          else
            for (var e in this._dataSource) this.hasOwnProperty(e) && (this[e] = this._dataSource[e]);
        }), r(0, n, "selectedIndex", function() {
          return this._selectedIndex;
        }, function(t) {
          this._selectedIndex != t && (this.setSelect(this._selectedIndex, !1), this._selectedIndex = t,
            this.setSelect(this._selectedIndex, !0));
        }), r(0, n, "selection", function() {
          return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;
        }, function(t) {
          this.selectedIndex = this._items.indexOf(t);
        }), r(0, n, "items", function() {
          return this._items;
        }), r(0, n, "setIndexHandler", function() {
          return this._setIndexHandler;
        }, function(t) {
          this._setIndexHandler = t;
        }), e;
      }(R),
      et = function(t) {
        function e() {
          e.__super.call(this);
        }
        return s(e, "laya.ui.VScrollBar", F), e;
      }(),
      it = function(t) {
        function e(t) {
          this._bg = null, this._skin = null, e.__super.call(this), void 0 === t && (t = ""),
            this.text = t, this.skin = this.skin;
        }
        s(e, "laya.ui.TextInput", t);
        var n = e.prototype;
        return n.preinitialize = function() {
          this.mouseEnabled = !0;
        }, n.destroy = function(e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._bg && this._bg.destroy(),
            this._bg = null;
        }, n.createChildren = function() {
          this.addChild(this._tf = new f()), this._tf.padding = E.inputLabelPadding, this._tf.on("input", this, this._onInput),
            this._tf.on("enter", this, this._onEnter), this._tf.on("blur", this, this._onBlur),
            this._tf.on("focus", this, this._onFocus);
        }, n._onFocus = function() {
          this.event("focus", this);
        }, n._onBlur = function() {
          this.event("blur", this);
        }, n._onInput = function() {
          this.event("input", this);
        }, n._onEnter = function() {
          this.event("enter", this);
        }, n.initialize = function() {
          this.width = 128, this.height = 22;
        }, n.select = function() {
          this._tf.select();
        }, n.setSelection = function(t, e) {
          this._tf.setSelection(t, e);
        }, r(0, n, "text", t.prototype._$get_text, function(t) {
          this._tf.text != t && (t += "", this._tf.text = t, this.event("change"));
        }), r(0, n, "bg", function() {
          return this._bg;
        }, function(t) {
          this.graphics = this._bg = t;
        }), r(0, n, "inputElementYAdjuster", function() {
          return this._tf.inputElementYAdjuster;
        }, function(t) {
          this._tf.inputElementYAdjuster = t;
        }), r(0, n, "multiline", function() {
          return this._tf.multiline;
        }, function(t) {
          this._tf.multiline = t;
        }), r(0, n, "skin", function() {
          return this._skin;
        }, function(t) {
          this._skin != t && (this._skin = t, this._bg || (this.graphics = this._bg = new P()),
            this._bg.source = g.getRes(this._skin), this._width && (this._bg.width = this._width),
            this._height && (this._bg.height = this._height));
        }), r(0, n, "sizeGrid", function() {
          return this._bg && this._bg.sizeGrid ? this._bg.sizeGrid.join(",") : null;
        }, function(t) {
          this._bg || (this.graphics = this._bg = new P()), this._bg.sizeGrid = M.fillArray(E.defaultSizeGrid, t, Number);
        }), r(0, n, "inputElementXAdjuster", function() {
          return this._tf.inputElementXAdjuster;
        }, function(t) {
          this._tf.inputElementXAdjuster = t;
        }), r(0, n, "width", t.prototype._$get_width, function(t) {
          i.superSet(V, this, "width", t), this._bg && (this._bg.width = t);
        }), r(0, n, "height", t.prototype._$get_height, function(t) {
          i.superSet(V, this, "height", t), this._bg && (this._bg.height = t);
        }), r(0, n, "editable", function() {
          return this._tf.editable;
        }, function(t) {
          this._tf.editable = t;
        }), r(0, n, "restrict", function() {
          return this._tf.restrict;
        }, function(t) {
          this._tf.restrict = t;
        }), r(0, n, "prompt", function() {
          return this._tf.prompt;
        }, function(t) {
          this._tf.prompt = t;
        }), r(0, n, "promptColor", function() {
          return this._tf.promptColor;
        }, function(t) {
          this._tf.promptColor = t;
        }), r(0, n, "maxChars", function() {
          return this._tf.maxChars;
        }, function(t) {
          this._tf.maxChars = t;
        }), r(0, n, "focus", function() {
          return this._tf.focus;
        }, function(t) {
          this._tf.focus = t;
        }), r(0, n, "type", function() {
          return this._tf.type;
        }, function(t) {
          this._tf.type = t;
        }), r(0, n, "asPassword", function() {
          return this._tf.asPassword;
        }, function(t) {
          this._tf.asPassword = t;
        }), e;
      }(V),
      nt = function(t) {
        function e() {
          e.__super.call(this);
        }
        return s(e, "laya.ui.VSlider", U), e;
      }(),
      st = function(t) {
        function e() {
          this.popupCenter = !0, this.closeHandler = null, this.popupEffect = null, this.closeEffect = null,
            this.group = null, this.isModal = !1, this._dragArea = null, e.__super.call(this);
        }
        s(e, "laya.ui.Dialog", t);
        var n = e.prototype;
        return n.initialize = function() {
            this.popupEffect = e.manager.popupEffectHandler, this.closeEffect = e.manager.closeEffectHandler,
              this._dealDragArea(), this.on("click", this, this._onClick);
          }, n._dealDragArea = function() {
            var t = this.getChildByName("drag");
            t && (this.dragArea = t.x + "," + t.y + "," + t.width + "," + t.height, t.removeSelf());
          }, n._onClick = function(t) {
            var e = t.target;
            if (e) switch (e.name) {
              case "close":
              case "cancel":
              case "sure":
              case "no":
              case "ok":
              case "yes":
                this.close(e.name);
            }
          }, n.show = function(t, e) {
            void 0 === t && (t = !1), void 0 === e && (e = !0), this._open(!1, t, e);
          }, n.popup = function(t, e) {
            void 0 === t && (t = !1), void 0 === e && (e = !0), this._open(!0, t, e);
          }, n._open = function(t, i, n) {
            e.manager.lock(!1), this.isModal = t, e.manager.open(this, i, n);
          }, n.onOpened = function() {}, n.close = function(t, i) {
            void 0 === i && (i = !0), e.manager.close(this, t, i);
          }, n.onClosed = function(t) {}, n._onMouseDown = function(t) {
            var e = this.getMousePoint();
            this._dragArea.contains(e.x, e.y) ? this.startDrag() : this.stopDrag();
          }, r(0, n, "dragArea", function() {
            return this._dragArea ? this._dragArea.toString() : null;
          }, function(t) {
            if (t) {
              var e = M.fillArray([0, 0, 0, 0], t, Number);
              this._dragArea = new y(e[0], e[1], e[2], e[3]), this.on("mousedown", this, this._onMouseDown);
            } else this._dragArea = null, this.off("mousedown", this, this._onMouseDown);
          }), r(0, n, "isPopup", function() {
            return null != this.parent;
          }), r(0, n, "zOrder", t.prototype._$get_zOrder, function(t) {
            i.superSet(z, this, "zOrder", t), e.manager._checkMask();
          }), r(1, e, "manager", function() {
            return e._manager = e._manager || new D();
          }, function(t) {
            e._manager = t;
          }), e.setLockView = function(t) {
            e.manager.setLockView(t);
          }, e.lock = function(t) {
            e.manager.lock(t);
          }, e.closeAll = function() {
            e.manager.closeAll();
          }, e.getDialogsByGroup = function(t) {
            return e.manager.getDialogsByGroup(t);
          }, e.closeByGroup = function(t) {
            return e.manager.closeByGroup(t);
          }, e.CLOSE = "close", e.CANCEL = "cancel", e.SURE = "sure", e.NO = "no", e.OK = "ok",
          e.YES = "yes", e._manager = null, e;
      }(z),
      rt = function(t) {
        function e() {
          e.__super.call(this);
        }
        s(e, "laya.ui.HBox", t);
        var n = e.prototype;
        return n.sortItem = function(t) {
          t && t.sort(function(t, e) {
            return t.x - e.x;
          });
        }, n.changeItems = function() {
          this._itemChanged = !1;
          for (var t = [], e = 0, i = 0, n = this.numChildren; i < n; i++) {
            var s = this.getChildAt(i);
            s && s.layoutEnabled && (t.push(s), e = this._height ? this._height : Math.max(e, s.height * s.scaleY));
          }
          this.sortItem(t);
          var r = 0;
          for (i = 0, n = t.length; i < n; i++)(s = t[i]).x = r, r += s.width * s.scaleX + this._space,
            "top" == this._align ? s.y = 0 : "middle" == this._align ? s.y = .5 * (e - s.height * s.scaleY) : "bottom" == this._align && (s.y = e - s.height * s.scaleY);
          this.changeSize();
        }, r(0, n, "height", t.prototype._$get_height, function(t) {
          this._height != t && (i.superSet(Y, this, "height", t), this.callLater(this.changeItems));
        }), e.NONE = "none", e.TOP = "top", e.MIDDLE = "middle", e.BOTTOM = "bottom", e;
      }(Y),
      at = function(t) {
        function e() {
          e.__super.call(this);
        }
        s(e, "laya.ui.VBox", t);
        var n = e.prototype;
        return n.changeItems = function() {
          this._itemChanged = !1;
          for (var t = [], e = 0, i = 0, n = this.numChildren; i < n; i++) {
            var s = this.getChildAt(i);
            s && s.layoutEnabled && (t.push(s), e = this._width ? this._width : Math.max(e, s.width * s.scaleX));
          }
          this.sortItem(t);
          var r = 0;
          for (i = 0, n = t.length; i < n; i++)(s = t[i]).y = r, r += s.height * s.scaleY + this._space,
            "left" == this._align ? s.x = 0 : "center" == this._align ? s.x = .5 * (e - s.width * s.scaleX) : "right" == this._align && (s.x = e - s.width * s.scaleX);
          this.changeSize();
        }, r(0, n, "width", t.prototype._$get_width, function(t) {
          this._width != t && (i.superSet(Y, this, "width", t), this.callLater(this.changeItems));
        }), e.NONE = "none", e.LEFT = "left", e.CENTER = "center", e.RIGHT = "right", e;
      }(Y),
      ot = function(t) {
        function e() {
          e.__super.call(this);
        }
        s(e, "laya.ui.RadioGroup", Q);
        return e.prototype.createItem = function(t, e) {
          return new Z(t, e);
        }, e;
      }(),
      ht = function(t) {
        function e() {
          e.__super.call(this);
        }
        s(e, "laya.ui.Tab", Q);
        return e.prototype.createItem = function(t, e) {
          return new N(t, e);
        }, e;
      }(),
      lt = function(t) {
        function e(t) {
          this._vScrollBar = null, this._hScrollBar = null, void 0 === t && (t = ""), e.__super.call(this, t);
        }
        s(e, "laya.ui.TextArea", t);
        var n = e.prototype;
        return n.destroy = function(e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._vScrollBar && this._vScrollBar.destroy(),
            this._hScrollBar && this._hScrollBar.destroy(), this._vScrollBar = null, this._hScrollBar = null;
        }, n.initialize = function() {
          this.width = 180, this.height = 150, this._tf.wordWrap = !0, this.multiline = !0;
        }, n.onVBarChanged = function(t) {
          this._tf.scrollY != this._vScrollBar.value && (this._tf.scrollY = this._vScrollBar.value);
        }, n.onHBarChanged = function(t) {
          this._tf.scrollX != this._hScrollBar.value && (this._tf.scrollX = this._hScrollBar.value);
        }, n.changeScroll = function() {
          var t = this._vScrollBar && this._tf.maxScrollY > 0,
            e = this._hScrollBar && this._tf.maxScrollX > 0,
            i = t ? this._width - this._vScrollBar.width : this._width,
            n = e ? this._height - this._hScrollBar.height : this._height,
            s = this._tf.padding || E.labelPadding;
          this._tf.width = i, this._tf.height = n, this._vScrollBar && (this._vScrollBar.x = this._width - this._vScrollBar.width - s[2],
              this._vScrollBar.y = s[1], this._vScrollBar.height = this._height - (e ? this._hScrollBar.height : 0) - s[1] - s[3],
              this._vScrollBar.scrollSize = 1, this._vScrollBar.thumbPercent = n / Math.max(this._tf.textHeight, n),
              this._vScrollBar.setScroll(1, this._tf.maxScrollY, this._tf.scrollY), this._vScrollBar.visible = t),
            this._hScrollBar && (this._hScrollBar.x = s[0], this._hScrollBar.y = this._height - this._hScrollBar.height - s[3],
              this._hScrollBar.width = this._width - (t ? this._vScrollBar.width : 0) - s[0] - s[2],
              this._hScrollBar.scrollSize = Math.max(.033 * i, 1), this._hScrollBar.thumbPercent = i / Math.max(this._tf.textWidth, i),
              this._hScrollBar.setScroll(0, this.maxScrollX, this.scrollX), this._hScrollBar.visible = e);
        }, n.scrollTo = function(t) {
          this.commitMeasure(), this._tf.scrollY = t;
        }, r(0, n, "scrollY", function() {
          return this._tf.scrollY;
        }), r(0, n, "width", t.prototype._$get_width, function(t) {
          i.superSet(it, this, "width", t), this.callLater(this.changeScroll);
        }), r(0, n, "hScrollBar", function() {
          return this._hScrollBar;
        }), r(0, n, "height", t.prototype._$get_height, function(t) {
          i.superSet(it, this, "height", t), this.callLater(this.changeScroll);
        }), r(0, n, "maxScrollX", function() {
          return this._tf.maxScrollX;
        }), r(0, n, "vScrollBarSkin", function() {
          return this._vScrollBar ? this._vScrollBar.skin : null;
        }, function(t) {
          null == this._vScrollBar && (this.addChild(this._vScrollBar = new et()), this._vScrollBar.on("change", this, this.onVBarChanged),
            this._vScrollBar.target = this._tf, this.callLater(this.changeScroll)), this._vScrollBar.skin = t;
        }), r(0, n, "hScrollBarSkin", function() {
          return this._hScrollBar ? this._hScrollBar.skin : null;
        }, function(t) {
          null == this._hScrollBar && (this.addChild(this._hScrollBar = new j()), this._hScrollBar.on("change", this, this.onHBarChanged),
              this._hScrollBar.mouseWheelEnable = !1, this._hScrollBar.target = this._tf, this.callLater(this.changeScroll)),
            this._hScrollBar.skin = t;
        }), r(0, n, "vScrollBar", function() {
          return this._vScrollBar;
        }), r(0, n, "maxScrollY", function() {
          return this._tf.maxScrollY;
        }), r(0, n, "scrollX", function() {
          return this._tf.scrollX;
        }), e;
      }(it);
    ! function(t) {
      function e() {
        this._uiView = null, this.isCloseOther = !1, e.__super.call(this);
      }
      s(e, "laya.ui.AsynDialog", st);
      var i = e.prototype;
      i.createView = function(t) {
        this._uiView = t;
      }, i._open = function(t, e, i) {
        this.isModal = t, this.isCloseOther = e, st.manager.lock(!0), this._uiView ? this.onCreated() : this.onOpen();
      }, i.onCreated = function() {
        this.createUI(), this.onOpen();
      }, i.createUI = function() {
        laya.ui.View.prototype.createView.call(this, this._uiView), this._uiView = null,
          this._dealDragArea();
      }, i.onOpen = function() {
        st.manager.open(this, this.isCloseOther), st.manager.lock(!1);
      }, i.close = function(t, e) {
        void 0 === e && (e = !0), st.manager.close(this), this.onClose();
      }, i.onClose = function() {}, i.destroy = function(t) {
        void 0 === t && (t = !0), laya.ui.View.prototype.destroy.call(this, t), this._uiView = null,
          this.onDestroy();
      }, i.onDestroy = function() {};
    }();
    i.__init([z]);
  }(window, document, Laya), "function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function(t, e) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    for (var i in Laya) {
      var n = Laya[i];
      n && n.__isclass && (e[i] = n);
    }
  });

! function(t) {
  ! function(e) {
    var i = function() {
      function e() {}
      return e.readBoolean = function(t) {
        return t.getByte() > .1;
      }, e.readByte = function(t) {
        return t.getByte();
      }, e.readShort = function(t) {
        return t.getInt16();
      }, e.readInt = function(t) {
        return t.getInt32();
      }, e.readInt64 = function(e) {
        var i = e.getInt32(),
          n = e.getInt32();
        return new t.utils.Int64(i, n);
      }, e.readFloat = function(t) {
        return t.getFloat32();
      }, e.readDouble = function(t) {
        return t.getFloat64();
      }, e.readString = function(t) {
        return t.getUTFString();
      }, e;
    }();
    e.DataUtil = i;
    var n = function() {
      function e() {}
      return e.findChildNodeByName = function(t, i, n) {
        if (void 0 === n && (n = !1), !t || !i) return null;
        if (n) {
          for (var s = null, r = 0; !s && r < i.numChildren; r++) {
            var a = i.getChildAt(r);
            s = a.name == t ? a : e.findChildNodeByName(t, a, n);
          }
          return s;
        }
        return i.getChildByName(t);
      }, e.fineNumber = function(t) {
        return !t || t < 0 ? "0" : t < 900 ? Math.floor(t).toFixed(0) : t < 1e5 ? (t *= .001).toFixed(2) + "K" : t < 9e5 ? (t *= .001).toFixed(1) + "k" : t < 1e8 ? (t *= 1e-6).toFixed(2) + "M" : t < 9e8 ? (t *= 1e-6).toFixed(1) + "M" : (t *= 1e-9).toFixed(2) + "G";
      }, e.fixedFormat = function(t, e) {
        for (var i = t ? t.toString() : ""; i.length < e;) i = "0" + i;
        return i;
      }, e.catchUrlImage = function(t, e, i, n) {
        var s = new Laya.Sprite();
        s.loadImage(t, 0, 0, e, i);
        new Laya.Handler();
        s.drawToCanvas(e, i, 0, 0).toBase64("image/png", .92, n);
      }, e.dateOfDay = function(t) {
        return Math.floor(t.getTime() / 864e5);
      }, e.weekdayOfDay = function(t) {
        return Math.floor(t.getTime() / 6048e5);
      }, e.dateOfDay2 = function(t) {
        return Math.floor(t.getTime() / 864e5) - e._zeroDate;
      }, e.dayOfDate = function(t) {
        var i = new Date();
        return i.setTime(864e5 * (t + e._zeroDate + 1)), i;
      }, e.dateStrOfDate = function(e) {
        var i = t.utils.GameUtil.dayOfDate(e);
        return i.getFullYear() + "/" + (i.getMonth() + 1) + "/" + i.getDate();
      }, e.formatTime = function(e) {
        if (e > 36e5) {
          var i = Math.floor(e / 36e5),
            n = Math.floor((e - 36e5 * i) / 6e4),
            s = Math.floor((e - 36e5 * i - 6e4 * n) / 1e3);
          return t.utils.GameUtil.fixedFormat(i, 2) + ":" + t.utils.GameUtil.fixedFormat(n, 2) + ":" + t.utils.GameUtil.fixedFormat(s, 2);
        }
        if (e > 6e4) {
          var n = Math.floor(e / 6e4),
            s = Math.floor((e - 6e4 * n) / 1e3);
          return t.utils.GameUtil.fixedFormat(n, 2) + ":" + t.utils.GameUtil.fixedFormat(s, 2);
        }
        s = Math.floor(e / 1e3);
        return "00:" + t.utils.GameUtil.fixedFormat(s, 2);
      }, e._zeroDate = Math.floor(new Date(2018, 0, 1, 0, 0, 0).getTime() / 864e5), e;
    }();
    e.GameUtil = n;
    var s;
    ! function(t) {
      t[t.First = 0] = "First", t[t.Data = 1] = "Data", t[t.Last = 2] = "Last";
    }(s || (s = {}));
    var r = function() {
        function t(t) {
          this._nodeType = t, this.Data = null, this.PreNode = null, this.NextNode = null;
        }
        return Object.defineProperty(t.prototype, "NodeType", {
          get: function() {
            return this._nodeType;
          },
          enumerable: !0,
          configurable: !0
        }), t;
      }(),
      a = function() {
        function t() {
          this._firstNode = new r(s.First), this._lastNode = new r(s.Last), this._firstNode.NextNode = this._lastNode,
            this._lastNode.PreNode = this._firstNode, this._count = 0, this._pool = new Array(t._POOL_SIZE),
            this._poolCount = 0;
        }
        return Object.defineProperty(t.prototype, "Count", {
          get: function() {
            return this._count;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype._applyFreeNode = function() {
          for (var e = null, i = 0; !e && i < t._POOL_SIZE; i++) this._pool[i] && (e = this._pool[i],
            this._pool[i] = null, this._poolCount--);
          return e || (e = new r(s.Data)), e;
        }, t.prototype._reclaimNode = function(e) {
          if (e && !(this._poolCount >= t._POOL_SIZE)) {
            e.Data = null, e.NextNode = null, e.PreNode = null;
            for (var i = 0; e && i < t._POOL_SIZE; i++) this._pool[i] || (this._pool[i] = e,
              this._poolCount++, e = null);
          }
        }, t.prototype.enqueue = function(t) {
          if (t) {
            var e = this._applyFreeNode();
            e.Data = t, e.PreNode = this._lastNode.PreNode, e.NextNode = this._lastNode, this._lastNode.PreNode.NextNode = e,
              this._lastNode.PreNode = e, this._count++;
          }
        }, t.prototype.dequeue = function() {
          if (!(this._count <= 0)) {
            var t = this._firstNode.NextNode,
              e = t.Data;
            return t.NextNode.PreNode = this._firstNode, this._firstNode.NextNode = t.NextNode,
              this._count--, this._reclaimNode(t), e;
          }
        }, t._POOL_SIZE = 4, t;
      }();
    e.SimpleQueue = a;
    var o = function() {
      function t() {
        this._firstNode = new r(s.First), this._lastNode = new r(s.Last), this._firstNode.NextNode = this._lastNode,
          this._lastNode.PreNode = this._firstNode, this._count = 0, this._pool = new Array(t._POOL_SIZE),
          this._poolCount = 0;
      }
      return t.prototype.clear = function() {
        for (var t, e = this._firstNode.NextNode; e.NodeType != s.Last;)(t = e.NextNode).PreNode = e.PreNode,
          e.PreNode.NextNode = t, this._reclaimNode(e), this._count--, e = t;
      }, Object.defineProperty(t.prototype, "Count", {
        get: function() {
          return this._count;
        },
        enumerable: !0,
        configurable: !0
      }), t.prototype._applyFreeNode = function() {
        for (var e = null, i = 0; !e && i < t._POOL_SIZE; i++) this._pool[i] && (e = this._pool[i],
          this._pool[i] = null, this._poolCount--);
        return e || (e = new r(s.Data)), e;
      }, t.prototype._reclaimNode = function(e) {
        if (e && !(this._poolCount >= t._POOL_SIZE)) {
          e.Data = null, e.NextNode = null, e.PreNode = null;
          for (var i = 0; e && i < t._POOL_SIZE; i++) this._pool[i] || (this._pool[i] = e,
            this._poolCount++, e = null);
        }
      }, t.prototype.add = function(t) {
        if (t) {
          var e = this._applyFreeNode();
          e.Data = t, e.PreNode = this._lastNode.PreNode, e.NextNode = this._lastNode, this._lastNode.PreNode.NextNode = e,
            this._lastNode.PreNode = e, this._count++;
        }
      }, t.prototype.getFirstData = function() {
        if (this._count > 0) {
          return this._firstNode.NextNode.Data;
        }
        return null;
      }, t.prototype.getLastData = function() {
        if (this._count > 0) {
          return this._lastNode.PreNode.Data;
        }
        return null;
      }, t.prototype.getDataAt = function(t) {
        if (t < 0 || t >= this._count) return null;
        for (var e = this._firstNode.NextNode; t > 0;) e = e.NextNode, t--;
        return e.Data;
      }, t.prototype.removeAt = function(t) {
        if (t < 0 || t >= this._count) return null;
        for (var e = this._firstNode.NextNode; t > 0;) e = e.NextNode, t--;
        var i = e.Data;
        return e.NextNode.PreNode = e.PreNode, e.PreNode.NextNode = e.NextNode, this._count--,
          this._reclaimNode(e), i;
      }, t.prototype.scan = function(t, e) {
        if (!(this._count <= 0))
          for (var i, n = new Array(1), r = this._firstNode.NextNode; r.NodeType == s.Data;) n[0] = r.Data,
            e.apply(t, n) ? i = r : (i = r.PreNode, r.NextNode.PreNode = r.PreNode, r.PreNode.NextNode = r.NextNode,
              this._count--, this._reclaimNode(r)), r = i.NextNode;
      }, t.prototype.checkAll = function(t, e, i) {
        if (!(this._count <= 0)) {
          var n = new Array(2);
          n[0] = t;
          for (var s = this._firstNode.NextNode; s.NextNode;) n[1] = s.Data, i.apply(e, n),
            s = s.NextNode;
        }
      }, t.prototype.search = function(t, e, i) {
        if (this._count <= 0) return null;
        for (var n = null, r = new Array(2), a = this._firstNode.NextNode; !n && a.NodeType == s.Data;) r[0] = a.Data,
          r[1] = i, e.apply(t, r) && (n = a.Data), a = a.NextNode;
        return n;
      }, t.prototype.reverseSearch = function(t, e) {
        if (this._count <= 0) return null;
        for (var i = null, n = new Array(1), r = this._lastNode.PreNode; !i && r.NodeType == s.Data;) n[0] = r.Data,
          e.apply(t, n) && (i = r.Data), r = r.PreNode;
        return i;
      }, t._POOL_SIZE = 4, t;
    }();
    e.SimpleList = o;
    var h = function() {
      function t() {}
      return t.shuffle = function(t, e) {
          var i, n, s, r = t.length; -
          1 == e && (e = r);
          for (var a = 0; a < e; a++)(i = Math.random() * r) != (n = Math.random() * r) && (s = t[i],
            t[i] = t[n], t[n] = s);
          return t;
        }, t.sqrt = function(t) {
          var e, i, n = .25 * t;
          do {
            (e = (n = .5 * (n + (i = t / n))) - i) < 0 && (e = -e);
          } while (e > 1e-5);
          return n;
        }, t.inScope = function(t, e, i, n, s, r) {
          return Math.abs(t - i) < s && Math.abs(e - n) < r;
        }, t.fastApproxDistance = function(t, e, i, n) {
          return t = t > i ? t - i : i - t, e = e > n ? e - n : n - e, t > e ? t + .43 * e : e + .43 * t;
        }, t.fastApproxDeltaDistance = function(t, e) {
          return t = t > 0 ? t : -t, e = e > 0 ? e : -e, t > e ? t + .43 * e : e + .43 * t;
        }, t.atan2 = function(e, i) {
          return Math.abs(e) > t.EPSILON ? Math.atan2(i, e) : i > 0 ? t.HALF_PI : -t.HALF_PI;
        }, t.LerpFloat = function(t, e, i) {
          return i < 0 ? t : i >= 1 ? e : t + (e - t) * i;
        }, t.lerp = function(e, i, n, s) {
          return (e - i > t.EPSILON || i - e > t.EPSILON) && (s *= n, i > e ? (s > 0 ? e += s : e -= s,
              i - e < t.EPSILON && (e = i)) : (s > 0 ? e -= s : e += s, e - i < t.EPSILON && (e = i))),
            e;
        }, t.lerpDelta = function(e, i, n) {
          return (e - i > t.EPSILON || i - e > t.EPSILON) && (i > e ? (n > 0 ? e += n : e -= n,
              i - e < t.EPSILON && (e = i)) : (n > 0 ? e -= n : e += n, e - i < t.EPSILON && (e = i))),
            e;
        }, t.regularDirection = function(e) {
          if (e >= t.TWO_PI)
            for (; e >= t.TWO_PI;) e -= t.TWO_PI;
          else if (e < 0)
            for (; e < 0;) e += t.TWO_PI;
          return e;
        }, t.approximately = function(e, i) {
          return Math.abs(e - i) < t.EPSILON;
        }, t.approximatelyVector3 = function(e, i, n, s) {
          return Math.abs(e.x - i) < t.EPSILON && Math.abs(e.y - n) < t.EPSILON && Math.abs(e.z - s) < t.EPSILON;
        }, t.copyVector3 = function(t, e) {
          t && e && (e.x = t.x, e.y = t.y, e.z = t.z);
        }, t.exportVector3Log = function(t) {
          console.log("vector3 x=" + t.x + ",y=" + t.y + ",z=" + t.z);
        }, t.approaching = function(e, i, n) {
          return n < 0 && (n = -n), i > e ? (e += n, Math.abs(n - i) < t.EPSILON && (e = i)) : i < e && (e -= n,
            Math.abs(n - i) < t.EPSILON && (e = i)), e;
        }, t.EPSILON = 1e-5, t.Rad2Deg = 180 / Math.PI, t.Deg2Rad = Math.PI / 180, t.PI = Math.PI,
        t.TWO_PI = 2 * Math.PI, t.HALF_PI = .5 * Math.PI, t.ONE_HALF_PI = 1.5 * Math.PI,
        t;
    }();
    e.MathUtils = h;
    var l = function() {
      function t(t, e) {
        this._caller = t, this._method = e;
      }
      return t.prototype.setMethod = function(t, e) {
        this._caller = t, this._method = e;
      }, t.prototype.isSameMethod = function(t, e) {
        return this._caller && this._caller == t && this._method && this._method == e;
      }, t.prototype.apply = function(t) {
        this._method && this._method.apply(this._caller, t);
      }, t;
    }();
    e.SimpleDelegate = l;
    var u = function() {
      function t() {
        this._delegates = new Array();
      }
      return t.prototype.getCount = function() {
        return this._delegates.length;
      }, t.prototype.getItem = function(t) {
        return t >= 0 && t < this._delegates.length ? this._delegates[t] : null;
      }, t.prototype.tryAddDelegate = function(t, e) {
        if (!t || !e) return !1;
        for (var i, n = this._delegates.length, s = 0; s < n; s++)
          if ((i = this._delegates[s]) && i.isSameMethod(t, e)) return !1;
        i = new l(t, e), this._delegates.push(i);
      }, t.prototype.removeDelegate = function(t, e) {
        if (t && e) {
          for (var i, n = -1, s = this._delegates.length, r = 0; r < s && n < 0; r++)(i = this._delegates[r]) && i.isSameMethod(t, e) && (n = r);
          n >= 0 && this._delegates.splice(n, 1);
        }
      }, t.prototype.invokeDelegate = function(t) {
        for (var e, i = this._delegates.length, n = 0; n < i; n++)(e = this._delegates[n]) && (t ? e.apply(t) : e.apply());
      }, t;
    }();
    e.SimpleDelegates = u;
    var c = function() {
      function t() {}
      return t.fineToString = function(t) {
        return t ? t.toString() : "";
      }, t;
    }();
    e.StrUtils = c;
    var _ = function() {
      function t(t, e) {
        void 0 === t && (t = 0), void 0 === e && (e = 0), this.low = 0, this.high = 0, this.low = t,
          this.high = e;
      }
      return t.prototype.equal = function(t) {
        return !!t && (t.low == this.low && t.high == this.high);
      }, t.prototype.isZero = function() {
        return 0 == this.low && 0 == this.high;
      }, t.prototype.toString = function() {
        return "high:0x" + this.high.toString(16) + " low:0x" + this.low.toString(16);
      }, t;
    }();
    e.Int64 = _;
    var d = function() {
      function t() {}
      return t.BYTE_ORDER = Laya.Byte.BIG_ENDIAN, t;
    }();
    e.SystemOption = d;
  }(t.utils || (t.utils = {}));
}(asgard || (asgard = {}));

! function(t) {
  ! function(e) {
    var i = function() {
      function e(t) {
        this._name = t, this._isBackground = !1, this._resReady = !1, this._showData = {};
      }
      return e.prototype.getName = function() {
          return this._name;
        }, e.prototype.getView = function() {
          return this._uiView || (this._uiView = this.createView(), this._uiView && (this._uiView.name = this._name,
            this.onInit(), n.addUIView(this._uiView))), this._uiView;
        }, e.prototype.showCenter = function(t, e) {
          this._uiView.x = .5 * (t - this._uiView.width), this._uiView.y = .5 * (e - this._uiView.height);
        }, e.prototype.isVisible = function() {
          return this._visible;
        }, e.prototype.isResReady = function() {
          return this._resReady;
        }, e.prototype.getDependenceRes = function() {
          return null;
        }, e.prototype.createView = function() {
          return null;
        }, e.prototype._prepareRes = function() {
          if (this._resReady) this._doShow();
          else {
            var t = this.getDependenceRes();
            t ? Laya.loader.load(t, Laya.Handler.create(this, this.onResLoaded)) : this.onResLoaded();
          }
        }, e.prototype.prepareView = function() {
          this._visible = !1, this._prepareRes();
        }, e.prototype.openView = function(e) {
          this._visible = !0, this._showData = e, this._prepareRes(), this._name != logic.UIPanelID.NoCoinTip && this._name != logic.UIPanelID.LEVELUPTIP && this._name != logic.UIPanelID.LOGINDAY && this._name != logic.UIPanelID.OFFLINETIP && this._name != logic.UIPanelID.BOXREWARD && this._name != logic.UIPanelID.LUCKYWHEEL && this._name != logic.UIPanelID.FLYTIP && this._name != logic.UIPanelID.INVITELOGIN && this._name != logic.UIPanelID.RANKLIST && this._name != logic.UIPanelID.HEROLIST && this._name != logic.UIPanelID.INVITEFRIEND && this._name != logic.UIPanelID.OFFLINETIP && this._name != logic.UIPanelID.MSGBOX || logic.PlatForm.GetInstance().ShowAd(logic.GameConst.BANNERAD_UNITID, Laya.Handler.create(null, function() {
            t.ui.UIManager.banner.visible = !0, t.ui.UIManager.banner.mouseEnabled = !0;
          }));
        }, e.prototype.closeView = function(e) {
          this._visible = !1, this._showData = {}, this.onHide(), e && this._uiView && this._uiView.removeSelf(),
            this._name != logic.UIPanelID.NoCoinTip && this._name != logic.UIPanelID.LEVELUPTIP && this._name != logic.UIPanelID.LOGINDAY && this._name != logic.UIPanelID.OFFLINETIP && this._name != logic.UIPanelID.BOXREWARD && this._name != logic.UIPanelID.LUCKYWHEEL && this._name != logic.UIPanelID.FLYTIP && this._name != logic.UIPanelID.INVITELOGIN && this._name != logic.UIPanelID.RANKLIST && this._name != logic.UIPanelID.HEROLIST && this._name != logic.UIPanelID.INVITEFRIEND && this._name != logic.UIPanelID.OFFLINETIP && this._name != logic.UIPanelID.MSGBOX || (logic.PlatForm.GetInstance().closeBannerAd(),
              t.ui.UIManager.banner.visible = !1, t.ui.UIManager.banner.mouseEnabled = !1);
        }, e.prototype.onResLoaded = function() {
          this._resReady = !0, this.onPrepared(), this._visible && this._doShow();
        }, e.prototype._doShow = function() {
          var t = this.getView();
          this._visible && t && (this.onShow(), this._isBackground ? n.addBkgView(t) : n.addUIView(t));
        }, e.prototype.onFrame = function(t, e) {}, e.prototype.onInit = function() {},
        e.prototype.onPrepared = function() {}, e.prototype.onShow = function() {}, e.prototype.onHide = function() {},
        e.prototype.dispose = function() {}, e;
    }();
    e.BaseUIPanel = i;
    var n = function() {
      function e() {}
      return e.init = function(t) {
        (e._Bkg_Root = new Laya.Sprite()).name = "_Bkg_Root", Laya.stage.addChild(e._Bkg_Root),
          (e._Game_Root = new Laya.Sprite()).name = "_Game_Root", Laya.stage.addChild(e._Game_Root),
          (e._UI_Root = new Laya.Sprite()).name = "_UI_Root", Laya.stage.addChild(e._UI_Root),
          (e._UI_EFFECT = new Laya.Sprite()).name = "_UI_EFFECT", Laya.stage.addChild(e._UI_EFFECT),
          (e._Tip_Root = new Laya.Sprite()).name = "_Tip_Root", Laya.stage.addChild(e._Tip_Root),
          (e._Guide_Root = new Laya.Sprite()).name = "_Guide_Root", Laya.stage.addChild(e._Guide_Root),
          e._uifactory = t, e._uiPanels.clear();
      }, e.addBkgView = function(t) {
        t && e._Bkg_Root.addChild(t);
      }, e.addGameView = function(t) {
        t && e._Game_Root.addChild(t);
      }, e.addUIView = function(t) {
        t && e._UI_Root.addChild(t);
      }, e.addUIEffectView = function(t) {
        t && e._UI_EFFECT.addChild(t);
      }, e.addTipView = function(t) {
        t && e._Tip_Root.addChild(t);
      }, e.findUIPanel = function(t) {
        return e._uiPanels.search(null, e._compareUI, t);
      }, e._compareUI = function(t, e) {
        return t && e && e == t.getName();
      }, e.openView = function(t, i) {
        var n = e._uiPanels.search(null, e._compareUI, t);
        return n || (n = e._uifactory.getUI(t)) && e._uiPanels.add(n), n && n.openView(i),
          n;
      }, e.prepareView = function(t) {
        var i = e._uiPanels.search(null, e._compareUI, t);
        return i || (i = e._uifactory.getUI(t)) && e._uiPanels.add(i), i && i.prepareView(),
          i;
      }, e.closeView = function(t) {
        var i = e._uiPanels.search(null, e._compareUI, t);
        i && i.closeView(!0);
      }, e.addGuideView = function(t) {
        t && e._Guide_Root.addChild(t);
      }, e.removeGuideView = function() {
        e._Guide_Root.numChildren > 0 && e._Guide_Root.removeChildAt(0);
      }, e.onFrame = function(t, i) {
        e._frameTime = t, e._frameDelta = i, e._uiPanels.scan(null, e._uiPanelFrame);
      }, e._uiPanelFrame = function(t) {
        return t && t.isVisible() && t.onFrame(e._frameTime, e._frameDelta), !0;
      }, e._uiPanels = new t.utils.SimpleList(), e;
    }();
    e.UIManager = n;
  }(t.ui || (t.ui = {}));
}(asgard || (asgard = {}));

! function(t) {
  ! function(e) {
    var i = t.utils.DataUtil,
      n = function() {
        function e() {
          this.Id = 0;
        }
        return e.prototype.getDataType = function() {
            return 0;
          }, e.prototype.initialize = function(t) {
            return !1;
          }, e.prototype.initReference = function() {}, e.prototype.initTextBlock = function() {},
          e.prototype.readBoolean = function(t) {
            return t.getByte() > .1;
          }, e.prototype.readByte = function(t) {
            return t.getByte();
          }, e.prototype.readShort = function(t) {
            return t.getInt16();
          }, e.prototype.readInt = function(t) {
            return t.getInt32();
          }, e.prototype.readInt64 = function(e) {
            var i = e.getInt32(),
              n = e.getInt32();
            return new t.utils.Int64(i, n);
          }, e.prototype.readFloat = function(t) {
            return t.getFloat32();
          }, e.prototype.readDouble = function(t) {
            return t.getFloat64();
          }, e.prototype.readString = function(t) {
            return t.getUTFString();
          }, e;
      }();
    e.BaseStaticData = n;
    var s = function() {
      function t(t) {
        this._textSource = t;
      }
      return t.prototype.initData = function() {}, Object.defineProperty(t.prototype, "textSource", {
        get: function() {
          return this.textSource;
        },
        enumerable: !0,
        configurable: !0
      }), t;
    }();
    e.BaseTextBlockData = s;
    var r = function() {
      function t() {}
      t.getSheet = function(e) {
        return t._dataMap.get(e);
      };

      t.getSheetDatas = function(e) {
        var i = t._dataMap.get(e);
        return i ? i.getSheetDatas() : null;
      };

      t.appendSheet = function(e) {
        var i = t._dataMap.get(e);
        if (i) return i;
        var n = new a();
        return t._dataMap.set(e, n), n;
      };

      t.findData = function(e, i) {
        var n = t._dataMap.get(e);
        return null != n ? n.getData(i) : null;
      };

      //add by qjb 表格加载，需要修改为msgpack
      t.loadStaticData = function(e, n) {
        var s, r = i.readShort(e),
          o = new Array(r),
          h = new Array(r);
        for (s = 0; s < r; s++) o[s] = i.readInt(e), h[s] = i.readInt(e);
        var l, u = new Array(r);
        for (s = 0; s < r; s++)
          (l = new a()).initDataFactory(n),
          l.loadSheetData(e), u[s] = l,
          t._dataMap.set(l.SheetId, l);
        for (s = 0; s < r; s++) u[s].loadReferenceData();
        for (s = 0; s < r; s++) u[s].loadTextBlockData();
      };

      t._dataMap = new Laya.Dictionary();

      return t;
    }();
    e.StaticDataManager = r;
    var a = function() {
      function t() {
        this._sheetId = 0, this._sheetName = null, this._containsReferenceField = !1, this._containsTextBlockField = !1,
          this._dataMap = new Laya.Dictionary(), this._dataList = null;
      }
      return t.prototype.initDataFactory = function(t) {
        this._dataFactory = t;
      }, Object.defineProperty(t.prototype, "SheetId", {
        get: function() {
          return this._sheetId;
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t.prototype, "SheetName", {
        get: function() {
          return this._sheetName;
        },
        enumerable: !0,
        configurable: !0
      }), t.prototype.getData = function(t) {
        return this._dataMap.get(t);
      }, t.prototype.getSheetDatas = function() {
        if (null != this._dataList) {
          var t = this._dataList.length;
          if (t > 0) {
            for (var e = new Array(t), i = 0; i < t; i++) e[i] = this._dataList[i];
            return e;
          }
        }
        return null;
      }, t.prototype.loadSheetData = function(t) {
        try {
          this._sheetName = i.readString(t), this._sheetId = i.readShort(t), i.readString(t);
          var e = void 0,
            n = i.readShort(t),
            s = i.readShort(t);
          for (e = 0; e < s; e++) i.readString(t), i.readShort(t) > 0 && (this._containsReferenceField = !0),
            i.readString(t), 7 == i.readByte(t) && (this._containsTextBlockField = !0), i.readByte(t);
          var r = void 0;
          for (this._dataList = new Array(n), e = 0; e < n; e++)
            if (null != (r = this._dataFactory.createStaticData(this._sheetId))) try {
              r.initialize(t), this._dataList[e] = r, this._dataMap.set(r.Id, r);
            } catch (t) {}
        } catch (t) {}
      }, t.prototype.loadReferenceData = function() {
        if (null != this._dataList && this._containsReferenceField)
          for (var t = this._dataList.length, e = 0; e < t; e++) this._dataList[e].initReference();
      }, t.prototype.loadTextBlockData = function() {
        if (null != this._dataList && this._containsTextBlockField)
          for (var t = this._dataList.length, e = 0; e < t; e++) this._dataList[e].initTextBlock();
      }, Object.defineProperty(t.prototype, "Count", {
        get: function() {
          return this._dataList ? this._dataList.length : 0;
        },
        enumerable: !0,
        configurable: !0
      }), t.prototype.getDataAt = function(t) {
        return t >= 0 && t < this._dataList.length ? this._dataList[t] : null;
      }, t;
    }();
    e.StaticDataSheet = a;
  }(t.data || (t.data = {}));
}(asgard || (asgard = {}));

! function(t) {
  ! function(t) {
    var e = function() {
      function t(t, e) {
        this._owner = t, this._statesManager = e, this._frameActive = !0, this._active = !1,
          this._fromStateId = -1, this._toStateId = -1, this._enterStamp = 0, this._keepTime = 0,
          this._lockReferCount = 0;
      }
      return t.prototype.onInit = function() {}, t.prototype.changeState = function(t, e) {
          void 0 === e && (e = !1), this._statesManager.changeState(t, e);
        }, t.prototype.bindOwner = function(t) {
          this._owner = t;
        }, Object.defineProperty(t.prototype, "Owner", {
          get: function() {
            return this._owner;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "StateId", {
          get: function() {
            return this._stateId;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "Name", {
          get: function() {
            return this._name;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "Locked", {
          get: function() {
            return this._lockReferCount > 0;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.lock = function() {
          this._lockReferCount++;
        }, t.prototype.unlock = function() {
          this._lockReferCount--;
        }, Object.defineProperty(t.prototype, "KeepTime", {
          get: function() {
            return this._keepTime;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "Active", {
          get: function() {
            return this._active;
          },
          set: function(t) {
            this._active = t;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "EnterFrameTick", {
          get: function() {
            return this._enterFrameTick;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.prepareEnter = function(t) {
          this._enterFrameTick = this._statesManager.FrameTick, this._enterStamp = t;
        }, t.prototype.transitable = function(t) {
          return !0;
        }, t.prototype.enter = function(t) {}, t.prototype.exit = function(t) {}, t.prototype.afterExit = function() {},
        t.prototype.activeCurrentFrame = function(t) {
          this._keepTime = t - this._enterStamp, this._frameActive || (this._frameActive = !0);
        }, Object.defineProperty(t.prototype, "FrameActive", {
          get: function() {
            return this._frameActive;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.ignoreCurrentFrame = function() {
          this._frameActive = !1;
        }, t.prototype.prepareFrame = function(t, e) {}, t.prototype.onFrame = function(t, e) {},
        t.prototype.dispose = function() {}, Object.defineProperty(t.prototype, "StateFromId", {
          get: function() {
            return this._fromStateId;
          },
          set: function(t) {
            this._fromStateId = t;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "StateToId", {
          get: function() {
            return this._toStateId;
          },
          set: function(t) {
            this._toStateId = t;
          },
          enumerable: !0,
          configurable: !0
        }), t;
    }();
    t.BaseState = e;
    var i = function() {
      function t(t, e, i) {
        this._owner = t, this._stateCount = e, this._states = new Array(this._stateCount),
          this._initStateId = i, this._frameTick = 0, this._isTransittingState = !1, this._locked = !1,
          this.initStates(), this._lastTimeStmap = Laya.timer.currTimer, this._ready = !1,
          this.reset();
      }
      return t.prototype.initStates = function() {}, Object.defineProperty(t.prototype, "Owner", {
          get: function() {
            return this._owner;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "IsReady", {
          get: function() {
            return this._ready;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "FrameTick", {
          get: function() {
            return this._frameTick;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.reset = function() {
          for (var t = 0; t < this._states.length; t++) this._states[t] && this._states[t].onInit();
          this._curState = this.getState(this._initStateId), null != this._curState && (this._curState.Active = !0,
              this._curState.prepareEnter(Laya.timer.currTimer), this._curState.enter(Laya.timer.currTimer)),
            this._ready = !0;
        }, t.prototype.lock = function() {
          this._locked = !0;
        }, t.prototype.unlock = function() {
          this._locked = !1, this.changeState(this._initStateId, !0);
        }, Object.defineProperty(t.prototype, "IsLocked", {
          get: function() {
            return this._locked;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.regState = function(t) {
          null == t || t.StateId >= this._stateCount || null == this._states[t.StateId] && (this._states[t.StateId] = t);
        }, t.prototype.getState = function(t) {
          return t >= 0 && t < this._stateCount ? this._states[t] : null;
        }, t.prototype.onFrame = function(t) {
          this._ready ? (this._frameDelta = t - this._lastTimeStmap, this._lastTimeStmap = t,
            this._frameTick++, this._locked || null == this._curState || (this._curState.activeCurrentFrame(t),
              this._curState.prepareFrame(t, this._frameDelta), this._curState.Active && this._curState.FrameActive && this._curState.onFrame(t, this._frameDelta))) : this._lastTimeStmap = t;
        }, t.prototype.changeState = function(e, i) {
          if (void 0 === i && (i = !1), null != this._curState && this._curState.StateId == e) return t.SAME_AND_NOSELFINTERRUPTABLE;
          var n, s = i ? t.OK : this.checkToState(e);
          if (s == t.OK) {
            this._isTransittingState = !0, n = this.getState(e);
            var r = Laya.timer.currTimer;
            null != this._curState && (this._curState.StateToId = e, this._curState.exit(r),
                this._curState.afterExit(), this._curState.Active = !1, this._curState.StateToId = -1),
              null != n && (n.StateFromId = this.CurrentStateID, this._curState = n, this._curState.Active = !0,
                this._curState.prepareEnter(r), this._curState.enter(r)), this._isTransittingState = !1;
          }
          return s;
        }, t.prototype.checkToState = function(e) {
          if (null != this._curState && !this._curState.transitable(e)) return this.CurrentState.StateId != e ? t.NOT_TRANSITABLE : t.SAME_AND_NOSELFINTERRUPTABLE;
          if (null != this._curState && this._curState.StateFromId == e && this._curState.EnterFrameTick == this.FrameTick) return t.RECIRCLE_STATE_TRANSIT;
          var i = this.getState(e);
          return null != i && i.Locked ? t.LOCKED : t.OK;
        }, t.prototype.dispose = function() {
          this._owner = null;
          var t;
          if (null != this._states) {
            for (t = 0; t < this._stateCount; t++) null != this._states[t] && (this._states[t].dispose(),
              this._states[t] = null);
            this._states = null;
          }
        }, Object.defineProperty(t.prototype, "CurrentStateID", {
          get: function() {
            return null != this._curState ? this._curState.StateId : -1;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "CurrentStateFromID", {
          get: function() {
            return null != this._curState ? this._curState.StateFromId : -1;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "CurrentState", {
          get: function() {
            return this._curState;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "TransittingState", {
          get: function() {
            return this._isTransittingState;
          },
          enumerable: !0,
          configurable: !0
        }), t.OK = 0, t.SAME_AND_NOSELFINTERRUPTABLE = t.OK, t.LOCKED = 1, t.NOT_TRANSITABLE = 2,
        t.NOT_IN_LAYER = 3, t.RECIRCLE_STATE_TRANSIT = 4, t;
    }();
    t.StatesManager = i;
  }(t.state || (t.state = {}));
}(asgard || (asgard = {}));

! function(t) {
  ! function(t) {
    var e = function() {
      function t() {
        this._stageId = 0, this.FromStageId = 0;
      }
      return Object.defineProperty(t.prototype, "stageId", {
          get: function() {
            return this._stageId;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.enterStage = function(t) {
          i.enterStage(t);
        }, t.prototype.onEnter = function() {}, t.prototype.onFrame = function(t, e) {},
        t.prototype.onExit = function() {}, t;
    }();
    t.BaseStage = e;
    var i = function() {
      function t() {}
      return t.init = function(e, i) {
        t._curStage = null, t._initStageId = e, t._stageFactory = i;
      }, Object.defineProperty(t, "CurStage", {
        get: function() {
          return t._curStage;
        },
        enumerable: !0,
        configurable: !0
      }), t.enterStage = function(e) {
        if (!t._curStage || t._curStage.stageId != e) {
          var i = 0;
          t._curStage && (i = t._curStage.stageId, t._curStage.onExit(), t._curStage = null),
            t._stageFactory && (t._curStage = t._stageFactory.getStage(e)) && (t._curStage.FromStageId = i,
              t._curStage.onEnter());
        }
      }, t.onFrame = function(e, i) {
        t._curStage ? t._curStage.onFrame(e, i) : t._initStageId && (t.enterStage(t._initStageId),
          t._initStageId = 0);
      }, t;
    }();
    t.StageManager = i;
  }(t.stage || (t.stage = {}));
}(asgard || (asgard = {}));

! function(t) {
  ! function(t) {
    var e = function() {
      return function(t, e) {
        this.walkable = !0, this.costMultiplier = 1, this.x = t, this.y = e;
      };
    }();
    t.Node = e;
    var i = function() {
      function t(t, i) {
        this._numCols = t, this._numRows = i, this._nodes = [];
        for (var n = 0; n < t; n++) {
          this._nodes[n] = [];
          for (var s = 0; s < i; s++) this._nodes[n][s] = new e(n, s);
        }
      }
      return t.prototype.getNode = function(t, e) {
        return this._nodes[t][e];
      }, t.prototype.setEndNode = function(t, e) {
        this._endNode = this._nodes[t][e];
      }, t.prototype.setStartNode = function(t, e) {
        this._startNode = this._nodes[t][e];
      }, t.prototype.setWalkable = function(t, e, i) {
        this._nodes[t][e].walkable = i;
      }, Object.defineProperty(t.prototype, "endNode", {
        get: function() {
          return this._endNode;
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t.prototype, "numCols", {
        get: function() {
          return this._numCols;
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t.prototype, "numRows", {
        get: function() {
          return this._numRows;
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t.prototype, "startNode", {
        get: function() {
          return this._startNode;
        },
        enumerable: !0,
        configurable: !0
      }), t;
    }();
    t.Grid = i;
    var n = function() {
      function t() {
        this._straightCost = 1, this._diagCost = Math.SQRT2, this._heuristic = this.diagonal;
      }
      return t.prototype.findPath = function(t) {
        return this._grid = t, this._open = [], this._closed = [], this._startNode = this._grid.startNode,
          this._endNode = this._grid.endNode, this._startNode.g = 0, this._startNode.h = this._heuristic(this._startNode),
          this._startNode.f = this._startNode.g + this._startNode.h, this.search();
      }, t.prototype.search = function() {
        for (var t = this._startNode; t != this._endNode;) {
          for (var e = Math.max(0, t.x - 1), i = Math.min(this._grid.numCols - 1, t.x + 1), n = Math.max(0, t.y - 1), s = Math.min(this._grid.numRows - 1, t.y + 1), r = e; r <= i; r++)
            for (var a = n; a <= s; a++)
              if (r == t.x || a == t.y) {
                var o = this._grid.getNode(r, a);
                if (o != t && o.walkable && this._grid.getNode(t.x, o.y).walkable && this._grid.getNode(o.x, t.y).walkable) {
                  var h = this._straightCost;
                  t.x != o.x && t.y != o.y && (h = this._diagCost);
                  var l = t.g + h * o.costMultiplier,
                    u = this._heuristic(o),
                    c = l + u;
                  this.isOpen(o) || this.isClosed(o) ? o.f > c && (o.f = c, o.g = l, o.h = u, o.parent = t) : (o.f = c,
                    o.g = l, o.h = u, o.parent = t, this._open.push(o));
                }
              }
          for (var _ = 0; _ < this._open.length; _++);
          if (this._closed.push(t), 0 == this._open.length) return console.log("AStar >> no path found"), !1;
          for (var d = this._open.length, p = 0; p < d; p++)
            for (var f = p + 1; f < d; f++)
              if (this._open[p].f > this._open[f].f) {
                var g = this._open[p];
                this._open[p] = this._open[f], this._open[f] = g;
              }
          t = this._open.shift();
        }
        return this.buildPath(), !0;
      }, t.prototype.buildPath = function() {
        this._path = new Array();
        var t = this._endNode;
        for (this._path.push(t); t != this._startNode;) t = t.parent, this._path.unshift(t);
      }, Object.defineProperty(t.prototype, "path", {
        get: function() {
          return this._path;
        },
        enumerable: !0,
        configurable: !0
      }), t.prototype.isOpen = function(t) {
        for (var e = 0; e < this._open.length; e++)
          if (this._open[e] == t) return !0;
        return !1;
      }, t.prototype.isClosed = function(t) {
        for (var e = 0; e < this._closed.length; e++)
          if (this._closed[e] == t) return !0;
        return !1;
      }, t.prototype.manhattan = function(t) {
        return Math.abs(t.x - this._endNode.x) * this._straightCost + Math.abs(t.y + this._endNode.y) * this._straightCost;
      }, t.prototype.euclidian = function(t) {
        var e = t.x - this._endNode.x,
          i = t.y - this._endNode.y;
        return Math.sqrt(e * e + i * i) * this._straightCost;
      }, t.prototype.diagonal = function(t) {
        var e = Math.abs(t.x - this._endNode.x),
          i = Math.abs(t.y - this._endNode.y),
          n = Math.min(e, i),
          s = e + i;
        return this._diagCost * n + this._straightCost * (s - 2 * n);
      }, Object.defineProperty(t.prototype, "visited", {
        get: function() {
          return this._closed.concat(this._open);
        },
        enumerable: !0,
        configurable: !0
      }), t;
    }();
    t.AStar = n;
  }(t.pathing || (t.pathing = {}));
}(asgard || (asgard = {}));

! function(t) {
  ! function(e) {
    var i = laya.events.Event,
      n = laya.utils.Byte,
      s = Laya.Socket,
      r = laya.utils.Browser,
      a = t.utils.SimpleDelegate,
      o = function() {
        function t() {}
        return t.prototype.registerEventListener = function(t, e, n) {
          switch (t) {
            case i.OPEN:
              this.onConnected = new a(e, n);
              break;

            case i.CLOSE:
              this.onClose = new a(e, n);
              break;

            case i.ERROR:
              this.onError = new a(e, n);
              break;

            case i.MESSAGE:
              this.onMessageReceived = new a(e, n);
          }
        }, t.prototype.unregisterEventListener = function(t) {
          switch (t) {
            case i.OPEN:
              this.onConnected = null;
              break;

            case i.CLOSE:
              this.onClose = null;
              break;

            case i.ERROR:
              this.onError = null;
              break;

            case i.MESSAGE:
              this.onMessageReceived = null;
          }
        }, t.prototype.connectedNotify = function() {
          this.onConnected && this.onConnected.apply();
        }, t.prototype.closeNotify = function() {
          this.onClose && (this.onClose.apply(), console.log("SimpleSocket.closeHandler(), 数据连接关闭!"));
        }, t.prototype.errorNotify = function() {
          this.onError && (this.onError.apply(), console.log("SimpleSocket.errorHandler(), 数据连接错误!"));
        }, t.prototype.messageReceivedNotify = function(t, e) {
          this.onMessageReceived && this.onMessageReceived.apply([t, e]);
        }, t;
      }();
    e.NetEvents = o, e.CONNECTION_LOBBY = 0, e.CONNECTION_ARENA = 1;
    var h = function() {
      function e(e) {
        this._connectionFlag = e, this._net = new t.net.TCPClient(), this._net.registerEventListener(laya.events.Event.OPEN, this, this.OnConnected),
          this._net.registerEventListener(laya.events.Event.MESSAGE, this, this.OnMsgReceive),
          this._connectedNotify = null;
      }
      return Object.defineProperty(e.prototype, "ConnectionFlag", {
        get: function() {
          return this._connectionFlag;
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(e.prototype, "IsConnected", {
        get: function() {
          return this._net.connected;
        },
        enumerable: !0,
        configurable: !0
      }), e.prototype.setConnectedNotify = function(e, i) {
        this._connectedNotify = new t.utils.SimpleDelegate(e, i);
      }, e.prototype.setMessageNotify = function(e, i) {
        this._messageNotify = new t.utils.SimpleDelegate(e, i);
      }, e.prototype.tryConnection = function(t, e) {
        this._net.connect(t, e);
      }, e.prototype.OnConnected = function() {
        this._connectedNotify && this._connectedNotify.apply();
      }, e.prototype.sendMessage = function(t) {
        var e = t.encode();
        this._net.sendMessages(t.getMessageType(), e), e = null;
      }, e.prototype.OnMsgReceive = function(t, e) {
        this._messageNotify && this._messageNotify.apply([this._connectionFlag, t, e]);
      }, e;
    }();
    e.NetSession = h;
    var l = function() {
      function i() {}
      return i.InitMessageFactory = function(t) {
        i._messageFactory = t;
      }, i.tryConnect = function(t, e, n, s, r) {
        var a = i._sessions[t];
        return a || ((a = new h(t)).setMessageNotify(i, i._onMessageNotify), i._sessions[t] = a),
          a && (a.setConnectedNotify(s, r), a.tryConnection(e, n)), a;
      }, i.sendMessage = function(t) {
        var e = i._sessions[t.connectionFlag];
        e && e.sendMessage(t);
      }, i._onMessageNotify = function(e, n, s) {
        if (i._messageFactory) {
          var r = i._messageFactory.getMessage(n);
          r && (r.setConnectionFlag(e), r.decode(s), t.message.MessageDispatcher.ProcessMessage(n, r));
        }
      }, i._sessions = new Array(e.CONNECTION_ARENA + 1), i;
    }();
    e.NetManager = l;
    var u = function() {
      function t() {
        this.init();
      }
      return t.prototype.getEvents = function() {
        return this._events;
      }, t.prototype.setEvents = function(t) {
        this._events = t;
      }, t.prototype.getConnected = function() {
        return this.socket.connected;
      }, t.prototype.connect = function(t, e) {
        console.log("GameSocket.connect()"), this.resetConnect(), this.socket.connect(t, e);
      }, t.prototype.close = function() {
        this.socket && this.socket.connected && this.socket.close();
      }, t.prototype.init = function() {
        this.socket = new s(), this.socket.endian = t.BYTE_ORDER, this.socket.on(i.OPEN, this, this.connectHandler),
          this.socket.on(i.CLOSE, this, this.closeHandler), this.socket.on(i.MESSAGE, this, this.socketDataHandler),
          this.socket.on(i.ERROR, this, this.errorHandler), this.outputBuffer = new n(), this.outputBuffer.endian = t.BYTE_ORDER,
          this.inputBuffer = new n(), this.inputBuffer.endian = t.BYTE_ORDER, this.msgBuffer = new n(),
          this.msgBuffer.endian = t.BYTE_ORDER;
      }, t.prototype.resetConnect = function() {
        this.socket.off(i.OPEN, this, this.connectHandler), this.socket.off(i.CLOSE, this, this.closeHandler),
          this.socket.off(i.ERROR, this, this.errorHandler), this.socket.off(i.MESSAGE, this, this.socketDataHandler),
          this.socket = null, this.outputBuffer = null, this.inputBuffer = null, this.msgBuffer = null,
          this.init();
      }, t.prototype.sendPackage = function(t, e) {
        this.socket.connected ? (e.pos = 0, this.outputBuffer.clear(), this.outputBuffer.writeUint32(e.length + 8),
          this.outputBuffer.writeUint32(t), this.outputBuffer.writeArrayBuffer(e.buffer),
          this.outputBuffer.pos = 0, console.log("Send cmd = " + t + ", bytes.leng = " + e.length),
          this.socket.output.writeArrayBuffer(this.outputBuffer.buffer), this.socket.flush(),
          this.outputBuffer.clear()) : console.log("GameSocket.sendPackage(), 无连接");
      }, t.prototype.connectHandler = function(t) {
        this._events.connectedNotify();
      }, t.prototype.closeHandler = function(t) {
        this._events && (this._events.closeNotify(), console.log("SimpleSocket.closeHandler(), 数据连接关闭!"));
      }, t.prototype.errorHandler = function(t) {
        this._events && (this._events.errorNotify(), console.log("SimpleSocket.errorHandler(), 数据连接错误!"));
      }, t.prototype.clearRecvArray = function() {
        this.inputBuffer && (this.inputBuffer.clear(), this.inputBuffer = new n()), this.msgBuffer && (this.msgBuffer.clear(),
          this.msgBuffer = new n());
      }, t.prototype.socketDataHandler = function(t) {
        console.log("GameSocket.socketDataHandler");
        try {
          var e = void 0,
            i = void 0,
            n = void 0,
            s = void 0;
          for (this.inputBuffer.writeArrayBuffer(t), this.inputBuffer.pos = 0; this.inputBuffer.bytesAvailable >= 8;) {
            if ((e = this.inputBuffer.getInt32()) < 8) return i = this.inputBuffer.getInt32(),
              this.inputBuffer.length = 0, void alert("数据长度为0了 , 协议号为： " + i);
            if (!(e - 4 <= this.inputBuffer.bytesAvailable)) break;
            i = this.inputBuffer.getInt32(), this.msgBuffer.clear(), this.msgBuffer.writeArrayBuffer(this.inputBuffer.buffer, this.inputBuffer.pos, e - 8),
              n = this.inputBuffer.pos + e - 8, s = this.inputBuffer.length - n, this.inputBuffer.pos = 0,
              s > 0 ? (this.inputBuffer.writeArrayBuffer(this.inputBuffer.buffer, n, this.inputBuffer.length),
                this.inputBuffer.length = s) : this.inputBuffer.length = 0, this.msgBuffer.pos = 0,
              this._events && this._events.messageReceivedNotify(i, this.msgBuffer), this.msgBuffer.clear();
          }
        } catch (t) {
          console.log("error = ", t.message);
        }
      }, t.BYTE_ORDER = Laya.Byte.BIG_ENDIAN, t;
    }();
    e.SimpleSocket = u;
    var c = function() {
      function t() {
        this._events = new o(), this.init();
      }
      return t.prototype.registerEventListener = function(t, e, i) {
        this._events.registerEventListener(t, e, i);
      }, t.prototype.unregisterEventListener = function(t) {
        this._events.unregisterEventListener(t);
      }, t.prototype.onBlur = function() {
        console.log("失去焦点");
      }, t.prototype.onVisibilityReconnect = function() {
        console.log("可见性变化"), Laya.stage.isVisibility && (this._socket.getConnected() || r.window.location.reload());
      }, t.prototype.init = function() {
        this._socket = new u(), this._socket.setEvents(this._events);
      }, t.prototype.connect = function(t, e) {
        this._socket || this.init(), this._socket.getConnected() || this._socket.connect(t, e);
      }, Object.defineProperty(t.prototype, "connected", {
        get: function() {
          return !!this._socket && this._socket.getConnected();
        },
        enumerable: !0,
        configurable: !0
      }), t.prototype.sendMessages = function(t, e) {
        this._socket && this._socket.getConnected() ? Laya.stage.isVisibility && this._socket.sendPackage(t, e) : this._socket && this._socket.getConnected();
      }, t.prototype.close = function() {
        this._socket && this._socket.getConnected() && this._socket.close();
      }, t.prototype.unUseFul = function() {
        close(), this._socket = null;
      }, t.prototype.hadSocket = function() {
        return !!this._socket;
      }, t.prototype.clearRecvArray = function() {
        this._socket && this._socket.clearRecvArray();
      }, t.prototype.onConnect = function() {
        this._events.connectedNotify();
      }, t.prototype.onMessageReceived = function(t, e) {
        this._events.messageReceivedNotify(t, e);
      }, t.prototype.onDisConnect = function() {
        this.onLoseConnectionWithServer();
      }, t.prototype.onConnectError = function() {
        this.showErrorMessageContent(), this.receiveIOError();
      }, t.prototype.receiveIOError = function() {
        close(), this.onLoseConnectionWithServer();
      }, t.prototype.showErrorMessageContent = function() {}, t.prototype.onLoseConnectionWithServer = function() {
        Laya.stage.isVisibility && (this._socket.getConnected() || (console.log("连接断开"),
          r.window.location.reload()));
      }, t;
    }();
    e.TCPClient = c;
    var _ = function() {
      function e() {}
      return Object.defineProperty(e.prototype, "Status", {
        get: function() {
          return this._status;
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(e.prototype, "ResponseText", {
        get: function() {
          return this._responseText;
        },
        enumerable: !0,
        configurable: !0
      }), e.prototype.postRequest = function(e, i, n, s, r, a) {
        if (void 0 === r && (r = "text"), void 0 === a && (a = 1e4), e) {
          this._taskHandler = new t.utils.SimpleDelegate(n, s);
          try {
            this._http = new Laya.HttpRequest(), this._http.http.timeout = a, this._http.once(Laya.Event.PROGRESS, this, this.onHttpRequestProgress),
              this._http.once(Laya.Event.COMPLETE, this, this.onHttpRequestComplete), this._http.once(Laya.Event.ERROR, this, this.onHttpRequestError),
              r ? this._http.send(e, i, "POST", "text", ["Content-Type", r]) : this._http.send(e, i, "POST", "text");
          } catch (t) {
            this.onHttpRequestError(t);
          }
        }
      }, e.prototype.getRequest = function(e, i, n, s, r) {
        void 0 === s && (s = "text"), void 0 === r && (r = 1e4), e && (this._taskHandler = new t.utils.SimpleDelegate(i, n),
          this._http = new Laya.HttpRequest(), this._http.http.timeout = r, this._http.once(Laya.Event.PROGRESS, this, this.onHttpRequestProgress),
          this._http.once(Laya.Event.COMPLETE, this, this.onHttpRequestComplete), this._http.once(Laya.Event.ERROR, this, this.onHttpRequestError),
          this._http.send(e, null, "GET", s));
      }, e.prototype.onHttpRequestError = function(t) {
        console.log("http error:" + JSON.stringify(t)), this._status = -1, this._responseText = t,
          this._notifyHandle();
      }, e.prototype.onHttpRequestProgress = function(t) {
        console.log("http precess " + t);
      }, e.prototype.onHttpRequestComplete = function(t) {
        console.log("http complete"), this._status = 0, this._responseText = this._http.data,
          this._notifyHandle();
      }, e.prototype._notifyHandle = function() {
        this._taskHandler && this._taskHandler.apply();
      }, e;
    }();
    e.SimpleHttp = _;
  }(t.net || (t.net = {}));
}(asgard || (asgard = {}));

! function(t) {
  ! function(t) {
    var e = function() {
      function t() {}
      return Object.defineProperty(t.prototype, "moduleId", {
        get: function() {
          return this._moduleId;
        },
        enumerable: !0,
        configurable: !0
      }), t;
    }();
    t.BaseModule = e;
    var i = function() {
      function t() {}
      return t.init = function(e) {
        t._moduleFactory = e;
      }, t.clear = function() {
        t._moduleMap.clear();
      }, t.RegisterModule = function(e) {
        if (!e) throw new Error("module instance is null!");
        t._moduleMap.set(e.moduleId, e);
      }, t.getModule = function(e) {
        var i = t._moduleMap.get(e);
        return !i && t._moduleFactory && (i = t._moduleFactory.getModule(e)) && t._moduleMap.set(e, i),
          i;
      }, t._moduleMap = new laya.utils.Dictionary(), t;
    }();
    t.ModuleManager = i;
  }(t.module || (t.module = {}));
}(asgard || (asgard = {}));

! function(t) {
  ! function(e) {
    var i = function() {
      function e() {}
      return e.prototype.setConnectionFlag = function(t) {
          this._connectionFlag = t;
        }, Object.defineProperty(e.prototype, "connectionFlag", {
          get: function() {
            return this._connectionFlag;
          },
          enumerable: !0,
          configurable: !0
        }), e.prototype.encode = function() {
          return this._bytes = new laya.utils.Byte(), this._bytes.endian = t.utils.SystemOption.BYTE_ORDER,
            this.writeImpl(), this._bytes;
        }, e.prototype.decode = function(t) {
          this._bytes = t, this.readImpl();
        }, e.prototype.getMessageType = function() {
          return 0;
        }, e.prototype.getByteArray = function() {
          return this._bytes;
        }, e.prototype.excute = function() {}, e.prototype.writeImpl = function() {}, e.prototype.readImpl = function() {},
        e.prototype.writeBoolean = function(t) {
          1 == t ? this._bytes.writeByte(1) : this._bytes.writeByte(0);
        }, e.prototype.writeByte = function(t) {
          this._bytes.writeByte(t);
        }, e.prototype.writeShort = function(t) {
          this._bytes.writeInt16(t);
        }, e.prototype.writeInt = function(t) {
          this._bytes.writeInt32(t);
        }, e.prototype.writeLong = function(t) {
          this._bytes.writeInt32(t);
        }, e.prototype.writeFloat = function(t) {
          this._bytes.writeFloat32(t);
        }, e.prototype.writeDouble = function(t) {
          this._bytes.writeFloat64(t);
        }, e.prototype.writeString = function(t) {
          this._bytes.writeUTFString(t);
        }, e.prototype.readBoolean = function() {
          return this._bytes.getByte() > .1;
        }, e.prototype.readByte = function() {
          return this._bytes.getByte();
        }, e.prototype.readShort = function() {
          return this._bytes.getInt16();
        }, e.prototype.readInt = function() {
          return this._bytes.getInt32();
        }, e.prototype.readInt64 = function() {
          var e = this._bytes.getInt32(),
            i = this._bytes.getInt32();
          return new t.utils.Int64(e, i);
        }, e.prototype.readFloat = function() {
          return this._bytes.getFloat32();
        }, e.prototype.readDouble = function() {
          return this._bytes.getFloat64();
        }, e.prototype.readString = function() {
          return this._bytes.getUTFString();
        }, e.prototype.toString = function() {
          return "";
        }, e;
    }();
    e.BaseMessage = i;
    var n = function() {
      function t() {}
      return t.prototype.init = function() {}, t.prototype.RegisterMsgHandler = function(t, e) {
        s.RegisterMsgProcess(t, this, e);
      }, t.prototype.RegisterMsgData = function(t) {
        return null;
      }, t;
    }();
    e.BaseMessageHandler = n;
    var s = function() {
      function e() {}
      return e.reset = function() {
        e._messageHandlerMap.clear();
      }, e.addMessageHandler = function(t) {
        t && t.init();
      }, e.RegisterMsgProcess = function(i, n, s) {
        if (!(n && i > 0)) throw new Error("Unsupported type!");
        var r = new t.utils.SimpleDelegate(n, s);
        e._messageHandlerMap.set(i, r);
      }, e.ProcessMessage = function(t, i) {
        var n = e._messageHandlerMap.get(t);
        if (!n) throw new Error("Unsupported msg:" + t);
        n.apply([t, i]);
      }, e._messageHandlerMap = new laya.utils.Dictionary(), e;
    }();
    e.MessageDispatcher = s;
  }(t.message || (t.message = {}));
}(asgard || (asgard = {}));

! function(t) {
  ! function(t) {
    var e = function() {
      function t(t, e) {
        this.x = 0, this.y = 0, this.x = t, this.y = e, this._lengthDirty = !0;
      }
      return t.prototype.add = function(t) {
        this.x += t.x, this.y += t.y;
      }, t.prototype.scale = function(t) {
        this.x *= t, this.y *= t;
      }, Object.defineProperty(t.prototype, "Length", {
        get: function() {
          return this._lengthDirty && (this._lengthDirty = !1, this._length = Math.sqrt(this.x * this.x + this.y * this.y)),
            this._length;
        },
        enumerable: !0,
        configurable: !0
      }), t.prototype.normalize = function() {
        var t = this.Length;
        t > 0 && 1 != t && this.scale(1 / t);
      }, t.prototype.clear = function() {
        this.x = 0, this.y = 0;
      }, t.prototype.toString = function() {
        return this.x + "," + this.y;
      }, t.cross = function(t, e, i, n) {
        return t * n - e * i;
      }, t.dot = function(t, e, i, n) {
        return t * i + e * n;
      }, t.length = function(t, e) {
        return Math.sqrt(t * t + e * e);
      }, t;
    }();
    t.Vector2 = e;
    var i = function() {
      return function(t, e, i) {
        this.x = 0, this.y = 0, this.z = 0, this.x = t, this.y = e, this.z = i;
      };
    }();
    t.Vector3 = i;
  }(t.math || (t.math = {}));
}(asgard || (asgard = {}));

! function(t) {
  ! function(t) {
    t.LEFT = 1, t.RIGHT = 2, t.FORWARD = 3, t.BACKWARD = 4, t.JoyStick = 5, t.JoyDirection = 6,
      t.JoyForce = 7, t.MouseX = 8, t.MouseY = 9, t.FIRE = 10, t.F1 = 11, t.F2 = 12, t.F3 = 13,
      t.F4 = 14, t.F5 = 15, t.F6 = 16, t.F7 = 17, t.F8 = 18, t.F9 = 19, t.F10 = 20;
    var e = function() {
        function t() {}
        return t.prototype.setKeyValue = function(t) {
          return this.KeyValue = t, this.KeyValue ? (this.ExpireStamp = Laya.timer.currTimer + 80, !0) : (this.ExpireStamp = 0, !1);
        }, t.prototype.tryResetKey = function(t) {
          return !this.KeyValue || t > this.ExpireStamp && (this.KeyValue = 0, this.ExpireStamp = 0, !0);
        }, t;
      }(),
      i = function() {
        function t() {}
        return t.getKey = function(e) {
            if (!t.ACTIVE) return 0;
            var i = t._Key[e];
            return i && i.ExpireStamp > Laya.timer.currTimer ? i.KeyValue : 0;
          }, t.setKey = function(i, n) {
            if (t.ACTIVE) {
              var s = t._Key[i];
              s || (s = new e(), t._Key[i] = s), s.setKeyValue(n) && (t._anyKey = !0, t._anyKeyStamp = Laya.timer.currTimer + 80);
            }
          }, t.isAnyKey = function() {
            return t.ACTIVE && t._anyKey && t._anyKeyStamp > Laya.timer.currTimer;
          }, t._keyCount = 32, t._Key = new Array(t._keyCount), t._anyKey = !1, t._anyKeyStamp = 0,
          t.ACTIVE = !0, t;
      }();
    t.BaseInput = i;
  }(t.input || (t.input = {}));
}(asgard || (asgard = {}));

! function(t) {
  ! function(e) {
    var i = function() {
      function e() {}
      return e.registerEventListener = function(i, n, s) {
        if (i > 0 && n && s) {
          var r = e._eventMap.get(i);
          r || (r = new t.utils.SimpleDelegates(), e._eventMap.set(i, r)), r.tryAddDelegate(n, s);
        }
      }, e.unregisterEventListener = function(t, i, n) {
        if (t > 0 && i && n) {
          var s = e._eventMap.get(t);
          s && s.removeDelegate(i, n);
        }
      }, e.eventNotify = function(t, i) {
        if (t > 0) {
          var n = e._eventMap.get(t);
          n && (i ? n.invokeDelegate([i]) : n.invokeDelegate());
        }
      }, e._eventMap = new laya.utils.Dictionary(), e;
    }();
    e.EventsDispatcher = i;
  }(t.events || (t.events = {}));
}(asgard || (asgard = {}));

__extends = this && this.__extends || function() {
  var t = Object.setPrototypeOf || {
    __proto__: []
  }
  instanceof Array && function(t, e) {
    t.__proto__ = e;
  } || function(t, e) {
    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  ! function(e) {
    var i = function() {
      function i(e) {
        this.state = e, this.id = e.nextBodyId++, this.origin = new t.math.Vector2(0, 0),
          this.angle = 0, this.dimension = new t.math.Vector2(.1, .1), this.mass = 1, this.velocity = new t.math.Vector2(0, 0),
          this.angularVelocity = 0, this.force = new t.math.Vector2(0, 0), this.cx = [0, 0, 0, 0],
          this.cy = [0, 0, 0, 0];
      }
      return i.prototype.finalize = function() {
        return this.inertia = (this.dimension.x * this.dimension.x + this.dimension.y * this.dimension.y) * this.mass / 12,
          this.calculateCorners(), this;
      }, i.prototype.setOrigin = function(t, e) {
        return this.origin.x = t, this.origin.y = e, this;
      }, i.prototype.setAngle = function(t) {
        return this.angle = t, this;
      }, i.prototype.setDimension = function(t, e) {
        return this.dimension.x = t, this.dimension.y = e, this;
      }, i.prototype.setMass = function(t) {
        return this.mass = t, this;
      }, i.prototype.setForce = function(t, e) {
        return this.force.x = t, this.force.y = e, this;
      }, i.prototype.advance = function(t) {
        this.origin.x += this.velocity.x * t, this.origin.y += this.velocity.y * t, this.angle += this.angularVelocity * t,
          this.angle > Math.PI ? this.angle -= Math.PI + Math.PI : this.angle < -Math.PI && (this.angle += Math.PI + Math.PI),
          this.calculateCorners();
      }, i.prototype.applyForces = function(t) {
        this.velocity.x += this.force.x * t * this.invertedMass(), this.velocity.y += this.force.y * t * this.invertedMass(),
          this.velocity.scale(Math.max(0, 1 - t * this.state.LATERAL_FRICTION)), this.angularVelocity *= Math.max(0, 1 - t * this.state.ROTATIONAL_FRICTION);
      }, i.prototype.calculateCorners = function() {
        var t = Math.sin(this.angle),
          e = Math.cos(this.angle),
          i = -t,
          n = e;
        this.cx[0] = this.origin.x + e * this.dimension.x * .5 + i * this.dimension.y * .5,
          this.cy[0] = this.origin.y + t * this.dimension.x * .5 + n * this.dimension.y * .5,
          this.cx[1] = this.origin.x - e * this.dimension.x * .5 + i * this.dimension.y * .5,
          this.cy[1] = this.origin.y - t * this.dimension.x * .5 + n * this.dimension.y * .5,
          this.cx[2] = this.origin.x - e * this.dimension.x * .5 - i * this.dimension.y * .5,
          this.cy[2] = this.origin.y - t * this.dimension.x * .5 - n * this.dimension.y * .5,
          this.cx[3] = this.origin.x + e * this.dimension.x * .5 - i * this.dimension.y * .5,
          this.cy[3] = this.origin.y + t * this.dimension.x * .5 - n * this.dimension.y * .5;
      }, i.prototype.invertedMass = function() {
        return this.isFixedBody() ? 0 : 1 / this.mass;
      }, i.prototype.invertedInertia = function() {
        return this.isFixedBody() || 0 === this.inertia ? 0 : 1 / this.inertia;
      }, i.prototype.isFixedBody = function() {
        return this.mass === i.INFINITE_MASS;
      }, i.prototype.addVelocity = function(t) {
        this.velocity.add(t);
      }, i.prototype.addAngularVelocity = function(t) {
        this.angularVelocity += t;
      }, i.prototype.collideSingleCorner = function(n, s, r, a) {
        var o = s.cx[r],
          h = s.cy[r],
          l = o - this.origin.x,
          u = h - this.origin.y,
          c = Math.cos(-this.angle),
          _ = Math.sin(-this.angle),
          d = l * _ + u * c;
        l = l * c - u * _, u = d;
        var p = .5 * this.dimension.x,
          f = .5 * this.dimension.y;
        if (l >= -p - i.EPS && l <= p + i.EPS && u >= -f - i.EPS && u <= f + i.EPS) {
          var g = s.velocity,
            m = s.angularVelocity,
            y = this.velocity,
            v = this.angularVelocity,
            x = o - s.origin.x,
            b = h - s.origin.y,
            w = o - this.origin.x,
            I = -m * b,
            S = m * x;
          I -= -v * (h - this.origin.y), S -= v * w, I -= y.x, S -= y.y;
          var C = (I += g.x) * a,
            T = (S += g.y) * a,
            E = Math.cos(-this.angle),
            M = Math.sin(-this.angle),
            L = C * M + T * E;
          C = C * E - T * M;
          var P = f - u,
            A = P,
            D = 0,
            R = 0;
          P < -(T = L) && (D = 1), (P = p + l) < C && (D |= 2), P < A && (A = P, R = 1), (P = f + u) < T && (D |= 4),
            P < A && (A = P, R = 2), (P = p - l) < -C && (D |= 8), P < A && (A = P, R = 3);
          var N = void 0,
            O = void 0;
          if (D > 0) {
            var B = 0;
            N = 0, O = 0;
            for (var k = 0; k < 4; k++)
              if ((D & 1 << k) > 0) {
                var F = 3 === (z = k) ? 0 : z + 1,
                  U = this.cx[z] - this.cx[F],
                  G = this.cy[z] - this.cy[F],
                  V = U *= W = 1 / t.math.Vector2.length(U, G);
                N += U = -(G *= W), O += G = V, B++;
              }
            if (B > 1) {
              var H = t.math.Vector2.length(N, O);
              N /= H, O /= H;
            }
          } else {
            var z = R,
              F = 3 === z ? 0 : z + 1,
              U = this.cx[z] - this.cx[F],
              G = this.cy[z] - this.cy[F],
              W = 1 / t.math.Vector2.length(U, G),
              V = U *= W;
            N = U = -(G *= W), O = G = V;
          }
          var Y = new e.CollisionPoint(s, this, N, O, o, h, A);
          n.collisionPoints.push(Y);
        }
      }, i.collide = function(t, n, s, r) {
        var a = new e.Collision(t);
        return i.collideAllCorners(a, n, s, r), a.collisionPoints.length < 2 && i.collideAllCorners(a, s, n, r),
          0 === a.collisionPoints.length ? null : a;
      }, i.collideAllCorners = function(t, e, i, n) {
        for (var s = 0; s < 4; s++) i.collideSingleCorner(t, e, s, n);
      }, i.INFINITE_MASS = -1, i.EPS = 1e-5, i;
    }();
    e.Body = i;
    var n = function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return n.setMass(i.INFINITE_MASS), n;
      }
      return __extends(e, t), e;
    }(i);
    e.FixedBody = n;
  }(t.phys || (t.phys = {}));
}(asgard || (asgard = {}));

var asgard, __extends = this && this.__extends || function() {
  var t = Object.setPrototypeOf || {
    __proto__: []
  }
  instanceof Array && function(t, e) {
    t.__proto__ = e;
  } || function(t, e) {
    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  ! function(t) {
    ! function(t) {
      t[t.Static = 0] = "Static", t[t.Dynamic = 1] = "Dynamic";
    }(t.PhysEntityType || (t.PhysEntityType = {}));
    ! function(t) {
      t[t.None = 0] = "None", t[t.Elastic = 1] = "Elastic";
    }(t.CollideType || (t.CollideType = {}));
    var e = function() {
      function t() {
        this.X = 0, this.Y = 0, this._width = 20, this._height = 20, this._halfWidth = 10,
          this._halfWidth = 10, this.Speedx = 0, this.Speedy = 0, this.Rotate = 0;
      }
      return t.prototype.moveTo = function(t, e) {
        this.X = t, this.Y = e;
      }, t.prototype.setSize = function(t, e) {
        this._width = Math.floor(t), this._height = Math.floor(e), this._halfWidth = Math.floor(.5 * t),
          this._halfWidth = Math.floor(.5 * e);
      }, Object.defineProperty(t.prototype, "Width", {
        get: function() {
          return this._width;
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t.prototype, "Height", {
        get: function() {
          return this._height;
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t.prototype, "HalfWidth", {
        get: function() {
          return this._halfWidth;
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t.prototype, "HalfHeight", {
        get: function() {
          return this._halfHeight;
        },
        enumerable: !0,
        configurable: !0
      }), t;
    }();
    t.PhysInfo = e;
    var i = function(t) {
      function e(i, n) {
        var s = t.call(this) || this;
        return s._id = e._applyNewId(), s._type = i, s._collideType = n, s.Acceleratex = 0,
          s.Acceleratey = 0, s;
      }
      return __extends(e, t), e._applyNewId = function() {
          return e._CURRENT_ID++;
        }, Object.defineProperty(e.prototype, "Id", {
          get: function() {
            return this._id;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(e.prototype, "EntityType", {
          get: function() {
            return this._type;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(e.prototype, "CollideType", {
          get: function() {
            return this._collideType;
          },
          enumerable: !0,
          configurable: !0
        }), e.prototype.onCollide = function(t) {}, e._CURRENT_ID = 1e4 * Math.random() + 1e3,
        e;
    }(e);
    t.PhysEntity = i;
    var n = function() {
      function t() {}
      return t.prototype.onFrame = function(t, e) {
        this._frameDelta = e;
        this._dynamicEntities.scan(this, this._entityMoving), this._dynamicEntities.scan(this, this._checkStatic),
          this._dynamicEntities.scan(this, this._checkDynamic);
      }, t.prototype._entityMoving = function(t) {
        var e = t,
          i = e.Speedx + e.Acceleratex * this._frameDelta,
          n = e.Speedy + e.Acceleratey * this._frameDelta;
        return e.moveTo(e.X + (e.Speedx + i) * this._frameDelta * .5, e.Y + (e.Speedy + n) * this._frameDelta * .5),
          e.Speedx = i, e.Speedy = n, !0;
      }, t.prototype._checkStatic = function(t) {
        var e = t;
        return this._staticEntities.checkAll(e, this, this._checkStaticCollision), !0;
      }, t.prototype._checkStaticCollision = function(t, e) {
        var i = t,
          n = e;
        this._detectEntityCollision(i, n) && i.onCollide(n);
      }, t.prototype._checkDynamic = function(t) {
        var e = t;
        return this._dynamicEntities.checkAll(e, this, this._checkDynamicCollision), !0;
      }, t.prototype._checkDynamicCollision = function(t, e) {
        var i = t,
          n = e;
        i.Id != n.Id && this._detectEntityCollision(i, n) && i.onCollide(n);
      }, t.prototype._detectEntityCollision = function(t, e) {
        return Math.abs(t.X - e.X) < t.HalfWidth + e.HalfWidth || Math.abs(t.Y - e.Y) < t.HalfHeight + e.HalfHeight;
      }, t;
    }();
    t.PhysSystem = n;
  }(t.phys || (t.phys = {}));
}(asgard || (asgard = {}));

! function(t) {
  var e = function() {
    function t() {}
    return t.getTimestamp = function() {
        return new Date().getTime() + t.offsetTimestamp;
      }, t.getTimestampSecond = function() {
        var t = new Date();
        return Math.floor(t.getTime() / 1e3);
      }, t.getMainArenaCoinStr = function(e) {
        var i, n;
        return e < t.m ? String(e) : (e >= t.m && e < t.b ? (i = String(e / t.k), n = "k") : e >= t.b && e < t.t ? (i = String(e / t.m),
          n = "m") : e >= t.t && e < t.aa ? (i = String(e / t.b), n = "b") : e >= t.aa && e < t.bb ? (i = String(e / t.t),
          n = "t") : e >= t.bb && e < t.cc ? (i = String(e / t.aa), n = "aa") : e >= t.cc && e < t.dd ? (i = String(e / t.bb),
          n = "bb") : e >= t.dd && e < t.ee ? (i = String(e / t.cc), n = "cc") : e >= t.ee && e < t.ff ? (i = String(e / t.dd),
          n = "dd") : e >= t.ff && (i = String(e / t.ee), n = "ee"), "." == (i = i.substr(0, 6)).charAt(i.length - 1) ? i.replace(".", n) : i + n);
      }, t.getCoinStr = function(e, i) {
        var n, s;
        if (e < t.k) return String(e);
        if (e >= t.k && e < t.m) {
          if (1 == (n = String(e / t.k)).length) return e + "";
          s = "k";
        } else e >= t.m && e < t.b ? (n = String(e / t.m), s = "m") : e >= t.b && e < t.t ? (n = String(e / t.b),
          s = "b") : e >= t.t && e < t.aa ? (n = String(e / t.t), s = "t") : e >= t.aa && e < t.bb ? (n = String(e / t.aa),
          s = "aa") : e >= t.bb && e < t.cc ? (n = String(e / t.bb), s = "bb") : e >= t.cc && e < t.dd ? (n = String(e / t.cc),
          s = "cc") : e >= t.dd && e < t.ee ? (n = String(e / t.dd), s = "dd") : e >= t.ee && (n = String(e / t.ee),
          s = "ee");
        return "." == (n = n.substr(0, i)).charAt(n.length - 1) ? n.replace(".", s) : n + s;
      }, t.isSameDay = function(t) {
        if (t <= 0) return !1;
        var e = new Date(),
          i = new Date(t);
        return e.toDateString() == i.toDateString();
      }, t.k = Math.pow(10, 3), t.m = t.k * t.k, t.b = t.m * t.k, t.t = t.b * t.k, t.aa = t.t * t.k,
      t.bb = t.aa * t.k, t.cc = t.bb * t.k, t.dd = t.cc * t.k, t.ee = t.dd * t.k, t.ff = t.ee * t.k,
      t;
  }();
  t.Utils = e;
}(logic || (logic = {}));

! function(t) {
  var e = function() {
    function e(t) {
      this._icon = t;
    }
    return e.prototype.onShow = function() {
      if (this._currIndex = 0, t.ShareInfo.Instance().showFloatGame)
        if (t.PlatForm.GetInstance().isMp()) {
          var e = t.ShareInfo.Instance().ismp;
          this._icon.visible = !e;
        } else this._icon.visible = !0;
      else this._icon.visible = !1;
      this._icon.visible && (this._rotRight = !0, this._icon.on(Laya.Event.CLICK, this, this._onClickGame));
    }, e.prototype._onClickGame = function() {
      this._currGameInfo && (navigateToMiniProgram(this._currGameInfo.appid, this._currGameInfo.path),
        this._showGame());
    }, e.prototype._showGame = function() {
      var e = t.ShareInfo.Instance().floatgames;
      if (e) {
        if (this._currIndex >= e.length && (this._currIndex = 0), this._currGameInfo = e[this._currIndex],
          this._currGameInfo) {
          this._icon.skin = this._currGameInfo.icon;
          var i = this._icon.getChildByName("name");
          i && (i.text = this._currGameInfo.name), this._delayTime = 3e4, this._currIndex++;
        }
      } else this._icon.visible = !1;
    }, e.prototype.onFrame = function(t, e) {
      this._icon.visible && (e > 50 && (e = 50), this._rotRight ? (this._icon.rotation += .5,
        this._icon.rotation >= 30 && (this._rotRight = !1)) : (this._icon.rotation -= .5,
        this._icon.rotation <= -30 && (this._rotRight = !0)), this._delayTime > 0 ? this._delayTime -= e : this._showGame());
    }, e;
  }();
  t.FloatGameUI = e;
}(logic || (logic = {}));

! function(t) {
  var e = function() {
    function e() {}
    return e.GetInstance = function() {
        return this.Instance || (IsMiniGame() ? this.Instance = new t.WeChat() : this.Instance = new this()),
          this.Instance;
      },

      e.prototype.InitSDK = function() {},

      e.prototype.closeBannerAd = function() {},

      e.prototype.preloadBannerAd = function(t) {},

      e.prototype.isMp = function() {
        return !1;
      },

      e.prototype.GetUserInfo = function(t) {
        t.method.apply(t.caller, [null]);
      },

      e.prototype.CheckUpdate = function(t) {}, e.prototype.CheckLogined = function(t, e) {
        e.method.apply(e.caller, [!0]);
      },

      e.prototype.Login = function(t, e, i) {
        e.method.apply(e.caller, [null]);
      },

      e.prototype.OnWXBizDataCrypt = function(t) {},

      e.prototype.SendWXBizDataCrypt = function(t, e) {},

      e.prototype.decryptData = function(t, e, i) {},

      e.prototype.ShowAd = function(t, e) {},

      e.prototype.CreateGameClubButton = function(t) {},

      e.prototype.PreLoadRewardedVideoAd = function(t) {},

      e.prototype.CreateRewardedVideoAd = function(e, i) {
        var n = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER),
          s = Laya.timer.currTimer - n.viewADtime;
        if (s < t.GameConst.VIDEO_AD_CD) return s = Math.floor((t.GameConst.VIDEO_AD_CD - s) / 1e3),
          void t.CommonUI.Tips.show("不能频繁看视频，请" + s + "秒后重试");
        i && i.method.apply(i.caller, ["ok"]), n.viewADtime = Laya.timer.currTimer;
      }, e.prototype.ShowMsgBox = function(t, e, i, n) {
        n && n.method.apply(n.caller, [null]);
      }, e.prototype.ShowShareMenu = function(t, e, i, n, s) {
        (e ? i.bind(e) : i)({
          test: "test"
        });
      }, e.prototype.readDataFromFile = function(t) {
        return "";
      }, e.prototype.writeData2File = function(t, e) {}, e.prototype.removeFile = function(t) {},
      e.Instance = null, e;
  }();
  t.PlatForm = e;
}(logic || (logic = {}));

! function(t) {
  var e = function() {
    function t() {}
    return t.TestData = function() {
        t.GameId = "12651864", t.Locale = "zh_CN", t.PlayerId = "1826973544009116", t.PlayerSignature = "9876145333",
          t.PlayerName = "robin_yan", t.PlayerPhoto = "111", t.Platform = "web", t.GameType = "solo",
          t.SDKVersion = "6.0", t.TimeZone = 0, t.EntryPointData = null;
      }, t.GameId = "", t.Locale = "", t.PlayerId = "", t.PlayerSignature = "", t.PlayerName = "",
      t.PlayerPhoto = "", t.Platform = "", t.GameType = "", t.SDKVersion = "", t.TimeZone = 0,
      t.EntryPointData = null, t;
  }();
  t.PlatformConst = e;
}(logic || (logic = {}));

var rare;

! function(t) {
  var e = function() {
    function t() {
      this.clear(), this.VideoAdCanPlay = !0, this.PlayVideoTimes = 0, this.AvatarUrl = "uires/yiyaoqing.png",
        this.NickName = "liwang", this.Server = "S1";
    }
    return t.prototype.clear = function() {
      this._systemInfo = null, this._onShowQuery = null, this._userId = null;
    }, Object.defineProperty(t, "Instance", {
      get: function() {
        return t._instance || (t._instance = new t()), t._instance;
      },
      enumerable: !0,
      configurable: !0
    }), t.prototype.CreateQuery = function(t) {
      return "shareuser=" + this.OpenId + "&prop=" + t;
    }, t.prototype.Create4399ShareExt = function(t) {
      return "shareuser=" + this.OpenId + ";prop=" + t;
    }, Object.defineProperty(t.prototype, "SystemInfo", {
      get: function() {
        return this._systemInfo;
      },
      set: function(t) {
        this._systemInfo = t;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(t.prototype, "OnShowQuery", {
      get: function() {
        return this._onShowQuery;
      },
      set: function(t) {
        this._onShowQuery = t;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(t.prototype, "UserId", {
      get: function() {
        return this._userId || (this._userId = Laya.LocalStorage.getItem("userId")), this._userId;
      },
      set: function(t) {
        this._userId = t, Laya.LocalStorage.setItem("userId", this._userId);
      },
      enumerable: !0,
      configurable: !0
    }), t.prototype.removeUserId = function() {
      Laya.LocalStorage.removeItem("userId");
    }, Object.defineProperty(t.prototype, "OpenId", {
      get: function() {
        return this._openId || (this._openId = Laya.LocalStorage.getItem("openid")), this._openId;
      },
      set: function(t) {
        this._openId = t, Laya.LocalStorage.setItem("openid", this._openId);
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(t.prototype, "SessionKey", {
      get: function() {
        return this._sessionKey || (this._sessionKey = Laya.LocalStorage.getItem("sessionkey")),
          this._sessionKey;
      },
      set: function(t) {
        this._sessionKey = t, Laya.LocalStorage.setItem("sessionkey", this._sessionKey);
      },
      enumerable: !0,
      configurable: !0
    }), t.prototype.removeSessionKey = function() {
      Laya.LocalStorage.removeItem("sessionkey");
    }, Object.defineProperty(t.prototype, "ShareConfig", {
      get: function() {
        return this._shareConfig;
      },
      set: function(t) {
        this._shareConfig = t;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(t.prototype, "ShareSuccessHandler", {
      get: function() {
        return this._shareSuccessHandler;
      },
      set: function(t) {
        this._shareSuccessHandler = t;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(t.prototype, "ShareFailHandler", {
      get: function() {
        return this._shareFailHandler;
      },
      set: function(t) {
        this._shareFailHandler = t;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(t.prototype, "ShareRes", {
      get: function() {
        return this._shareRes;
      },
      set: function(t) {
        this._shareRes = t;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(t.prototype, "VideoADCloseCallBack", {
      get: function() {
        return this._videoADCloseCallBack;
      },
      set: function(t) {
        this._videoADCloseCallBack = t;
      },
      enumerable: !0,
      configurable: !0
    }), t;
  }();
  t.PlatformModule = e;
}(rare || (rare = {}));

! function(t) {
  Math.PI, Math.PI, Math.PI, Math.PI, Math.PI, Math.PI, Math.PI;
  var e = function() {
    function t() {
      this._KEY_STEP = 20, this._curTouchId = 0, this.isDown = !1, this.isleftControl = !0,
        this._keyStatus = [], this.reset(), this._logStamp = 0;
    }
    return t.getInstance = function() {
        return t._instance || (t._instance = new t()), t._instance;
      }, t.prototype.reset = function() {
        console.log("key reset"), this._localPos = new Laya.Point(0, 0), this._keyPressFlag = 0,
          this._lastPostStickPressed = !1, this._lastPostStickDirection = 0, this._stickNeedPost = !1,
          this._stickPressed = !1, this._curTouchId = 0, this._firePressed = !1, this.isDown = !1,
          this._keyStatus[asgard.input.FORWARD] = !1, this._keyStatus[asgard.input.BACKWARD] = !1,
          this._keyStatus[asgard.input.LEFT] = !1, this._keyStatus[asgard.input.RIGHT] = !1,
          this._keyStatus[asgard.input.JoyStick] = !1, this._keyStatus[asgard.input.FIRE] = !1,
          this._postStickStatus(0);
      }, t.prototype.init = function() {
        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onMouseUp), Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.onMove),
          Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
      }, t.prototype._postStickStatus = function(t) {
        this._firePressed && asgard.input.BaseInput.setKey(asgard.input.FIRE, 1), (this._stickPressed || this._stickNeedPost) && (this._stickPressed ? (asgard.input.BaseInput.setKey(asgard.input.JoyStick, 1),
          asgard.input.BaseInput.setKey(asgard.input.MouseX, this._mousex), asgard.input.BaseInput.setKey(asgard.input.MouseY, this._mousey)) : asgard.input.BaseInput.setKey(asgard.input.JoyStick, 0));
      }, t.prototype.getTouchPos = function() {
        return new Laya.Point(this._mousex, this._mousey);
      }, t.prototype.onUpdate = function(t) {
        this._postStickStatus(t);
      }, t.prototype.onKeyDown = function(t) {}, t.prototype.onKeyUp = function(t) {},
      t.prototype._calcKeyData = function() {}, t.prototype.onMouseDown = function(t) {
        this._curTouchId = t.touchId, this._keyStatus[asgard.input.JoyStick] = !0, this._calcMouseData();
      }, t.prototype.onMouseUp = function(t) {
        t.touchId == this._curTouchId && (this._keyStatus[asgard.input.JoyStick] = !1, this._setStickData(!1, this._mousex, this._mousey));
      }, t.prototype.onMove = function(t) {
        t.touchId == this._curTouchId && this._calcMouseData();
      }, t.prototype._setStickData = function(t, e, i) {
        console.error("set stickData:" + t), this._stickPressed = t, this._mousex = e, this._mousey = i,
          this._stickNeedPost = this._stickPressed != this._lastPostStickPressed;
      }, t.prototype._calcMouseData = function() {
        this._keyStatus[asgard.input.JoyStick] && (this._localPos.setTo(Laya.stage.mouseX, Laya.stage.mouseY),
          this._setStickData(!0, this._localPos.x, this._localPos.y));
      }, t._instance = null, t;
  }();
  t.InputManager = e;
}(logic || (logic = {}));

! function(t) {
  ! function(t) {
    t[t.RANK_INVITE = 1] = "RANK_INVITE", t[t.INVITE_FRIEND = 2] = "INVITE_FRIEND",
      t[t.FRIEND_GIFT = 3] = "FRIEND_GIFT", t[t.NO_COIN = 4] = "NO_COIN", t[t.NO_DIAMON = 5] = "NO_DIAMON",
      t[t.SPEEDUP = 6] = "SPEEDUP", t[t.TOP_RIGHT = 7] = "TOP_RIGHT", t[t.NEWLEVEL = 8] = "NEWLEVEL",
      t[t.OFFLINE = 9] = "OFFLINE", t[t.INVITE_LOGIN = 10] = "INVITE_LOGIN";
  }(t.ShareType || (t.ShareType = {}));
  var e = function() {
    return function(t) {
      this.index = t.index, this.name = t.name, this.icon = t.icon, this.appid = t.appid,
        this.path = t.path, this.tip = 1 == t.tip;
    };
  }();
  t.MoreGameInfo = e;
  var i = function() {
    return function() {
      this.groups = [], this.sum = 0;
    };
  }();
  t.ShareGroup = i;
  var n = function() {
    function e(t) {
      this._element = t, this.panelName = t.name, this.rwShareMul = t.shareMul, this.showVideo = !0,
        this.showShare = !1, this.rwshowShare = 1 == t.rwshare, this.rwshowVideo = 1 == t.rwshowVideo,
        this.rwVideoMul = 2;
    }
    return e.prototype.update = function() {
      if (s.Instance().lockShare) return this.showVideo = !0, this.showShare = !1, this.rwshowShare = !1,
        this.rwshowVideo = !1, void console.log("lockShare update btn " + this.panelName);
      var e = t.GameData.Instance().isVideoAdCanPlay,
        i = s.Instance().inBlackCity(),
        n = s.SHARE_TYPE_ALLVIDEO;
      n = i ? s.Instance().blackCityShareType : s.Instance().normalCityShareType, console.log("shareType", n),
        n == s.SHARE_TYPE_ALLSHARE ? (this.showVideo = !1, this.showShare = !0) : n == s.SHARE_TYPE_ALLVIDEO ? (this.showVideo = !0,
          this.showShare = !1) : n == s.SHARE_TYPE_VIDEO_SHARE ? (this.showVideo = e, this.showShare = !e) : n == s.SHARE_TYPE_VIDEO_TIMES_SHARE ? (console.log("playVideoTimes ", t.GameData.Instance().playVideoTimes + " " + s.Instance().videoTimes),
          console.log("canPlayVideoAd", e), t.GameData.Instance().playVideoTimes >= s.Instance().videoTimes ? (this.showVideo = !1,
            this.showShare = !0) : (this.showVideo = e, this.showShare = !e)) : (this.showVideo = !0,
          this.showShare = !1), i ? (this._element && 1 == this._element.rwshowVideo ? this.rwshowVideo = this.showVideo : this.rwshowVideo = !1,
          this.rwshowShare = !1) : this._element && 1 == this._element.rwshare ? (this.rwshowShare = this.showShare,
          this.rwshowVideo = !1) : this.rwshowShare = !1;
    }, e;
  }();
  t.ShareBtnInfo = n;
  var s = function() {
    function s() {
      this.ForceUpdate = !1, this.shareGroup = [], this.showMoreGame = !1, this.blackCitys = [],
        this.btns = [], this.speedUpShare = !1, this.lockShare = !0, this.videoTimes = 1,
        this._shareUrls = [], this.games = [], this.ismp = !1, this.normalCityShareType = s.SHARE_TYPE_VIDEO_SHARE,
        this.blackCityShareType = s.SHARE_TYPE_ALLVIDEO;
    }
    return s.Instance = function() {
        return null == s._shareInfo && (s._shareInfo = new s()), s._shareInfo;
      }, s.prototype.initShareGroup = function() {
        for (var t = asgard.data.StaticDataManager.getSheetDatas(data.ShareElement.DATA_TYPE), e = 0; e < t.length; e++) {
          var n = t[e],
            s = this.shareGroup[n.Type];
          s || (s = new i(), this.shareGroup[n.Type] = s);
          for (var r = !0, a = 0; a < s.groups.length; a++) {
            if (s.groups[a].Id == n.Id) {
              r = !1;
              break;
            }
          }
          r && (s.groups.push(n), s.sum += n.Weights);
        }
      }, Object.defineProperty(s.prototype, "ShareUrl", {
        get: function() {
          if (this._shareUrls.length > 0) {
            var t = Math.round(this._shareUrls.length * Math.random());
            return t >= this._shareUrls.length && (t -= 1), this._shareUrls[t];
          }
          return "https://img.chiguawan.com/emperor";
        },
        enumerable: !0,
        configurable: !0
      }), s.prototype.isIngnoreChannel = function(t) {
        return this.ingnoreChannels.indexOf(t) >= 0;
      }, s.prototype.initNetConfig = function(s) {
        if (this.ForceUpdate = !!s.forceupdate && 1 == s.forceupdate, this.showMoreGame = 1 == s.moregame,
          this.showFloatGame = 1 == s.floatgameflag, this.jumpBox = 1 == s.jumpBox, this.ismp = 1 == s.lockmp,
          this.ingnoreChannels = [], s.ignorechannels)
          for (var r = String(s.ignorechannels).split(","), a = 0; a < r.length; a++) {
            var o = r[a];
            this.ingnoreChannels.push(o);
          }
        if (s.games) {
          for (a = 0; a < s.games.length; a++) {
            var h = s.games[a];
            this.games.push(new e(h));
          }
          this.games.sort(function(t, e) {
            return t.index - e.index;
          });
        }
        if (s.floatgames) {
          this.floatgames = [];
          for (a = 0; a < s.floatgames.length; a++) {
            c = s.floatgames[a];
            this.floatgames.push(new e(c));
          }
        }
        if (this.lockShare = 1 == s.lockshare, this.videoTimes = s.videoTimes, this.normalCityShareType = s.normal,
          this.blackCityShareType = s.blacklist, 0 == this.lockShare ? this.speedUpShare = 1 == s.speedUpShare : this.speedUpShare = !1,
          this.host = s.host, this.blackCitys = s.citys, t.GameConst.SERVER_URL = this.host,
          s.shareUrls)
          for (var r = String(s.shareUrls).split(","), a = 0; a < r.length; a++) {
            var l = r[a];
            this._shareUrls.push(l);
          }
        if (console.log("SHARE_IMG_URL", this._shareUrls), console.log("this.lockShare ", this.lockShare + "videoTimes " + this.videoTimes),
          s.btns) {
          this.btns = [];
          for (u = 0; u < s.btns.length; u++) {
            c = s.btns[u];
            this.btns.push(new n(c));
          }
        }
        if (s.shares)
          for (var u = 0; u < s.shares.length; u++) {
            var c = s.shares[u],
              _ = this.shareGroup[c.type];
            _ || (_ = new i(), this.shareGroup[c.type] = _);
            for (var d = !0, p = 0; p < _.groups.length; p++) {
              var f = _.groups[p];
              if (f.Id == c.id) {
                _.sum -= f.Weights, f.Img = c.img, f.Title = c.title, f.Group = c.group, f.Type = c.type,
                  f.Weights = c.Weights, _.sum += c.Weights, d = !1;
                break;
              }
            }
            if (d) {
              var g = new data.ShareElement();
              g.Id = c.id, g.Img = c.img, g.Title = c.title, g.Group = c.group, g.Type = c.type,
                g.Weights = c.Weights, _.groups.push(g), _.sum += g.Weights;
            }
          }
      }, s.prototype.getBtnsConfig = function(t) {
        for (var e = 0; e < this.btns.length; e++) {
          var i = this.btns[e];
          if (i.panelName == t) return i.update(), i;
        }
        return null;
      }, s.prototype.inBlackCity = function() {
        if (!this.blackCitys) return !1;
        for (var e = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER), i = 0; i < this.blackCitys.length; i++)
          if (this.blackCitys[i] == e.Player.city || this.blackCitys[i] == e.Player.province) return !0;
        return !1;
      }, s.prototype.getRandomShare = function(t) {
        if (!this.shareGroup) return null;
        var e = this.shareGroup[t];
        if (e)
          for (var i = Math.random() * e.sum, n = 0; n < e.groups.length; n++) {
            var s = e.groups[n];
            if ((i -= s.Weights) < 0) return s;
          }
        return null;
      }, s.SHARE_TYPE_ALLSHARE = 1, s.SHARE_TYPE_ALLVIDEO = 2, s.SHARE_TYPE_VIDEO_SHARE = 3,
      s.SHARE_TYPE_VIDEO_TIMES_SHARE = 4, s.SHARE_TYPE_COUNT = 5, s;
  }();
  t.ShareInfo = s;
}(logic || (logic = {}));

! function(t) {
  var e = function() {
    function e() {
      this.turnRound = 0, this.country = "", this.city = "", this.avatarUrl = "", this.province = "",
        this.nickName = "", this.luckyUpTime = 0, this.luckyShareCount = 0, this.luckyCount = 0,
        this.luckwheeldoubling = 1, this.reset();
    }
    return Object.defineProperty(e.prototype, "openId", {
        get: function() {
          return localStorage.getItem("openId");
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(e.prototype, "session_key", {
        get: function() {
          return localStorage.getItem("session_key");
        },
        enumerable: !0,
        configurable: !0
      }), e.prototype.addShareCoinCount = function() {
        this.shareCoinCount += 1;
      }, e.prototype.addShareDiamonCount = function() {
        this.shareDiamonCount += 1;
      }, e.prototype.reset = function(t) {
        this.Coin = 4e3, this.Speed = 1, t || (this.Diamon = 0), this.LeftTime = 0, this.loginDays = 1,
          this.loginRewardDays = 0, this.lastLoginTime = 0, this.shareDiamonCount = 0, this.shareCoinCount = 0,
          this.luckyCount = 5, this.luckyShareCount = 0, this.luckyUpTime = 0;
      }, e.prototype.canGetLoginReward = function() {
        return this.loginDays > this.loginRewardDays;
      }, e.prototype.addSpeedTime = function(e) {
        if (isNaN(e) || e <= 0) return this.Speed = 1, this.LeftTime = -1, void asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_UPDATE_SPEED_TIME);
        this.Speed = 2, this.LeftTime = e, Laya.timer.clear(this, this._onTimer), Laya.timer.loop(1e3, this, this._onTimer),
          asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_UPDATE_SPEED_TIME);
      }, e.prototype._onTimer = function() {
        this.LeftTime -= 1, asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_UPDATE_SPEED_TIME),
          this.LeftTime < 0 && (Laya.timer.clear(this, this._onTimer), this.Speed = 1);
      }, e.prototype.addCoin = function(e) {
        "number" != typeof e && (console.log("addCoin error ", e), e = Number(e)), this.Coin += e;
        asgard.module.ModuleManager.getModule(t.MODULE_PLAYER)._dbVersion += 1, asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_UPDATE_COIN);
      }, e.prototype.subCoin = function(e) {
        if (this.Coin - e < 0) console.error("金币出错");
        else {
          this.Coin -= e;
          asgard.module.ModuleManager.getModule(t.MODULE_PLAYER)._dbVersion += 1, asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_UPDATE_COIN);
        }
      }, e.prototype.addDiamon = function(e) {
        this.Diamon += e;
        asgard.module.ModuleManager.getModule(t.MODULE_PLAYER)._dbVersion += 1, asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_UPDATE_DIAMON);
      }, e.prototype.subDiamon = function(e) {
        if (this.Diamon - e < 0) console.error("金币出错");
        else {
          asgard.module.ModuleManager.getModule(t.MODULE_PLAYER)._dbVersion += 1, this.Diamon -= e,
            asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_UPDATE_DIAMON);
        }
      }, e.prototype.recoverySlot = function(t) {
        this.addCoin(t.RecoveryPrice);
      }, e.prototype.showReward = function(e, i, n) {
        asgard.ui.UIManager.openView(t.UIPanelID.REWARDTIP, new t.RewardPanelInfo(e, i, n));
      }, e.prototype.getShareCoin = function(t) {
        t.Price;
        return this.shareCoinCount < 3 ? Math.floor(1 * t.Price) : this.shareCoinCount >= 3 && this.shareCoinCount < 5 ? Math.floor(.5 * t.Price) : this.shareCoinCount >= 5 && this.shareCoinCount < 10 ? Math.floor(.3 * t.Price) : Math.floor(.2 * t.Price);
      }, e.prototype.getShareDiamon = function() {
        return this.shareDiamonCount < 5 ? 200 : 50;
      }, e.REWARD_TYPE_COIN = 1, e.REWARD_TYPE_DIAMON = 2, e.REWARD_TYPE_TICKETS = 3,
      e;
  }();
  t.PlayerInfo = e;
}(logic || (logic = {}));

! function(t) {
  var e = function() {
    function e(e) {
      this._postData = e, this._coinBuyCount = 0, this.diamonBuyCount = 0, this.isUnlock = !1,
        this.isCoinUnLock = !1, this.isDiamonUnLock = !1, this._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
    }
    return Object.defineProperty(e.prototype, "coinBuyCount", {
      get: function() {
        return this._coinBuyCount;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "Price", {
      get: function() {
        return this._postData.Lv < 3 ? this.coinBuyCount <= 0 ? this._postData.Price : Math.floor(Math.pow(1.07, this.coinBuyCount) * this._postData.Price) : Math.floor(Math.pow(1.175, this.coinBuyCount) * this._postData.Price);
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "RecoveryPrice", {
      get: function() {
        return Math.floor(.8 * this.Price);
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "DiamonPrice", {
      get: function() {
        return this._postData.Dprice > 0 ? Math.floor(this._postData.Dprice + this._postData.Up * this.diamonBuyCount) : 0;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "Post", {
      get: function() {
        return this._postData;
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.addBuyCount = function(e) {
      e == t.AddSlotType.COIN ? this._coinBuyCount += 1 : e == t.AddSlotType.DIAMON && (this.diamonBuyCount += 1),
        asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_UPDATE_ITEM_BUY_COUNT);
    }, e.prototype.fillNetData = function(t, e, i, n, s) {
      this._coinBuyCount = t, this.diamonBuyCount = e, this.isUnlock = i, this.isCoinUnLock = n,
        this.isDiamonUnLock = s;
    }, Object.defineProperty(e.prototype, "Produce", {
      get: function() {
        return this._playerModule.Player.turnRound > 0 ? 2 * this.Post.Produce : this.Post.Produce;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "Offline", {
      get: function() {
        return this._playerModule.Player.turnRound > 0 ? 2 * this.Post.Offline : this.Post.Offline;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "Level", {
      get: function() {
        return this._playerModule.Player.turnRound * t.GameConst.MAX_LEVEL + this.Post.Lv;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "Name", {
      get: function() {
        var t = this._playerModule.Player.turnRound;
        if (t <= 0) return this.Post.Name;
        if (1 == t) return "仙·" + this.Post.Name;
        if (2 == t) return "神·" + this.Post.Name;
        if (3 == t) return "帝·" + this.Post.Name;
        if (4 == t) return "祖·" + this.Post.Name;
        if (5 == t) return "始·" + this.Post.Name;
        if (6 == t) return "天仙·" + this.Post.Name;
        if (7 == t) return "天神·" + this.Post.Name;
        if (8 == t) return "天帝·" + this.Post.Name;
        if (9 == t) return "天祖·" + this.Post.Name;
        if (10 == t) return "天始·" + this.Post.Name;
        if (11 == t) return "金仙·" + this.Post.Name;
        if (12 == t) return "金神·" + this.Post.Name;
        if (13 == t) return "金帝·" + this.Post.Name;
        if (14 == t) return "金祖·" + this.Post.Name;
        if (15 == t) return "金始·" + this.Post.Name;
        var e = Math.ceil((t - 15) / 5);
        return 1 == (t %= 5) ? "金仙" + e + "·" + this.Post.Name : 2 == t ? "金神" + e + "·" + this.Post.Name : 3 == t ? "金帝" + e + "·" + this.Post.Name : 4 == t ? "金祖" + e + "·" + this.Post.Name : 0 == t ? "金始" + e + "·" + this.Post.Name : void 0;
      },
      enumerable: !0,
      configurable: !0
    }), e;
  }();
  t.ListItemInfo = e;
}(logic || (logic = {}));

! function(t) {
  var e = function() {
    return function(t, e, i, n, s) {
      this.openId = t, this.name = e, this.iconUrl = i, this.isDraw = n, this.isEmpty = !1,
        this.shareType = s;
    };
  }();
  t.IniviteUserInfo = e;
  var i = function() {
    function i() {
      this._sendQueryTime = 0, this._successCallBack = null, this._reset(), this.testData();
    }
    return i.prototype._reset = function() {
      this._allFriend = [], this.currDrawOpenId = "";
    }, i.prototype.testData = function() {
      if (!Laya.Browser.onMiniGame) {
        var t = "aasdfasd232";
        this._allFriend.push(new e(t, 'A"️婷宝', "", 0, 1)), t = "aasdfasd23233", this._allFriend.push(new e(t, 'rElax"Time', "", 1, 2)),
          t = "aasdfasd233233", this._allFriend.push(new e(t, "测试玩家3", "", 1, 10));
      }
    }, i.prototype.parseData = function(t) {
      if (this._sendQueryTime = Laya.timer.currTimer, t && t.inviteUser) try {
        for (var e = JSON.parse(t.inviteUser), i = [], n = 0; n < e.length; n++) {
          var s = JSON.parse(e[n]);
          s.isDraw = Number(s.isDraw), s.shareType = Number(s.shareType), i.push(s);
        }
        console.error("_onViteLoginData", i), this.initData(i), this._successCallBack && this._successCallBack.method.apply(this._successCallBack.caller, this._successCallBack.args);
      } catch (e) {
        console.log(t), console.error(e);
      }
    }, i.prototype.initData = function(i) {
      if (this._allFriend = [], i)
        for (var n = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER), s = 0; s < i.length; s++) {
          var r = i[s];
          r && r.fopen_id && "" != r.fopen_id && r.fopen_id != n.Player.openId && this._allFriend.push(new e(r.fopen_id, r.name, r.iconUrl, r.isDraw, r.shareType));
        }
    }, i.prototype.getAddFriend = function() {
      return this._allFriend;
    }, i.prototype.drawReward = function(e) {
      for (var i = 0; i < this._allFriend.length; i++) {
        var n = this._allFriend[i];
        if (n.openId == e) {
          n && 0 == n.isDraw && t.HttpServer.Instance().updateFriendDraw(n.openId, Laya.Handler.create(this, this.onDrawSuccess));
          break;
        }
      }
    }, i.prototype.onDrawSuccess = function(e) {
      if (e && e.shareuser)
        for (var n = e.shareuser, s = 0; s < this._allFriend.length; s++) {
          var r = this._allFriend[s];
          if (r.openId == n) {
            if (r && 0 == r.isDraw) {
              r.isDraw = 1;
              asgard.module.ModuleManager.getModule(t.MODULE_PLAYER).Player.showReward(t.PlayerInfo.REWARD_TYPE_DIAMON, i.ADD_DIAMON_NUM, t.UIPanelID.INVITEFRIEND),
                this.currDrawOpenId = n, asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_UPDATE_INVITE_DRAW),
                this.currDrawOpenId = "";
            }
            break;
          }
        }
    }, i.prototype.canGetReward = function() {
      for (var t = 0; t < this._allFriend.length; t++)
        if (0 == this._allFriend[t].isDraw) return !0;
      return !1;
    }, i.prototype.invitePlayerQuery = function(e) {
      Laya.timer.currTimer - this._sendQueryTime <= 6e4 ? e && e.method && e.method.apply(e.caller) : (this._successCallBack = e,
        t.HttpServer.Instance().invitePlayerQuery(Laya.Handler.create(this, this.parseData)));
    }, i.ADD_DIAMON_NUM = 200, i;
  }();
  t.IniviteFriendInfo = i;
}(logic || (logic = {}));

! function(t) {
  var e = function() {
    return function() {};
  }();
  t.FriendHelp = e;
  var i = function() {
    return function(t, e, i, n, s, r) {
      this.level = t, this.num = e, this.add = i, this.time = n, this.levelUpCoin = s,
        this.needHeroLevel = r;
    };
  }();
  t.HelpConfig = i;
  var n = function() {
    function t() {
      this._allFriend = [], this.level = 1, this.config = [], this.config[0] = new i(1, 4, .15, 2, 1e5, 4),
        this.config[1] = new i(2, 6, .2, 3, 1e8, 8), this.config[2] = new i(3, 7, .25, 5, 1e10, 12),
        this.config[3] = new i(4, 10, .3, 5, 0, 16), this.unlockLevel = this.config[0].needHeroLevel;
    }
    return Object.defineProperty(t.prototype, "allFriend", {
      get: function() {
        return this._allFriend;
      },
      enumerable: !0,
      configurable: !0
    }), t.prototype.getConfig = function(t) {
      for (var e = 0; e < this.config.length; e++)
        if (this.config[e].level == t) return this.config[e];
      return null;
    }, t;
  }();
  t.FriendHelpInfo = n;
}(logic || (logic = {}));


/*
! function(t) {
  var e = function() {
    function e() {
      this.appid = "wydhs", this.openID = "";
    }
    return e.Instance = function() {
        return null == e._instance && (e._instance = new e()), e._instance;
      }, e.prototype.getSessionid = function() {
        return localStorage.getItem("sessionid");
      }, e.prototype.getOpenId = function() {
        return localStorage.getItem("openId");
      },

      //add by qjb [游戏登录]
      e.prototype.login = function(t, i, n) {
            localStorage.setItem("sessionid", '9248431941');
            localStorage.setItem("openId", 'af9234hdfff45645eadfadsfdsafa391');
            localStorage.setItem("session_key", 'afdaf34a523234sfddfae');
            e.Instance().openID = t.openId;
            e.Instance().getUserData(i, n);

        HttpPost("/Emperor/wxuserinfo/loginIn", t, Laya.Handler.create(null, function(t) {
          console.log("loginIn object ", t);
          if (200 == Number(t.code)) {
            localStorage.setItem("sessionid", t.sessionid);
            localStorage.setItem("openId", t.openId);
            localStorage.setItem("session_key", t.wxSessionkey);
            e.Instance().openID = t.openId;
            e.Instance().getUserData(i, n);
          } else {
            e.Instance().loginErrorLog("wxuserinfo/loginIn fail" + (t ? JSON.stringify(t) : ""));
            if (n && n.method)
              n.method.apply(n.caller, [t]);
          }
        }), Laya.Handler.create(null, function(t) {
          e.Instance().loginErrorLog("wxuserinfo/loginIn error" + (t ? JSON.stringify(t) : "")),
            n && n.method && n.method.apply(n.caller, [t]);
        }));
      },

      //add by qjb
      e.prototype.getUserData = function(t, i) {
        var n = {};
        n.userid = this.getSessionid();
          n.openId = this.getOpenId();
          HttpPost("/Emperor/user/ajaxUserData", n, Laya.Handler.create(null, function(n) {
            if (200 == Number(n.code)) {
              if (t && t.method) t.method.apply(t.caller, [n]);
            } else {
              e.Instance().loginErrorLog("user/ajaxUserData error" + (n ? JSON.stringify(n) : ""));
              if (i && i.method) i.method.apply(i.caller, i.args);
            }
          }), Laya.Handler.create(null, function(t) {
            e.Instance().loginErrorLog("user/ajaxUserData fail" + (t ? JSON.stringify(t) : "")),
              i && i.method && i.method.apply(i.caller, i.args);
          }));
      }

      , e.prototype.saveUserData = function(i, n) {
        var s = i;
        s.userid = this.getSessionid(), s.openId = this.getOpenId(), HttpPost("/Emperor/user/saveUserData", s, Laya.Handler.create(null, function(i) {
          200 == Number(i.code) ? (console.error("SaveUserData success "), n && n.run()) : (console.error("SaveUserData fail ", i),
            e.Instance().loginErrorLog("saveUserData fail" + (i ? JSON.stringify(i) : "")),
            t.GameData.Instance().getGameDataWhenError());
        }), Laya.Handler.create(null, function(t) {
          console.error("SaveUserData fail ", t);
        }));
      },

      //add by qjb 保存邀请者，给他对应的邀请者奖励
      e.prototype.saveInvitePlayer = function() {
        if (void 0 != t.WeChat.onShowQuery && null != t.WeChat.onShowQuery)
          try {
            var e = {};
            var i = t.WeChat.onShowQuery;
            var n = this.getOpenId();
            if ("" == n) return;
            var s = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
            if (i.shareuser == n) return;
            e.shareuser = i.shareuser;
            e.openId = n;
            e.prop = i.prop;
            e.nickName = s.Player.nickName;
            e.avatar_url = s.Player.avatarUrl;
            HttpPost("/Emperor/wxuserinfo/invitePlayer", e, Laya.Handler.create(null, function(t) {
              200 == Number(t.code) ? console.error("SaveInvitePlayer success ") : console.error("SaveInvitePlayer fail ", t, e);
            }), Laya.Handler.create(null, function(t) {
              console.error("SaveInvitePlayer fail ", t, e);
            }));
          } catch (t) {
            console.error(t);
          }
      },

      e.prototype.invitePlayerQuery = function(t) {
        var e = {};
        e.userid = this.getSessionid(), e.openId = this.getOpenId();
        HttpPost("/Emperor/wxuserinfo/invitePlayerQuery", e, Laya.Handler.create(null, function(e) {
          200 == Number(e.code) ? t && t.method && t.method.apply(t.caller, [e]) : console.error("invitePlayerQuery fail ", e);
        }), Laya.Handler.create(null, function(t) {
          console.error("invitePlayerQuery fail ", t);
        }));
      }, e.prototype.updateFriendDraw = function(t, e) {
        var i = {};
        i.shareuser = t, i.openId = this.getOpenId(), console.log("updateFriendDraw", i),
          HttpPost("/Emperor/wxuserinfo/invitePlayerUpdate", i, Laya.Handler.create(null, function(t) {
            200 == Number(t.code) ? (console.error("updateFriendDraw success "), e.method.apply(e.caller, [t])) : console.error("updateFriendDraw fail ", t);
          }), Laya.Handler.create(null, function(t) {
            console.error("updateFriendDraw fail ", t);
          }));
      }, e.prototype.queryLuckWheel = function(t) {
        var e = {};
        e.userid = this.getSessionid(), e.openId = this.getOpenId(), console.log("queryLuckWheel", e),
          HttpPost("/Emperor/wxuserinfo/playerLuckQuery", e, Laya.Handler.create(null, function(e) {
            200 == Number(e.code) ? t.method.apply(t.caller, [e]) : console.error("queryLuckWheel fail ", e);
          }), Laya.Handler.create(null, function(t) {
            console.error("queryLuckWheel fail ", t);
          }));
      }, e.prototype.postLuckWheel = function(t, e, i) {
        var n = {};
        n.userid = this.getSessionid(), n.openId = this.getOpenId(), n.luckCount = t, n.luckShareCount = e,
          n.luckUpTime = i, HttpPost("/Emperor/wxuserinfo/playerLuckUpdate", n, Laya.Handler.create(null, function(t) {
            200 == Number(t.code) ? console.error("postLuckWheel succeed") : console.error("postLuckWheel fail ", t);
          }), Laya.Handler.create(null, function(t) {
            console.error("postLuckWheel fail ", t);
          }));
      }, e.prototype.startLog = function(t) {
        var e = this.getOpenId(),
          i = "https://stat.chiji-h5.com/statwx_common.php?appid=" + this.appid + "&openid=" + e + "&channel=" + t + "&event=start";
        console.log("startLog " + i);
        var n = new Laya.HttpRequest();
        n.http.timeout = 1e4, n.once(Laya.Event.COMPLETE, null, function(t) {
          console.error("startLog success ", t);
        }), n.once(Laya.Event.ERROR, null, function(t) {
          console.error("startLog error ", t);
        }), n.send(i, null, "post", "text", ["Content-Type", "application/json"]);
      }, e.prototype.registLog = function(t) {
        var e = this.getOpenId(),
          i = "https://stat.chiji-h5.com/statwx_common.php?appid=" + this.appid + "&openid=" + e + "&channel=" + t + "&event=register";
        console.log("registLog " + i);
        var n = new Laya.HttpRequest();
        n.http.timeout = 1e4, n.once(Laya.Event.COMPLETE, null, function(t) {
          console.error("registLog success ", t);
        }), n.once(Laya.Event.ERROR, null, function(t) {
          console.error("registLog error ", t);
        }), n.send(i, null, "post", "text", ["Content-Type", "application/json"]);
      }, e.prototype.shareCountLog = function(e) {
        var i = new Laya.HttpRequest();
        i.http.timeout = 1e4, i.once(Laya.Event.COMPLETE, null, function(t) {
          console.log("post shareid", t);
        }), i.once(Laya.Event.ERROR, null, function(t) {
          console.log("post shareid error ", t);
        });
        var n = JSON.stringify({
          shareId: e
        });
        i.send(t.GameConst.SHARE_COUNT_URL, n, "post", "json", ["Content-Type", "application/json"]);
      }, e.prototype.loginErrorLog = function(e) {
        var i = new Laya.HttpRequest();
        i.http.timeout = 1e4, e = "openId:" + localStorage.getItem("openId") + e, i.once(Laya.Event.COMPLETE, null, function(t) {
          console.log("loginErrorLog", t);
        }), i.once(Laya.Event.ERROR, null, function(t) {
          console.log("loginErrorLog error ", t);
        });
        var n = JSON.stringify({
          error: e
        });
        i.send(t.GameConst.SHARE_COUNT_URL, n, "post", "json", ["Content-Type", "application/json"]);
      }, e.prototype.errorLog = function(e) {
        var i = new Laya.HttpRequest();
        i.http.timeout = 1e4, i.once(Laya.Event.COMPLETE, null, function(t) {
          console.log("loginErrorLog", t);
        }), i.once(Laya.Event.ERROR, null, function(t) {
          console.log("loginErrorLog error ", t);
        }), e.gameVersion = t.GameConst.VERSION, e.openid = this.getOpenId();
        var n = JSON.stringify(e);
        i.send(t.GameConst.SHARE_COUNT_URL, n, "post", "json", ["Content-Type", "application/json"]);
      }, e;
  }();
  t.HttpServer = e;
}(logic || (logic = {}));
*/
////////////////////////

/*
    HttpServer.prototype.queryLuckWheel = function (onResult) {
      var e = { userid: '10378572349813', openId: 'adfr23efdert34eaddfgghq43qs' };
      console.log("queryLuckWheel", e);
      HttpPost("/Emperor/wxuserinfo/playerLuckQuery", e, Laya.Handler.create(null, function (e) {
        if (200 == Number(e.code)) {
          onResult.method.apply(onResult.caller, [e]);
        } else {
          console.error("queryLuckWheel fail ", e);
        }
      }), Laya.Handler.create(null, function (t) {
        console.error("queryLuckWheel fail ", t);
      }));
    }
    */

wx.cloud.init();

! function (logic) {
  var HttpServer = (function () {
    function HttpServer() {
      this.openLog = false;
      this.appid = 'myfriend';
      this.openID = '';
    }
    HttpServer.Instance = function () {
      if (null == this._instance) {
        this._instance = new HttpServer();
      }
      return this._instance;
    };
    HttpServer.prototype.getSessionid = function () {
      return localStorage.getItem("sessionid");
    };
    HttpServer.prototype.getOpenId = function () {
      return localStorage.getItem("openId");
    };
    HttpServer.prototype.login = function (data, onSuccess, onFailed) {
      wx.cloud.callFunction({
        name: 'loginGame',
        data: data,
        success: function (res) {
          var result = res.result;
          localStorage.setItem("sessionid", result.sessionid);
          localStorage.setItem("openId", result.openId);
          localStorage.setItem("session_key", result.wxSessionkey);
          HttpServer.Instance().openID = result.openId;
          if (onSuccess && onSuccess.method)
            onSuccess.method.apply(onSuccess.caller, [res]);
        },
        fail: function (err) {
          console.error('login game failed with error', err);
          if (onFailed && onFailed.method)
            onFailed.method.apply(onFailed.caller, [err]);
        }
      });
    };
    HttpServer.prototype.saveUserData = function (playInfo, onSaved) {
      var info = playInfo;
      info.userid = this.getSessionid();
      info.openId = this.getOpenId();
      wx.cloud.callFunction({
        name: 'savePlayerInfo',
        data: info,
        success: function (res) {
          console.log("save user info success ");
          if (onSaved)
            onSaved.run();
        },
        fail: function (err) {
          console.error('save user info failed with error', err);
        }
      });
    };
    HttpServer.prototype.saveInvitePlayer = function () {
      if (void 0 == logic.WeChat.onShowQuery || null == logic.WeChat.onShowQuery)
        return;
      try {
        var shareQuery = logic.WeChat.onShowQuery;
        var openId = this.getOpenId();
        if ("" == openId)
          return;
        if (shareQuery.shareuser == openId)
          return;
        var player = asgard.module.ModuleManager.getModule(logic.MODULE_PLAYER);
        var saveData = { shareuser: '', openId: '', prop: '', nickName: '', avatar_url: '' };
        saveData.shareuser = shareQuery.shareuser;
        saveData.openId = openId;
        saveData.prop = shareQuery.prop;
        saveData.nickName = player.Player.nickName;
        saveData.avatar_url = player.Player.avatarUrl;
        wx.cloud.callFunction({
          name: 'saveInvitePlayer',
          data: saveData,
          success: function (res) {
            console.log("save invite player success");
          },
          fail: function (err) {
            console.error('save user info failed with error', err);
          }
        });
      }
      catch (e) {
        console.error(e);
      }
    };
    HttpServer.prototype.invitePlayerQuery = function (onResult) {
      var userInfo = { userid: '', openId: '' };
      userInfo.userid = this.getSessionid();
      userInfo.openId = this.getOpenId();
      wx.cloud.callFunction({
        name: 'invitePlayerQuery',
        data: userInfo,
        success: function (res) {
          console.log("save invite player success");
          onResult && onResult.method && onResult.method.apply(onResult.caller, [res.result]);
        },
        fail: function (err) {
          console.error('save user info failed with error', err);
        }
      });
    };
    HttpServer.prototype.updateFriendDraw = function (shareuser, onUpdated) {
      var postInfo = { shareuser: shareuser, openId: this.getOpenId() };
      console.log("update friend draw", postInfo);
      wx.cloud.callFunction({
        name: 'updateFriendDraw',
        data: postInfo,
        success: function (res) {
          console.log("update friend draw success");
          onUpdated.method.apply(onUpdated.caller, [res.result]);
        },
        fail: function (err) {
          console.error('update friend draw failed with error', err);
        }
      });
    };

    HttpServer.prototype.queryLuckWheel = function (onResult) {
      var userInfo = { userid: this.getSessionid(), openId: this.getOpenId() };
      console.log("query luck wheel", userInfo);
      wx.cloud.callFunction({
        name: 'queryLuckWheel',
        data: userInfo,
        success: function (res) {
          console.log("query luck wheel success");
          onResult.method.apply(onResult.caller, [res.result]);
        },
        fail: function (err) {
          console.error('query luck wheel failed with error', err);
        }
      });
    };
    HttpServer.prototype.postLuckWheel = function (luckCount, luckShareCount, luckUpTime) {
      var luckwheelData = {
        userid: this.getSessionid(),
        openId: this.getOpenId(),
        luckCount: luckCount,
        luckShareCount: luckShareCount,
        luckUpTime: luckUpTime
      };
      wx.cloud.callFunction({
        name: 'saveLuckWheel',
        data: luckwheelData,
        success: function (res) {
          console.log("save luck wheel success");
        },
        fail: function (err) {
          console.error('save luck wheel failed with error', err);
        }
      });
    };
    HttpServer.prototype.startLog = function (log) {
      if (!this.openLog)
        return;
      var openId = this.getOpenId();
      var logmsg = logic.GameConst.REPORT_URL + "?appid=" + this.appid + "&openid=" + openId + "&channel=" + log + "&event=start";
      console.log("startLog " + logmsg);
      var req = new Laya.HttpRequest();
      req.http.timeout = 1e4;
      req.once(Laya.Event.COMPLETE, null, function (t) {
        console.error("startLog success ", t);
      });
      req.once(Laya.Event.ERROR, null, function (t) {
        console.error("startLog error ", t);
      });
      req.send(logmsg, null, "post", "text", ["Content-Type", "application/json"]);
    };
    HttpServer.prototype.registLog = function (log) {
      if (!this.openLog)
        return;
      var openId = this.getOpenId();
      var logmsg = logic.GameConst.REPORT_URL + "?appid=" + this.appid + "&openid=" + openId + "&channel=" + log + "&event=register";
      console.log("registLog " + logmsg);
      var req = new Laya.HttpRequest();
      req.http.timeout = 1e4, req.once(Laya.Event.COMPLETE, null, function (t) {
        console.error("registLog success ", t);
      });
      req.once(Laya.Event.ERROR, null, function (t) {
        console.error("registLog error ", t);
      });
      req.send(logmsg, null, "post", "text", ["Content-Type", "application/json"]);
    };
    HttpServer.prototype.shareCountLog = function (shareid) {
      if (!this.openLog)
        return;
      var req = new Laya.HttpRequest();
      req.http.timeout = 1e4, req.once(Laya.Event.COMPLETE, null, function (t) {
        console.log("post shareid", t);
      });
      req.once(Laya.Event.ERROR, null, function (t) {
        console.log("post shareid error ", t);
      });
      var logmsg = JSON.stringify({
        shareId: shareid
      });
      req.send(logic.GameConst.SHARE_COUNT_URL, logmsg, "post", "json", ["Content-Type", "application/json"]);
    };
    HttpServer.prototype.loginErrorLog = function (err) {
      if (!this.openLog)
        return;
      var req = new Laya.HttpRequest();
      req.http.timeout = 1e4;
      err = "openId:" + localStorage.getItem("openId") + err;
      req.once(Laya.Event.COMPLETE, null, function (t) {
        console.log("loginErrorLog", t);
      });
      req.once(Laya.Event.ERROR, null, function (t) {
        console.log("loginErrorLog error ", t);
      });
      var errmsg = JSON.stringify({
        error: err
      });
      req.send(logic.GameConst.SHARE_COUNT_URL, errmsg, "post", "json", ["Content-Type", "application/json"]);
    };
    HttpServer.prototype.errorLog = function (err) {
      if (!this.openLog)
        return;
      var req = new Laya.HttpRequest();
      req.http.timeout = 1e4, req.once(Laya.Event.COMPLETE, null, function (t) {
        console.log("loginErrorLog", t);
      });
      req.once(Laya.Event.ERROR, null, function (t) {
        console.log("loginErrorLog error ", t);
      });
      err.gameVersion = logic.GameConst.VERSION;
      err.openid = this.getOpenId();
      var errmsg = JSON.stringify(err);
      req.send(logic.GameConst.SHARE_COUNT_URL, errmsg, "post", "json", ["Content-Type", "application/json"]);
    };
    HttpServer._instance = null;
    return HttpServer;
  }());
  logic.HttpServer = HttpServer;
}(logic || (logic = {}));

////////////////////////


/*
! function(t) {
  var e = function() {
    function e() {
      this._initLocal = !1, this.tempDbVersion = 0, this.isVideoAdCanPlay = !0, this.playVideoTimes = 0;
    }

    e.Instance = function() {
      return null == e._gameData && (e._gameData = new e()), e._gameData;
    };

    e.prototype.init = function() {
      this.gameDataReady = !1, this._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER),
        this._itemListModule = asgard.module.ModuleManager.getModule(t.MODULE_LIST), this._slotModule = asgard.module.ModuleManager.getModule(t.MODULE_SLOT),
        this._socialModule = asgard.module.ModuleManager.getModule(t.MODULE_SOCIAL), this._lastSaveData = null;
    };

    e.prototype.getGameDataWhenError = function() {
      console.log("========getGameDataWhenError========="), this._localData = null, this.gameDataReady = !1,
        t.HttpServer.Instance().getUserData(Laya.Handler.create(this, this.OnLoginSuccess), Laya.Handler.create(this, this.OnLoginFailed));
    };

    e.prototype.OnLoginSuccess = function(t) {
      t.result && e.Instance().CheckData(t.result);
    };

    e.prototype.OnLoginFailed = function(t) {}, e.prototype.resetSlotStartTime = function() {
      this._slotModule && this._slotModule.resetSlotStartTime();
    };

    e.prototype.startGameFromLocal = function() {
      if (!this._initLocal) {
        this._localData = null;
        try {
          var e = t.PlatForm.GetInstance().readDataFromFile(t.GameConst.LOCAL_CACHE_FILE_PATH);
          if (null == e || "" == e) return;
          var i = JSON.parse(e);
          if (i.dbVersion <= 0 || i.shopLevel <= 2 || i.items.length <= 0 || i.slots.length <= 0) return;
          this._initLocal = !0, this._localData = i, this.shareGroup = i.shareGrop, i.shopLevel >= 2 && i.guideStep < t.GuidePanel.guideSteps.length && (i.guideStep = t.GuidePanel.guideSteps.length),
            this._playerModule.onGameInit(i), this._itemListModule.onInitItemList(i.shopLevel, i.items),
            this._slotModule.onInitSlotData(i.slots), this._socialModule.onInitData(i.friendNum, i.friendDraw, i.shareGrop),
            console.error("startGameFromLocal ", i), this.gameDataReady = !0, asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_GAME_ONSHOW),
            asgard.stage.StageManager.enterStage(t.STAGE_ARENA);
        } catch (t) {
          console.error("startGameFromLocal error ", t);
        }
      }
    };

    e.prototype.caculatOfflineReward = function(e, i, n, s) {
      t.Utils.getTimestamp();
      console.log("caculatOfflineReward ,", i, n), i = n - i;
      var r = 0;
      if (0 == e && i > 0) {
        i > t.GameConst.MAX_OFFLINE_TIME && (i = t.GameConst.MAX_OFFLINE_TIME, this._slotModule.isLeftOverMaxTime = !0);
        for (var a = s, o = 0; o < a.length; o++) {
          var h = a[o];
          if (null != h) {
            var l = data.StaticDataFactory.findPost(h.id);
            if (null != l) {
              var u = i,
                c = 0;
              if (u > 1e3) {
                if (this._playerModule.SpeedUpEndTime > n) {
                  var _ = this._playerModule.SpeedUpEndTime - this._playerModule.offLineTime;
                  c += Math.floor(.001 * _ * l.Offline), u -= _;
                }
                c += Math.floor(.001 * u * l.Offline);
              }
              r += c;
            } else console.log("id error " + h.id);
          }
        }
      }
      return r;
    };

    e.prototype.CheckData = function(e) {
      if (void 0 != e && "" != e) {
        var i = null;
        var n = null;
        var s = null;
        try {
          //i = JSON.parse(e);
          i = e;
          i.isFly = i.isFly ? 1 : 0;
          this._playerModule.Player.shareCoinCount = i.shareCoinNum;
          this._playerModule.Player.shareDiamonCount = i.shareDiamonNum;
          this._playerModule.Player.lastLoginTime = i.lastLoginTime;
          this._playerModule.Player.loginDays = i.loginDays;
          this._playerModule.Player.loginRewardDays = i.loginRewardDays;
          this._playerModule.isNewPlayer = i.isNewPlayer;
          asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_UPDATE_LOGIN_REWARD);
          this._socialModule.inviteLoginDraw = i.friendDraw;
          t.Utils.setverTimestamp = i.timestamp;

          var r = new Date();
          t.Utils.offsetTimestamp = i.timestamp - r.getTime();
          var a = i.slots; // 格子中的所有男友们
          s = [];
          for (l = 0; l < a.length; l++) {
            (u = JSON.parse(a[l])).id = Number(u.id),
              u.pos = Number(u.pos), s.push(u);
          }

          this._playerModule.SpeedUpEndTime = i.upStartTime,
            this._playerModule.offLineTime = i.offlineTime;
          var o = this.caculatOfflineReward(i.isNewPlayer, i.offlineTime, i.timestamp, s); //计算离线奖励

          if (this._localData && (this._localData.dbVersion >= i.dbVersion)) {
            console.error("local.dbVersion " + this._localData.dbVersion + " netdbversion " + i.dbVersion);
            console.error("shareCoinCount " + this._playerModule.Player.shareCoinCount + " shareDiamonCount " + this._playerModule.Player.shareDiamonCount);

            return void(o > 0 && (this._slotModule.offlineCoin = o,
              this._playerModule.isGuideOver() && (
                asgard.ui.UIManager.openView(t.UIPanelID.OFFLINETIP),
                asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_SHOW_BOX)
              )
            ));
          }

          this.gameDataReady = !1;
          asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_GAME_ONHIDE);
          this._slotModule.offlineCoin = o;
          var h = i.itemArray;
          n = [];
          for (var l = 0; l < h.length; l++) {
            var u = JSON.parse(h[l]);
            u.id = Number(u.id), u.coinCount = Number(u.coinCount), u.diamonCount = Number(u.diamonCount),
              u.buyUnlock = Number(u.buyUnlock), u.coinUnlock = Number(u.coinUnlock), u.diamonUnlock = Number(u.diamonUnlock),
              n.push(u);
          }
          i.shopLevel >= 2 && i.guideStep < t.GuidePanel.guideSteps.length && (i.guideStep = t.GuidePanel.guideSteps.length),
            this._playerModule.onGameInit(i), this._itemListModule.onInitItemList(i.shopLevel, n),
            this._slotModule.onInitSlotData(s), this._socialModule.onInitData(i.friendNum, i.friendDraw, this.shareGroup),
            this.gameDataReady = !0, console.log("使用网络数据游戏 " + i.isFly), asgard.stage.StageManager.enterStage(t.STAGE_ARENA),
            asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_GAME_ONSHOW), this._localData && this._playerModule.isGuideOver() && this._slotModule.offlineCoin > 0 && null == asgard.ui.UIManager.findUIPanel(t.UIPanelID.OFFLINETIP) && (asgard.ui.UIManager.openView(t.UIPanelID.OFFLINETIP),
              asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_SHOW_BOX));
        } catch (t) {
          return void console.error(t);
        }
      } else console.log("netData error ");
    };

    e.prototype.postGameData = function(e) {
      if (this.gameDataReady) {
        var i = this.getPlayerBaseInfo(!0);
        i.shopLevel <= 1 && 0 == i.isFly || "0" == i.coin || i.dbVersion <= 0 || (i.shareGrop = null,
          t.HttpServer.Instance().saveUserData(i, e));
      }
    };

    e.prototype.saveLocalGameData = function() {
      if (this.gameDataReady) {
        var e = this.getPlayerBaseInfo(!1);
        if (e.shopLevel <= 1 && 0 == e.isFly || "0" == e.coin || e.dbVersion <= 0) console.log("保存数据失败11");
        else if (this._lastSaveData && e.shopLevel < this._lastSaveData.shopLevel && e.isFly != this._lastSaveData.isFly) console.log("保存数据失败22");
        else {
          this._lastSaveData = e;
          var i = JSON.stringify(e);
          t.PlatForm.GetInstance().writeData2File(t.GameConst.LOCAL_CACHE_FILE_PATH, i);
        }
      }
    };

    e.prototype.getPlayerBaseInfo = function(e) {
      var i = this._slotModule.AllSlot,
        n = [];
      i ? i.forEach(function(t) {
        if (null != t) {
          var e = {
            id: t.Post.Id,
            pos: t.position
          };
          n.push(e);
        }
      }) : console.error("AllSlot is null");
      var s = 1,
        r = [];
      this._itemListModule.ItemList.forEach(function(t) {
        if (t && t.isUnlock) {
          var e = {
            id: t.Post.Id,
            buyUnlock: t.isUnlock ? 1 : 0,
            diamonUnlock: t.isDiamonUnLock ? 1 : 0,
            coinUnlock: t.isCoinUnLock ? 1 : 0,
            coinCount: t.coinBuyCount,
            diamonCount: t.diamonBuyCount
          };
          t.Post.Lv > s && (s = t.Post.Lv), r.push(e);
        }
      });
      for (var a = this._socialModule.shareGroupMap, o = [], h = 0; h < a.length; h++) {
        var l = a[h];
        o[h] = {
          time: l.time,
          openGId: l.openGId
        };
      }
      var u = String(this._playerModule.Player.Coin),
        c = this._itemListModule.currOpenLevel >= s ? this._itemListModule.currOpenLevel : s;
      return {
        saveTime: t.Utils.getTimestamp(),
        coin: u,
        diamon: this._playerModule.Player.Diamon,
        shopLevel: c,
        isNewPlayer: this._playerModule.isNewPlayer,
        speedup: this._playerModule.Player.Speed,
        upStartTime: t.Utils.getTimestamp() + 1e3 * this._playerModule.Player.LeftTime,
        loginDays: this._playerModule.Player.loginDays,
        loginRewardDays: this._playerModule.Player.loginRewardDays,
        lastLoginTime: this._playerModule.Player.lastLoginTime,
        guideStep: this._playerModule.guideStep,
        friendDraw: this._socialModule.inviteLoginDraw,
        shareCoinNum: this._playerModule.Player.shareCoinCount,
        shareDiamonNum: this._playerModule.Player.shareDiamonCount,
        luckyCount: this._playerModule.Player.luckyCount,
        luckyShareCount: this._playerModule.Player.luckyShareCount,
        luckyUpTime: this._playerModule.Player.luckyUpTime,
        dbVersion: this._playerModule.dbVersion,
        version: t.GameConst.VERSION,
        slots: n,
        items: r,
        shareGrop: o,
        isFly: this._playerModule.Player.turnRound
      };
    };

    e.prototype.postRank = function() {
      if (this.gameDataReady) {
        var t = this._playerModule.Player.Coin + this._slotModule.getCurrSlotRecoveryCoin();
        WxUpdateFriendRank({
          level: this._itemListModule.currOpenLevel,
          turnRound: this._playerModule.Player.turnRound,
          coin: t,
          openId: this._playerModule.Player.openId
        });
      }
    };

    e.prototype.isCanFly = function() {
      if (this._itemListModule.currOpenLevel < t.GameConst.MAX_LEVEL) return !1;
      for (var e = 0, i = this._slotModule.AllSlot, n = 0; n < i.length; n++) {
        var s = i[n];
        s && s.Post.Lv == t.GameConst.MAX_LEVEL && e++;
      }
      return e >= t.GameConst.FLY_LIMIT_HERO_COUNT;
    };

    e.prototype.doFly = function() {
      IsMiniGame() ? this.postGameData(Laya.Handler.create(this, this._onFlyOver)) : this._onFlyOver();
    };

    e.prototype._onFlyOver = function() {
      this._playerModule.doFly(), this._itemListModule.doFly(), this._slotModule.doFly(),
        this._socialModule.doFly(), asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_GAME_ONSHOW),
        this.postGameData(), this.saveLocalGameData(), this.postRank(), WxGetFriendRankList();
    };

    return e;
  }();
  
  t.GameData = e;
}(logic || (logic = {}));
*/

////////

var logic;
(function (logic) {
  var GameData = (function () {
    function GameData() {
      this._initLocal = false;
      this.tempDbVersion = 0;
      this.isVideoAdCanPlay = true;
      this.playVideoTimes = 0;
      this.gameDataReady = false;
    }
    GameData.Instance = function () {
      return null == GameData._gameData && (GameData._gameData = new GameData()), GameData._gameData;
    };
    GameData.prototype.init = function () {
      this.gameDataReady = false;
      this._playerModule = asgard.module.ModuleManager.getModule(logic.MODULE_PLAYER);
      this._itemListModule = asgard.module.ModuleManager.getModule(logic.MODULE_LIST);
      this._slotModule = asgard.module.ModuleManager.getModule(logic.MODULE_SLOT);
      this._socialModule = asgard.module.ModuleManager.getModule(logic.MODULE_SOCIAL);
      this._lastSaveData = null;
    };
    ;
    GameData.prototype.getGameDataWhenError = function () {
      console.error("========getGameDataWhenError========="),
        this._localData = null;
      this.gameDataReady = false;
      logic.HttpServer.Instance().getUserData(Laya.Handler.create(this, this.OnLoginSuccess), Laya.Handler.create(this, this.OnLoginFailed));
    };
    ;
    GameData.prototype.OnLoginSuccess = function (t) {
      t.result && GameData.Instance().CheckData(t.result);
    };
    ;
    GameData.prototype.OnLoginFailed = function (t) { };
    ;
    GameData.prototype.resetSlotStartTime = function () {
      this._slotModule && this._slotModule.resetSlotStartTime();
    };
    ;
    GameData.prototype.startGameFromLocal = function () {
      if (!this._initLocal) {
        this._localData = null;
        try {
          var e = logic.PlatForm.GetInstance().readDataFromFile(logic.GameConst.LOCAL_CACHE_FILE_PATH);
          if (null == e || "" == e)
            return;
          var localData = JSON.parse(e);
          if (localData.dbVersion <= 0 || localData.shopLevel <= 2 || localData.items.length <= 0 || localData.slots.length <= 0)
            return;
          this._initLocal = true;
          this._localData = localData;
          this.shareGroup = localData.shareGrop;
          localData.shopLevel >= 2 && localData.guideStep < logic.GuidePanel.guideSteps.length && (localData.guideStep = logic.GuidePanel.guideSteps.length);
          this._playerModule.onGameInit(localData);
          this._itemListModule.onInitItemList(localData.shopLevel, localData.items);
          this._slotModule.onInitSlotData(localData.slots);
          this._socialModule.onInitData(localData.friendNum, localData.friendDraw, localData.shareGrop);
          console.log("startGameFromLocal ", localData);
          this.gameDataReady = true;
          asgard.events.EventsDispatcher.eventNotify(logic.GameEvents.EVENT_GAME_ONSHOW);
          asgard.stage.StageManager.enterStage(logic.STAGE_ARENA);
        }
        catch (t) {
          console.error("startGameFromLocal error ", t);
        }
      }
    };
    ;
    GameData.prototype.caculatOfflineReward = function (isNewPlayer, offlineTime, timestamp, slots) {
      logic.Utils.getTimestamp();
      console.log("caculatOfflineReward ,", offlineTime, timestamp);
      offlineTime = timestamp - offlineTime;
      var reward = 0;
      if (0 == isNewPlayer && offlineTime > 0) {
        if (offlineTime > logic.GameConst.MAX_OFFLINE_TIME) {
          offlineTime = logic.GameConst.MAX_OFFLINE_TIME;
          this._slotModule.isLeftOverMaxTime = true;
        }
        for (var cslots = slots, idx = 0; idx < cslots.length; idx++) {
          var slot = cslots[idx];
          if (slot == null)
            continue;
          var slotdata = data.StaticDataFactory.findPost(slot.id);
          if (slotdata == null) {
            console.error("slot id error " + slot.id);
            continue;
          }
          var leftOfflineTime = offlineTime;
          var curReward = 0;
          if (leftOfflineTime > 1e3) {
            if (this._playerModule.SpeedUpEndTime > timestamp) {
              var leftSpeedTime = this._playerModule.SpeedUpEndTime - this._playerModule.offLineTime;
              curReward += Math.floor(.001 * leftSpeedTime * slotdata.Offline);
              leftOfflineTime -= leftSpeedTime;
            }
            curReward += Math.floor(.001 * leftOfflineTime * slotdata.Offline);
          }
          reward += curReward;
        }
      }
      return reward;
    };
    ;
    GameData.prototype.CheckData = function (serverdata) {
      if (serverdata != null) {
        var shopItems = null;
        var slots = null;
        try {
          this._playerModule.Player.shareCoinCount = serverdata.shareCoinNum;
          this._playerModule.Player.shareDiamonCount = serverdata.shareDiamonNum;
          this._playerModule.Player.lastLoginTime = serverdata.lastLoginTime;
          this._playerModule.Player.loginDays = serverdata.loginDays;
          this._playerModule.Player.loginRewardDays = serverdata.loginRewardDays;
          this._playerModule.isNewPlayer = serverdata.isNewPlayer;
          asgard.events.EventsDispatcher.eventNotify(logic.GameEvents.EVENT_UPDATE_LOGIN_REWARD);
          this._socialModule.inviteLoginDraw = serverdata.friendDraw;
          logic.Utils.setverTimestamp = serverdata.timestamp;
          var clientTime = new Date();
          logic.Utils.offsetTimestamp = serverdata.timestamp - clientTime.getTime();
          var serverslots = serverdata.slots;
          slots = [];
          for (var i = 0; i < serverslots.length; i++) {
            var slot = serverslots[i];
            slots.push(slot);
          }
          this._playerModule.SpeedUpEndTime = serverdata.upStartTime;
          this._playerModule.offLineTime = serverdata.offlineTime;
          var offlineReward = this.caculatOfflineReward(serverdata.isNewPlayer, serverdata.offlineTime, serverdata.timestamp, slots);
          if (this._localData && (this._localData.dbVersion >= serverdata.dbVersion)) {
            console.error("local.dbVersion " + this._localData.dbVersion + " netdbversion " + serverdata.dbVersion);
            console.error("shareCoinCount " + this._playerModule.Player.shareCoinCount + " shareDiamonCount " + this._playerModule.Player.shareDiamonCount);
            return void (offlineReward > 0 && (this._slotModule.offlineCoin = offlineReward,
              this._playerModule.isGuideOver() && (asgard.ui.UIManager.openView(logic.UIPanelID.OFFLINETIP),
                asgard.events.EventsDispatcher.eventNotify(logic.GameEvents.EVENT_SHOW_BOX))));
          }
          this.gameDataReady = false;
          asgard.events.EventsDispatcher.eventNotify(logic.GameEvents.EVENT_GAME_ONHIDE);
          this._slotModule.offlineCoin = offlineReward;
          var serverShopItems = serverdata.itemArray;
          shopItems = [];
          for (var i = 0; i < serverShopItems.length; i++) {
            var shopItem = serverShopItems[i];
            shopItems.push(shopItem);
          }
          serverdata.shopLevel >= 2 && serverdata.guideStep < logic.GuidePanel.guideSteps.length && (serverdata.guideStep = logic.GuidePanel.guideSteps.length);
          this._playerModule.onGameInit(serverdata);
          this._itemListModule.onInitItemList(serverdata.shopLevel, shopItems);
          this._slotModule.onInitSlotData(slots);
          this._socialModule.onInitData(serverdata.friendNum, serverdata.friendDraw, this.shareGroup);
          this.gameDataReady = !0;
          console.log("使用网络数据游戏 " + serverdata.isFly);
          asgard.stage.StageManager.enterStage(logic.STAGE_ARENA);
          asgard.events.EventsDispatcher.eventNotify(logic.GameEvents.EVENT_GAME_ONSHOW);
          if (this._localData && this._playerModule.isGuideOver() && this._slotModule.offlineCoin > 0 && null == asgard.ui.UIManager.findUIPanel(logic.UIPanelID.OFFLINETIP)) {
            asgard.ui.UIManager.openView(logic.UIPanelID.OFFLINETIP);
            asgard.events.EventsDispatcher.eventNotify(logic.GameEvents.EVENT_SHOW_BOX);
          }
        }
        catch (t) {
          return void console.error(t);
        }
      }
      else
        console.log("netData error ");
    };
    ;
    GameData.prototype.postGameData = function (callback) {
      if (this.gameDataReady) {
        var i = this.getPlayerBaseInfo(true);
        i.shopLevel <= 1 && 0 == i.isFly || "0" == i.coin || i.dbVersion <= 0 || (i.shareGrop = null, logic.HttpServer.Instance().saveUserData(i, callback));
      }
    };
    ;
    GameData.prototype.saveLocalGameData = function () {
      if (this.gameDataReady) {
        var playerInfo = this.getPlayerBaseInfo(false);
        if (playerInfo.shopLevel <= 1 && 0 == playerInfo.isFly || "0" == playerInfo.coin || playerInfo.dbVersion <= 0)
          console.log("保存数据失败11");
        else if (this._lastSaveData && playerInfo.shopLevel < this._lastSaveData.shopLevel && playerInfo.isFly != this._lastSaveData.isFly)
          console.log("保存数据失败22");
        else {
          this._lastSaveData = playerInfo;
          var playerInfoStr = JSON.stringify(playerInfo);
          logic.PlatForm.GetInstance().writeData2File(logic.GameConst.LOCAL_CACHE_FILE_PATH, playerInfoStr);
        }
      }
    };
    ;
    GameData.prototype.getPlayerBaseInfo = function (forServer) {
      var allSlots = this._slotModule.AllSlot;
      var slots = [];
      if (allSlots) {
        allSlots.forEach(function (slot) {
          if (null != slot) {
            var newslot = {
              id: slot.Post.Id,
              pos: slot.position
            };
            slots.push(newslot);
          }
        });
      }
      else {
        console.error("AllSlot is null");
      }
      var level = 1;
      var shopItems = [];
      this._itemListModule.ItemList.forEach(function (item) {
        if (item && item.isUnlock) {
          var newShopitem = {
            id: item.Post.Id,
            buyUnlock: item.isUnlock ? 1 : 0,
            diamonUnlock: item.isDiamonUnLock ? 1 : 0,
            coinUnlock: item.isCoinUnLock ? 1 : 0,
            coinCount: item.coinBuyCount,
            diamonCount: item.diamonBuyCount
          };
          if (item.Post.Lv > level) {
            level = item.Post.Lv;
            shopItems.push(newShopitem);
          }
        }
      });
      var shares = [];
      for (var shareGroupMap = this._socialModule.shareGroupMap, i = 0; i < shareGroupMap.length; i++) {
        var share = shareGroupMap[i];
        shares[i] = {
          time: share.time,
          openGId: share.openGId
        };
      }
      var coin = String(this._playerModule.Player.Coin);
      var shopLevel = this._itemListModule.currOpenLevel >= level ? this._itemListModule.currOpenLevel : level;
      return {
        saveTime: logic.Utils.getTimestamp(),
        coin: coin,
        diamon: this._playerModule.Player.Diamon,
        shopLevel: shopLevel,
        isNewPlayer: this._playerModule.isNewPlayer,
        speedup: this._playerModule.Player.Speed,
        upStartTime: logic.Utils.getTimestamp() + 1e3 * this._playerModule.Player.LeftTime,
        loginDays: this._playerModule.Player.loginDays,
        loginRewardDays: this._playerModule.Player.loginRewardDays,
        lastLoginTime: this._playerModule.Player.lastLoginTime,
        guideStep: this._playerModule.guideStep,
        friendDraw: this._socialModule.inviteLoginDraw,
        shareCoinNum: this._playerModule.Player.shareCoinCount,
        shareDiamonNum: this._playerModule.Player.shareDiamonCount,
        luckyCount: this._playerModule.Player.luckyCount,
        luckyShareCount: this._playerModule.Player.luckyShareCount,
        luckyUpTime: this._playerModule.Player.luckyUpTime,
        dbVersion: this._playerModule.dbVersion,
        version: logic.GameConst.VERSION,
        slots: slots,
        items: shopItems,
        shareGrop: shares,
        isFly: this._playerModule.Player.turnRound
      };
    };
    ;
    GameData.prototype.postRank = function () {
      if (this.gameDataReady) {
        var t = this._playerModule.Player.Coin + this._slotModule.getCurrSlotRecoveryCoin();
        WxUpdateFriendRank({
          level: this._itemListModule.currOpenLevel,
          turnRound: this._playerModule.Player.turnRound,
          coin: t,
          openId: this._playerModule.Player.openId
        });
      }
    };
    ;
    GameData.prototype.isCanFly = function () {
      if (this._itemListModule.currOpenLevel < logic.GameConst.MAX_LEVEL)
        return false;
      for (var e = 0, i = this._slotModule.AllSlot, n = 0; n < i.length; n++) {
        var s = i[n];
        s && s.Post.Lv == logic.GameConst.MAX_LEVEL && e++;
      }
      return e >= logic.GameConst.FLY_LIMIT_HERO_COUNT;
    };
    ;
    GameData.prototype.doFly = function () {
      if (IsMiniGame()) {
        this.postGameData(Laya.Handler.create(this, this._onFlyOver));
      }
      else {
        this._onFlyOver();
      }
    };
    ;
    GameData.prototype._onFlyOver = function () {
      this._playerModule.doFly();
      this._itemListModule.doFly();
      this._slotModule.doFly();
      this._socialModule.doFly();
      asgard.events.EventsDispatcher.eventNotify(logic.GameEvents.EVENT_GAME_ONSHOW);
      this.postGameData();
      this.saveLocalGameData();
      this.postRank();
      WxGetFriendRankList();
    };
    ;
    GameData._gameData = null;
    return GameData;
  }());
  logic.GameData = GameData;
})(logic || (logic = {}));


! function(t) {
  var e = function() {
    function t() {}
    return t.VERSION = "1.4.0", t.APP_NAME = "Emperor", t.SCEEN_WIDTH = 720, t.SCEEN_HEIGHT = 1280,
      t.MAX_LEVEL = 37, t.EMPEROR_LEVEL = 35, t.FLY_LIMIT_HERO_COUNT = 3, t.POST_DATA_TIME_GAP = 6e4,
      t.LOCAL_DATA_TIME_GAP = 5e3, t.SOUND_ACTIVE = !0, t.MAX_COLUMN = 3, t.MAX_ROW = 4,
      t.MAX_OFFLINE_TIME = 72e5, t.INVITE_FRIEND_DIAMON = 200, t.INVITE_LOGIN_REWARD_TIME = 36e3,
      t.SHARE_COIN_MULETIPLE = 3, t.VIDEO_COIN_MULETIPLE = 2, t.SHARE_DIAMON_MULETIPLE = 3,
      t.VIDEO_DIAMON_MULETIPLE = 2, t.LUCKYWHEEL_GET_TICKETS_TIMES = 5, t.LUCKYWHEEL_MAX_TICKETS = 25,
      t.SHARE_GROUP_TIME_CD = 72e5, t.NEW_LEVEL_SHARE = 6, t.SHARE_FAILED_TIPS = "请不要频繁打扰这个群哦!",
      t.SHARE_FAILED_TIPS2 = "操作失败!", t.AD_UNLOCK_LEVEL = 6, t.AD_CHANGE_TIME = 3e4, t.VIDEO_AD_FAILED_TIPS = "视频未播放完毕不能获得奖励",
      t.VIDEO_AD_CD = 1e4, t.BANNERAD_UNITID = "adunit-89baf99d7347c1c5", t.VIDEO_AD_BOX = "adunit-1bc140388115d0c0",
      t.VIDEO_AD_COIN = "adunit-6a3e0e887128ea84", t.VIDEO_AD_DIAMON = "adunit-c1670bc14624e6bc",
      t.VIDEO_AD_OFFLINE = "adunit-8888df3de0246eb8", t.VIDEO_AD_REWARD = "adunit-4f82c5f5ce36a71b",
      t.LOCAL_CACHE_FILE_PATH = "playerData.txt", t.FILE_SERVER_URL = "https://h5.chiguawan.com/emperor",
      t.FILE_SERVER_URL2 = "https://img.wdaveh5game.com/emperor", t.SHARE_COUNT_URL = "https://wdaveh5game.com/Emperor/adminManager/shareIcon",
      t.SERVER_URL = "https://h5.chiguawan.com", t;
  }();
  t.GameConst = e;
  var i = function() {
    function t() {}
    return Object.defineProperty(t, "UI_OPENDATA", {
        get: function() {
          return "res/atlas/openData.atlas";
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t, "UI_EFFECT", {
        get: function() {
          return "res/atlas/effect.atlas";
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t, "UI_MAIN_BG", {
        get: function() {
          return "bg/mainbg.jpg";
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t, "UI_MAIN_BG2", {
        get: function() {
          return "bg/mainbg2.jpg";
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t, "UI_DISK_MAIN", {
        get: function() {
          return "bg/diskmain.png";
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t, "UI_DISK_BG", {
        get: function() {
          return "bg/disk.png";
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t, "UI_GUIDE_BEAUTY", {
        get: function() {
          return "bg/nvjuese.png";
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t, "UI_INVITE_FRIEND_TITLE", {
        get: function() {
          return "bg/titleart.png";
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t, "STATIC_DATA", {
        get: function() {
          return "data/data.json";
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t, "SHARE_DATA_URL", {
        get: function() {
          return e.FILE_SERVER_URL2 + "/share_" + e.VERSION + ".json?=" + 1e3 * Math.random();
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(t, "SHARE_DATA_URL2", {
        get: function() {
          return e.FILE_SERVER_URL + "/share_" + e.VERSION + ".json?=" + 1e3 * Math.random();
        },
        enumerable: !0,
        configurable: !0
      }), t.getPreLoadList = function() {
        return [{
          url: t.UI_COMMON,
          type: Laya.Loader.ATLAS
        }, {
          url: t.UI_OPENDATA,
          type: Laya.Loader.ATLAS
        }, {
          url: t.UI_LOGIN_REWARD,
          type: Laya.Loader.ATLAS
        }, {
          url: t.STATIC_DATA,
          type: Laya.Loader.BUFFER
        }];
      }, t.getMainPreLoadList = function() {
        return [{
          url: t.UI_EFFECT,
          type: Laya.Loader.ATLAS
        }, {
          url: t.UI_MAIN_BG,
          type: Laya.Loader.IMAGE
        }, {
          url: t.UI_MAIN_BG2,
          type: Laya.Loader.IMAGE
        }, {
          url: t.UI_MAIN,
          type: Laya.Loader.ATLAS
        }, {
          url: "bg/banner.png",
          type: Laya.Loader.IMAGE
        }, {
          url: t.UI_ICON,
          type: Laya.Loader.ATLAS
        }];
      }, t.SOUND_CLICK = "sound/click.mp3", t.SOUND_CLICK_COIN = "sound/coin.mp3", t.SOUND_REWARD = "sound/congratulations.mp3",
      t.UI_COMMON = "res/atlas/common.atlas", t.UI_ICON = "res/atlas/icon.atlas", t.UI_MAIN = "res/atlas/main.atlas",
      t.UI_LOGIN_REWARD = "res/atlas/loginReward.atlas", t.STATIC_SHARE_DATA = "data/share.json",
      t;
  }();
  t.CommonRes = i;
  var n = function() {
    function t() {}
    return t.initSoundSystem = function() {
      Laya.SoundManager.autoStopMusic = !1, Laya.SoundManager.muted = !1;
    }, t.playSound = function(t, i) {
      void 0 === i && (i = 1), e.SOUND_ACTIVE && Laya.SoundManager.playSound(t, i);
    }, t.playMusic = function(t, i) {
      void 0 === i && (i = 1), e.SOUND_ACTIVE && Laya.SoundManager.playSound(t, i);
    }, t.stopMusic = function() {
      Laya.SoundManager.stopMusic();
    }, t.stopAllSound = function() {
      Laya.SoundManager.stopAllSound();
    }, t.stopAll = function() {
      Laya.SoundManager.stopMusic(), Laya.SoundManager.stopAllSound();
    }, t.resumeSound = function() {
      Laya.SoundManager.musicMuted = !1, Laya.SoundManager.soundMuted = !1, Laya.SoundManager.musicVolume = 1,
        Laya.SoundManager.soundVolume = 1;
    }, t;
  }();
  t.SystemHelper = n;
  var s = function() {
    function t() {}
    return t.EVENT_GAME_ONHIDE = 101, t.EVENT_GAME_ONSHOW = 102, t.EVENT_UPDATE_COIN = 1001,
      t.EVENT_ADD_SLOT = 1002, t.EVENT_REMOVE_SLOT = 1003, t.EVENT_UPDATE_SLOT_PROCESS = 1004,
      t.EVENT_ADD_SLOTCOIN = 1005, t.EVENT_UPDATE_PER_GETCOIN = 1006, t.EVENT_UPDATE_SPEED_TIME = 1007,
      t.EVENT_ADD_NEW_SLOT = 1008, t.EVENT_COMBINE_NEW = 1009, t.EVENT_UPDATE_DIAMON = 1010,
      t.EVENT_GET_SHOP_LIST = 1011, t.EVENT_UPDATE_ITEM_BUY_COUNT = 1012, t.EVENT_UPDATE_ACHIVEMEN_DRAW = 1013,
      t.EVENT_UPDATE_INVITE_DRAW = 1014, t.EVENT_SHOW_BOX = 1015, t.EVENT_HIDE_BOX = 1016,
      t.EVENT_UPDATE_SLOT_OVER = 1017, t.EVENT_UPDATE_LOGIN_REWARD = 1018, t.EVENT_UPDATE_INIVITE_REWARD = 1019,
      t.EVENT_START_GUIDE = 1020, t.EVENT_TRIGGER_GUIDE_NEXT = 1021, t.EVENT_TRIGGER_GUIDE_CLOSE = 1022,
      t.EVENT_VIDEO_AD_OPEN = 1023, t.EVENT_VIDEO_AD_CLOSE = 1024, t.EVENT_VIDEO_AD_LOAD_FAIL = 1025,
      t.EVENT_UPDATE_LUCKY_TICKETS = 1026, t.EVENT_TRIGGER_GUIDE_OVER = 1027, t.EVENT_COLSE_NOCOIN = 1028,
      t.EVENT_START_LOGIN = 1029, t.EVENT_SHOW_LOGIN_BTN = 1030, t;
  }();
  t.GameEvents = s;
  var r = function() {
    function e() {}
    return e.init = function() {
      e.Tips = new t.PopTips(), asgard.ui.UIManager.addTipView(e.Tips);
    }, e;
  }();
  t.CommonUI = r;
}(logic || (logic = {})), Object.defineProperty(Array.prototype, "remove", {
  value: function(t) {
    var e = this.indexOf(t);
    return e >= 0 ? this.splice(e, 1) : null;
  }
}), Object.defineProperty(Array.prototype, "clone", {
  value: function() {
    return clone(this);
  }
}), Object.defineProperty(String.prototype, "ToIntArray", {
  value: function() {
    return StringToIntArray(this);
  }
});

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(t) {
    function e() {
      return null !== t && t.apply(this, arguments) || this;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "DataType", {
      get: function() {
        return 4;
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.initialize = function(t) {
      return this.Id = this.readInt(t), this.Name = this.readString(t), this.IntValue = this.readInt(t),
        this.FloatValue = this.readFloat(t), this.StrValue = this.readString(t), !0;
    }, e.prototype.toString = function() {
      return "Id=" + this.Id + ",Name=" + this.Name + ",IntValue=" + this.IntValue + ",FloatValue=" + this.FloatValue + ",StrValue=" + this.StrValue;
    }, e.DATA_TYPE = 4, e;
  }(asgard.data.BaseStaticData);
  t.Global = e;
}(data || (data = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(t) {
    function e() {
      return null !== t && t.apply(this, arguments) || this;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "DataType", {
      get: function() {
        return 3;
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.initialize = function(t) {
      return this.Id = this.readInt(t), this.Type = this.readInt(t), this.Name = this.readString(t),
        this.Num = this.readFloat(t), this.Value = this.readInt(t), this.SuperValue = this.readInt(t), !0;
    }, e.prototype.toString = function() {
      return "Id=" + this.Id + ",Type=" + this.Type + ",Name=" + this.Name + ",Num=" + this.Num + ",Value=" + this.Value + ",SuperValue=" + this.SuperValue;
    }, e.DATA_TYPE = 3, e;
  }(asgard.data.BaseStaticData);
  t.LuckWhreel = e;
}(data || (data = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(t) {
    function e() {
      return null !== t && t.apply(this, arguments) || this;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "DataType", {
      get: function() {
        return 1;
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.initialize = function(t) {
      return this.Id = this.readInt(t), this.Lv = this.readInt(t), this.Name = this.readString(t),
        this.Icon = this.readString(t), this.Price = this.readFloat(t), this.Produce = this.readFloat(t),
        this.Time = this.readInt(t), this.Offline = this.readFloat(t), this.Dprice = this.readInt(t),
        this.Up = this.readInt(t), this.Reward = this.readInt(t), !0;
    }, e.prototype.toString = function() {
      return "Id=" + this.Id + ",Lv=" + this.Lv + ",Name=" + this.Name + ",Icon=" + this.Icon + ",Price=" + this.Price + ",Produce=" + this.Produce + ",Time=" + this.Time + ",Offline=" + this.Offline + ",Dprice=" + this.Dprice + ",Up=" + this.Up + ",Reward=" + this.Reward;
    }, e.DATA_TYPE = 1, e;
  }(asgard.data.BaseStaticData);
  t.Post = e;
}(data || (data = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(t) {
    function e() {
      return null !== t && t.apply(this, arguments) || this;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "DataType", {
      get: function() {
        return 2;
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.initialize = function(t) {
      return this.Id = this.readInt(t), this.Type = this.readInt(t), this.Group = this.readInt(t),
        this.Title = this.readString(t), this.Img = this.readString(t), this.Weights = this.readInt(t), !0;
    }, e.prototype.toString = function() {
      return "Id=" + this.Id + ",Type=" + this.Type + ",Group=" + this.Group + ",Title=" + this.Title + ",Img=" + this.Img + ",Weights=" + this.Weights;
    }, e.DATA_TYPE = 2, e;
  }(asgard.data.BaseStaticData);
  t.ShareElement = e;
}(data || (data = {}));

var data;

! function(t) {
  var e = function() {
    function e() {}
    return e.prototype.createStaticData = function(e) {
      switch (e) {
        case 1:
          return new t.Post();

        case 2:
          return new t.ShareElement();

        case 3:
          return new t.LuckWhreel();
      }
      return null;
    }, e.findPost = function(t) {
      return asgard.data.StaticDataManager.findData(1, t);
    }, e.findShareElement = function(t) {
      return asgard.data.StaticDataManager.findData(2, t);
    }, e.findLuckWhreel = function(t) {
      return asgard.data.StaticDataManager.findData(3, t);
    }, e;
  }();
  t.StaticDataFactory = e;
}(data || (data = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = Laya.Sprite,
    i = function(i) {
      function n() {
        var s = i.call(this) || this;
        s.guideStep = 0, Laya.stage.on(Laya.Event.RESIZE, s, s.onResize), n.guideSteps[0].tipy = Laya.stage.height - 104,
          n.guideSteps[0].labY = Laya.stage.height - 230, n.guideSteps[2].tipy = Laya.stage.height - 104,
          n.guideSteps[2].labY = Laya.stage.height - 230, n.guideSteps[3].tipy = Laya.stage.height - 104,
          n.guideSteps[3].labY = Laya.stage.height - 230, n.guideSteps[0].y = Laya.stage.height - 170,
          n.guideSteps[2].y = Laya.stage.height - 170, n.guideSteps[3].y = Laya.stage.height - 170,
          s._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER), s.name = "Guide",
          s.guideContainer = new e(), s.guideContainer.cacheAs = "bitmap", s.addChild(s.guideContainer);
        var r = new e();
        r.alpha = .5, r.graphics.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000"),
          s.guideContainer.addChild(r), s.interactionArea = new e(), s.interactionArea.blendMode = "destination-out",
          s.guideContainer.addChild(s.interactionArea), s._hitArea = new Laya.HitArea(), s._hitArea.hit.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000"),
          s.guideContainer.hitArea = s._hitArea, s.guideContainer.mouseEnabled = !0, s.guideContainer.on(Laya.Event.CLICK, s, s._onclick),
          s.tipContainer = new e(), s.addChild(s.tipContainer), s.lableTip = new Laya.Label(),
          s.lableTip.color = "#ffffff", s.lableTip.font = "Microsoft YaHei", s.lableTip.fontSize = 40,
          s.lableTip.bold = !0, s.addChild(s.lableTip), s._fingerAnim = new e();
        var a = Laya.loader.getRes("common/fingger.png");
        return s._fingerAnim.graphics.drawTexture(a, 0, 0, a.width, a.height), s._fingerAnim.pos(120, 460),
          s._fingerAnim.visible = !1, s.addChild(s._fingerAnim), s._timeLine = new Laya.TimeLine(),
          s._timeLine.to(s._fingerAnim, {
            x: s._fingerAnim.x + 100
          }, 1e3, null, 0), s._btntimeLine = new Laya.TimeLine(), asgard.events.EventsDispatcher.registerEventListener(t.GameEvents.EVENT_TRIGGER_GUIDE_NEXT, s, s.startGuide),
          asgard.events.EventsDispatcher.registerEventListener(t.GameEvents.EVENT_TRIGGER_GUIDE_CLOSE, s, s._onHideGuid),
          s;
      }
      return __extends(n, i), n.prototype.onResize = function() {
        n.guideSteps[0].tipy = Laya.stage.height - 104, n.guideSteps[0].labY = Laya.stage.height - 230,
          n.guideSteps[2].tipy = Laya.stage.height - 104, n.guideSteps[2].labY = Laya.stage.height - 230,
          n.guideSteps[3].tipy = Laya.stage.height - 104, n.guideSteps[3].labY = Laya.stage.height - 230,
          n.guideSteps[0].y = Laya.stage.height - 170, n.guideSteps[2].y = Laya.stage.height - 170,
          n.guideSteps[3].y = Laya.stage.height - 170;
      }, n.prototype._onclick = function(t) {
        this.interactionArea.hitTestPoint(t.stageX, t.stageY) || t.stopPropagation();
      }, n.prototype.startGuide = function() {
        if (this.guideStep = this._playerModule.guideStep, this.guideStep == n.guideSteps.length) return asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_SHOW_BOX),
          asgard.ui.UIManager.removeGuideView(), asgard.events.EventsDispatcher.unregisterEventListener(t.GameEvents.EVENT_TRIGGER_GUIDE_NEXT, this, this.startGuide),
          asgard.events.EventsDispatcher.unregisterEventListener(t.GameEvents.EVENT_TRIGGER_GUIDE_CLOSE, this, this._onHideGuid),
          void asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_TRIGGER_GUIDE_OVER);
        this.visible || (this.visible = !0);
        var e = n.guideSteps[this.guideStep++];
        this.nextStep(e);
      }, n.prototype._onHideGuid = function() {
        this.visible = !1;
      }, n.prototype.CheckCanMove = function(t, e) {
        return this.interactionArea.hitTestPoint(t, e);
      }, n.prototype.nextStep = function(e) {
        this.currStep = e, this._hitArea.unHit.clear(), this._hitArea.unHit.drawPoly(e.x, e.y, e.points, "#ffff00"),
          this.interactionArea.graphics.clear(), this.interactionArea.graphics.drawPoly(e.x, e.y, e.points, "#000000"),
          this.tipContainer.graphics.clear(), this.tipContainer.loadImage(e.tip), this.tipContainer.pos(e.tipx, e.tipy),
          this._playerModule.guideStep = this.guideStep, this.lableTip.text = e.text, this.lableTip.pivot(.5 * this.lableTip.displayWidth, .5 * this.lableTip.displayHeight),
          this.lableTip.pos(e.labX, e.labY), 2 == this.guideStep ? (this._fingerAnim.visible = !0,
            this._timeLine.play(0, !0), this._btntimeLine.pause()) : (this._fingerAnim.visible = !1,
            this._timeLine.pause(), this._btntimeLine.reset(), this._btntimeLine.to(this.tipContainer, {
              y: this.tipContainer.y - 40
            }, 1e3, null, 0), this._btntimeLine.play(0, !0)), asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_START_GUIDE);
      }, n.guideSteps = [{
        x: 220,
        y: 995,
        points: [0, 0, 178, 0, 178, 90, 0, 90],
        tip: "common/fingger.png",
        tipx: 285,
        tipy: 1073,
        text: "点击购买你的第一个角色",
        labX: 320,
        labY: 1190
      }, {
        x: 38,
        y: 385,
        points: [0, 0, 320, 0, 320, 150, 0, 150],
        tip: "common/arrow.png",
        tipx: 150,
        tipy: 360,
        text: "拖动合成更高级的角色",
        labX: 250,
        labY: 560
      }, {
        x: 220,
        y: 995,
        points: [0, 0, 178, 0, 178, 90, 0, 90],
        tip: "common/fingger.png",
        tipx: 285,
        tipy: 1073,
        text: "点这里可以继续购买角色",
        labX: 320,
        labY: 1190
      }, {
        x: 220,
        y: 995,
        points: [0, 0, 178, 0, 178, 90, 0, 90],
        tip: "common/fingger.png",
        tipx: 285,
        tipy: 1073,
        text: "角色越多赚钱越多",
        labX: 320,
        labY: 1190
      }], n;
    }(Laya.Sprite);
  t.GuidePanel = i;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(t) {
    function e(e, i) {
      var n = t.call(this, e) || this;
      return n._postData = e, n.currProcessTime = 0, n._startTime = i, n;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "startTime", {
      get: function() {
        return this._startTime;
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.reStart = function(t) {
      this._startTime = t;
    }, Object.defineProperty(e.prototype, "Post", {
      get: function() {
        return this._postData;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "SliderValue", {
      get: function() {
        return this.currProcessTime / this._postData.Time;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "PerSecondCoin", {
      get: function() {
        return this.Post.Offline;
      },
      enumerable: !0,
      configurable: !0
    }), e;
  }(t.ListItemInfo);
  t.SlotInfo = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i() {
      var i = e.call(this) || this;
      return i._moduleId = t.MODULE_LIST, asgard.events.EventsDispatcher.registerEventListener(t.GameEvents.EVENT_GAME_ONHIDE, i, i._reset),
        i._reset(), i.testData(), i;
    }
    return __extends(i, e), i.prototype._reset = function() {
      this._allItems = [], this.currOpenLevel = 1;
      var e = asgard.data.StaticDataManager.getSheetDatas(data.Post.DATA_TYPE);
      e.sort(this._sort);
      for (var i = 0; i < e.length; i++) {
        var n = e[i];
        this._allItems[n.Id] = new t.ListItemInfo(n);
      }
    }, i.prototype.doFly = function() {
      this._reset();
      this._allItems[1].fillNetData(0, 0, !0, !0, !0);
    }, i.prototype.testData = function() {
      if (!Laya.Browser.onMiniGame) {
        this.currOpenLevel = 34;
        var t = this._allItems[1];
        t.fillNetData(0, 0, !0, !0, !0), (t = this._allItems[34]).fillNetData(1, 1, !0, !0, !0);
      }
    }, i.prototype.onInitItemList = function(e, i) {
      if (i && void 0 != i) {
        this.currOpenLevel = e;
        for (var n = 0, s = (asgard.module.ModuleManager.getModule(t.MODULE_PLAYER), 0); s < i.length; s++) {
          var r = i[s],
            a = this._allItems[r.id];
          a && (a.Post.Lv + 4 <= this.currOpenLevel && (r.buyUnlock = 1, r.coinUnlock = 1,
            r.diamonUnlock = 1), a.Post.Lv > n && (n = a.Post.Lv), a.fillNetData(r.coinCount, r.diamonCount, 1 == r.buyUnlock, 1 == r.coinUnlock, 1 == r.diamonUnlock));
        }
        this.currOpenLevel < n && (this.currOpenLevel = n), asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_GET_SHOP_LIST);
      } else console.error("itemArray null");
    }, i.prototype._sort = function(t, e) {
      return t.Id - e.Id;
    }, Object.defineProperty(i.prototype, "ItemList", {
      get: function() {
        return this._allItems;
      },
      enumerable: !0,
      configurable: !0
    }), i.prototype.findItem = function(t) {
      return this._allItems[t];
    }, i.prototype.findItemByLevel = function(t) {
      for (var e = 0, i = this._allItems; e < i.length; e++) {
        var n = i[e];
        if (null != n && n.Post.Lv == t) return n;
      }
      return null;
    }, i.prototype.buyItemSuccess = function(t, e) {
      var i = this.findItem(t);
      return null != i ? i.addBuyCount(e) : console.error("查找item失败 id " + t), i;
    }, i.prototype.getCurrUnlockItem = function() {
      var t;
      this._allItems.forEach(function(e) {
        if (e != null && e.isCoinUnLock) {
          if (t == null) {
            t = e;
          } else {
            if (t.Post.Lv < e.Post.Lv) {
              t = e;
            }
          }
        }
      });
      return t;
    }, i.prototype.getDiamonUnlock = function() {
      var t, e;
      return this._allItems.forEach(function(i) {
        null != i && (i.isDiamonUnLock && (null == t ? t = i : t.Post.Lv < i.Post.Lv && (t = i)),
          null == e ? e = i : e.Post.Id > i.Post.Id && (e = i));
      }), null == t && (t = e), t;
    }, i.prototype.checkNewLevel = function(e) {
      if (this.currOpenLevel >= e.Post.Lv) return !1;
      if (this.currOpenLevel = e.Post.Lv, e.isUnlock = !0, e.Post.Lv - 2 >= 0) {
        null != (i = this.findItemByLevel(e.Post.Lv - 2)) && i.Post.Dprice > 0 && 0 == i.isDiamonUnLock && (i.isDiamonUnLock = !0);
      }
      if (e.Post.Lv - 3 >= 0) {
        null != (i = this.findItemByLevel(e.Post.Lv - 3)) && i.Post.Dprice > 0 && 0 == i.isDiamonUnLock && (i.isDiamonUnLock = !0);
      }
      if (e.Post.Lv - 4 >= 0) {
        var i = this.findItemByLevel(e.Post.Lv - 4);
        null != i && 0 == i.isCoinUnLock && (i.isCoinUnLock = !0);
      }
      asgard.ui.UIManager.openView(t.UIPanelID.LEVELUPTIP), asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_COMBINE_NEW),
        t.GameData.Instance().postGameData();
      asgard.module.ModuleManager.getModule(t.MODULE_PLAYER), asgard.module.ModuleManager.getModule(t.MODULE_SLOT);
      return t.GameData.Instance().postRank(), WxGetFriendRankList(), !0;
    }, i.prototype.getNextItemInfo = function(t) {
      var e = this.findItem(t);
      if (null == e) return null;
      for (var i = 0, n = this._allItems; i < n.length; i++) {
        var s = n[i];
        if (null != s && e.Post.Lv + 1 == s.Post.Lv) return s;
      }
      return null;
    }, i.prototype.getBuyItemInfo = function() {
      var t = [],
        e = this.getCurrUnlockItem();
      e && t.push({
        value: 1,
        item: e
      }), e.Post.Id - 1 > 0 && t.push({
        value: 1,
        item: this.findItem(e.Post.Id - 1)
      }), e.Post.Id - 2 > 0 && t.push({
        value: 1,
        item: this.findItem(e.Post.Id - 2)
      }), e.Post.Id - 3 > 0 && t.push({
        value: 1,
        item: this.findItem(e.Post.Id - 3)
      });
      for (var i = t.length - 1; i >= 0; i--) {
        var n = t[i],
          s = 1 << t.length - i - 1;
        n.value = n.item.Price / s;
      }
      return t.sort(function(t, e) {
        return t.value - e.value;
      }), t[0].item;
    }, i;
  }(asgard.module.BaseModule);
  t.ItemListModule = e;
}(logic || (logic = {}));

! function(t) {
  t.MODULE_PLAYER = 1, t.MODULE_SLOT = 2, t.MODULE_LIST = 3, t.MODULE_SOCIAL = 4;
  var e = function() {
    function e() {}
    return e.prototype.getModule = function(e) {
      switch (e) {
        case t.MODULE_PLAYER:
          return new t.PlayerModule();

        case t.MODULE_SLOT:
          return new t.SlotsModule();

        case t.MODULE_LIST:
          return new t.ItemListModule();

        case t.MODULE_SOCIAL:
          return new t.SocialModule();
      }
      return null;
    }, e;
  }();
  t.ModuleFactory = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

/*
! function(t) {
  var e = function(e) {
    function i() {
      var i = e.call(this) || this;
      return i._isModify = !1, i._moduleId = t.MODULE_PLAYER, i._player = new t.PlayerInfo(),
        i._reset(), asgard.events.EventsDispatcher.registerEventListener(t.GameEvents.EVENT_GAME_ONHIDE, i, i._reset),
        i.testData(), i;
    }
    return __extends(i, e), Object.defineProperty(i.prototype, "dbVersion", {
      get: function() {
        return this._dbVersion;
      },
      enumerable: !0,
      configurable: !0
    }), i.prototype.isGuideOver = function() {
      return this.guideStep >= t.GuidePanel.guideSteps.length;
    }, i.prototype._reset = function() {
      this._player.reset(), this.guideStep = 0, this.ConnectTime = 0, this.isNewPlayer = !1,
        this.SpeedUpEndTime = 0, this._dbVersion = -1, this.Player.turnRound = 0, console.log("playermodule reset");
    }, i.prototype.doFly = function() {
      this._player.reset(!0), this.modifyConfig(), this._dbVersion++, this.Player.turnRound++,
        console.log("playermodule doFly");
    }, i.prototype.testData = function() {
      Laya.Browser.onMiniGame || (this._player.Coin = 1e22, this._player.Diamon = 1e9,
        this._player.nickName = "abasdf", this._player.luckyCount = 5, this.Player.luckyShareCount = 0,
        this.guideStep = 4);
    }, Object.defineProperty(i.prototype, "Player", {
      get: function() {
        return this._player;
      },
      enumerable: !0,
      configurable: !0
    }), i.prototype.onGameInit = function(t) {
      console.log("player dbVersion", t.dbVersion), this.ConnectTime = t.timestamp,
        this.offLineTime = t.offlineTime;
      var e = 0,
        i = 0;
      if (this._dbVersion = t.dbVersion, e = Number(t.coin), i = Number(t.diamon), this._player.Coin = e,
        this._player.Diamon = i,
         this._player.luckyCount = t.luckyCount ? t.luckyCount : 0,
        this._player.luckyShareCount = t.luckyShareCount ? t.luckyShareCount : 0, 
        this._player.luckyUpTime = t.luckyUpTime ? t.luckyShareCount : 0,
        this._player.Speed = t.speed, this.isNewPlayer = t.isNewPlayer, this.SpeedUpEndTime = t.upStartTime,
        this.ConnectTime > t.upStartTime) this._player.addSpeedTime(-1);
      else {
        var n = Math.floor(.001 * (t.upStartTime - this.ConnectTime));
        this._player.addSpeedTime(n);
      }
      this.guideStep = t.guideStep, this._player.loginDays = t.loginDays, this._player.loginRewardDays = t.loginRewardDays,
        this._player.lastLoginTime = t.lastLoginTime, this.Player.shareCoinCount = t.shareCoinNum,
        this.Player.shareDiamonCount = t.shareDiamonNum, this.Player.turnRound = t.isFly,
        this.modifyConfig();
    }, i.prototype.showBox = function() {
      asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_SHOW_BOX);
    }, i.prototype.hideBox = function() {
      asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_HIDE_BOX), Laya.timer.once(9e4, this, this.showBox);
    }, i.prototype.getLoginReward = function(e) {
      this._player.loginRewardDays += 1, this._player.showReward(t.PlayerInfo.REWARD_TYPE_DIAMON, e, t.UIPanelID.LOGINDAY),
        asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_UPDATE_LOGIN_REWARD);
    }, i.prototype.openLuckWheel = function() {
      t.HttpServer.Instance().queryLuckWheel(Laya.Handler.create(this, this._onLuckWheelData));
    }, i.prototype._onLuckWheelData = function(e) {
      var i = new Date(this._player.luckyUpTime),
        n = new Date(Number(e.luckUpTime));
      i.toDateString() != n.toDateString() && (this._player.luckyCount = Number(e.luckCount),
          this._player.luckyShareCount = Number(e.luckShareCount), this._player.luckyUpTime = Number(e.luckUpTime)),
        console.log("_onLuckWheelData", e), asgard.ui.UIManager.openView(t.UIPanelID.LUCKYWHEEL);
    }, i.prototype.addLuckyTickets = function() {
      this.Player.luckyCount += 5, this.Player.luckyShareCount += 1, asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_UPDATE_LUCKY_TICKETS);
    }, i.prototype.modifyConfig = function() {
      if (this.Player.turnRound > 0 && !this._isModify) {
        this._isModify = !0;
        for (var t = asgard.data.StaticDataManager.getSheetDatas(data.Post.DATA_TYPE), e = 0; e < t.length; e++) {
          var i = t[e];
          i && (i.Produce = Math.floor(2 * i.Produce), i.Offline = Math.floor(2 * i.Offline));
        }
      }
    }, i;
  }(asgard.module.BaseModule);
  t.PlayerModule = e;
}(logic || (logic = {}));
*/

//////
(function (logic) {
  var PlayerModule = (function (_super) {
    __extends(PlayerModule, _super);
    function PlayerModule() {
      var _this = _super.call(this) || this;
      _this._isModify = false;
      _this._moduleId = logic.MODULE_PLAYER;
      _this._player = new logic.PlayerInfo();
      _this._reset();
      asgard.events.EventsDispatcher.registerEventListener(logic.GameEvents.EVENT_GAME_ONHIDE, _this, _this._reset);
      _this.testData();
      return _this;
    }
    Object.defineProperty(PlayerModule.prototype, "dbVersion", {
      get: function () {
        return this._dbVersion;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(PlayerModule.prototype, "Player", {
      get: function () {
        return this._player;
      },
      enumerable: true,
      configurable: true
    });
    PlayerModule.prototype.isGuideOver = function () {
      return this.guideStep >= logic.GuidePanel.guideSteps.length;
    };
    PlayerModule.prototype._reset = function () {
      this._player.reset();
      this.guideStep = 0;
      this.ConnectTime = 0;
      this.isNewPlayer = false;
      this.SpeedUpEndTime = 0;
      this._dbVersion = -1;
      this.Player.turnRound = 0;
      console.log("playermodule reset");
    };
    PlayerModule.prototype.doFly = function () {
      this._player.reset(true);
      this.modifyConfig();
      this._dbVersion++;
      this.Player.turnRound++;
      console.log("playermodule doFly");
    };
    PlayerModule.prototype.testData = function () {
      Laya.Browser.onMiniGame || (this._player.Coin = 1e22, this._player.Diamon = 1e9,
        this._player.nickName = "abasdf", this._player.luckyCount = 5, this.Player.luckyShareCount = 0,
        this.guideStep = 4);
    };
    PlayerModule.prototype.onGameInit = function (serverData) {
      console.log("player dbVersion", serverData.dbVersion);
      this.ConnectTime = serverData.timestamp;
      this.offLineTime = serverData.offlineTime;
      this._dbVersion = serverData.dbVersion;
      this._player.Coin = serverData.coin;
      this._player.Diamon = serverData.diamon;
      this._player.luckyCount = serverData.luckyCount ? serverData.luckyCount : 0;
      this._player.luckyShareCount = serverData.luckyShareCount ? serverData.luckyShareCount : 0;
      this._player.luckyUpTime = serverData.luckyUpTime ? serverData.luckyShareCount : 0;
      this._player.Speed = serverData.speed;
      this.isNewPlayer = serverData.isNewPlayer;
      this.SpeedUpEndTime = serverData.upStartTime;
      if (this.ConnectTime > serverData.upStartTime) {
        this._player.addSpeedTime(-1);
      }
      else {
        var n = Math.floor(.001 * (serverData.upStartTime - this.ConnectTime));
        this._player.addSpeedTime(n);
      }
      this.guideStep = serverData.guideStep, this._player.loginDays = serverData.loginDays, this._player.loginRewardDays = serverData.loginRewardDays,
        this._player.lastLoginTime = serverData.lastLoginTime, this.Player.shareCoinCount = serverData.shareCoinNum,
        this.Player.shareDiamonCount = serverData.shareDiamonNum, this.Player.turnRound = serverData.isFly,
        this.modifyConfig();
    };
    PlayerModule.prototype.showBox = function () {
      asgard.events.EventsDispatcher.eventNotify(logic.GameEvents.EVENT_SHOW_BOX);
    };
    PlayerModule.prototype.hideBox = function () {
      asgard.events.EventsDispatcher.eventNotify(logic.GameEvents.EVENT_HIDE_BOX), Laya.timer.once(9e4, this, this.showBox);
    };
    PlayerModule.prototype.getLoginReward = function (e) {
      this._player.loginRewardDays += 1;
      this._player.showReward(logic.PlayerInfo.REWARD_TYPE_DIAMON, e, logic.UIPanelID.LOGINDAY),
        asgard.events.EventsDispatcher.eventNotify(logic.GameEvents.EVENT_UPDATE_LOGIN_REWARD);
    };
    PlayerModule.prototype.openLuckWheel = function () {
      logic.HttpServer.Instance().queryLuckWheel(Laya.Handler.create(this, this._onLuckWheelData));
    };
    PlayerModule.prototype._onLuckWheelData = function (e) {
      var i = new Date(this._player.luckyUpTime);
      var n = new Date(Number(e.luckUpTime));
      if (i.toDateString() != n.toDateString()) {
        this._player.luckyCount = Number(e.luckCount);
        this._player.luckyShareCount = Number(e.luckShareCount), this._player.luckyUpTime = Number(e.luckUpTime);
      }
      console.log("_onLuckWheelData", e);
      asgard.ui.UIManager.openView(logic.UIPanelID.LUCKYWHEEL);
    };
    PlayerModule.prototype.addLuckyTickets = function () {
      this.Player.luckyCount += 5;
      this.Player.luckyShareCount += 1;
      asgard.events.EventsDispatcher.eventNotify(logic.GameEvents.EVENT_UPDATE_LUCKY_TICKETS);
    };
    PlayerModule.prototype.modifyConfig = function () {
      if (this.Player.turnRound > 0 && !this._isModify) {
        this._isModify = true;
        for (var t = asgard.data.StaticDataManager.getSheetDatas(data.Post.DATA_TYPE), e = 0; e < t.length; e++) {
          var i = t[e];
          i && (i.Produce = Math.floor(2 * i.Produce), i.Offline = Math.floor(2 * i.Offline));
        }
      }
    };
    return PlayerModule;
  }(asgard.module.BaseModule));
  logic.PlayerModule = PlayerModule;
})(logic || (logic = {}));
//////

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function() {
    function t() {}
    return t.COIN = 1, t.DIAMON = 2, t;
  }();
  t.AddSlotType = e;
  var i = function(i) {
    function n() {
      var e = i.call(this) || this;
      return e._allSlot = new Array(), e._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER),
        asgard.events.EventsDispatcher.registerEventListener(t.GameEvents.EVENT_GAME_ONHIDE, e, e._reset),
        e._reset(), e;
    }
    return __extends(n, i), Object.defineProperty(n.prototype, "AllSlot", {
      get: function() {
        return this._allSlot;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(n.prototype, "addSlotInfo", {
      get: function() {
        return this._addSlotInfo;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(n.prototype, "removeSlotIndex", {
      get: function() {
        return this._removeSlotIndex;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(n.prototype, "updatePrecossSlotInfo", {
      get: function() {
        return this._updatePrecossSlotInfo;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(n.prototype, "PrecossOverSlotInfo", {
      get: function() {
        return this._precossOverSlotInfo;
      },
      enumerable: !0,
      configurable: !0
    }), n.prototype._reset = function() {
      this._netSlots = null;
      for (var e = 0; e < t.GameConst.MAX_COLUMN * t.GameConst.MAX_ROW; e++) this._allSlot[e] = null;
      this.perSecondCoin = 0, this.offlineCoin = 0, this.isLeftOverMaxTime = !1;
    }, n.prototype.onInitSlotData = function(t) {
      this.init(t);
    }, n.prototype.init = function(t) {
      this._netSlots = t;
    }, n.prototype.fillSlot = function() {
      if (null != this._netSlots) {
        for (var e = this._netSlots, i = t.Utils.getTimestamp(), n = 0; n < e.length; n++) {
          var s = e[n];
          s && (s.startTime = i - Math.floor(1e3 * Math.random() + 500), this.addSlot(s.id, s.pos, s.startTime));
        }
        this._netSlots = null;
      }
    }, n.prototype.resetSlotStartTime = function() {
      var e = this._allSlot;
      if (void 0 != e && null != e) {
        var i = t.Utils.getTimestamp();
        console.log("resetSlotStartTime", i);
        for (var n = e.length, s = 0; s < n; s++) {
          var r = e[s];
          null != r && r.reStart(i - Math.floor(1e3 * Math.random() + 500));
        }
      }
    }, n.prototype.doFly = function() {
      for (var t = this._allSlot, i = t.length, n = 0; n < i; n++) {
        var s = t[n];
        null != s && this.removeSlot(s.position);
      }
      this.tryAdd2EmptySlot(1, e.COIN);
    }, n.prototype.onFrame = function(e, i) {
      var n = this._allSlot,
        s = n.length;
      if (!(s <= 0)) {
        for (var r = t.Utils.getTimestamp(), a = this._playerModule.Player, o = !1, h = 0; h < s; h++) {
          var l = n[h];
          null != l && (l.currProcessTime = (r - l.startTime) * a.Speed, l.SliderValue >= 1 && (this._precossOverSlotInfo = l,
            a.addCoin(l.Post.Produce), 0 == o && (t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK_COIN, 1),
              o = !0), asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_UPDATE_SLOT_OVER),
            this._precossOverSlotInfo = null, l.currProcessTime = Math.floor(l.currProcessTime - l.Post.Time),
            l.reStart(r - Math.floor(l.currProcessTime / a.Speed))));
        }
        this._updatePrecossSlotInfo = null;
      }
    }, n.prototype.tryAdd2EmptySlot = function(i, n) {
      var s = this._getEmptyPos();
      if (s < 0) return asgard.ui.UIManager.openView(t.UIPanelID.MSGBOX, new t.MsgShowData("官位满了，请合成或者\n拖到右下角回收", "提示", Laya.Handler.create(null, function() {}))),
        1;
      var r = asgard.module.ModuleManager.getModule(t.MODULE_LIST),
        a = r.findItem(i);
      if (null == a) return console.error("没有此物品id = " + i), t.CommonUI.Tips.show("没有此物品id = " + i),
        2;
      var o = t.Utils.getTimestamp(),
        h = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
      if (n == e.COIN) {
        if (!(h.Player.Coin >= a.Price)) return asgard.ui.UIManager.openView(t.UIPanelID.NoCoinTip, new t.NoCoinTipInfo(1)),
          3;
        if (l = this.addSlot(i, s, o)) {
          h.Player.subCoin(a.Price);
          r.buyItemSuccess(a.Post.Id, n);
          this._addSlotInfo = null;
        }
      } else if (n == e.DIAMON) {
        if (!(h.Player.Diamon >= a.DiamonPrice)) return asgard.ui.UIManager.openView(t.UIPanelID.NoCoinTip, new t.NoCoinTipInfo(2)),
          4;
        var l = this.addSlot(i, s, o);
        if (l) {
          h.Player.subDiamon(a.DiamonPrice);
          r.buyItemSuccess(a.Post.Id, n);
          this._addSlotInfo = null;
        }
      }
      return this._addSlotInfo = null, 0;
    }, n.prototype._getEmptyPos = function() {
      for (var t = 0; t < this._allSlot.length; t++) {
        if (null == this._allSlot[t]) return t;
      }
      return -1;
    }, n.prototype.addSlot = function(e, i, n, s) {
      var r = asgard.module.ModuleManager.getModule(t.MODULE_LIST).findItem(e);
      if (null == r) return t.CommonUI.Tips.show("没有此物品id = " + e), null;
      var a = new t.SlotInfo(r.Post, n);
      return a.position = i, a.isCoinUnLock = r.isCoinUnLock, 0 == this._add(a, s) ? null : a;
    }, n.prototype._add = function(e, i) {
      return i || null == this._allSlot[e.position] ? (this._allSlot[e.position] = e,
        this._addSlotInfo = e, asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_ADD_SLOT),
        this._calculatePerCoin(), !0) : (console.error("该位置已被占用 " + e.position), t.CommonUI.Tips.show("该位置已被占用 " + e.position), !1);
    }, n.prototype.removeSlot = function(e) {
      return null == this._allSlot[e] ? (console.error("该位置为空 :" + e), t.CommonUI.Tips.show("该位置为空 :" + e), !1) : (this._allSlot[e] = null, this._removeSlotIndex = e, asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_REMOVE_SLOT),
        this._removeSlotIndex = -1, this._calculatePerCoin(), !0);
    }, n.prototype._calculatePerCoin = function() {
      this.perSecondCoin = 0;
      for (var e = 0, i = this._allSlot.length; e < i; e++) {
        var n = this._allSlot[e];
        null != n && (this.perSecondCoin += n.PerSecondCoin);
      }
      asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_UPDATE_PER_GETCOIN);
    }, n.prototype.getSlotByPos = function(t) {
      return this._allSlot[t];
    }, n.prototype.changeSlotPos = function(e, i, n) {
      if (i != n && null != e) {
        if (null != this._allSlot[n]) return console.error("to不为空 :" + n), this._addSlotInfo = e,
          asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_ADD_SLOT), this._addSlotInfo = null, !1;
        if (0 == this.removeSlot(i)) return console.error("changeSlotPos error "), !1;
        e.position = n;
        var s = e.position;
        return 0 != this._add(e) || (e.position = s, this._add(e), !1);
      }
    }, n.prototype.swapSlot = function(t, e, i, n) {
      return this.removeSlot(e) ? this.removeSlot(n) ? (t.position = e, i.position = n,
        0 != this._add(t) && 0 != this._add(i) || (t.position = n, i.position = e, console.error("swapSlot add error ", n, e),
          console.error("swapSlot AllSlot ", this.AllSlot), !1)) : (console.error("swapSlot error " + n),
        console.error("swapSlot AllSlot ", this.AllSlot), !1) : (console.error("swapSlot removeSlot error " + e),
        console.error("swapSlot AllSlot ", this.AllSlot), !1);
    }, n.prototype.canCombine = function(e) {
      return null != asgard.module.ModuleManager.getModule(t.MODULE_LIST).getNextItemInfo(e) || (console.error("已经没有下一个等级 " + e), !1);
    }, n.prototype.combine = function(e, i, n) {
      var s = asgard.module.ModuleManager.getModule(t.MODULE_LIST).getNextItemInfo(e);
      if (null != s) {
        if (0 == this.removeSlot(i)) return console.log("合成移除 失败" + i), void console.error("combine AllSlot ", this.AllSlot);
        if (0 == this.removeSlot(n)) return console.log("合成移除 失败" + n), void console.error("combine AllSlot ", this.AllSlot);
        this.addSlot(s.Post.Id, n, t.Utils.getTimestamp());
        this._checkNewLevel(s);
      } else console.error("已经没有下一个等级 " + e);
    }, n.prototype._checkNewLevel = function(e) {
      return asgard.module.ModuleManager.getModule(t.MODULE_LIST).checkNewLevel(e);
    }, n.prototype.recoverySlot = function(e) {
      if (0 != this.removeSlot(e.position)) {
        asgard.module.ModuleManager.getModule(t.MODULE_PLAYER).Player.recoverySlot(e);
      } else console.log("recoverySlot failed " + e.position);
    }, n.prototype.getCurrSlotRecoveryCoin = function() {
      for (var t = 0, e = 0, i = this._allSlot.length; e < i; e++) {
        var n = this._allSlot[e];
        null != n && (t += n.RecoveryPrice);
      }
      return t;
    }, n;
  }(asgard.module.BaseModule);
  t.SlotsModule = i;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function() {
    return function(t, e) {
      this.openGId = t, this.time = e;
    };
  }();
  t.ShareTime = e;
  var i = function(i) {
    function n() {
      var e = i.call(this) || this;
      return e.inviteFriend = new t.IniviteFriendInfo(), e.friendHelp = new t.FriendHelpInfo(),
        e.shareGroupMap = new Array(), e;
    }
    return __extends(n, i), n.prototype.onInitData = function(t, i, n) {
      if (this.inviteLoginDraw = i, this.shareGroupMap = [], n)
        for (var s = 0; s < n.length; s++) {
          var r = n[s];
          this.shareGroupMap.push(new e(r.openGId, r.time));
        }
    }, n.prototype.doFly = function() {
      this.inviteLoginDraw = 0, this.shareGroupMap = [];
    }, n;
  }(asgard.module.BaseModule);
  t.SocialModule = i;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i() {
      var t = null !== e && e.apply(this, arguments) || this;
      return t._shareTime = 0, t._isShare = !1, t._firstShare = !1, t.ShowBannerTimes = 0,
        t.bannerRefreshTime = 3, t;
    }
    return __extends(i, e), i.prototype.InitSDK = function() {
        i.instanse = this, this.loginChannel = "", this.loginMp = "", console.log("----InitSDK--------");
        var e = this;
        wx.getSystemInfo({
          success: function(t) {
            e.SystemInfo = t;
          }
        }), wx.showShareMenu({
          withShareTicket: !0,
          success: function() {},
          fail: function() {},
          complete: function() {}
        }), wx.updateShareMenu({
          withShareTicket: !0,
          success: function() {},
          fail: function() {
            console.error("更新转发属性失败");
          },
          complete: function() {}
        }), wx.onShareAppMessage(function() {
          var e = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER),
            i = t.ShareInfo.Instance().getRandomShare(Number(t.ShareType.TOP_RIGHT));
          return {
            title: i.Title.replace("{0}", e.Player.nickName),
            imageUrl: t.ShareInfo.Instance().ShareUrl + "/" + i.Img,
            query: "shareuser=" + localStorage.getItem("sessionid") + "&prop=" + i.Type + "&shareid=" + i.Id
          };
        }), wx.onShow(function(n) {
          if (console.log("....onShow.......", n), i.onShowQuery = null, n.query.shareuser && (i.onShowQuery = n.query),
            n.query.channel && (t.PlatForm.GetInstance().loginChannel = n.query.channel), n.query.mp && (t.PlatForm.GetInstance().loginMp = n.query.mp),
            n.query.shareid && t.HttpServer.Instance().shareCountLog(n.query.shareid), t.GameData.Instance().resetSlotStartTime(),
            e._isShare)
            if (e._isShare = !1, t.Utils.getTimestamp() - e._shareTime > 3e3) {
              var s = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
              i.funCaller && i.successCallback && (s.isNewPlayer && e._firstShare ? (t.CommonUI.Tips.show("分享失败,请分享到群"),
                e._firstShare = !1) : (i.successCallback.apply(i.funCaller, [{
                shareTickets: ["test"]
              }]), i.shareConfig && 1 == i.shareConfig.Group && e._showShareTip()));
            } else i.funCaller && i.failCallback && t.CommonUI.Tips.show("分享失败,请分享到群");
        }), wx.onHide(function() {
          t.GameData.Instance().postRank(), t.GameData.Instance().postGameData(), t.GameData.Instance().saveLocalGameData();
        });
      }, i.prototype._showShareTip = function() {
        var e = Math.random(),
          i = Math.round(3 * e);
        t.CommonUI.Tips.show(["分享到群才能获得奖励哟", "分享到不同群才能获得奖励哟", "下次分享到群才能获得奖励哟", "下次要分享到不同群才能获得奖励哟"][i]);
      }, i.prototype.getSessionid = function() {
        return localStorage.getItem("sessionid");
      }, i.prototype.getOpenId = function() {
        return localStorage.getItem("openId");
      }, i.prototype.isMp = function() {
        return "mp" == this.loginMp;
      },

      i.prototype.WxCreateUserInfoButton = function(t) {
        var e = this.SystemInfo.screenWidth,
          i = this.SystemInfo.screenHeight,
          n = wx.createUserInfoButton({
            type: "image",
            image: "bg/commonBtn.png",
            style: {
              left: (e - 200) / 2,
              top: .7 * i,
              width: 200,
              height: 85,
              lineHeight: 40,
              backgroundColor: "#1AAC19",
              color: "#ffffff",
              textAlign: "center",
              fontSize: 16,
              borderRadius: 5
            }
          });
        n.onTap(function(e) {
          "getUserInfo:ok" == e.errMsg && (n.offTap(this), n.destroy(), console.log("button.onTap ", e),
            t && t.method && t.method.apply(t.caller, [e]));
        });
      },

      //add by qjb [GetUserInfo]
      i.prototype.GetUserInfo = function(t) {

        if ("function" == typeof wx.getUserInfo) {
          wx.getUserInfo({
            withCredentials: !1,
            success: function(e) {
              t && t.method && t.method.apply(t.caller, [e]);
            },
            fail: function(e) {
              console.error("getUserInfo fail ", e), "function" == typeof wx.createUserInfoButton && i.instanse.WxCreateUserInfoButton(t);
            },
            complete: function() {}
          });
        } else {
          i.instanse.WxCreateUserInfoButton(t);
        }
      },

      i.prototype.CheckUpdate = function(t) {
        if ("function" == typeof wx.getUpdateManager) {
          var e = wx.getUpdateManager();
          e.onCheckForUpdate(function(e) {
            e.hasUpdate || t && t.method && t.method.apply(t.caller, [!0]);
          }), e.onUpdateReady(function() {
            wx.showModal({
              title: "更新提示",
              content: "新版本已经准备好，是否重启应用？",
              showCancel: !1,
              success: function(t) {
                t.confirm && e.applyUpdate();
              }
            });
          }), e.onUpdateFailed(function() {
            t && t.method && t.method.apply(t.caller, [!1]);
          });
        } else t && t.method && t.method.apply(t.caller, [!0]);
      }, i.prototype.CheckLogined = function(t, e) {
        wx.checkSession({
          success: function() {
            localStorage.getItem("sessionid") ? e && e.method && e.method.apply(e.caller, [!0]) : e && e.method && e.method.apply(e.caller, [!1]);
          },
          fail: function() {
            e && e.method && e.method.apply(e.caller, [!1]);
          }
        });
      }, i.prototype.Login = function(e, i, n) {
        wx.login({
          success: function(e) {
            var s = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER).Player,
              r = {};
            r.js_code = e.code, r.avatar_url = s.avatarUrl, r.city = s.city, r.province = s.province,
              r.country = s.country, r.nickName = s.nickName, r.shareuser = "", r.prop = "0",
              r.scene = "0", r.appid = "0", r.channel = "", r.shareid = "";
            var a = wx.getLaunchOptionsSync();
            if (a) {
              if (a.query) {
                var o = a.query;
                o.channel && (r.channel = o.channel, t.PlatForm.GetInstance().loginChannel = o.channel),
                  o.shareuser && (r.shareuser = o.shareuser, r.prop = o.prop, r.shareid = o.shareid);
              }
              a.scene && (r.scene = a.scene + ""), a.referrerInfo && a.referrerInfo.appId && (r.appid = a.referrerInfo.appId);
            }
            console.log("wx.login_success ", r), t.HttpServer.Instance().login(r, i, n);
          }
        });
      }, i.prototype.preloadBannerAd = function(e) {
        var i = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER),
          n = asgard.module.ModuleManager.getModule(t.MODULE_LIST);
        if (i.Player.turnRound > 0 || n.currOpenLevel >= t.GameConst.AD_UNLOCK_LEVEL) {
          if (this._bannerAD) return void this._bannerAD.hide();
          if ("function" != typeof wx.createBannerAd) return;
          this._bannerAD = wx.createBannerAd({
            adUnitId: e,
            style: {
              left: 0,
              top: 0,
              width: 300
            }
          }), this._bannerAD.onError(function(t) {
            console.log("banner err ", t);
          }), this._bannerAD.onResize(this._onADResize.bind(this)), this._bannerAD.hide();
        }
      }, i.prototype._onADResize = function() {
        if (this._bannerAD) {
          var t = this.SystemInfo.screenWidth / 2,
            e = this.SystemInfo.screenHeight;
          this._bannerAD.style.left = t - this._bannerAD.style.realWidth / 2 + .1, this._bannerAD.style.top = e - this._bannerAD.style.realHeight - 10;
        }
      }, i.prototype.ShowAd = function(e, i) {
        var n = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER),
          s = asgard.module.ModuleManager.getModule(t.MODULE_LIST);
        if (!(n.Player.turnRound <= 0 && s.currOpenLevel < t.GameConst.AD_UNLOCK_LEVEL)) {
          if (this._bannerAD) return this._bannerAD.show().catch(function(t) {
            i && i.method && i.method.apply(i.caller, ["error"]);
          }), this._bannerAD;
          if ("function" != typeof wx.createBannerAd) return null;
          this.SystemInfo.screenWidth, this.SystemInfo.screenHeight;
          var r = wx.createBannerAd({
            adUnitId: e,
            style: {
              left: 0,
              top: 0,
              width: this.SystemInfo.screenWidth - 10
            }
          });
          this._bannerAD && this._bannerAD.offResize(this._onADResize.bind(this)), this._bannerAD = r;
          return r.onResize(this._onADResize.bind(this)), r.onError(function(t) {
            console.log("banner  ", t), i && i.method && i.method.apply(i.caller, ["error"]);
          }), r.show(), r;
        }
      }, i.prototype.closeBannerAd = function() {
        var e = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER),
          i = asgard.module.ModuleManager.getModule(t.MODULE_LIST);
        e.Player.turnRound <= 0 && i.currOpenLevel < t.GameConst.AD_UNLOCK_LEVEL || (this.ShowBannerTimes++,
          console.error("closeBannerAd " + this.ShowBannerTimes), this.ShowBannerTimes > this.bannerRefreshTime ? (this.ShowBannerTimes = 0,
            this._bannerAD && (this._bannerAD.destroy(), this._bannerAD = null), this.preloadBannerAd(t.GameConst.BANNERAD_UNITID)) : this._bannerAD && this._bannerAD.hide());
      }, i.prototype.CreateGameClubButton = function(t) {
        return "function" == typeof wx.createGameClubButton ? wx.createGameClubButton(t) : null;
      }, i.prototype.PreLoadRewardedVideoAd = function(t) {
        if (console.log("PreLoadRewardedVideoAd adUnitId ", t), "function" == typeof wx.createRewardedVideoAd) {
          var e = this;
          this.rewardedVideoAd || (this.rewardedVideoAd = wx.createRewardedVideoAd({
            adUnitId: t
          }), this.rewardedVideoAd.onClose(function(t) {
            t && t.isEnded || void 0 === t ? e._onVideoClose("ok") : e._onVideoClose("fail");
          }), this.rewardedVideoAd.onLoad(this._onVideoAdLoad.bind(this)), this.rewardedVideoAd.onError(function(t) {
            console.log("激励视频 广告加载失败", t), e._onVideoAdLoadFail();
          }), this.rewardedVideoAd.load());
        } else this._onVideoAdLoadFail();
      }, i.prototype.CreateRewardedVideoAd = function(e, i) {
        var n = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER),
          s = Laya.timer.currTimer - n.viewADtime;
        if (s < t.GameConst.VIDEO_AD_CD) return s = Math.floor((t.GameConst.VIDEO_AD_CD - s) / 1e3),
          void t.CommonUI.Tips.show("不能频繁看视频，请" + s + "秒后重试");
        if (0 != t.GameData.Instance().isVideoAdCanPlay) {
          this.onVideoADEndCallback = i, this.adMask = new Laya.Sprite(), this.adMask.hitArea = new Laya.HitArea(),
            this.adMask.hitArea.hit.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000"),
            this.adMask.mouseEnabled = !0, Laya.stage.addChild(this.adMask), asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_VIDEO_AD_OPEN);
          var r = this;
          this.rewardedVideoAd ? this.rewardedVideoAd.show().catch(function(t) {
            console.log("激励视频 广告播放失败", t), r._onVideoAdLoadFail();
          }) : (this.PreLoadRewardedVideoAd(e), this.rewardedVideoAd.show().catch(function(t) {
            console.log("激励视频 广告播放失败", t), r._onVideoAdLoadFail();
          }));
        } else t.CommonUI.Tips.show("今日看视频次数达到上限!");
      }, i.prototype._onVideoAdLoadFail = function() {
        this.adMask && Laya.stage.removeChild(this.adMask), t.GameData.Instance().isVideoAdCanPlay = !1,
          asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_VIDEO_AD_LOAD_FAIL);
      }, i.prototype._onVideoAdLoad = function() {}, i.prototype._onVideoClose = function(e) {
        if (this.adMask && Laya.stage.removeChild(this.adMask), "ok" == e) {
          asgard.module.ModuleManager.getModule(t.MODULE_PLAYER).viewADtime = Laya.timer.currTimer,
            t.GameData.Instance().playVideoTimes += 1;
        }
        this.onVideoADEndCallback && this.onVideoADEndCallback.method && this.onVideoADEndCallback.method.apply(this.onVideoADEndCallback.caller, [e]);
      }, i.prototype.SendWXBizDataCrypt = function(t, e) {
        var i = {
          encryptedData: t,
          iv: e
        };
        i.openId = this.getOpenId(), HttpPost("/Emperor/wx/sendWXBizDataCrypt", i, Laya.Handler.create(this, this.OnWXBizDataCrypt), Laya.Handler.create(null, function(t) {}));
      }, i.prototype.decryptData = function(t, e, i) {
        return "function" == typeof wx.decryptData ? wx.decryptData(t, e, i) : {
          errMsg: "fail"
        };
      }, i.prototype.ShowShareMenu = function(e, n, s, r, a) {
        i.funCaller = n, i.successCallback = s, i.failCallback = r, i.completeCallback = a,
          this._shareTime = t.Utils.getTimestamp();
        var o = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER),
          h = t.ShareInfo.Instance().getRandomShare(Number(e));
        if (h) {
          this._isShare = !0;
          var l = t.ShareInfo.Instance().ShareUrl + "/" + h.Img;
          console.log("imageUrl " + l), wx.shareAppMessage({
            title: h.Title.replace("{0}", o.Player.nickName),
            imageUrl: l,
            query: "shareuser=" + this.getOpenId() + "&prop=" + e + "&shareid=" + h.Id
          });
        }
        return i.shareConfig = h, h;
      }, i.OnSuccess = function(e) {
        if (console.error("分享成功的回调"), console.error(e), e && e.shareTickets) {
          if (i.shareConfig && 1 == i.shareConfig.Group) t.PlatForm.GetInstance().shareRes = e,
            wx.getShareInfo({
              shareTicket: e.shareTickets[0],
              success: function(e) {
                console.log("getShareInfo ", e);
                var i = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER),
                  n = t.PlatForm.GetInstance().decryptData(e.encryptedData, e.iv, i.Player.session_key);
                console.error("decryptData:"), console.error(n), n && "ok" == n.errMsg ? t.PlatForm.GetInstance().OnWXBizDataCrypt(n) : t.PlatForm.GetInstance().SendWXBizDataCrypt(e.encryptedData, e.iv);
              },
              fail: function(t) {
                console.log("getShareInfo fail ", t);
              },
              complete: function(t) {
                console.log("getShareInfo complete ", t);
              }
            });
          else if (i.successCallback) {
            (i.funCaller ? i.successCallback.bind(i.funCaller) : i.successCallback)(e);
          }
        } else if (i.successCallback) {
          (i.funCaller ? i.successCallback.bind(i.funCaller) : i.successCallback)(e);
        }
      }, i.OnFail = function(e) {
        console.error("分享失败的回调");
        try {
          if (i.failCallback) {
            (i.funCaller ? i.failCallback.bind(i.funCaller) : i.failCallback)(e);
          }
        } catch (e) {
          t.HttpServer.Instance().errorLog({
            shareFail: JSON.stringify(e)
          });
        }
      }, i.OnComplete = function(t) {
        if (t && t.shareTickets) {
          if ((null == i.shareConfig || 0 == i.shareConfig.Group) && i.completeCallback) {
            (i.funCaller ? i.completeCallback.bind(i.funCaller) : i.completeCallback)(t);
          }
        } else if (i.completeCallback) {
          (i.funCaller ? i.completeCallback.bind(i.funCaller) : i.completeCallback)(t);
        }
      }, i.prototype.OnWXBizDataCrypt = function(e) {
        if (e.error && "401" == e.error) return console.error("需要重新登陆"), localStorage.removeItem("sessionid"),
          void t.PlatForm.GetInstance().Login(null, null, null);
        var n = e.data;
        void 0 == n && (n = e), console.log("onWXBizDataCrypt ", n);
        for (var s = t.Utils.getTimestamp(), r = asgard.module.ModuleManager.getModule(t.MODULE_SOCIAL), a = !1, o = 0; o < r.shareGroupMap.length; o++) {
          var h = r.shareGroupMap[o];
          if (h && h.openGId == n.openGId) {
            if (a = !0, s - h.time > t.GameConst.SHARE_GROUP_TIME_CD) {
              if (i.successCallback) {
                (i.funCaller ? i.successCallback.bind(i.funCaller) : i.successCallback)(t.PlatForm.GetInstance().shareRes);
              }
              h.time = s;
            } else this.ShowMsgBox("提示", t.GameConst.SHARE_FAILED_TIPS, !0, Laya.Handler.create(this, this.onReshare));
            break;
          }
        }
        if (!a && (r.shareGroupMap.push(new t.ShareTime(n.openGId, s)), i.successCallback)) {
          (i.funCaller ? i.successCallback.bind(i.funCaller) : i.successCallback)(t.PlatForm.GetInstance().shareRes);
        }
        t.GameData.Instance().saveLocalGameData();
      }, i.prototype.onReshare = function(t) {
        t && t.confirm && (console.log(i.shareConfig.Type, i.funCaller, i.successCallback),
          i.shareConfig && this.ShowShareMenu(i.shareConfig.Type, i.funCaller, i.successCallback, i.failCallback, i.completeCallback));
      }, i.prototype.ShowMsgBox = function(t, e, i, n) {
        wx.showModal({
          title: t,
          content: e,
          showCancel: i,
          cancelText: "取消",
          cancelColor: "#000000",
          confirmText: "确定",
          confirmColor: "#1AAC19",
          success: function(t) {
            n.method.apply(n.caller, [t]);
          },
          fail: function() {
            n.method.apply(n.caller, [null]);
          },
          complete: function() {}
        });
      }, i.prototype.writeData2File = function(t, e) {
        if ("" != e && IsMiniGame()) {
          var i = Laya.Browser.window.wx.getFileSystemManager(),
            n = Laya.Browser.window.wx.env.USER_DATA_PATH + "/" + t;
          try {
            i.writeFileSync(n, e, "utf8");
          } catch (t) {
            console.error("writeData2File error ", n, t);
          }
        }
      }, i.prototype.readDataFromFile = function(t) {
        if (IsMiniGame()) {
          var e = Laya.Browser.window.wx.getFileSystemManager(),
            i = Laya.Browser.window.wx.env.USER_DATA_PATH + "/" + t;
          try {
            return e.readFileSync(i, "utf8");
          } catch (t) {
            return null;
          }
        }
        return null;
      }, i.prototype.removeFile = function(t) {
        if (IsMiniGame()) {
          var e = Laya.Browser.window.wx.getFileSystemManager(),
            i = Laya.Browser.window.wx.env.USER_DATA_PATH + "/" + t;
          try {
            e.removeSavedFile({
              filePath: i,
              success: function() {
                console.log("删除本地文件成功");
              },
              fail: function(t) {
                console.log("删除本地文件失败", t);
              }
            });
          } catch (t) {
            console.error(t);
          }
        }
      }, i;
  }(t.PlatForm);
  t.WeChat = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i() {
      var i = e.call(this) || this;
      return i._init = !1, i._stageId = t.STAGE_ARENA, i;
    }
    return __extends(i, e), i.prototype._onLoadRes = function() {
      asgard.ui.UIManager.closeView(t.UIPanelID.LOADING), asgard.ui.UIManager.openView(t.UIPanelID.ARENAMAIN);
      var e = asgard.module.ModuleManager.getModule(t.MODULE_SLOT),
        i = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
      console.error("slotModule._offlineCoin", e.offlineCoin), e.offlineCoin > 0 ? i.isGuideOver() ? (asgard.ui.UIManager.openView(t.UIPanelID.OFFLINETIP),
          i.hideBox()) : (i.Player.addCoin(e.offlineCoin), t.UIFactory.addGuidView(), asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_TRIGGER_GUIDE_NEXT)) : 0 == i.isGuideOver() ? (t.UIFactory.addGuidView(),
          asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_TRIGGER_GUIDE_NEXT)) : i.hideBox(),
        this._lastPostDataTime = Laya.timer.currTimer, this._lastSaveLocalTime = Laya.timer.currTimer,
        this._init = !0;
    }, i.prototype.onEnter = function() {
      this._slotModule = asgard.module.ModuleManager.getModule(t.MODULE_SLOT), WxInitCanvas(),
        WxGetFriendRankList(), t.PlatForm.GetInstance().PreLoadRewardedVideoAd(t.GameConst.VIDEO_AD_REWARD);
      var e = t.CommonRes.getMainPreLoadList();
      e ? Laya.loader.load(e, Laya.Handler.create(this, this._onLoadRes)) : this._onLoadRes(),
        t.ShareInfo.Instance().ForceUpdate && t.PlatForm.GetInstance().CheckUpdate(Laya.Handler.create(null, function(t) {
          console.log("CheckUpdate ", t);
        }));
    }, i.prototype.onExit = function() {
      asgard.ui.UIManager.closeView(t.UIPanelID.ARENAMAIN);
    }, i.prototype.onFrame = function(e, i) {
      this._init && (t.GameData.Instance().gameDataReady || 0 == IsMiniGame()) && (e - this._lastPostDataTime >= t.GameConst.POST_DATA_TIME_GAP && (t.GameData.Instance().postGameData(),
        this._lastPostDataTime = e), e - this._lastSaveLocalTime >= t.GameConst.LOCAL_DATA_TIME_GAP && (t.GameData.Instance().saveLocalGameData(),
        this._lastSaveLocalTime = e), this._slotModule.onFrame(e, i));
    }, i;
  }(asgard.stage.BaseStage);
  t.ArenaStage = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i() {
      var i = e.call(this) || this;
      return i._stageId = t.STAGE_LOADING, i._requestTime = 0, i;
    }
    return __extends(i, e), i.prototype.onEnter = function() {
        this._isLoadCommonRes = !1, this._isGetShareData = !1, t.SystemHelper.initSoundSystem(),
          asgard.ui.UIManager.openView(t.UIPanelID.LOADING), this._requestTime = 0, this._doLoadCommonRes(),
          asgard.events.EventsDispatcher.registerEventListener(t.GameEvents.EVENT_START_LOGIN, this, this._onLogin);
      }, i.prototype.onFrame = function(t, e) {}, i.prototype._doLoadCommonRes = function() {
        var e = t.CommonRes.getPreLoadList();
        e ? Laya.loader.load(e, Laya.Handler.create(this, this._onLoadRes), Laya.Handler.create(this, this._onProcess, null, !1)) : this._onLoadRes();
      }, i.prototype._onProcess = function(e) {
        t.LoadingPanel.setTip("正在加载资源" + Math.round(100 * e) + "%");
      },

      //add by qjb 资源加载 游戏表格 分享表格
      i.prototype._onLoadRes = function() {
        this._isLoadCommonRes = !0, t.CommonUI.init();
        var e = Laya.loader.getRes(t.CommonRes.STATIC_DATA);
        var i = new Laya.Byte();
        i.endian = Laya.Byte.LITTLE_ENDIAN;
        i.writeArrayBuffer(e);
        i.pos = 0;
        asgard.data.StaticDataManager.loadStaticData(i, new data.StaticDataFactory());
        WxPostRankConfig();
        t.ShareInfo.Instance().initShareGroup();
        this._doLoadConfig(t.CommonRes.SHARE_DATA_URL);
      },

      i.prototype._doLoadConfig = function(t) {
        this._http = new asgard.net.SimpleHttp(), console.log("_doLoadConfig " + t), this._http.getRequest(t, this, this._onGetShareFile, "text", 1e4);
      }, i.prototype._onGetShareFile = function(e) {
        if (0 != this._http.Status || "" == this._http.ResponseText) return console.error("_onGetShareFile " + this._http.Status),
          t.HttpServer.Instance().loginErrorLog("getConfigError " + this._http.Status + " time " + this._requestTime),
          this._requestTime++, void(this._requestTime >= 2 ? (this._requestTime = 0, this._onPlayerDataLoaded(!0)) : this._doLoadConfig(t.CommonRes.SHARE_DATA_URL2));
        try {
          t.ShareInfo.Instance().initNetConfig(JSON.parse(this._http.ResponseText));
        } catch (t) {
          console.error("_onGetShareFile ", t);
        }
        this._onPlayerDataLoaded(!0);
      }, i.prototype.onExit = function() {
        asgard.events.EventsDispatcher.unregisterEventListener(t.GameEvents.EVENT_START_LOGIN, this, this._onLogin);
      }, i.prototype._onClick = function() {
        navigateToMiniProgram("wx954573275883779c", "");
      }, i.prototype._onPlayerDataLoaded = function(e) {
        var i = new ui.panel.BannerUI();
        if (asgard.ui.UIManager.addTipView(i), i.y = Laya.stage.height, i.x = Laya.stage.width / 2,
          asgard.ui.UIManager.banner = i, i.mouseEnabled = !1, i.on(Laya.Event.CLICK, this, this._onClick),
          Laya.stage.addChild(asgard.ui.UIManager.banner), asgard.ui.UIManager.banner.visible = !1,
          t.GameData.Instance().init(), Laya.Browser.onMiniGame) {
          t.LoadingPanel.me.showFloatGame();
          var n = t.PlatForm.GetInstance().isMp();
          console.log("isMp " + n), n && t.ShareInfo.Instance().jumpBox ? t.LoadingPanel.me.showLoginbtn() : t.PlatForm.GetInstance().GetUserInfo(Laya.Handler.create(this, this.onGetUserInfo));
        } else asgard.stage.StageManager.enterStage(t.STAGE_ARENA);
      },

      i.prototype._onLogin = function() {
        t.PlatForm.GetInstance().GetUserInfo(Laya.Handler.create(this, this.onGetUserInfo));
      },

      i.prototype.onGetUserInfo = function(e) {
        if (e && e.userInfo) {
          var i = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
          i.Player.avatarUrl = e.userInfo.avatarUrl ? e.userInfo.avatarUrl : "", i.Player.city = e.userInfo.city,
            i.Player.province = e.userInfo.province, i.Player.country = e.userInfo.country,
            i.Player.nickName = e.userInfo.nickName;
        }

        console.log("onGetUserInfo ", e),

          this.doLogin();
      },

      i.prototype.OnCheckLogin = function(t) {},

      i.prototype.doLogin = function() {
        console.log("------Login-------");
        localStorage.getItem("sessionid") && t.GameData.Instance().startGameFromLocal();
        t.PlatForm.GetInstance().Login(!0, Laya.Handler.create(this, this.OnLoginSuccess), Laya.Handler.create(this, this.OnLoginFailed));
      },

      //add by qjb 
      i.prototype.OnLoginSuccess = function(userinfo) {
        t.HttpServer.Instance().saveInvitePlayer();
        if (userinfo.result) {
          t.GameData.Instance().CheckData(userinfo.result);
          var launchOptions = wx.getLaunchOptionsSync(); // 小程序启动时的参数
          console.log("launchOption ", launchOptions);
          if (launchOptions && launchOptions.query) {
            var channel = launchOptions.query.channel;
            if (channel) {
              asgard.module.ModuleManager.getModule(t.MODULE_PLAYER).isNewPlayer ? t.HttpServer.Instance().registLog(channel) : t.HttpServer.Instance().startLog(channel);
            }
          }
        }
        t.PlatForm.GetInstance().preloadBannerAd(t.GameConst.BANNERAD_UNITID);
      },

      i.prototype.OnLoginFailed = function(e) {
        console.error("sesseioned ", e);
        var i = this;
        t.PlatForm.GetInstance().ShowMsgBox("提示", "网络请求失败，请检查网络后重试(2001)!", !1, Laya.Handler.create(null, function() {
          i.doLogin();
        }));
      }, i;
  }(asgard.stage.BaseStage);
  t.LoadingStage = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i() {
      return e.call(this) || this;
    }
    return __extends(i, e), i.prototype.onEnter = function() {
      asgard.ui.UIManager.closeView(t.UIPanelID.LOADING), asgard.ui.UIManager.openView(t.UIPanelID.MAINMENU);
    }, i.prototype.onExit = function() {
      asgard.ui.UIManager.closeView(t.UIPanelID.MAINMENU);
    }, i;
  }(asgard.stage.BaseStage);
  t.LobbyStage = e;
}(logic || (logic = {}));

! function(t) {
  t.STAGE_NONE = 0, t.STAGE_LOADING = 1, t.STAGE_LOBBY = 2, t.STAGE_ARENA = 3;
  var e = function() {
    function e() {}
    return e.prototype.getStage = function(e) {
      switch (e) {
        case t.STAGE_LOADING:
          return new t.LoadingStage();

        case t.STAGE_LOBBY:
          return new t.LobbyStage();

        case t.STAGE_ARENA:
          return new t.ArenaStage();
      }
      return null;
    }, e;
  }();
  t.StageFactory = e;
}(logic || (logic = {}));

var ui, __extends = this && this.__extends || function() {
    var t = function(e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function(t, e) {
          t.__proto__ = e;
        } || function(t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function(e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
        new n());
    };
  }(),
  View = laya.ui.View,
  Dialog = laya.ui.Dialog;


  

! function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.ArenaMainUI.uiView);
      }, 
      i.uiView = {
        type: "View",
        props: {
          y: 0,
          x: 0,
          width: 720,
          height: 1600
        },
        child: [{
          type: "Image",
          props: {
            y: 0,
            x: 0,
            visible: !0,
            var: "mainBg",
            skin: "bg/mainbg.jpg",
            name: "mainBg",
            mouseEnabled: !0,
            alpha: 1
          }
        }, {
          type: "Box",
          props: {
            y: 0,
            x: 0,
            var: "topRoot",
            cacheAs: "bitmap"
          },
          child: [{
            type: "Image",
            props: {
              y: 18,
              x: 32,
              width: 210,
              skin: "main/producebg.png",
              name: "diamonbg",
              height: 52,
              sizeGrid: "20,20,20,20"
            },
            child: [{
              type: "Image",
              props: {
                y: 5,
                x: 4,
                width: 49,
                skin: "main/diamon.png",
                height: 40
              }
            }, {
              type: "Label",
              props: {
                y: 5,
                x: 59,
                width: 120,
                var: "diamon",
                text: "162824",
                strokeColor: "#474747",
                overflow: "visible",
                height: 40,
                fontSize: 26,
                font: "Microsoft YaHei",
                color: "#ffffff",
                align: "center"
              }
            }, {
              type: "Button",
              props: {
                y: 5,
                x: 188,
                var: "adddiamon",
                stateNum: 1,
                skin: "main/addDiamon.png"
              }
            }]
          }, {
            type: "Image",
            props: {
              y: 25,
              x: 284,
              skin: "main/titleBg.png",
              name: "titleBg1"
            }
          }, {
            type: "Image",
            props: {
              y: 25,
              x: 539,
              skin: "main/titleBg.png",
              skewY: 180,
              name: "titleBg2"
            }
          }, {
            type: "Label",
            props: {
              y: 25,
              x: 285,
              width: 250,
              var: "levelName",
              valign: "top",
              text: "从九品",
              strokeColor: "#614a1a",
              stroke: 2,
              overflow: "visible",
              height: 42,
              fontSize: 32,
              font: "Microsoft YaHei",
              color: "#ffe221",
              bold: !0,
              align: "center"
            }
          }, {
            type: "Button",
            props: {
              y: 97,
              x: 28,
              var: "rank",
              stateNum: 1,
              skin: "main/rank.png"
            },
            child: [{
              type: "Image",
              props: {
                y: 5,
                x: 59,
                width: 26,
                var: "rankTip",
                skin: "main/redtip.png",
                height: 26
              }
            }]
          }, {
            type: "Button",
            props: {
              y: 96,
              x: 128,
              var: "invite",
              stateNum: 1,
              skin: "main/giftBtn.png"
            },
            child: [{
              type: "Image",
              props: {
                y: 2,
                x: 59,
                width: 26,
                var: "ionviteTip",
                skin: "main/redtip.png",
                height: 26
              }
            }]
          }, {
            type: "Button",
            props: {
              y: 94,
              x: 228,
              var: "login",
              stateNum: 1,
              skin: "main/login.png"
            },
            child: [{
              type: "Image",
              props: {
                y: 2,
                x: 63,
                width: 26,
                var: "loginTip",
                skin: "main/redtip.png",
                height: 26
              }
            }]
          }, {
            type: "Button",
            props: {
              y: 81,
              x: 604,
              var: "friendHelp",
              stateNum: 1,
              skin: "main/friendHelp.png"
            },
            child: [{
              type: "Image",
              props: {
                y: 2,
                x: 64,
                width: 26,
                var: "friendTip",
                skin: "main/redtip.png",
                height: 26
              }
            }, {
              type: "Label",
              props: {
                width: 66,
                var: "friendAdd",
                valign: "middle",
                top: 77,
                text: "+0%",
                strokeColor: "#474747",
                overflow: "visible",
                left: 14,
                height: 28,
                fontSize: 24,
                font: "Microsoft YaHei",
                color: "#ffffff",
                bold: !0,
                align: "left"
              }
            }]
          }, {
            type: "Button",
            props: {
              y: 94,
              x: 332,
              var: "BtnCustomerService",
              stateNum: 1,
              skin: "common/customSer.png",
              scaleY: 1,
              scaleX: 1
            }
          }, {
            type: "Button",
            props: {
              y: 91,
              x: 420,
              width: 97,
              var: "luckWheel_btn",
              stateNum: 1,
              skin: "main/luckyWheel.png",
              scaleY: 1,
              scaleX: 1,
              height: 91
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 247,
            x: 45,
            width: 262,
            skin: "main/producebg.png",
            name: "coinbg",
            height: 72,
            sizeGrid: "20,20,20,20"
          },
          child: [{
            type: "Image",
            props: {
              y: -6,
              x: -13,
              skin: "main/coin.png"
            }
          }, {
            type: "Label",
            props: {
              y: 17,
              x: 153,
              width: 180,
              var: "coin",
              valign: "middle",
              text: "300",
              strokeColor: "#474747",
              pivotY: 16,
              pivotX: 90,
              overflow: "visible",
              height: 32,
              fontSize: 35,
              font: "Arial",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Label",
            props: {
              y: 37,
              x: 91,
              width: 141,
              var: "perCoin",
              valign: "top",
              text: "12.3b没秒",
              strokeColor: "#474747",
              overflow: "visible",
              height: 28,
              fontSize: 28,
              font: "Arial",
              color: "#ffffff",
              align: "right"
            }
          }, {
            type: "Button",
            props: {
              y: -5,
              x: 290,
              var: "howplay",
              stateNum: 1,
              skin: "common/howPlay.png",
              scaleY: 1,
              scaleX: 1
            }
          }, {
            type: "Button",
            props: {
              y: -5,
              x: 387,
              var: "daygiftBtn",
              stateNum: 1,
              skin: "main/daygift.png",
              scaleY: 1,
              scaleX: 1
            }
          }, {
            type: "Button",
            props: {
              y: -5,
              x: 489,
              var: "feisheng_btn",
              stateNum: 1,
              skin: "main/flyBtn.png"
            },
            child: [{
              type: "Image",
              props: {
                y: 2,
                x: 64,
                width: 26,
                visible: !1,
                var: "mailTip",
                skin: "main/redtip.png",
                height: 26
              }
            }]
          }, {
            type: "Label",
            props: {
              y: 89,
              x: 127,
              width: 180,
              var: "fly_tip",
              valign: "middle",
              text: "飞升+100%",
              strokeColor: "#474747",
              pivotY: 16,
              pivotX: 90,
              overflow: "visible",
              height: 32,
              fontSize: 30,
              font: "Arial",
              color: "#ffffff",
              align: "center"
            }
          }]
        }, {
          type: "Button",
          props: {
            y: 1131,
            x: 54,
            var: "testBtn",
            stateNum: 1,
            skin: "main/recovery.png"
          }
        }, {
          type: "Box",
          props: {
            y: 258,
            x: 482,
            width: 232,
            var: "boxRoot",
            height: 92
          },
          child: [{
            type: "Animation",
            props: {
              var: "boxAnim",
              source: "anim/box.ani"
            }
          }]
        }, {
          type: "Sprite",
          props: {
            y: 0,
            x: 0,
            width: 720,
            var: "panelSolt",
            name: "panelSolt",
            height: 936,
            cacheAs: "bitmap"
          }
        }, {
          type: "Sprite",
          props: {
            y: 0,
            x: 0,
            width: 720,
            var: "slotIconRoot",
            name: "slotIconRoot",
            height: 972,
            cacheAs: "none"
          }
        }, {
          type: "Button",
          props: {
            y: 357,
            var: "moregameBTn",
            stateNum: 1,
            skin: "main/tanchuanniudi.png",
            left: 0
          },
          child: [{
            type: "Image",
            props: {
              y: 6,
              x: 16,
              skin: "main/tanchuanniu.png"
            }
          }, {
            type: "Image",
            props: {
              y: 0,
              x: 50,
              skin: "main/redtip.png"
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 159,
            x: 654,
            width: 90,
            var: "floatGame_img",
            height: 90,
            anchorY: 0,
            anchorX: .5
          },
          child: [{
            type: "Label",
            props: {
              y: 74,
              x: 1,
              width: 88,
              text: "name",
              strokeColor: "#133988",
              stroke: 2,
              name: "name",
              height: 33,
              fontSize: 20,
              font: "Microsoft YaHei",
              color: "#fbfbfb",
              align: "center"
            }
          }]
        }, {
          type: "Box",
          props: {
            y: 960,
            x: 0,
            width: 715,
            var: "bottomBox",
            name: "bottom",
            height: 129
          },
          child: [{
            type: "Button",
            props: {
              y: 40,
              x: 42,
              width: 124,
              var: "speedUpBtn",
              stateNum: 1,
              skin: "main/commonBtn.png",
              height: 84,
              sizeGrid: "20,20,20,20"
            },
            child: [{
              type: "Label",
              props: {
                y: 21,
                x: 5,
                width: 113,
                valign: "top",
                text: "加  速",
                strokeColor: "#004863",
                stroke: 4,
                overflow: "visible",
                height: 42,
                fontSize: 30,
                font: "Microsoft YaHei",
                color: "#ffffff",
                align: "center"
              }
            }]
          }, {
            type: "Button",
            props: {
              y: 40,
              x: 406,
              width: 124,
              var: "shopBtn",
              stateNum: 1,
              skin: "main/commonBtn.png",
              height: 84,
              sizeGrid: "20,20,20,20"
            },
            child: [{
              type: "Image",
              props: {
                y: 9,
                x: 24,
                visible: !1,
                skin: "main/shop.png"
              }
            }, {
              type: "Label",
              props: {
                y: 16,
                x: -4,
                width: 132,
                text: "商 店",
                strokeColor: "#004863",
                stroke: 4,
                overflow: "visible",
                height: 38,
                fontSize: 36,
                font: "Microsoft YaHei",
                color: "#ffffff",
                align: "center"
              }
            }]
          }, {
            type: "Label",
            props: {
              y: 0,
              x: 52,
              width: 92,
              var: "speedUpTime",
              text: "20:10",
              overflow: "visible",
              height: 29,
              fontSize: 24,
              font: "Microsoft YaHei",
              color: "#ff0000",
              bold: !0,
              align: "center"
            }
          }, {
            type: "Button",
            props: {
              y: 8,
              x: 579,
              var: "btnrecovery",
              stateNum: 1,
              skin: "main/recovery.png"
            }
          }, {
            type: "Button",
            props: {
              y: 40,
              x: 225,
              width: 168,
              var: "addBtn",
              stateNum: 1,
              skin: "main/commonBtn.png",
              height: 84,
              sizeGrid: "20,20,20,20"
            },
            child: [{
              type: "Image",
              props: {
                y: 38,
                x: 15,
                width: 32,
                skin: "main/coin.png",
                height: 32
              }
            }, {
              type: "Label",
              props: {
                y: 42,
                x: 50,
                width: 108,
                var: "costLab",
                text: "48,231",
                overflow: "visible",
                height: 28,
                fontSize: 26,
                font: "SimHei",
                color: "#ffffff",
                align: "center"
              }
            }, {
              type: "Label",
              props: {
                y: 5,
                x: 28,
                width: 109,
                var: "currLevel",
                text: "lv1",
                strokeColor: "#004863",
                stroke: 2,
                overflow: "visible",
                height: 31,
                fontSize: 26,
                font: "Microsoft YaHei",
                color: "#ffeb61",
                align: "center"
              }
            }]
          }, {
            type: "Label",
            props: {
              y: 107,
              x: 629,
              width: 140,
              var: "recoveryCoin",
              text: "+100",
              pivotY: 16,
              pivotX: 70,
              overflow: "visible",
              height: 32,
              fontSize: 30,
              font: "Microsoft YaHei",
              color: "#f8f808",
              bold: !0,
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              y: 70,
              x: 276,
              var: "fingetTip_Img",
              skin: "common/fingger.png"
            },
            child: [{
              type: "Label",
              props: {
                y: 94,
                x: -232,
                text: "点这里可以继续购买角色",
                fontSize: 50,
                font: "Microsoft YaHei",
                color: "#ffffff",
                bold: !0
              }
            }]
          }]
        }]
      }, i;
    }(View);
    e.ArenaMainUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        var i = e.call(this) || this;
        return i.createUI(t.panel.BannerUI.uiView), i;
      }
      return __extends(i, e), i.prototype.createUI = function(t) {
        laya.utils.ClassUtils.createByJson(t, this, this);
      }, i.uiView = {
        type: "Image",
        props: {
          skin: "bg/banner.png",
          anchorX: .5,
          anchorY: 1,
          y: 0,
          x: 0
        }
      }, i;
    }(Laya.Image);
    e.BannerUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.DayLoginUI.uiView);
      }, i.uiView = {
        type: "View",
        props: {
          width: 720,
          height: 1280,
          cacheAs: "normal"
        },
        child: [{
          type: "Image",
          props: {
            y: 0,
            x: 0,
            width: 720,
            skin: "common/zhezhao.jpg",
            height: 1680,
            alpha: .6,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 104,
            x: 36,
            width: 642,
            skin: "common/commonbg.png",
            sizeGrid: "30,30,30,30",
            height: 948
          }
        }, {
          type: "Image",
          props: {
            y: 228,
            x: 36,
            width: 642,
            skin: "loginReward/conent_bg.png",
            sizeGrid: "12,12,13,12",
            height: 712,
            alpha: 1
          }
        }, {
          type: "Image",
          props: {
            y: 248,
            x: 53,
            width: 198,
            var: "dayOne",
            skin: "loginReward/ceilBg.png",
            sizeGrid: "30,30,30,30",
            name: "dayOne",
            height: 198
          },
          child: [{
            type: "Image",
            props: {
              y: 53,
              x: 3,
              width: 192,
              skin: "loginReward/bg.png",
              sizeGrid: "8,28,23,35",
              name: "drawBg",
              height: 142
            }
          }, {
            type: "Image",
            props: {
              y: 34,
              x: 18,
              width: 158,
              skin: "loginReward/diamon.png",
              height: 132
            }
          }, {
            type: "Label",
            props: {
              y: 8,
              x: 37,
              width: 121,
              var: "title1",
              text: "第 1 天",
              strokeColor: "#867100",
              stroke: 6,
              name: "title",
              height: 40,
              fontSize: 26,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Label",
            props: {
              y: 153,
              x: 48,
              width: 106,
              var: "dayPriceOne",
              text: "x 200",
              strokeColor: "#754f23",
              stroke: 6,
              name: "dayPriceOne",
              height: 42,
              fontSize: 28,
              font: "Arial",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              y: 143,
              x: 40,
              var: "isRewardOne",
              skin: "loginReward/draw.png",
              name: "isRewardOne"
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 248,
            x: 260,
            width: 198,
            var: "dayTwo",
            skin: "loginReward/ceilBg.png",
            sizeGrid: "30,30,30,30",
            name: "dayTwo",
            height: 198
          },
          child: [{
            type: "Image",
            props: {
              y: 53,
              x: 3,
              width: 192,
              skin: "loginReward/bg.png",
              sizeGrid: "8,28,23,35",
              name: "drawBg",
              height: 142
            }
          }, {
            type: "Image",
            props: {
              y: 34,
              x: 18,
              width: 158,
              skin: "loginReward/diamon.png",
              height: 132
            }
          }, {
            type: "Label",
            props: {
              y: 8,
              x: 37,
              width: 121,
              var: "title2",
              text: "第 2 天",
              strokeColor: "#867100",
              stroke: 6,
              height: 40,
              fontSize: 26,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Label",
            props: {
              y: 153,
              x: 48,
              width: 106,
              var: "dayPriceTwo",
              text: "x 200",
              strokeColor: "#754f23",
              stroke: 6,
              name: "dayPriceTwo",
              height: 42,
              fontSize: 28,
              font: "Arial",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              y: 143,
              x: 40,
              var: "isRewardTwo",
              skin: "loginReward/draw.png",
              name: "isRewardTwo"
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 248,
            x: 473,
            width: 198,
            var: "dayThree",
            skin: "loginReward/ceilBg.png",
            sizeGrid: "30,30,30,30",
            name: "dayThree",
            height: 198
          },
          child: [{
            type: "Image",
            props: {
              y: 53,
              x: 3,
              width: 192,
              skin: "loginReward/bg.png",
              sizeGrid: "8,28,23,35",
              name: "drawBg",
              height: 142
            }
          }, {
            type: "Image",
            props: {
              y: 34,
              x: 18,
              width: 158,
              skin: "loginReward/diamon.png",
              height: 134
            }
          }, {
            type: "Label",
            props: {
              y: 8,
              x: 37,
              width: 121,
              var: "title3",
              text: "第 3 天",
              strokeColor: "#867100",
              stroke: 6,
              height: 40,
              fontSize: 26,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Label",
            props: {
              y: 153,
              x: 48,
              width: 106,
              var: "dayPriceThree",
              text: "x 200",
              strokeColor: "#754f23",
              stroke: 6,
              name: "dayPriceThree",
              height: 42,
              fontSize: 28,
              font: "Arial",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              y: 143,
              x: 40,
              var: "isRewardThree",
              skin: "loginReward/draw.png",
              name: "isRewardThree"
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 484,
            x: 53,
            width: 198,
            var: "dayFour",
            skin: "loginReward/ceilBg.png",
            sizeGrid: "30,30,30,30",
            name: "dayFour",
            height: 198
          },
          child: [{
            type: "Image",
            props: {
              y: 53,
              x: 3,
              width: 192,
              skin: "loginReward/bg.png",
              sizeGrid: "8,28,23,35",
              name: "drawBg",
              height: 142
            }
          }, {
            type: "Image",
            props: {
              y: 34,
              x: 18,
              width: 158,
              skin: "loginReward/diamon.png",
              height: 132
            }
          }, {
            type: "Label",
            props: {
              y: 8,
              x: 37,
              width: 121,
              var: "title4",
              text: "第 4 天",
              strokeColor: "#867100",
              stroke: 6,
              height: 40,
              fontSize: 26,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Label",
            props: {
              y: 153,
              x: 48,
              width: 106,
              var: "dayPriceFour",
              text: "x 200",
              strokeColor: "#754f23",
              stroke: 6,
              name: "dayPriceFour",
              height: 42,
              fontSize: 28,
              font: "Arial",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              y: 143,
              x: 40,
              var: "isRewardFour",
              skin: "loginReward/draw.png",
              name: "isRewardFour"
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 484,
            x: 260,
            width: 198,
            var: "dayFive",
            skin: "loginReward/ceilBg.png",
            sizeGrid: "30,30,30,30",
            name: "dayFive",
            height: 198
          },
          child: [{
            type: "Image",
            props: {
              y: 53,
              x: 3,
              width: 192,
              skin: "loginReward/bg.png",
              sizeGrid: "8,28,23,35",
              name: "drawBg",
              height: 142
            }
          }, {
            type: "Image",
            props: {
              y: 34,
              x: 18,
              width: 158,
              skin: "loginReward/diamon.png",
              height: 132
            }
          }, {
            type: "Label",
            props: {
              y: 8,
              x: 37,
              width: 121,
              var: "title5",
              text: "第 5 天",
              strokeColor: "#867100",
              stroke: 6,
              height: 40,
              fontSize: 26,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Label",
            props: {
              y: 153,
              x: 48,
              width: 106,
              var: "dayPriceFive",
              text: "x 200",
              strokeColor: "#754f23",
              stroke: 6,
              name: "dayPriceFive",
              height: 42,
              fontSize: 28,
              font: "Arial",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              y: 143,
              x: 40,
              var: "isRewardFive",
              skin: "loginReward/draw.png",
              name: "isRewardFive"
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 484,
            x: 473,
            width: 198,
            var: "daySix",
            skin: "loginReward/ceilBg.png",
            sizeGrid: "30,30,30,30",
            name: "daySix",
            height: 198
          },
          child: [{
            type: "Image",
            props: {
              y: 53,
              x: 3,
              width: 192,
              skin: "loginReward/bg.png",
              sizeGrid: "8,28,23,35",
              name: "drawBg",
              height: 142
            }
          }, {
            type: "Image",
            props: {
              y: 34,
              x: 18,
              width: 158,
              skin: "loginReward/diamon.png",
              height: 132
            }
          }, {
            type: "Label",
            props: {
              y: 8,
              x: 37,
              width: 121,
              var: "title6",
              text: "第 6 天",
              strokeColor: "#867100",
              stroke: 6,
              height: 40,
              fontSize: 26,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Label",
            props: {
              y: 153,
              x: 48,
              width: 106,
              var: "dayPriceSix",
              text: "x 200",
              strokeColor: "#754f23",
              stroke: 6,
              name: "dayPriceSix",
              height: 42,
              fontSize: 28,
              font: "Arial",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              y: 143,
              x: 40,
              var: "isRewardSix",
              skin: "loginReward/draw.png",
              name: "isRewardSix"
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 722,
            x: 156,
            width: 408,
            var: "daySeven",
            skin: "loginReward/ceilBg.png",
            sizeGrid: "30,30,30,30",
            name: "daySeven",
            height: 198
          },
          child: [{
            type: "Label",
            props: {
              y: 10,
              x: 131,
              width: 147,
              var: "title7",
              text: "第  7  天",
              strokeColor: "#867100",
              stroke: 6,
              height: 44,
              fontSize: 26,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              y: 53,
              x: 3,
              width: 402,
              skin: "loginReward/bg.png",
              sizeGrid: "7,34,24,34",
              name: "drawBg",
              height: 142
            }
          }, {
            type: "Image",
            props: {
              y: 42,
              x: 126,
              width: 158,
              skin: "loginReward/diamon.png",
              height: 134
            }
          }, {
            type: "Label",
            props: {
              y: 150,
              x: 135,
              width: 139,
              var: "dayPriceSeven",
              text: "x 800",
              strokeColor: "#67430c",
              stroke: 6,
              name: "dayPriceSeven",
              height: 44,
              fontSize: 28,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "center"
            }
          }]
        }, {
          type: "Button",
          props: {
            y: 957,
            x: 262,
            width: 198,
            var: "dayReward",
            stateNum: 1,
            skin: "common/commonBtn.png",
            sizeGrid: "17,18,30,15",
            name: "dayReward",
            layoutEnabled: !0,
            labelStrokeColor: "#234b5e",
            labelStroke: 6,
            labelSize: 32,
            labelFont: "Microsoft YaHei",
            labelColors: "#FFFFFF",
            height: 84
          },
          child: [{
            type: "Label",
            props: {
              y: 16,
              x: 32,
              width: 134,
              text: "双倍领取",
              strokeColor: "#234b5e",
              stroke: 6,
              height: 52,
              fontSize: 35,
              font: "Microsoft YaHei",
              color: "#FFFFFF",
              align: "center"
            }
          }]
        }, {
          type: "Button",
          props: {
            y: 137,
            x: 595,
            width: 70,
            visible: !1,
            var: "dayClose",
            stateNum: 1,
            skin: "common/closeBtn.png",
            name: "dayClose",
            height: 72
          }
        }, {
          type: "Label",
          props: {
            y: 132,
            x: 173,
            width: 387,
            text: "每日登录奖励",
            height: 87,
            fontSize: 60,
            font: "Microsoft YaHei",
            color: "#FFFFFF"
          }
        }, {
          type: "Label",
          props: {
            y: 1075,
            x: 264,
            width: 200,
            var: "normaldraw_btn",
            underlineColor: "#fbfbfb",
            underline: !0,
            text: "不，谢谢>",
            strokeColor: "#234b5e",
            stroke: 6,
            height: 52,
            fontSize: 32,
            font: "Microsoft YaHei",
            color: "#FFFFFF",
            align: "center"
          }
        }]
      }, i;
    }(View);
    e.DayLoginUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.DoublingUI.uiView);
      }, i.uiView = {
        type: "View",
        props: {
          width: 720,
          height: 1280
        },
        child: [{
          type: "Image",
          props: {
            width: 720,
            skin: "common/zhezhao.jpg",
            height: 1680,
            alpha: .6,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 293,
            x: 112,
            width: 496,
            skin: "common/commonbg.png",
            height: 693,
            sizeGrid: "16,17,18,13"
          },
          child: [{
            type: "Image",
            props: {
              y: 133,
              x: 0,
              width: 496,
              skin: "common/contenBg.png",
              height: 438,
              sizeGrid: "12,12,12,12"
            }
          }, {
            type: "Label",
            props: {
              y: 23,
              x: 17,
              width: 458,
              var: "title_Lab",
              text: "ss 3",
              overflow: "visible",
              height: 99,
              fontSize: 40,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              y: 588,
              x: 156,
              width: 178,
              var: "draw_btn",
              skin: "common/commonBtn.png",
              height: 83,
              sizeGrid: "17,18,30,15"
            },
            child: [{
              type: "Label",
              props: {
                y: 17,
                x: 58,
                text: "领 取",
                fontSize: 30,
                font: "Microsoft YaHei",
                color: "#ffffff",
                align: "center"
              }
            }]
          }, {
            type: "Image",
            props: {
              y: 133,
              x: 4,
              skin: "common/bglight.png",
              scaleY: 2,
              scaleX: 2
            }
          }, {
            type: "Image",
            props: {
              y: 133,
              x: 497,
              skin: "common/bglight.png",
              skewY: 180,
              scaleY: 2,
              scaleX: 2
            }
          }, {
            type: "Image",
            props: {
              y: 229,
              x: 115,
              skin: "common/yuebing.png"
            }
          }]
        }, {
          type: "Label",
          props: {
            y: 999,
            x: 283,
            width: 172,
            var: "Close_btn",
            underline: !0,
            text: "不，谢谢！>",
            strokeColor: "#f4eeee",
            height: 49,
            fontSize: 30,
            font: "Microsoft YaHei",
            color: "#fdfdfd",
            align: "center"
          }
        }, {
          type: "Label",
          props: {
            y: 774,
            x: 269,
            width: 172,
            var: "desc_Lab",
            text: "desc",
            height: 49,
            fontSize: 40,
            font: "Microsoft YaHei",
            color: "#fdfdfd",
            align: "center"
          }
        }]
      }, i;
    }(View);
    e.DoublingUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.FlyTipUI.uiView);
      }, i.uiView = {
        type: "View",
        props: {
          width: 720,
          height: 1280
        },
        child: [{
          type: "Image",
          props: {
            width: 720,
            skin: "common/zhezhao.jpg",
            name: "bg",
            height: 1680,
            alpha: .5,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 293,
            x: 115,
            width: 496,
            skin: "common/commonbg.png",
            height: 694,
            sizeGrid: "16,17,18,13"
          },
          child: [{
            type: "Label",
            props: {
              y: 23,
              x: 183,
              text: "飞 升",
              overflow: "visible",
              fontSize: 56,
              font: "Microsoft YaHei",
              color: "#ffffff",
              bold: !0,
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              y: 4,
              x: 428,
              var: "clost_btn",
              skin: "common/closeBtn.png"
            }
          }, {
            type: "Image",
            props: {
              y: 118,
              x: 0,
              width: 496,
              skin: "common/contenBg.png",
              height: 458,
              sizeGrid: "12,12,12,12"
            }
          }, {
            type: "Label",
            props: {
              y: 185,
              x: 42,
              text: "恭喜您，即将踏入飞升\\n者行列。修炼得道后，\\n白昼飞升",
              leading: 10,
              fontSize: 40,
              font: "Microsoft YaHei",
              color: "#ffdb4a"
            }
          }, {
            type: "Label",
            props: {
              y: 347,
              x: 32,
              width: 319,
              text: "条件：\\n         3名无上皇",
              overflow: "visible",
              leading: 10,
              height: 104,
              fontSize: 44,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "left"
            }
          }, {
            type: "Image",
            props: {
              y: 588,
              x: 144,
              width: 208,
              var: "confirm_btn",
              skin: "common/btnred.png",
              height: 84,
              sizeGrid: "15,16,24,14"
            },
            child: [{
              type: "Label",
              props: {
                y: 20,
                x: 44,
                text: "我要飞升",
                strokeColor: "#000000",
                stroke: 3,
                fontSize: 32,
                font: "Microsoft YaHei",
                color: "#ffffff"
              }
            }]
          }]
        }]
      }, i;
    }(View);
    e.FlyTipUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.GuideTipUI.uiView);
      }, i.uiView = {
        type: "View",
        props: {
          width: 720,
          height: 1280
        },
        child: [{
          type: "Image",
          props: {
            y: 0,
            x: -10,
            width: 740,
            skin: "common/zhezhao.jpg",
            height: 1680,
            alpha: .5,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 1047,
            x: 189,
            var: "confirm_btn",
            skin: "common/woyaodanghuangshang.png"
          }
        }, {
          type: "Image",
          props: {
            y: 350,
            x: 231,
            skin: "bg/nvjuese.png"
          }
        }, {
          type: "Label",
          props: {
            y: 951,
            x: 122,
            width: 475,
            text: "多玩游戏就可以快速升级!",
            height: 63,
            fontSize: 38,
            font: "Microsoft YaHei",
            color: "#ffdc7c",
            bold: !0,
            align: "center"
          }
        }, {
          type: "Image",
          props: {
            y: 179,
            x: 381,
            width: 284,
            skin: "common/duihuakuang.png",
            height: 209,
            sizeGrid: "26,29,81,24"
          }
        }, {
          type: "Label",
          props: {
            y: 201,
            x: 390,
            width: 236,
            text: "等您当皇上\\n臣妾就是您的\\n了~",
            height: 107,
            fontSize: 30,
            font: "Microsoft YaHei",
            align: "center"
          }
        }, {
          type: "Image",
          props: {
            y: 271,
            x: 548,
            skin: "common/haiixiubiaoqing.png"
          }
        }]
      }, i;
    }(View);
    e.GuideTipUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.HowPlayUI.uiView);
      }, i.uiView = {
        type: "Dialog",
        props: {
          top: 0,
          right: 0,
          left: 0,
          layoutEnabled: !0,
          cacheAs: "bitmap",
          bottom: 0
        },
        child: [{
          type: "Image",
          props: {
            y: 0,
            x: 0,
            width: 720,
            skin: "common/zhezhao.jpg",
            name: "bg",
            height: 1660,
            alpha: .6,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 545,
            x: 38,
            width: 640,
            skin: "common/commonbg.png",
            name: "center",
            height: 351,
            sizeGrid: "16,17,18,13"
          },
          child: [{
            type: "Label",
            props: {
              y: 20,
              x: 40,
              text: "如何赚金币",
              name: "title",
              fontSize: 46,
              font: "Microsoft YaHei",
              color: "#ffe66a"
            }
          }, {
            type: "Label",
            props: {
              y: 84,
              x: 46,
              text: "隔一段时间就会自动加金币,角色等级越\\n高得钱越快",
              fontSize: 30,
              font: "Microsoft YaHei",
              color: "#ffffff"
            }
          }, {
            type: "Image",
            props: {
              y: 161,
              x: 0,
              width: 640,
              skin: "bg/guideBg.jpg"
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 903,
            x: 39,
            width: 638,
            skin: "common/commonbg.png",
            name: "bottom",
            height: 181,
            sizeGrid: "16,17,18,13"
          },
          child: [{
            type: "Label",
            props: {
              y: 20,
              x: 40,
              text: "如何获得更多收益",
              name: "title",
              fontSize: 46,
              font: "Microsoft YaHei",
              color: "#ffe66a"
            }
          }, {
            type: "Label",
            props: {
              y: 94,
              x: 46,
              text: "1.点击加速获得更多金币\\n2.一段时间后就登陆一次获得更多离线收益",
              fontSize: 30,
              font: "Microsoft YaHei",
              color: "#ffffff"
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 162,
            x: 36,
            width: 640,
            skin: "common/commonbg.png",
            name: "top",
            height: 375,
            sizeGrid: "16,17,18,13"
          },
          child: [{
            type: "Label",
            props: {
              y: 20,
              x: 40,
              text: "如何合成",
              name: "title",
              fontSize: 46,
              font: "Microsoft YaHei",
              color: "#ffe66a"
            }
          }, {
            type: "Label",
            props: {
              y: 84,
              x: 46,
              text: "两个同等级的角色拖拽到一起即可合成更\\n高级的角色",
              fontSize: 30,
              font: "Microsoft YaHei",
              color: "#ffffff"
            }
          }, {
            type: "Image",
            props: {
              y: 167,
              x: 0,
              width: 640,
              skin: "common/contenBg.png",
              height: 187,
              sizeGrid: "12,12,12,12"
            },
            child: [{
              type: "Image",
              props: {
                y: 18,
                x: 18,
                skin: "icon/17.png",
                scaleY: .8,
                scaleX: .8
              }
            }, {
              type: "Image",
              props: {
                y: 83,
                x: 146,
                skin: "common/guideAdd.png"
              }
            }, {
              type: "Image",
              props: {
                y: 18,
                x: 242,
                skin: "icon/17.png",
                scaleY: .8,
                scaleX: .8
              }
            }, {
              type: "Label",
              props: {
                y: 32,
                x: 138,
                text: "拖拽",
                name: "title",
                fontSize: 36,
                font: "Microsoft YaHei",
                color: "#ffe66a"
              }
            }, {
              type: "Image",
              props: {
                y: 86,
                x: 358,
                skin: "common/guideaArrow.png"
              }
            }, {
              type: "Label",
              props: {
                y: 32,
                x: 356,
                text: "合成",
                name: "title",
                fontSize: 36,
                font: "Microsoft YaHei",
                color: "#ffe66a"
              }
            }, {
              type: "Image",
              props: {
                y: 12,
                x: 490,
                skin: "icon/25.png",
                scaleY: .8,
                scaleX: .8
              }
            }, {
              type: "Image",
              props: {
                y: 132,
                x: 34,
                skin: "common/fingger.png"
              }
            }]
          }]
        }, {
          type: "Button",
          props: {
            y: 170,
            x: 598,
            var: "closebtn",
            stateNum: 1,
            skin: "common/closeBtn.png"
          }
        }]
      }, i;
    }(Dialog);
    e.HowPlayUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.InviteFriendUI.uiView);
      }, i.uiView = {
        type: "Dialog",
        props: {},
        child: [{
          type: "Image",
          props: {
            y: 0,
            x: 0,
            width: 720,
            skin: "common/zhezhao.jpg",
            height: 1660,
            alpha: .6,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 164,
            x: 39,
            width: 642,
            skin: "common/commonbg.png",
            name: "bg",
            height: 862,
            cacheAs: "bitmap",
            sizeGrid: "16,17,18,13"
          },
          child: [{
            type: "Button",
            props: {
              y: 14,
              x: 549,
              var: "btnClose",
              stateNum: 1,
              skin: "common/closeBtn.png"
            }
          }, {
            type: "Image",
            props: {
              y: 130,
              x: 34,
              var: "title_img",
              skin: "bg/titleart.png"
            }
          }, {
            type: "Button",
            props: {
              y: 294,
              x: 400,
              width: 181,
              var: "btnInvite",
              stateNum: 1,
              skin: "common/inviteBtn.png",
              height: 59
            }
          }, {
            type: "Label",
            props: {
              y: 17,
              x: 199,
              text: "邀请好友",
              name: "title",
              fontSize: 60,
              font: "Microsoft YaHei",
              color: "#ffffff",
              bold: !0
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 577,
            x: 39,
            width: 642,
            skin: "common/contenBg.png",
            name: "bottombg",
            height: 432,
            sizeGrid: "12,12,12,12"
          },
          child: [{
            type: "Panel",
            props: {
              top: 10,
              right: 2,
              left: 2,
              bottom: 5
            },
            child: [{
              type: "List",
              props: {
                var: "listpanel",
                top: 0,
                right: 10,
                left: 10,
                bottom: 0
              }
            }]
          }]
        }]
      }, i;
    }(Dialog);
    e.InviteFriendUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.InviteLoginUI.uiView);
      }, i.uiView = {
        type: "Dialog",
        props: {
          width: 720,
          height: 1280
        },
        child: [{
          type: "Image",
          props: {
            top: 0,
            skin: "common/zhezhao.jpg",
            right: 0,
            left: 0,
            height: 1680,
            alpha: .5,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 330,
            x: 21,
            width: 677,
            skin: "common/commonbg.png",
            height: 548,
            sizeGrid: "16,17,18,13"
          },
          child: [{
            type: "Label",
            props: {
              y: 28,
              x: 204,
              text: "好友助力",
              fontSize: 60,
              font: "Microsoft YaHei",
              color: "#ffffff",
              bold: !0
            }
          }, {
            type: "Button",
            props: {
              y: 22,
              x: 591,
              var: "closeBtn",
              stateNum: 1,
              skin: "common/closeBtn.png"
            }
          }, {
            type: "Image",
            props: {
              y: 146,
              x: 2,
              width: 673,
              var: "content",
              skin: "common/contenBg.png",
              name: "content",
              height: 256,
              sizeGrid: "12,12,12,12"
            },
            child: [{
              type: "Label",
              props: {
                y: 23,
                x: 24,
                width: 630,
                text: "邀请好友上线,满3名好友立得10小时收益",
                height: 39,
                fontSize: 35,
                font: "Microsoft YaHei",
                color: "#fbd406"
              }
            }, {
              type: "Button",
              props: {
                y: 102,
                x: 450,
                width: 203,
                var: "InviteBtn",
                stateNum: 1,
                skin: "common/btnyellow.png",
                height: 88,
                sizeGrid: "18,15,26,19"
              },
              child: [{
                type: "Label",
                props: {
                  y: 20,
                  x: 51,
                  text: "邀 请",
                  strokeColor: "#15160b",
                  stroke: 3,
                  fontSize: 40,
                  font: "SimHei",
                  color: "#f8f8f8"
                }
              }]
            }]
          }, {
            type: "Button",
            props: {
              y: 433,
              x: 237,
              width: 203,
              var: "drawBtn",
              stateNum: 1,
              skin: "common/commonBtn.png",
              height: 88,
              sizeGrid: "17,18,30,15"
            },
            child: [{
              type: "Label",
              props: {
                y: 20,
                x: 6,
                width: 195,
                var: "drawLab",
                text: "领 取",
                overflow: "visible",
                height: 40,
                fontSize: 40,
                font: "SimHei",
                color: "#f8f8f8",
                bold: !0,
                align: "center"
              }
            }]
          }]
        }]
      }, i;
    }(Dialog);
    e.InviteLoginUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.LoadingUI.uiView);
      }, i.uiView = {
        type: "View",
        props: {
          width: 720,
          top: 0,
          right: 0,
          left: 0,
          bottom: 0
        },
        child: [{
          type: "Image",
          props: {
            y: 0,
            x: 0,
            width: 720,
            skin: "bg/loadingbg.jpg",
            layoutEnabled: !0,
            height: 1280
          }
        }, {
          type: "Image",
          props: {
            x: 51,
            top: 191,
            skin: "bg/logo1.png",
            name: "logo"
          }
        }, {
          type: "Label",
          props: {
            y: 14,
            x: 5,
            width: 211,
            var: "versionLab",
            text: "ver:120",
            overflow: "visible",
            fontSize: 30,
            font: "Microsoft YaHei",
            color: "#080808",
            bold: !0,
            align: "center"
          }
        }, {
          type: "Button",
          props: {
            y: 928,
            x: 164,
            width: 392,
            var: "loginBtn",
            stateNum: 1,
            skin: "bg/commonBtn.png",
            labelSize: 35,
            labelFont: "Microsoft YaHei",
            height: 124
          }
        }, {
          type: "Image",
          props: {
            y: 632,
            x: 629,
            width: 100,
            var: "floatGame_img",
            height: 100,
            anchorX: .5
          },
          child: [{
            type: "Label",
            props: {
              y: 77,
              x: 6,
              width: 88,
              text: "label",
              strokeColor: "#133988",
              stroke: 2,
              name: "name",
              height: 33,
              fontSize: 20,
              font: "Microsoft YaHei",
              color: "#fdfdfd",
              align: "center"
            }
          }]
        }]
      }, i;
    }(View);
    e.LoadingUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.LuckyWheelUI.uiView);
      }, i.uiView = {
        type: "Dialog",
        props: {
          width: 720,
          skewY: 0,
          height: 1280
        },
        child: [{
          type: "Image",
          props: {
            width: 730,
            skin: "common/zhezhao.jpg",
            height: 1680,
            alpha: .6,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 59,
            x: 56,
            var: "disk_bg",
            skin: "bg/disk.png"
          }
        }, {
          type: "Image",
          props: {
            y: 492,
            x: 360,
            width: 560,
            var: "arrowImg",
            skin: "bg/diskmain.png",
            pivotY: 280,
            pivotX: 280,
            height: 560
          }
        }, {
          type: "Button",
          props: {
            y: 973,
            x: 353,
            width: 303,
            var: "start_Btn",
            stateNum: 1,
            skin: "common/start.png",
            pivotY: 98,
            pivotX: 151,
            height: 197
          }
        }, {
          type: "Button",
          props: {
            y: 783,
            x: 426,
            var: "add_Btn",
            stateNum: 1,
            skin: "common/addBtn.png"
          }
        }, {
          type: "Label",
          props: {
            y: 795,
            x: 286,
            width: 147,
            var: "tickets_Lab",
            text: "转盘券x5",
            overflow: "visible",
            height: 40,
            fontSize: 30,
            font: "Microsoft YaHei",
            align: "center"
          }
        }, {
          type: "Button",
          props: {
            y: 127,
            x: 572,
            var: "close_Btn",
            stateNum: 1,
            skin: "common/closeBtn.png"
          }
        }, {
          type: "Image",
          props: {
            y: 442,
            x: 400,
            skin: "common/luckyarrow.png",
            pivotY: 107,
            pivotX: 90
          }
        }]
      }, i;
    }(Dialog);
    e.LuckyWheelUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.MoreGameUI.uiView);
      }, i.uiView = {
        type: "Dialog",
        props: {
          width: 720,
          height: 1280
        },
        child: [{
          type: "Image",
          props: {
            width: 720,
            skin: "common/zhezhao.jpg",
            name: "bg",
            height: 1660,
            alpha: .5,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 228,
            x: 0,
            width: 450,
            skin: "common/commonbg.png",
            height: 774,
            sizeGrid: "16,17,18,13"
          },
          child: [{
            type: "Image",
            props: {
              top: 5,
              skin: "common/contenBg.png",
              right: 5,
              left: 5,
              bottom: 5,
              sizeGrid: "12,12,12,12"
            }
          }, {
            type: "List",
            props: {
              y: 10,
              x: 10,
              var: "iconRoot",
              top: 10,
              right: 10,
              left: 10,
              bottom: 10
            }
          }]
        }, {
          type: "Button",
          props: {
            y: 318,
            x: 447,
            var: "closeBtn",
            stateNum: 1,
            skin: "main/tanchuanniudi.png"
          },
          child: [{
            type: "Image",
            props: {
              y: 7,
              x: 60,
              skin: "main/tanchuanniu.png",
              skewY: 180
            }
          }]
        }]
      }, i;
    }(Dialog);
    e.MoreGameUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.MsgBoxUI.uiView);
      }, i.uiView = {
        type: "View",
        props: {
          width: 720,
          height: 1280
        },
        child: [{
          type: "Image",
          props: {
            y: 436,
            x: 50,
            width: 620,
            skin: "common/commonbg.png",
            height: 450,
            sizeGrid: "16,17,18,13"
          },
          child: [{
            type: "Image",
            props: {
              y: 365,
              x: 230,
              width: 160,
              var: "confirm_btn",
              skin: "common/commonBtn.png",
              height: 77,
              sizeGrid: "17,18,30,15"
            },
            child: [{
              type: "Label",
              props: {
                y: 15,
                x: 47,
                text: "确 定",
                fontSize: 30,
                font: "Microsoft YaHei",
                color: "#010101",
                bold: !0
              }
            }]
          }, {
            type: "Image",
            props: {
              y: 365,
              x: 81,
              width: 176,
              visible: !1,
              var: "cancel_btn",
              skin: "common/btnyellow.png",
              height: 77,
              sizeGrid: "18,15,26,19"
            },
            child: [{
              type: "Label",
              props: {
                y: 17,
                x: 49,
                text: "取 消",
                fontSize: 30,
                font: "Microsoft YaHei",
                color: "#010101",
                bold: !0
              }
            }]
          }, {
            type: "Image",
            props: {
              y: 87,
              x: 37,
              width: 562,
              skin: "common/contenBg.png",
              height: 270,
              sizeGrid: "12,12,12,12"
            }
          }, {
            type: "TextArea",
            props: {
              y: 130,
              x: 65,
              width: 502,
              var: "desc_Lab",
              text: "飞升后会清空当前数据，且不能恢复！",
              overflow: "visible",
              mouseEnabled: !1,
              leading: 10,
              height: 200,
              fontSize: 44,
              font: "Microsoft YaHei",
              color: "#f8f4f4",
              align: "left"
            }
          }, {
            type: "Label",
            props: {
              y: 0,
              x: 195,
              width: 230,
              var: "title_Lab",
              text: "提示",
              height: 56,
              fontSize: 56,
              font: "Microsoft YaHei",
              color: "#f8f8f8",
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              y: 1,
              x: 547,
              var: "close_btn",
              skin: "common/closeBtn.png"
            }
          }]
        }]
      }, i;
    }(View);
    e.MsgBoxUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.NewLevelTipsUI.uiView);
      }, i.uiView = {
        type: "Dialog",
        props: {
          width: 720,
          height: 1280,
          cacheAs: "bitmap"
        },
        child: [{
          type: "Image",
          props: {
            y: 0,
            x: 0,
            width: 720,
            skin: "common/zhezhao.jpg",
            mouseThrough: !1,
            mouseEnabled: !0,
            height: 1680,
            alpha: .5,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 293,
            x: 113,
            width: 494,
            height: 694,
            sizeGrid: "16,17,18,13",
            skin: "common/commonbg.png",
            name: "bg"
          },
          child: [{
            type: "Button",
            props: {
              y: 21,
              x: 405,
              var: "closebtn",
              stateNum: 1,
              skin: "common/closeBtn.png"
            }
          }, {
            type: "Label",
            props: {
              text: "升官成功",
              y: 12,
              x: 127,
              width: 244,
              name: "title",
              height: 65,
              fontSize: 60,
              font: "Microsoft YaHei",
              color: "#ffffff",
              bold: !0,
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              right: 0,
              left: 0,
              sizeGrid: "12,12,12,12",
              y: 122,
              x: -2,
              width: 501,
              skin: "common/contenBg.png",
              name: "contenBg",
              height: 443
            },
            child: [{
              type: "Image",
              props: {
                y: 6,
                x: 496,
                width: 248,
                skin: "common/bglight.png",
                skewY: 180,
                height: 434
              }
            }, {
              type: "Image",
              props: {
                y: 6,
                x: 0,
                width: 248,
                skin: "common/bglight.png",
                height: 434
              }
            }, {
              type: "Image",
              props: {
                y: 83,
                x: 162,
                width: 147,
                skin: "0",
                scaleY: 1.2,
                scaleX: 1.2,
                height: 173,
                var: "icon"
              }
            }]
          }, {
            type: "Button",
            props: {
              sizeGrid: "17,18,30,15",
              y: 578,
              x: 134,
              width: 229,
              var: "confirm",
              stateNum: 1,
              skin: "common/commonBtn.png",
              height: 102
            },
            child: [{
              type: "Label",
              props: {
                y: 20,
                x: 28,
                width: 173,
                var: "shareBtnLab",
                overflow: "visible",
                height: 51,
                align: "center",
                text: "确  定",
                padding: "0,15,0,15",
                fontSize: 40,
                font: "Microsoft YaHei",
                color: "#ffffff"
              }
            }]
          }, {
            type: "Label",
            props: {
              y: 507,
              x: 249,
              width: 300,
              var: "nameLab",
              text: "label",
              pivotY: 25,
              pivotX: 150,
              height: 60,
              fontSize: 50,
              font: "Microsoft YaHei",
              color: "#fbf5f4",
              bold: !0,
              align: "center"
            }
          }]
        }]
      }, i;
    }(Dialog);
    e.NewLevelTipsUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.NoCoinTipsUI.uiView);
      }, i.uiView = {
        type: "Dialog",
        props: {
          width: 720,
          height: 1280,
          cacheAs: "bitmap"
        },
        child: [{
          type: "Image",
          props: {
            y: 0,
            x: 0,
            width: 720,
            skin: "common/zhezhao.jpg",
            height: 1680,
            alpha: .6,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 293,
            x: 113,
            width: 494,
            height: 694,
            sizeGrid: "16,17,18,13",
            skin: "common/commonbg.png",
            name: "bg"
          },
          child: [{
            type: "Button",
            props: {
              var: "closebtn",
              y: 21,
              x: 405,
              stateNum: 1,
              skin: "common/closeBtn.png"
            }
          }, {
            type: "Label",
            props: {
              y: 56,
              x: 225,
              width: 342,
              var: "titleLab",
              text: "获得奖励",
              pivotY: 40,
              pivotX: 170,
              height: 79,
              name: "title",
              fontSize: 60,
              font: "Microsoft YaHei",
              color: "#ffffff",
              bold: !0,
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              y: 122,
              x: 0,
              width: 494,
              height: 440,
              sizeGrid: "12,12,12,12",
              skin: "common/contenBg.png",
              name: "contenBg"
            },
            child: [{
              type: "Image",
              props: {
                y: 6,
                x: 496,
                width: 248,
                height: 434,
                skin: "common/bglight.png",
                skewY: 180
              }
            }, {
              type: "Image",
              props: {
                y: 6,
                x: .5,
                width: 248,
                height: 434,
                skin: "common/bglight.png"
              }
            }, {
              type: "Image",
              props: {
                y: 31,
                x: 90,
                width: 324,
                var: "iconImg",
                height: 297
              }
            }]
          }, {
            type: "Button",
            props: {
              y: 579,
              x: 253,
              var: "videoBtn",
              skin: "common/btnred.png",
              sizeGrid: "17,18,30,15",
              width: 229,
              stateNum: 1,
              height: 102
            },
            child: [{
              type: "Label",
              props: {
                y: 20,
                x: 19,
                width: 196,
                var: "videobtnLab",
                text: "观看视频",
                overflow: "visible",
                height: 58,
                align: "center",
                padding: "0,15,0,15",
                fontSize: 40,
                font: "Microsoft YaHei",
                color: "#ffffff"
              }
            }, {
              type: "Label",
              props: {
                y: -29,
                x: 132,
                width: 126,
                var: "videoTime",
                text: "30秒",
                strokeColor: "#000000",
                stroke: 2,
                overflow: "visible",
                height: 47,
                fontSize: 35,
                align: "left",
                padding: "0,15,0,15",
                font: "Microsoft YaHei",
                color: "#ffffff"
              }
            }]
          }, {
            type: "Label",
            props: {
              y: 511,
              x: 248,
              width: 300,
              var: "addCoin",
              height: 65,
              text: "label",
              pivotY: 25,
              pivotX: 150,
              fontSize: 50,
              font: "Microsoft YaHei",
              color: "#fbf5f4",
              bold: !0,
              align: "center"
            }
          }, {
            type: "Button",
            props: {
              y: 579,
              x: 18,
              var: "shareBtn",
              skin: "common/commonBtn.png",
              sizeGrid: "17,18,30,15",
              width: 229,
              stateNum: 1,
              height: 102
            },
            child: [{
              type: "Label",
              props: {
                y: 20,
                x: 19,
                width: 196,
                var: "shareBtnLab",
                text: "我要金币",
                height: 58,
                align: "center",
                padding: "0,15,0,15",
                overflow: "visible",
                fontSize: 40,
                font: "Microsoft YaHei",
                color: "#ffffff"
              }
            }]
          }]
        }]
      }, i;
    }(Dialog);
    e.NoCoinTipsUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.NoTicketsTipUI.uiView);
      }, i.uiView = {
        type: "Dialog",
        props: {
          width: 720,
          height: 1280
        },
        child: [{
          type: "Image",
          props: {
            width: 730,
            skin: "common/zhezhao.jpg",
            height: 1600,
            alpha: .6,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 425,
            x: 19,
            width: 682,
            skin: "common/commonbg.png",
            height: 451,
            sizeGrid: "16,17,18,13"
          },
          child: [{
            type: "Button",
            props: {
              y: 9,
              x: 604,
              var: "close_Btn",
              stateNum: 1,
              skin: "common/closeBtn.png"
            }
          }, {
            type: "Button",
            props: {
              y: 340,
              x: 214,
              width: 228,
              var: "confirm_btn",
              stateNum: 1,
              skin: "common/btnred.png",
              height: 83,
              sizeGrid: "15,16,24,14"
            },
            child: [{
              type: "Label",
              props: {
                y: 5,
                x: 37,
                width: 157,
                text: "确  定",
                strokeColor: "#000000",
                stroke: 2,
                height: 60,
                fontSize: 50,
                font: "Microsoft YaHei",
                color: "#ffffff",
                align: "center"
              }
            }]
          }, {
            type: "Label",
            props: {
              y: 152,
              x: 126,
              width: 456,
              text: "   券用光了噢！\\n  是否立即领取！",
              strokeColor: "#0a0905",
              stroke: 3,
              height: 152,
              fontSize: 60,
              font: "Microsoft YaHei",
              color: "#fdfdfd",
              bold: !0,
              align: "center"
            }
          }, {
            type: "Label",
            props: {
              y: 29,
              x: 220,
              text: "温馨提示",
              fontSize: 60,
              font: "Microsoft YaHei",
              bold: !0,
              align: "center"
            }
          }]
        }]
      }, i;
    }(Dialog);
    e.NoTicketsTipUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.OfflineRewardUI.uiView);
      }, i.uiView = {
        type: "Dialog",
        props: {
          top: 0,
          right: 0,
          left: 0,
          bottom: 0
        },
        child: [{
          type: "Image",
          props: {
            width: 720,
            skin: "common/zhezhao.jpg",
            name: "bg",
            height: 1680,
            alpha: .5,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 293,
            x: 113,
            width: 494,
            height: 694,
            sizeGrid: "16,17,18,13",
            skin: "common/commonbg.png",
            name: "bg"
          },
          child: [{
            type: "Button",
            props: {
              var: "closeBtn",
              y: 21,
              x: 405,
              stateNum: 1,
              skin: "common/closeBtn.png"
            }
          }, {
            type: "Label",
            props: {
              text: "离线收益",
              y: 12,
              x: 127,
              width: 244,
              name: "title",
              height: 65,
              fontSize: 60,
              font: "Microsoft YaHei",
              color: "#ffffff",
              bold: !0,
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              right: 0,
              left: 0,
              sizeGrid: "12,12,12,12",
              y: 122,
              x: -2,
              width: 501,
              skin: "common/contenBg.png",
              name: "contenBg",
              height: 443
            },
            child: [{
              type: "Image",
              props: {
                y: 6,
                x: 496,
                width: 248,
                skin: "common/bglight.png",
                skewY: 180,
                height: 434
              }
            }, {
              type: "Image",
              props: {
                y: 6,
                x: 0,
                width: 248,
                skin: "common/bglight.png",
                height: 434
              }
            }, {
              type: "Image",
              props: {
                y: 61,
                x: 98,
                width: 324,
                skin: "common/cointree.png",
                scaleY: .9,
                scaleX: .9,
                height: 297,
                var: "icon"
              }
            }]
          }, {
            type: "Button",
            props: {
              y: 581,
              x: 54,
              width: 186,
              var: "share",
              skin: "common/btnyellow.png",
              height: 80,
              sizeGrid: "17,18,30,15",
              stateNum: 1
            },
            child: [{
              type: "Label",
              props: {
                y: 22,
                x: 7,
                width: 171,
                var: "shareBtnLab",
                text: "收益翻倍",
                strokeColor: "#7a3f11",
                stroke: 3,
                height: 28,
                fontSize: 28,
                font: "Microsoft YaHei",
                align: "center",
                padding: "0,15,0,15",
                overflow: "visible",
                color: "#ffffff"
              }
            }]
          }, {
            type: "Label",
            props: {
              var: "getcoin",
              y: 507,
              x: 249,
              width: 300,
              text: "label",
              pivotY: 25,
              pivotX: 150,
              height: 60,
              fontSize: 50,
              font: "Microsoft YaHei",
              color: "#fbf5f4",
              bold: !0,
              align: "center"
            }
          }, {
            type: "Button",
            props: {
              y: 581,
              x: 278,
              width: 186,
              var: "video",
              skin: "common/btnred.png",
              height: 80,
              sizeGrid: "17,18,30,15",
              stateNum: 1
            },
            child: [{
              type: "Label",
              props: {
                y: 19,
                x: 8,
                var: "videoBtnLab",
                text: "看视频两倍",
                strokeColor: "#782c14",
                stroke: 2,
                fontSize: 28,
                font: "Microsoft YaHei",
                align: "center",
                padding: "0,15,0,15",
                overflow: "visible",
                color: "#ffffff"
              }
            }]
          }, {
            type: "Button",
            props: {
              y: 581,
              x: 154,
              width: 186,
              visible: !1,
              var: "confirm",
              skin: "common/commonBtn.png",
              height: 80,
              sizeGrid: "17,18,30,15",
              stateNum: 1
            },
            child: [{
              type: "Label",
              props: {
                y: 22,
                x: 41,
                text: "确  定",
                strokeColor: "#e99528",
                stroke: 2,
                fontSize: 28,
                padding: "0,15,0,15",
                overflow: "visible",
                font: "Microsoft YaHei",
                color: "#ffffff",
                align: "center"
              }
            }]
          }]
        }]
      }, i;
    }(Dialog);
    e.OfflineRewardUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.RankPanelUI.uiView);
      }, i.uiView = {
        type: "View",
        props: {
          width: 720,
          height: 1280
        },
        child: [{
          type: "Image",
          props: {
            y: 0,
            x: 0,
            width: 720,
            skin: "common/zhezhao.jpg",
            height: 1680,
            alpha: .5,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 110,
            x: 36,
            width: 642,
            visible: !0,
            skin: "common/commonbg.png",
            name: "bg",
            height: 948,
            sizeGrid: "16,17,18,13"
          },
          child: [{
            type: "Label",
            props: {
              y: 18,
              x: 165,
              text: "好友排行榜",
              name: "title",
              fontSize: 60,
              font: "Microsoft YaHei",
              color: "#ffffff",
              bold: !0
            }
          }]
        }, {
          type: "Panel",
          props: {
            y: 229,
            x: 36,
            width: 642,
            visible: !1,
            height: 738
          },
          child: [{
            type: "List",
            props: {
              var: "scoreList",
              top: 5,
              right: 5,
              left: 5,
              bottom: 5
            }
          }, {
            type: "Image",
            props: {
              y: 0,
              x: 0,
              width: 642,
              visible: !0,
              skin: "common/contenBg.png",
              height: 738,
              sizeGrid: "12,12,12,12"
            }
          }]
        }, {
          type: "Button",
          props: {
            y: 974,
            x: 274,
            width: 168,
            visible: !0,
            var: "inviteBtn",
            stateNum: 1,
            skin: "common/commonBtn.png",
            height: 76,
            sizeGrid: "17,18,30,15"
          },
          child: [{
            type: "Label",
            props: {
              y: 15,
              x: 24,
              text: "邀请好友",
              fontSize: 30,
              font: "Microsoft YaHei",
              color: "#ffffff",
              bold: !0
            }
          }]
        }, {
          type: "Button",
          props: {
            y: 976,
            x: 436,
            width: 168,
            visible: !1,
            var: "friendGift",
            stateNum: 1,
            skin: "common/commonBtn.png",
            height: 76,
            sizeGrid: "17,18,30,15"
          },
          child: [{
            type: "Label",
            props: {
              y: 15,
              x: 24,
              text: "好友奖励",
              fontSize: 30,
              font: "Microsoft YaHei",
              color: "#ffffff",
              bold: !0
            }
          }]
        }, {
          type: "Button",
          props: {
            y: 134,
            x: 595,
            visible: !0,
            var: "closeBtn",
            stateNum: 1,
            skin: "common/closeBtn.png"
          }
        }]
      }, i;
    }(View);
    e.RankPanelUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.RewardTipUI.uiView);
      }, i.uiView = {
        type: "Dialog",
        props: {
          width: 720,
          height: 1280,
          cacheAs: "bitmap"
        },
        child: [{
          type: "Image",
          props: {
            width: 720,
            skin: "common/zhezhao.jpg",
            mouseThrough: !1,
            mouseEnabled: !0,
            height: 1680,
            alpha: .6,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 293,
            x: 113,
            width: 494,
            height: 694,
            sizeGrid: "16,17,18,13",
            skin: "common/commonbg.png",
            name: "bg"
          },
          child: [{
            type: "Button",
            props: {
              var: "btnClose",
              y: 21,
              x: 405,
              stateNum: 1,
              skin: "common/closeBtn.png"
            }
          }, {
            type: "Label",
            props: {
              text: "恭喜获得",
              y: 12,
              x: 127,
              width: 244,
              name: "title",
              height: 65,
              fontSize: 60,
              font: "Microsoft YaHei",
              color: "#ffffff",
              bold: !0,
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              y: 122,
              x: 0,
              width: 496,
              height: 443,
              sizeGrid: "12,12,12,12",
              skin: "common/contenBg.png",
              name: "contenBg"
            },
            child: [{
              type: "Image",
              props: {
                y: 6,
                x: 496,
                width: 248,
                height: 434,
                skin: "common/bglight.png",
                skewY: 180
              }
            }, {
              type: "Image",
              props: {
                y: 6,
                x: .5,
                width: 248,
                height: 434,
                skin: "common/bglight.png"
              }
            }, {
              type: "Image",
              props: {
                y: 203,
                x: 248,
                width: 324,
                var: "iconImg",
                pivotY: 150,
                pivotX: 162,
                height: 297
              }
            }, {
              type: "Label",
              props: {
                y: 364,
                x: 33,
                width: 429,
                var: "countLab",
                text: "x800",
                height: 74,
                fontSize: 50,
                font: "Microsoft YaHei",
                color: "#ffffff",
                bold: !0,
                align: "center"
              }
            }]
          }, {
            type: "Button",
            props: {
              y: 589,
              x: 136,
              var: "confirmBtn",
              height: 83,
              sizeGrid: "17,18,30,15",
              width: 229,
              stateNum: 1,
              skin: "common/commonBtn.png"
            },
            child: [{
              type: "Label",
              props: {
                y: 12,
                x: 51,
                text: "确  定",
                padding: "0,15,0,15",
                overflow: "visible",
                fontSize: 40,
                font: "Microsoft YaHei",
                color: "#ffffff",
                align: "center"
              }
            }]
          }, {
            type: "Button",
            props: {
              y: 593,
              x: 257,
              width: 230,
              var: "videoBtn",
              skin: "common/btnred.png",
              height: 83,
              sizeGrid: "17,18,30,15",
              stateNum: 1
            },
            child: [{
              type: "Label",
              props: {
                y: 17,
                x: 18,
                var: "videoBtnLab",
                text: "看视频两倍",
                strokeColor: "#5b1212",
                stroke: 3,
                overflow: "visible",
                fontSize: 34,
                font: "Microsoft YaHei",
                align: "center",
                padding: "0,15,0,15",
                color: "#ffffff"
              }
            }, {
              type: "Label",
              props: {
                y: -29,
                x: 138,
                width: 106,
                var: "videoTime",
                text: "30秒",
                strokeColor: "#0a0202",
                stroke: 2,
                overflow: "visible",
                height: 47,
                fontSize: 35,
                font: "Microsoft YaHei",
                align: "center",
                padding: "0,15,0,15",
                color: "#ffffff"
              }
            }]
          }, {
            type: "Button",
            props: {
              y: 593,
              x: 10,
              width: 229,
              var: "shareBtn",
              skin: "common/btnyellow.png",
              height: 83,
              sizeGrid: "17,18,30,15",
              stateNum: 1
            },
            child: [{
              type: "Label",
              props: {
                y: 17,
                x: 9,
                width: 211,
                var: "shareBtnLab",
                text: "分享到群三倍",
                strokeColor: "#73451b",
                stroke: 3,
                overflow: "visible",
                height: 58,
                fontSize: 32,
                font: "Microsoft YaHei",
                align: "center",
                padding: "0,15,0,15",
                color: "#ffffff"
              }
            }]
          }]
        }]
      }, i;
    }(Dialog);
    e.RewardTipUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        var i = e.call(this) || this;
        return i.createUI(t.panel.ShopGridUI.uiView), i;
      }
      return __extends(i, e), i.prototype.createUI = function(t) {
        laya.utils.ClassUtils.createByJson(t, this, this);
      }, i.uiView = {
        type: "Box",
        props: {
          y: 0,
          x: 0,
          width: 640,
          renderType: "render",
          name: "ShopItem",
          height: 144
        },
        child: [{
          type: "Image",
          props: {
            y: 0,
            x: 0,
            width: 640,
            skin: "common/itemBg.png",
            sizeGrid: "20,2,20,2",
            name: "bg",
            height: 144
          }
        }, {
          type: "Image",
          props: {
            y: 38,
            x: 218,
            width: 154,
            var: "diamonBtn",
            skin: "common/btnyellow.png",
            height: 68,
            sizeGrid: "18,15,26,19"
          },
          child: [{
            type: "Label",
            props: {
              y: 28,
              x: 98,
              width: 73,
              var: "diamonLab",
              text: "123",
              strokeColor: "#937d00",
              stroke: 4,
              pivotY: 11,
              pivotX: 38,
              overflow: "visible",
              height: 24,
              fontSize: 24,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Image",
            props: {
              y: 14,
              x: 11,
              skin: "main/diamon.png"
            }
          }]
        }, {
          type: "Button",
          props: {
            y: 38,
            x: 426,
            width: 186,
            var: "confirm",
            stateNum: 1,
            skin: "common/commonBtn.png",
            height: 68,
            sizeGrid: "17,18,30,15"
          },
          child: [{
            type: "Image",
            props: {
              y: 12,
              x: 15,
              width: 40,
              skin: "common/coin.png",
              height: 40
            }
          }, {
            type: "Label",
            props: {
              y: 36,
              x: 116,
              width: 133,
              var: "coinLabel",
              text: "name",
              strokeColor: "#003872",
              stroke: 3,
              pivotY: 19,
              pivotX: 68,
              overflow: "visible",
              height: 34,
              fontSize: 24,
              font: "Microsoft YaHei",
              color: "#fff9f9",
              align: "center"
            }
          }]
        }, {
          type: "Button",
          props: {
            y: 33,
            x: 432,
            var: "unlockBtn",
            stateNum: 1,
            skin: "common/unlockBtn.png"
          },
          child: [{
            type: "Label",
            props: {
              y: 46,
              x: 142,
              width: 47,
              var: "unlockLevel",
              text: "22",
              pivotY: 17,
              pivotX: 25,
              overflow: "visible",
              height: 34,
              fontSize: 24,
              font: "Microsoft YaHei",
              color: "#fff9f9",
              align: "center"
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 57,
            x: 24,
            width: 36,
            skin: "main/slotLevelbg.png",
            height: 50
          },
          child: [{
            type: "Label",
            props: {
              y: 24,
              x: 18,
              width: 30,
              var: "levelLab",
              text: "21",
              pivotY: 15,
              pivotX: 15,
              overflow: "visible",
              height: 30,
              fontSize: 24,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "center"
            }
          }]
        }, {
          type: "Image",
          props: {
            y: -25,
            x: 57,
            var: "headIcon",
            skin: "icon/01.png",
            scaleY: .75,
            scaleX: .75
          }
        }, {
          type: "Label",
          props: {
            y: 124,
            x: 84,
            width: 119,
            var: "itemName",
            text: "name",
            strokeColor: "#8c4b00",
            stroke: 2,
            pivotY: 15,
            pivotX: 60,
            overflow: "visible",
            height: 31,
            fontSize: 26,
            font: "Microsoft YaHei",
            color: "#fff9f9",
            align: "left"
          }
        }]
      }, i;
    }(Laya.Box);
    e.ShopGridUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.ShopListUI.uiView);
      }, i.uiView = {
        type: "Dialog",
        props: {
          width: 720,
          height: 1280,
          alpha: 1
        },
        child: [{
          type: "Image",
          props: {
            y: 0,
            width: 800,
            skin: "common/zhezhao.jpg",
            height: 1680,
            alpha: .5,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 135,
            x: 39,
            width: 642,
            var: "bg",
            skin: "common/commonbg.png",
            height: 948,
            sizeGrid: "16,17,18,13"
          },
          child: [{
            type: "Button",
            props: {
              y: 32,
              x: 542,
              var: "closebtn",
              stateNum: 1,
              skin: "common/closeBtn.png"
            }
          }, {
            type: "Image",
            props: {
              y: 32,
              x: 52,
              width: 274,
              skin: "main/producebg.png",
              height: 67,
              sizeGrid: "20,20,20,20"
            },
            child: [{
              type: "Label",
              props: {
                y: 0,
                x: 48,
                width: 220,
                var: "coinlab",
                text: "2222",
                strokeColor: "#003827",
                stroke: 2,
                height: 51,
                fontSize: 60,
                font: "Arial",
                color: "#f9f6f6",
                align: "center"
              }
            }, {
              type: "Image",
              props: {
                y: -10,
                x: -28,
                skin: "common/coin.png"
              }
            }]
          }, {
            type: "Image",
            props: {
              x: 1,
              width: 640,
              skin: "common/contenBg.png",
              name: "bg2",
              height: 804,
              bottom: 13,
              sizeGrid: "12,12,12,12"
            },
            child: [{
              type: "List",
              props: {
                var: "listpanel",
                top: 0,
                right: 0,
                left: 0,
                bottom: 0
              }
            }]
          }]
        }]
      }, i;
    }(Dialog);
    e.ShopListUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.SpeedUpUI.uiView);
      }, i.uiView = {
        type: "Dialog",
        props: {
          cacheAs: "normal"
        },
        child: [{
          type: "Image",
          props: {
            width: 720,
            skin: "common/zhezhao.jpg",
            height: 1600,
            alpha: .6,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 293,
            x: 113,
            width: 492,
            skin: "common/commonbg.png",
            height: 694,
            sizeGrid: "16,17,18,13"
          },
          child: [{
            type: "Image",
            props: {
              y: 121,
              x: 0,
              width: 492,
              skin: "common/contenBg.png",
              height: 548,
              sizeGrid: "12,12,12,12"
            }
          }, {
            type: "Button",
            props: {
              y: 16,
              x: 408,
              var: "btnclose",
              stateNum: 1,
              skin: "common/closeBtn.png",
              name: "btnclose"
            }
          }, {
            type: "Button",
            props: {
              y: 260,
              x: 97,
              width: 298,
              var: "btnfree",
              stateNum: 1,
              skin: "common/commonBtn.png",
              name: "btnfree",
              height: 124,
              sizeGrid: "17,18,30,15"
            },
            child: [{
              type: "Label",
              props: {
                y: 12,
                x: 73,
                text: "加速60秒",
                strokeColor: "#264a8b",
                stroke: 4,
                overflow: "visible",
                fontSize: 36,
                font: "Microsoft YaHei",
                color: "#ffffff"
              }
            }, {
              type: "Label",
              props: {
                y: 64,
                x: 153,
                text: " x10",
                overflow: "visible",
                fontSize: 30,
                font: "Microsoft YaHei",
                color: "#ffffff",
                align: "left"
              }
            }, {
              type: "Image",
              props: {
                y: 66,
                x: 99,
                skin: "main/diamon.png"
              }
            }]
          }, {
            type: "Button",
            props: {
              y: 425,
              x: 97,
              width: 298,
              visible: !1,
              var: "btnvideo",
              stateNum: 1,
              skin: "common/commonBtn.png",
              name: "btnvideo",
              height: 124,
              sizeGrid: "17,18,30,15"
            },
            child: [{
              type: "Label",
              props: {
                y: 12,
                x: 52,
                text: "加速200 秒",
                strokeColor: "#264a8b",
                stroke: 4,
                overflow: "visible",
                fontSize: 38,
                font: "Microsoft YaHei",
                color: "#ffffff"
              }
            }, {
              type: "Label",
              props: {
                y: 65,
                x: 83,
                text: "观看视频",
                strokeColor: "#007bac",
                stroke: 1,
                overflow: "visible",
                fontSize: 30,
                font: "Microsoft YaHei",
                color: "#ffffff"
              }
            }]
          }, {
            type: "Button",
            props: {
              y: 500,
              x: 95,
              width: 310,
              visible: !1,
              var: "btnshare",
              stateNum: 1,
              skin: "common/commonBtn.png",
              name: "btnshare",
              height: 120,
              sizeGrid: "17,18,30,15"
            },
            child: [{
              type: "Label",
              props: {
                y: 12,
                x: 62,
                text: "加速300 秒",
                strokeColor: "#264a8b",
                stroke: 4,
                overflow: "visible",
                fontSize: 36,
                font: "Microsoft YaHei",
                color: "#ffffff"
              }
            }, {
              type: "Label",
              props: {
                y: 60,
                x: 95,
                text: "分享到群",
                strokeColor: "#007abc",
                stroke: 2,
                overflow: "visible",
                fontSize: 30,
                font: "Microsoft YaHei",
                color: "#ffffff"
              }
            }]
          }, {
            type: "Label",
            props: {
              y: 8,
              x: 168,
              text: "加  速",
              fontSize: 60,
              font: "Microsoft YaHei",
              color: "#fbfbfb",
              bold: !0
            }
          }]
        }]
      }, i;
    }(Dialog);
    e.SpeedUpUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        return e.call(this) || this;
      }
      return __extends(i, e), i.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), this.createView(t.panel.SupriseUI.uiView);
      }, i.uiView = {
        type: "View",
        props: {
          width: 720,
          height: 1280
        },
        child: [{
          type: "Image",
          props: {
            width: 720,
            skin: "common/zhezhao.jpg",
            name: "bg",
            height: 1680,
            alpha: .5,
            sizeGrid: "8,10,7,7"
          }
        }, {
          type: "Image",
          props: {
            y: 329,
            x: 79,
            width: 562,
            skin: "common/commonbg.png",
            height: 510,
            sizeGrid: "16,17,18,13"
          },
          child: [{
            type: "Image",
            props: {
              y: 10,
              x: 481,
              visible: !1,
              var: "topclose_btn",
              skin: "common/closeBtn.png"
            }
          }, {
            type: "Image",
            props: {
              y: 127,
              x: 0,
              width: 562,
              skin: "common/contenBg.png",
              height: 270,
              sizeGrid: "12,12,12,12"
            }
          }, {
            type: "Image",
            props: {
              y: 138,
              x: 149,
              skin: "common/diamon2.png"
            }
          }, {
            type: "Label",
            props: {
              y: 350,
              x: 168,
              width: 206,
              var: "diamon_Lab",
              text: "label",
              height: 47,
              fontSize: 30,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "center"
            }
          }, {
            type: "Label",
            props: {
              y: 24,
              x: 101,
              text: "再来一份惊喜",
              fontSize: 60,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "center"
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 749,
            x: 266,
            width: 188,
            var: "confirm_btn",
            skin: "common/commonBtn.png",
            height: 78,
            sizeGrid: "17,18,30,15"
          },
          child: [{
            type: "Label",
            props: {
              y: 13,
              x: 39,
              width: 109,
              text: "领  取",
              height: 35,
              fontSize: 35,
              font: "Microsoft YaHei",
              color: "#fdfdfd",
              align: "center"
            }
          }]
        }, {
          type: "Label",
          props: {
            y: 862,
            x: 279,
            width: 161,
            var: "close_btn",
            underlineColor: "#ffffff",
            underline: !0,
            text: "不，谢谢>",
            height: 40,
            fontSize: 30,
            font: "Microsoft YaHei",
            color: "#ffffff",
            bold: !0,
            align: "center"
          }
        }]
      }, i;
    }(View);
    e.SupriseUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        var i = e.call(this) || this;
        return i.createUI(t.panel.UICommonSlotUI.uiView), i;
      }
      return __extends(i, e), i.prototype.createUI = function(t) {
        laya.utils.ClassUtils.createByJson(t, this, this);
      }, i.uiView = {
        type: "Box",
        props: {
          y: 0,
          x: 0,
          width: 100,
          height: 100
        },
        child: [{
          type: "Image",
          props: {
            y: 0,
            x: 0,
            width: 100,
            skin: "common/headBg.png",
            height: 100,
            sizeGrid: "6,6,6,6"
          }
        }, {
          type: "Image",
          props: {
            y: 30,
            x: 68,
            skin: "common/addBg.png",
            skewY: 180
          }
        }, {
          type: "Image",
          props: {
            y: 47,
            x: 48,
            width: 95,
            var: "Icon",
            pivotY: 45,
            pivotX: 45,
            height: 95
          }
        }]
      }, i;
    }(Laya.Box);
    e.UICommonSlotUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        var i = e.call(this) || this;
        return i.createUI(t.panel.UIGameGridUI.uiView), i;
      }
      return __extends(i, e), i.prototype.createUI = function(t) {
        laya.utils.ClassUtils.createByJson(t, this, this);
      }, i.uiView = {
        type: "Box",
        props: {
          y: 0,
          x: 0,
          width: 100,
          height: 120
        },
        child: [{
          type: "Image",
          props: {
            y: 0,
            x: 0,
            width: 100,
            var: "iconImg",
            height: 100
          }
        }, {
          type: "Label",
          props: {
            y: 96,
            x: 5,
            width: 90,
            var: "nameLab",
            text: "name",
            strokeColor: "#133988",
            stroke: 3,
            height: 24,
            fontSize: 20,
            font: "Microsoft YaHei",
            color: "#ffffff",
            align: "center"
          }
        }, {
          type: "Image",
          props: {
            y: -4,
            x: 76,
            var: "tip_img",
            skin: "main/redtip.png"
          }
        }]
      }, i;
    }(Laya.Box);
    e.UIGameGridUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        var i = e.call(this) || this;
        return i.createUI(t.panel.UIInviteGridUI.uiView), i;
      }
      return __extends(i, e), i.prototype.createUI = function(t) {
        laya.utils.ClassUtils.createByJson(t, this, this);
      }, i.uiView = {
        type: "Image",
        props: {
          y: 0,
          x: 0,
          width: 164,
          skin: "loginReward/ceilBg.png",
          height: 408,
          cacheAs: "bitmap",
          sizeGrid: "14,26,21,24"
        },
        child: [{
          type: "Label",
          props: {
            y: 29,
            x: 82,
            width: 110,
            var: "namelab",
            text: "力王22",
            strokeColor: "#937d00",
            stroke: 4,
            pivotY: 14,
            pivotX: 55,
            height: 28,
            fontSize: 26,
            font: "Microsoft YaHei",
            color: "#fffbfb",
            align: "center"
          }
        }, {
          type: "Image",
          props: {
            y: 170,
            x: 57,
            skin: "main/diamon.png",
            scaleY: 1.2,
            scaleX: 1.2,
            name: "diamon"
          }
        }, {
          type: "Label",
          props: {
            y: 253,
            x: 82,
            width: 104,
            var: "diamonLab",
            text: "666",
            strokeColor: "#937d00",
            stroke: 4,
            pivotY: 20,
            pivotX: 49,
            height: 40,
            fontSize: 30,
            font: "Microsoft YaHei",
            color: "#ffffff",
            align: "center"
          }
        }, {
          type: "Button",
          props: {
            y: 321,
            x: 15,
            width: 134,
            var: "btndraw",
            stateNum: 1,
            skin: "common/commonBtn.png",
            height: 68,
            sizeGrid: "17,18,30,15"
          },
          child: [{
            type: "Label",
            props: {
              y: 14,
              x: 30,
              text: "领  取",
              strokeColor: "#125069",
              stroke: 3,
              fontSize: 28,
              font: "Microsoft YaHei",
              color: "#ffffff",
              bold: !1
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 316,
            x: 25,
            var: "drawImg",
            skin: "loginReward/draw.png"
          }
        }, {
          type: "Image",
          props: {
            y: 48,
            x: 39,
            width: 85,
            var: "headbg",
            skin: "common/headBg.png",
            name: "headbg",
            height: 83,
            sizeGrid: "6,6,6,6"
          },
          child: [{
            type: "Image",
            props: {
              y: 22,
              x: 23,
              skin: "common/addBg.png"
            }
          }, {
            type: "Image",
            props: {
              y: 5,
              x: 5,
              var: "headicon",
              top: 5,
              right: 5,
              left: 5,
              bottom: 5
            }
          }]
        }]
      }, i;
    }(Laya.Image);
    e.UIInviteGridUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {})),
function(t) {
  ! function(e) {
    var i = function(e) {
      function i() {
        var i = e.call(this) || this;
        return i.createUI(t.panel.UISlotGridUI.uiView), i;
      }
      return __extends(i, e), i.prototype.createUI = function(t) {
        laya.utils.ClassUtils.createByJson(t, this, this);
      }, i.uiView = {
        type: "Box",
        props: {
          y: 200,
          x: 75,
          width: 150,
          pivotY: 200,
          pivotX: 75,
          height: 200
        },
        child: [{
          type: "Image",
          props: {
            y: 127,
            x: -3,
            var: "bg_img",
            skin: "main/slotBg.png",
            name: "bg"
          }
        }, {
          type: "Image",
          props: {
            y: 65,
            x: 75,
            var: "iconGray",
            name: "iconGray"
          }
        }, {
          type: "Label",
          props: {
            y: 93,
            x: 78,
            width: 171,
            var: "addcoin",
            text: "+30",
            pivotY: 20,
            pivotX: 88,
            overflow: "visible",
            name: "addcoin",
            height: 42,
            fontSize: 30,
            font: "Microsoft YaHei",
            color: "#fefffb",
            bold: !0,
            align: "center"
          }
        }, {
          type: "Image",
          props: {
            y: 109,
            x: 2,
            var: "levelBg",
            skin: "main/slotLevelbg.png"
          },
          child: [{
            type: "Label",
            props: {
              y: 10,
              x: -4,
              width: 40,
              var: "levelLba",
              text: "12",
              height: 24,
              fontSize: 20,
              font: "Microsoft YaHei",
              color: "#ffffff",
              align: "center"
            }
          }]
        }, {
          type: "Image",
          props: {
            y: 83,
            x: 99,
            width: 142,
            var: "icon",
            pivotY: 97,
            pivotX: 71,
            name: "icon",
            height: 194
          }
        }]
      }, i;
    }(Laya.Box);
    e.UISlotGridUI = i;
  }(t.panel || (t.panel = {}));
}(ui || (ui = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      var i = e.call(this, t) || this;
      return i._slotArray = [], i._clickBuyBtnCount = 0, i._lastMouseX = i._lastMouseY = 0,
        i._isRegisterEvent = !1, i;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._arenaPnl || (this._arenaPnl = new ui.panel.ArenaMainUI(), this._floatGame = new t.FloatGameUI(this._arenaPnl.floatGame_img),
          this._arenaPnl.bottomBox.y = Laya.stage.height - 200, Laya.stage.on(Laya.Event.RESIZE, this, this.onResize)),
        this._arenaPnl;
    }, i.prototype.onResize = function() {
      this._arenaPnl.bottomBox.y = Laya.stage.height - 200;
    }, i.prototype._onCombineAnimOver = function() {
      this._combineAnim.visible = !0;
    }, i.prototype.registerEventListener = function(t, e) {
      asgard.events.EventsDispatcher.registerEventListener(t, this, e);
    }, i.prototype.unregisterEventListener = function(t, e) {
      asgard.events.EventsDispatcher.unregisterEventListener(t, this, e);
    }, i.prototype.registerEvent = function() {
      this._isRegisterEvent || (this._isRegisterEvent = !0, this.registerEventListener(t.GameEvents.EVENT_COLSE_NOCOIN, this._onCloseNoCoin),
        this.registerEventListener(t.GameEvents.EVENT_UPDATE_COIN, this._onUpdateCoin),
        this.registerEventListener(t.GameEvents.EVENT_UPDATE_DIAMON, this._onUpdateDiamon),
        this.registerEventListener(t.GameEvents.EVENT_ADD_SLOT, this._onAddSlot), this.registerEventListener(t.GameEvents.EVENT_REMOVE_SLOT, this._onRemoveSlot),
        this.registerEventListener(t.GameEvents.EVENT_UPDATE_PER_GETCOIN, this._onUpdatePerGetCoin),
        this.registerEventListener(t.GameEvents.EVENT_GET_SHOP_LIST, this._onUpdateSettingItemPrice),
        this.registerEventListener(t.GameEvents.EVENT_COMBINE_NEW, this._updateLevel), this.registerEventListener(t.GameEvents.EVENT_GAME_ONHIDE, this._onReset),
        this.registerEventListener(t.GameEvents.EVENT_UPDATE_SPEED_TIME, this._onUpdateSpeedUpInfo),
        this.registerEventListener(t.GameEvents.EVENT_UPDATE_ITEM_BUY_COUNT, this._onUpdateSettingItemPrice),
        this.registerEventListener(t.GameEvents.EVENT_SHOW_BOX, this._showBoxAnim), this.registerEventListener(t.GameEvents.EVENT_HIDE_BOX, this._hideBoxAnim),
        this.registerEventListener(t.GameEvents.EVENT_UPDATE_SLOT_OVER, this._slotProcessOver),
        this.registerEventListener(t.GameEvents.EVENT_UPDATE_LOGIN_REWARD, this._updateLoginTip),
        this.registerEventListener(t.GameEvents.EVENT_UPDATE_INVITE_DRAW, this._updateIniviteTip),
        this.registerEventListener(t.GameEvents.EVENT_START_GUIDE, this._onGuideStart),
        this.registerEventListener(t.GameEvents.EVENT_VIDEO_AD_OPEN, this._onShowVideoAd),
        this.registerEventListener(t.GameEvents.EVENT_VIDEO_AD_CLOSE, this._onCloseVideoAd),
        this.registerEventListener(t.GameEvents.EVENT_GAME_ONSHOW, this._refresh), this.registerEventListener(t.GameEvents.EVENT_TRIGGER_GUIDE_OVER, this._onShowFinger));
    }, i.prototype.unRegiterEvent = function() {
      0 != this._isRegisterEvent && (this._isRegisterEvent = !1, this.unregisterEventListener(t.GameEvents.EVENT_COLSE_NOCOIN, this._onCloseNoCoin),
        this.unregisterEventListener(t.GameEvents.EVENT_UPDATE_COIN, this._onUpdateCoin),
        this.unregisterEventListener(t.GameEvents.EVENT_UPDATE_DIAMON, this._onUpdateDiamon),
        this.unregisterEventListener(t.GameEvents.EVENT_ADD_SLOT, this._onAddSlot), this.unregisterEventListener(t.GameEvents.EVENT_REMOVE_SLOT, this._onRemoveSlot),
        this.unregisterEventListener(t.GameEvents.EVENT_UPDATE_PER_GETCOIN, this._onUpdatePerGetCoin),
        this.unregisterEventListener(t.GameEvents.EVENT_GET_SHOP_LIST, this._onUpdateSettingItemPrice),
        this.unregisterEventListener(t.GameEvents.EVENT_COMBINE_NEW, this._updateLevel),
        this.unregisterEventListener(t.GameEvents.EVENT_GAME_ONHIDE, this._onReset), this.unregisterEventListener(t.GameEvents.EVENT_UPDATE_SPEED_TIME, this._onUpdateSpeedUpInfo),
        this.unregisterEventListener(t.GameEvents.EVENT_UPDATE_ITEM_BUY_COUNT, this._onUpdateSettingItemPrice),
        this.unregisterEventListener(t.GameEvents.EVENT_SHOW_BOX, this._showBoxAnim), this.unregisterEventListener(t.GameEvents.EVENT_HIDE_BOX, this._hideBoxAnim),
        this.unregisterEventListener(t.GameEvents.EVENT_UPDATE_SLOT_OVER, this._slotProcessOver),
        this.unregisterEventListener(t.GameEvents.EVENT_UPDATE_LOGIN_REWARD, this._updateLoginTip),
        this.unregisterEventListener(t.GameEvents.EVENT_UPDATE_INVITE_DRAW, this._updateIniviteTip),
        this.unregisterEventListener(t.GameEvents.EVENT_START_GUIDE, this._onGuideStart),
        this.unregisterEventListener(t.GameEvents.EVENT_VIDEO_AD_OPEN, this._onShowVideoAd),
        this.unregisterEventListener(t.GameEvents.EVENT_VIDEO_AD_CLOSE, this._onCloseVideoAd),
        this.unregisterEventListener(t.GameEvents.EVENT_GAME_ONSHOW, this._refresh), this.registerEventListener(t.GameEvents.EVENT_TRIGGER_GUIDE_OVER, this._onShowFinger));
    }, i.prototype.registerBtn = function() {
      this._arenaPnl.shopBtn.on(Laya.Event.CLICK, this, this.onBtnList), this._arenaPnl.addBtn.on(Laya.Event.CLICK, this, this._onReqAddSlot),
        this._arenaPnl.btnrecovery.on(Laya.Event.MOUSE_UP, this, this._onRecovery), this._arenaPnl.rank.on(Laya.Event.CLICK, this, this._onRankBtn),
        this._arenaPnl.login.on(Laya.Event.CLICK, this, this._onLoginDayBtn), this._arenaPnl.speedUpBtn.on(Laya.Event.CLICK, this, this._onSpeedUpBtn),
        this._arenaPnl.invite.on(Laya.Event.CLICK, this, this._btnInvite), this._arenaPnl.boxRoot.on(Laya.Event.CLICK, this, this._onBtnBox),
        this._arenaPnl.friendHelp.on(Laya.Event.CLICK, this, this._onFriendHelpBtn), this._arenaPnl.adddiamon.on(Laya.Event.CLICK, this, this._onAddDiamon),
        this._arenaPnl.moregameBTn.on(Laya.Event.CLICK, this, this._onMoreGame), this._arenaPnl.testBtn.on(Laya.Event.CLICK, this, this._onTestBtn),
        this._arenaPnl.howplay.on(Laya.Event.CLICK, this, this._howPlay), this._arenaPnl.daygiftBtn.on(Laya.Event.CLICK, this, this._inViteLogin),
        this._arenaPnl.luckWheel_btn.on(Laya.Event.CLICK, this, this._onLuckWheel), this._arenaPnl.feisheng_btn.on(Laya.Event.CLICK, this, this._onFeisheng),
        this._arenaPnl.BtnCustomerService.on(Laya.Event.CLICK, this, this._onCustomerService);
    }, i.prototype._refresh = function() {
      if (this._updateLevel(), this._onUpdateCoin(), this._onUpdateDiamon(), this._onUpdatePerGetCoin(),
        this._onUpdateSpeedUpInfo(), this._onUpdateSettingItemPrice(), this._slotModule.fillSlot(),
        this._updateLoginTip(), this._updateIniviteTip(), this._arenaPnl.mainBg.skin = this._playerModule.Player.turnRound > 0 ? t.CommonRes.UI_MAIN_BG2 : t.CommonRes.UI_MAIN_BG,
        this._playerModule.Player.turnRound > 0)
        for (var e = 0; e < this._slotArray.length; e++) {
          var i = this._slotArray[e];
          i && i.setBg();
        }
      this._arenaPnl.fly_tip.visible = this._playerModule.Player.turnRound > 0;
    }, i.prototype._onFeisheng = function() {
      asgard.ui.UIManager.openView(t.UIPanelID.FLYTIP);
    }, i.prototype._onCustomerService = function() {
      openCustomerServiceConversation();
    }, i.prototype._onOpenCSSuccess = function(t) {
      console.error("_onOpenCSSuccess ", t);
    }, i.prototype._onLuckWheel = function() {
      Laya.Browser.onPC ? asgard.ui.UIManager.openView(t.UIPanelID.LUCKYWHEEL) : this._playerModule.openLuckWheel();
    }, i.prototype._inViteLogin = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), IsMiniGame() ? this._socialModule.inviteFriend.invitePlayerQuery(Laya.Handler.create(null, function() {
        asgard.ui.UIManager.openView(t.UIPanelID.INVITELOGIN);
      })) : asgard.ui.UIManager.openView(t.UIPanelID.INVITELOGIN);
    }, i.prototype._howPlay = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.openView(t.UIPanelID.HOWPLAY);
    }, i.prototype._onTestBtn = function() {
      this._slotModule.offlineCoin = 1e3, asgard.ui.UIManager.openView(t.UIPanelID.OFFLINETIP);
    }, i.prototype._onMoreGame = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.openView(t.UIPanelID.MOREGAME);
    }, i.prototype._onTable = function() {}, i.prototype._onShowVideoAd = function() {
      this._showVideoAd = !0;
    }, i.prototype._onCloseVideoAd = function() {
      this._showVideoAd = !1;
    }, i.prototype._showMoreGame = function() {
      if (t.ShareInfo.Instance().showMoreGame)
        if (console.error("loginMp ===== " + t.PlatForm.GetInstance().loginMp),
          "mp" == t.PlatForm.GetInstance().loginMp) {
          var e = t.ShareInfo.Instance().ismp;
          this._arenaPnl.moregameBTn.visible = !e;
        } else this._arenaPnl.moregameBTn.visible = !0;
      else this._arenaPnl.moregameBTn.visible = !1;
    }, i.prototype.onShow = function() {
      console.error("----------onshow--------"), this._showAdTime = 0, this._canShowAd = !0;
      var e = t.PlatForm.GetInstance().SystemInfo;
      if (e) {
        var i = e.model.search("iPhone X");
        console.log("indexindex" + i + e.model), (i >= 0 || IsLongScreen) && (this._arenaPnl.topRoot.y = 40);
      } else IsLongScreen && (this._arenaPnl.topRoot.y = 40);
      this._floatGame.onShow(), this._showVideoAd = !1, this._arenaPnl.fingetTip_Img.visible = !1,
        Laya.Browser.onMiniGame && (this._arenaPnl.testBtn.visible = !1), this._arenaPnl.feisheng_btn.visible = !1,
        this._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER), this._slotModule = asgard.module.ModuleManager.getModule(t.MODULE_SLOT),
        this._itemListModule = asgard.module.ModuleManager.getModule(t.MODULE_LIST), this._socialModule = asgard.module.ModuleManager.getModule(t.MODULE_SOCIAL),
        this._arenaPnl.mainBg.skin = this._playerModule.Player.turnRound > 0 ? t.CommonRes.UI_MAIN_BG2 : t.CommonRes.UI_MAIN_BG,
        this._arenaPnl.fly_tip.visible = this._playerModule.Player.turnRound > 0, this._showMoreGame(),
        this.registerEvent(), this.registerBtn(), this._onUpdateCoin(), this._onUpdateDiamon(),
        this._onUpdatePerGetCoin(), this._onUpdateSettingItemPrice(), this._arenaPnl.speedUpTime.visible = !1,
        this._arenaPnl.speedUpBtn.mouseEnabled = !0, this._createSlot(), this._setRoleInfo(),
        this._slotModule.fillSlot(), this._createCombineAnim(), this._updateLoginTip(),
        this._updateIniviteTip(), this._arenaPnl.rankTip.visible = !1, this._arenaPnl.recoveryCoin.visible = !1,
        this._arenaPnl.friendHelp.visible = !1, this._hideBoxAnim(), this._touchId = -1,
        this._addFromSetting = !1, Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this._onMouseDown),
        this._timeLine = new Laya.TimeLine(), this._timeLine2 = new Laya.TimeLine(), this._coinTweening = !1,
        this._coinTimeLine = new Laya.TimeLine(), this._coinTimeLine.to(this._arenaPnl.coin, {
          scaleX: 1.3,
          scaleY: 1.3
        }, 100, Laya.Ease.circOut, 0).to(this._arenaPnl.coin, {
          scaleX: 1.3,
          scaleY: 1.3
        }, 50, null, 0).to(this._arenaPnl.coin, {
          scaleX: 1,
          scaleY: 1
        }, 100, Laya.Ease.circIn, 0), this._coinTimeLine.on(Laya.Event.COMPLETE, this, this._onTweenCoinComplete);
    }, i.prototype._onFriendHelpBtn = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.openView(t.UIPanelID.FRIENDHELP);
    }, i.prototype._onAddDiamon = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.openView(t.UIPanelID.INVITEFRIEND);
    }, i.prototype._updateLoginTip = function() {
      0 == this._playerModule.Player.loginDays && (this._playerModule.Player.loginDays = 1),
        this._arenaPnl.loginTip.visible = this._playerModule.Player.loginDays > this._playerModule.Player.loginRewardDays;
    }, i.prototype._updateIniviteTip = function() {
      this._arenaPnl.ionviteTip.visible = this._socialModule.inviteFriend.canGetReward();
    }, i.prototype._onMouseMove = function(e) {
      this._touchId == e.touchId && (2 == this._playerModule.guideStep && t.UIFactory.guidePanel && 0 == t.UIFactory.guidePanel.CheckCanMove(e.stageX, e.stageY) || null != this._currSelectSlot && this._currSelectSlot.setIconPos(e.stageX - this._lastMouseX, e.stageY - this._lastMouseY));
    }, i.prototype._getClickGrid = function(t, e) {
      for (var i = 0; i < this._slotArray.length; i++) {
        var n = this._slotArray[i];
        if (n && n.checkClick(t, e)) return n;
      }
      return null;
    }, i.prototype._onMouseDown = function(t) {
      t.target == this._arenaPnl.mainBg && (this._touchId >= 0 || (this._currSelectSlot = this._getClickGrid(t.stageX, t.stageY),
        null != this._currSelectSlot && 0 != this._currSelectSlot.isFill() && (this._touchId = t.touchId,
          this._lastMouseX = t.stageX, this._lastMouseY = t.stageY, Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this._onMouseMove),
          Laya.stage.on(Laya.Event.MOUSE_UP, this, this._onMouseUp), this._currSelectSlot.setToptoParent())));
    }, i.prototype._onMouseUp = function(e) {
      if (this._touchId == e.touchId) {
        this._touchId = -1, Laya.stage.off(Laya.Event.MOUSE_UP, this, this._onMouseUp),
          Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this._onMouseMove);
        var i = !1;
        if (2 == this._playerModule.guideStep && t.UIFactory.guidePanel && 0 == t.UIFactory.guidePanel.CheckCanMove(e.stageX, e.stageY) && (i = !0),
          null != this._currSelectSlot) {
          var n = this._getClickGrid(e.stageX, e.stageY);
          if (null == n || n == this._currSelectSlot || i) return this._currSelectSlot.resetIconPos(),
            void(this._currSelectSlot = null);
          if (0 == n.isFill()) this._slotModule.changeSlotPos(this._currSelectSlot.SlotInfo, this._currSelectSlot.slotIndex, n.slotIndex);
          else if (this._currSelectSlot.SlotInfo.Post.Id != n.SlotInfo.Post.Id) {
            this._slotModule.swapSlot(this._currSelectSlot.SlotInfo, n.slotIndex, n.SlotInfo, this._currSelectSlot.slotIndex);
            asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_TRIGGER_GUIDE_CLOSE);
          } else {
            if (asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_TRIGGER_GUIDE_CLOSE), !this._slotModule.canCombine(this._currSelectSlot.SlotInfo.Post.Id)) return this._currSelectSlot.resetIconPos(),
              t.CommonUI.Tips.show("已到最高等级"), void(this._currSelectSlot = null);
            this._doCombineAnim(this._currSelectSlot.SlotInfo.Post, n, this._currSelectSlot.slotIndex, n.slotIndex),
              this._currSelectSlot.remove();
          }
          this._currSelectSlot = null;
        }
      }
    }, i.prototype._onBtnBox = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.openView(t.UIPanelID.BOXREWARD);
    }, i.prototype._showBoxAnim = function() {
      this._arenaPnl.boxRoot.visible = !0, this._arenaPnl.boxRoot.pos(-200, this._arenaPnl.boxRoot.y),
        this._arenaPnl.boxAnim.play(0, !0);
    }, i.prototype._hideBoxAnim = function() {
      this._arenaPnl.boxRoot.visible = !1;
    }, i.prototype._onSpeedUpBtn = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.openView(t.UIPanelID.SPEEDUP);
    }, i.prototype._btnInvite = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), IsMiniGame() ? this._socialModule.inviteFriend.invitePlayerQuery(Laya.Handler.create(null, function() {
        asgard.ui.UIManager.openView(t.UIPanelID.INVITEFRIEND);
      })) : asgard.ui.UIManager.openView(t.UIPanelID.INVITEFRIEND);
    }, i.prototype._onUpdateSpeedUpInfo = function() {
      if (this._arenaPnl.speedUpTime.changeText(this._playerModule.Player.LeftTime + "秒"),
        this._playerModule.Player.LeftTime <= 0) this._arenaPnl.speedUpTime.visible = !1,
        this._arenaPnl.speedUpBtn.mouseEnabled = !0, this._arenaPnl.speedUpBtn.filters = null;
      else if (0 == this._arenaPnl.speedUpTime.visible) {
        this._arenaPnl.speedUpTime.visible = !0, this._arenaPnl.speedUpBtn.mouseEnabled = !1;
        var t = new Laya.ColorFilter([.3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, 0, 0, 0, 1, 0]);
        this._arenaPnl.speedUpBtn.filters = [t];
      }
    }, i.prototype._onRankBtn = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.openView(t.UIPanelID.RANKLIST);
    }, i.prototype._onLoginDayBtn = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.openView(t.UIPanelID.LOGINDAY);
    }, i.prototype._updateLevel = function() {
      var e = this._itemListModule.findItemByLevel(this._itemListModule.currOpenLevel);
      e && this._arenaPnl.levelName.changeText(e.Name), this._onUpdateSettingItemPrice(),
        this._itemListModule.currOpenLevel >= t.GameConst.EMPEROR_LEVEL ? this._arenaPnl.feisheng_btn.visible = !0 : this._arenaPnl.feisheng_btn.visible = !1;
    }, i.prototype._setRoleInfo = function() {
      this._updateLevel();
    }, i.prototype._createCombineAnim = function() {
      this._combineLeft = new Laya.Image(), this._arenaPnl.slotIconRoot.addChild(this._combineLeft),
        this._combineRight = new Laya.Image(), this._arenaPnl.slotIconRoot.addChild(this._combineRight),
        this._combineLeft.visible = !1, this._combineRight.visible = !1;
      var e = new Laya.Animation();
      e.loadAtlas(t.CommonRes.UI_EFFECT), e.interval = 60, e.index = 1, this._combineAnim = e;
      var i = e.getGraphicBounds();
      e.pivot(i.width / 2, i.height / 2), this._arenaPnl.slotIconRoot.addChild(this._combineAnim),
        this._combineAnim.on(Laya.Event.COMPLETE, this, this._onCombineAnimOver), this._combineAnim.visible = !1;
    }, i.prototype._doCombineAnim = function(e, i, n, s) {
      this._combineLeft.graphics.clear(), this._combineRight.graphics.clear();
      var r = Laya.loader.getRes("icon/" + e.Icon);
      this._combineRight.graphics.drawTexture(r, 0, 0, r.width, r.height), this._combineLeft.graphics.drawTexture(r, 0, 0, r.width, r.height),
        this._combineLeft.visible = !0, this._combineRight.visible = !0, this._combineAnim.pos(i.x, i.y - 60),
        this._combineLeft.pivot(i.node.pivotX, i.node.pivotY), this._combineLeft.pos(i.PosX - this._combineLeft.width / 2, i.PosY),
        this._combineRight.pivot(i.node.pivotX, i.node.pivotY), this._combineRight.pos(i.PosX + this._combineRight.width / 2, i.PosY),
        i.setToptoParent(), this._combineAnim.parent.setChildIndex(this._combineAnim, this._combineAnim.parent.numChildren - 1),
        this._combineLeft.parent.setChildIndex(this._combineLeft, this._combineLeft.parent.numChildren - 1),
        this._combineRight.parent.setChildIndex(this._combineRight, this._combineRight.parent.numChildren - 1),
        this._timeLine.reset(), this._timeLine2.reset();
      this._timeLine.to(this._combineLeft, {
        x: this._combineLeft.x - 80
      }, 100, Laya.Ease.circOut, 0).to(this._combineLeft, {
        x: this._combineLeft.x + this._combineLeft.width / 2
      }, 80, Laya.Ease.circIn, 0), this._timeLine2.to(this._combineRight, {
        x: this._combineRight.x + 80
      }, 100, Laya.Ease.circOut, 0).to(this._combineRight, {
        x: this._combineRight.x - this._combineRight.width / 2
      }, 80, Laya.Ease.circIn, 0), this._timeLine.play(0), this._timeLine2.play(0), this._timeLine.on(Laya.Event.COMPLETE, this, this._onCombineComplete, [{
        id: e.Id,
        pos1: n,
        pos2: s
      }]), t.SystemHelper.playSound(t.CommonRes.SOUND_REWARD, 1);
    }, i.prototype._onCombineComplete = function(t) {
      this._combineLeft.visible = !1, this._combineRight.visible = !1, this._combineAnim.visible = !0,
        this._combineAnim.play(null, !1), this._slotModule.combine(t.id, t.pos1, t.pos2);
    }, i.prototype._onUpdateCoin = function() {
      this._arenaPnl.coin.changeText(t.Utils.getMainArenaCoinStr(this._playerModule.Player.Coin)),
        this._coinTweening || (this._coinTweening = !0, this._coinTimeLine && this._coinTimeLine.play(0));
    }, i.prototype._onTweenCoinComplete = function() {
      this._coinTweening = !1;
    }, i.prototype._onUpdateDiamon = function() {
      this._arenaPnl.diamon.changeText(this._playerModule.Player.Diamon + "");
    }, i.prototype._onUpdatePerGetCoin = function() {
      this._arenaPnl.perCoin.changeText(t.Utils.getCoinStr(this._slotModule.perSecondCoin, 5) + " /秒");
    }, i.prototype._onUpdateSettingItemPrice = function() {
      var e = this._itemListModule.getBuyItemInfo();
      e && (this._arenaPnl.currLevel.changeText("LV " + e.Level), this._arenaPnl.costLab.changeText(t.Utils.getCoinStr(e.Price, 4)));
    }, i.prototype._slotProcessOver = function() {
      var t = this._slotModule.PrecossOverSlotInfo;
      if (null != t) {
        var e = this._slotArray[t.position];
        null != e && e.tweenGetCoin(t.Post.Produce);
      }
    }, i.prototype._onAddSlot = function() {
      var t = this._slotModule.addSlotInfo;
      if (t && t.Post) {
        var e = this._slotArray[t.position];
        if (null != e)
          if (this._addFromSetting) {
            e.setToptoParent();
            var i = this._arenaPnl.addBtn,
              n = new Laya.Point(i.x + i.width, i.y + i.height),
              s = i.parent.localToGlobal(n);
            e.addSlot(t, s);
          } else e.addSlot(t);
      } else console.log("error _onAddSlot");
      this._addFromSetting = !1;
    }, i.prototype._onRemoveSlot = function() {
      if (this._slotModule.removeSlotIndex >= 0 && this._slotModule.removeSlotIndex < this._slotArray.length) {
        var t = this._slotArray[this._slotModule.removeSlotIndex];
        null != t ? t.remove() : console.error("_onRemoveSlot error slot null", this._slotModule.removeSlotIndex);
      } else console.error("_onRemoveSlot error ", this._slotModule.removeSlotIndex);
    }, i.prototype.onHide = function() {
      this.unRegiterEvent(), this._arenaPnl.luckWheel_btn.off(Laya.Event.CLICK, this, this._onLuckWheel),
        this._arenaPnl.shopBtn.off(Laya.Event.CLICK, this, this.onBtnList), this._arenaPnl.addBtn.off(Laya.Event.CLICK, this, this._onReqAddSlot),
        this._arenaPnl.btnrecovery.off(Laya.Event.MOUSE_UP, this, this._onRecovery), this._arenaPnl.rank.off(Laya.Event.CLICK, this, this._onRankBtn),
        this._arenaPnl.login.off(Laya.Event.CLICK, this, this._onLoginDayBtn), this._arenaPnl.speedUpBtn.off(Laya.Event.CLICK, this, this._onSpeedUpBtn),
        this._arenaPnl.invite.off(Laya.Event.CLICK, this, this._btnInvite), this._arenaPnl.boxRoot.off(Laya.Event.CLICK, this, this._onBtnBox),
        this._arenaPnl.friendHelp.off(Laya.Event.CLICK, this, this._onFriendHelpBtn), this._arenaPnl.adddiamon.off(Laya.Event.CLICK, this, this._onAddDiamon),
        this._arenaPnl.moregameBTn.off(Laya.Event.CLICK, this, this._onMoreGame), this._arenaPnl.testBtn.off(Laya.Event.CLICK, this, this._onTestBtn),
        this._arenaPnl.howplay.off(Laya.Event.CLICK, this, this._howPlay), this._arenaPnl.daygiftBtn.off(Laya.Event.CLICK, this, this._inViteLogin),
        this._arenaPnl.feisheng_btn.off(Laya.Event.CLICK, this, this._onFeisheng), this._arenaPnl.BtnCustomerService.off(Laya.Event.CLICK, this, this._onCustomerService);
    }, i.prototype.onBtnList = function(e) {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.openView(t.UIPanelID.HEROLIST);
    }, i.prototype._onCloseNoCoin = function() {}, i.prototype._onReqAddSlot = function(e) {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1);
      var i = this._itemListModule.getBuyItemInfo();
      asgard.module.ModuleManager.getModule(t.MODULE_SLOT);
      this._addFromSetting = !0;
      0 != this._slotModule.tryAdd2EmptySlot(i.Post.Id, t.AddSlotType.COIN) ? this._addFromSetting = !1 : (this._onUpdateSettingItemPrice(),
          asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_TRIGGER_GUIDE_NEXT)),
        this._arenaPnl.fingetTip_Img.visible && (this._clickBuyBtnCount++, this._clickBuyBtnCount > 2 && (this._arenaPnl.fingetTip_Img.visible = !1));
    }, i.prototype._onGuideStart = function() {
      if (1 == this._playerModule.guideStep) {
        var e = this._itemListModule.getBuyItemInfo();
        asgard.module.ModuleManager.getModule(t.MODULE_SLOT), this._slotModule.tryAdd2EmptySlot(e.Post.Id, t.AddSlotType.COIN);
        this._onUpdateSettingItemPrice();
      }
    }, i.prototype.onFrame = function(t, e) {
      this._resReady && (this._arenaPnl.boxRoot.visible && (this._arenaPnl.boxRoot.x += 1,
          this._arenaPnl.boxRoot.x > Laya.stage.width && (this._arenaPnl.boxRoot.x = -100)),
        this._floatGame.onFrame(t, e));
    }, i.prototype._createSlot = function() {
      for (var e = 0; e < t.GameConst.MAX_COLUMN; e++)
        for (var i = 0; i < t.GameConst.MAX_ROW; i++) {
          var n = e * t.GameConst.MAX_ROW + i,
            s = 160 * i + 115,
            r = 200 * e + 565,
            a = new t.UISlotGrid(n, this._arenaPnl.panelSolt, this._arenaPnl.slotIconRoot);
          this._slotArray[n] = a, a.name = "index_" + n, this._arenaPnl.panelSolt.addChild(a),
            a.pos(s, r), a.setIconParent();
        }
    }, i.prototype._onRecovery = function(t) {
      this._touchId == t.touchId && null != this._currSelectSlot && (this._arenaPnl.recoveryCoin.text = "+" + asgard.utils.GameUtil.fineNumber(this._currSelectSlot.SlotInfo.RecoveryPrice),
        this._slotModule.recoverySlot(this._currSelectSlot.SlotInfo), this._currSelectSlot = null,
        this._touchId = -1, this._arenaPnl.recoveryCoin.pos(620, 100), this._arenaPnl.recoveryCoin.visible = !0,
        Laya.Tween.to(this._arenaPnl.recoveryCoin, {
          y: -20
        }, 500, Laya.Ease.circOut, Laya.Handler.create(this, this._onTweenRecoveryEnd)));
    }, i.prototype._onTweenRecoveryEnd = function() {
      this._arenaPnl.recoveryCoin.visible = !1;
    }, i.prototype.dispose = function() {}, i.prototype._onShowFinger = function() {
      Laya.timer.once(1e3, null, function() {
        asgard.ui.UIManager.openView(t.UIPanelID.GUIDETIP);
      }), this._clickBuyBtnCount = 0, this._arenaPnl.fingetTip_Img.visible = !0;
    }, i.prototype._onReset = function() {
      console.error("_onReset_onReset");
      for (var t = 0; t < this._slotArray.length; t++) {
        var e = this._slotArray[t];
        e && e.remove();
      }
      this._currSelectSlot = null, this._combineLeft && (this._combineLeft.visible = !1),
        this._combineRight && (this._combineRight.visible = !1), this._addFromSetting = !1;
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.ArenaMainPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.MoreGameUI(), this._panel.iconRoot.itemRender = t.UIGameGrid,
          this._panel.iconRoot.selectEnable = !0, this._panel.iconRoot.selectHandler = new Laya.Handler(this, this._onSelect),
          this._panel.iconRoot.renderHandler = new Laya.Handler(this, this._updateItem), this._panel.iconRoot.repeatX = 4,
          this._panel.iconRoot.spaceY = 6, this._panel.iconRoot.spaceX = 10, this._panel.iconRoot.repeatY = 6),
        this._panel;
    }, i.prototype.onShow = function() {
      this._panel.closeBtn.on(Laya.Event.CLICK, this, this._doClose), this._panel.iconRoot.array = t.ShareInfo.Instance().games;
    }, i.prototype._doClose = function() {
      asgard.ui.UIManager.closeView(this.getName());
    }, i.prototype.onHide = function() {
      this._panel.closeBtn.off(Laya.Event.CLICK, this, this._doClose);
    }, i.prototype._onSelect = function(e) {
      var i = t.ShareInfo.Instance().games[e];
      i && navigateToMiniProgram(i.appid, i.path);
    }, i.prototype._updateItem = function(t, e) {
      t.onRender(t.dataSource);
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.MoreGamePanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.onRender = function(t) {
      this.nameLab.text = t.name, this.iconImg.skin = t.icon, this.tip_img.visible = t.tip;
    }, e;
  }(ui.panel.UIGameGridUI);
  t.UIGameGrid = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(n, s, r) {
      var a = e.call(this) || this,
        o = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
      return a._playeInfo = o.Player, a._iconTimeLine = new Laya.TimeLine(), a._iconTimeLine.to(a.icon, {
          scaleX: i.SCALE,
          scaleY: i.SCALE
        }, 150, Laya.Ease.circOut, 0).to(a.icon, {
          scaleX: 1,
          scaleY: 1
        }, 150, Laya.Ease.circIn, 0), a._iconSpeedTimeLine = new Laya.TimeLine(), a._iconSpeedTimeLine.to(a.icon, {
          scaleX: 1.1 * i.SCALE,
          scaleY: 1.1 * i.SCALE
        }, 150, Laya.Ease.circOut, 0).to(a.icon, {
          scaleX: 1,
          scaleY: 1
        }, 150, Laya.Ease.circIn, 0), a._iconParent = r, a._slotParent = s, a._slotModule = asgard.module.ModuleManager.getModule(t.MODULE_SLOT),
        a._slotIndex = n, a.name = "" + n, a._iconOldPosX = a.icon.x, a._iconOldPosY = a.icon.y,
        a.icon.visible = !1, a.iconGray.visible = !1, a.addcoin.visible = !1, a.iconGray.gray = !0,
        a.levelBg.visible = !1, a.bg_img.skin = o.Player.turnRound > 0 ? "main/slotBg2.png" : "main/slotBg.png",
        a;
    }
    return __extends(i, e), Object.defineProperty(i.prototype, "PosX", {
      get: function() {
        return this._iconPosX;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(i.prototype, "PosY", {
      get: function() {
        return this._iconPosY;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(i.prototype, "node", {
      get: function() {
        return this.icon;
      },
      enumerable: !0,
      configurable: !0
    }), i.prototype.setBg = function() {
      this._playeInfo && (this.bg_img.skin = this._playeInfo.turnRound > 0 ? "main/slotBg2.png" : "main/slotBg.png");
    }, i.prototype.setIconParent = function() {
      if (this.iconGray.pivot(this.icon.pivotX, this.icon.pivotY), this.iconGray.pos(this.icon.x, this.icon.y),
        this._iconParent) {
        var t = this.localToGlobal(new Laya.Point(this.icon.x, this.icon.y)),
          e = void 0;
        this._iconParent.addChild(this.icon), e = this._iconParent.globalToLocal(t), this.icon.pos(e.x, e.y),
          this._iconPosX = this.icon.x, this._iconPosY = this.icon.y, t = this.localToGlobal(new Laya.Point(this.addcoin.x, this.addcoin.y)),
          this._iconParent.addChild(this.addcoin), e = this._iconParent.globalToLocal(t),
          this.addcoin.pos(e.x, e.y), this._scoreLabPosX = e.x, this._scoreLabPosY = e.y;
      }
    }, i.prototype.checkClick = function(t, e) {
      return this.hitTestPoint(t, e);
    }, i.prototype.setToptoParent = function() {
      this.icon.parent.setChildIndex(this.icon, this.icon.parent.numChildren - 1);
    }, Object.defineProperty(i.prototype, "slotIndex", {
      get: function() {
        return this._slotIndex;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(i.prototype, "SlotInfo", {
      get: function() {
        return this._info;
      },
      enumerable: !0,
      configurable: !0
    }), i.prototype.addSlot = function(e, i) {
      if (e.position == this._slotIndex) {
        this._info = e;
        var n = Laya.loader.getRes("icon/" + e.Post.Icon);
        n ? (this.icon.graphics.clear(), this.icon.graphics.drawTexture(n, 0, 0, n.width, n.height),
          i ? (i = this._iconParent.localToGlobal(i), this.icon.pos(i.x - .5 * this.width + 25, i.y - this.height),
            this.levelBg.visible = !1, Laya.Tween.to(this.icon, {
              x: this._iconPosX,
              y: this._iconPosY
            }, 200, Laya.Ease.circOut, Laya.Handler.create(this, this._onTweenIconOver))) : (this.icon.pos(this._iconPosX, this._iconPosY),
            this.levelBg.visible = !0), this.icon.visible = !0, this.iconGray.graphics.clear(),
          this.iconGray.graphics.drawTexture(n, 0, 0, n.width, n.height), this.iconGray.visible = !1,
          this.levelLba.text = e.Level + "") : console.error("load icon failed" + e.Post.Icon);
      } else t.CommonUI.Tips.show("位置对不上");
    }, i.prototype._onTweenIconOver = function() {
      this.levelBg.visible = !0, this.icon.pos(this.PosX, this.PosY);
    }, i.prototype.remove = function() {
      this._info = null, this.addcoin.visible = !1, this.levelBg.visible = !1, this.icon.visible = !1,
        this.iconGray.visible = !1;
    }, i.prototype.resetIconPos = function() {
      this.iconGray.visible = !1, this.icon.pos(this._iconPosX, this._iconPosY);
    }, i.prototype.isFill = function() {
      return null != this._info;
    }, i.prototype.setIconPos = function(t, e) {
      0 == this.iconGray.visible && (this.iconGray.visible = !0), this.icon.pos(this._iconPosX + t, this._iconPosY + e);
    }, i.prototype.setProcess = function(t) {}, i.prototype.tweenGetCoin = function(e) {
      this.addcoin.changeText("+" + t.Utils.getCoinStr(e, 4)), this.addcoin.pos(this._scoreLabPosX, this._scoreLabPosY),
        this.addcoin.visible = !0, this.addcoin.alpha = 1, this.addcoin.parent.setChildIndex(this.addcoin, this.addcoin.parent.numChildren - 1),
        0 == this.icon.visible && (this.icon.visible = !0), this.icon.x == this._iconPosX && this.icon.y == this._iconPosY && (1 == this._playeInfo.Speed ? this._iconTimeLine.play(0) : this._iconSpeedTimeLine.play(0));
      var i = 300;
      i = 1 == this._playeInfo.Speed ? 300 : 200, Laya.Tween.to(this.addcoin, {
        y: this._scoreLabPosY - 75
      }, i, Laya.Ease.circOut, Laya.Handler.create(this, this._onHideCoinText));
    }, i.prototype._onHideCoinText = function() {
      var t = 300;
      t = 1 == this._playeInfo.Speed ? 300 : 200, Laya.Tween.to(this.addcoin, {
        alpha: 0
      }, t, null, null, 300);
    }, i.SCALE = 1.05, i;
  }(ui.panel.UISlotGridUI);
  t.UISlotGrid = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i() {
      var t = e.call(this) || this;
      return t.on(Laya.Event.MOUSE_DOWN, t, t._onInvite), t;
    }
    return __extends(i, e), i.prototype.update = function(t) {
      this._data = t, this.Icon.skin = t.iconUrl;
    }, i.prototype._onInvite = function() {
      this._data || t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.INVITE_FRIEND, this, this.onSuccess, this.onFail, this.oncomplete);
    }, i.prototype.onSuccess = function(e) {
      t.CommonUI.Tips.show("邀请好友成功");
    }, i.prototype.onFail = function() {
      t.CommonUI.Tips.show("邀请好友失败");
    }, i.prototype.oncomplete = function() {}, i;
  }(ui.panel.UICommonSlotUI);
  t.UIFriendGrid = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.getDependenceRes = function() {
      return [{
        url: t.CommonRes.UI_INVITE_FRIEND_TITLE,
        type: Laya.Loader.IMAGE
      }];
    }, i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.InviteFriendUI(), this._panel.listpanel.itemRender = t.UIIniviteGrid,
          this._panel.listpanel.selectEnable = !0, this._panel.listpanel.hScrollBarSkin = "",
          this._panel.listpanel.selectHandler = new Laya.Handler(this, this._onSelect), this._panel.listpanel.renderHandler = new Laya.Handler(this, this._updateItem),
          this._panel.listpanel.repeatX = 5, this._panel.listpanel.spaceX = 5, this._panel.listpanel.repeatY = 1),
        this._panel;
    }, i.prototype.onShow = function() {
      this._socialModule = asgard.module.ModuleManager.getModule(t.MODULE_SOCIAL), this._panel.btnClose.on(Laya.Event.MOUSE_UP, this, this.onClose),
        this._panel.btnInvite.on(Laya.Event.MOUSE_UP, this, this._onInvite), this._panel.title_img.skin = t.CommonRes.UI_INVITE_FRIEND_TITLE;
      for (var e = [], i = this._socialModule.inviteFriend.getAddFriend(), n = 0; n < i.length; n++) {
        var s = i[n];
        e[n] = s;
      }
      e.length > 1 && e.sort(function(t, e) {
        return 1 == t.isDraw && 0 == e.isDraw ? -1 : 0 == t.isDraw && 1 == e.isDraw ? 1 : e.openId.localeCompare(t.openId);
      });
      for (var r = e.length, a = 100 - r, n = 0; n < a; n++) {
        var o = new t.IniviteUserInfo("openid", "第" + (n + 1 + r) + "位", "", 0, t.ShareType.INVITE_FRIEND);
        o.isEmpty = !0, e[i.length + n] = o;
      }
      this._panel.listpanel.dataSource = e, this._panel.listpanel.scrollTo(r > 0 ? r - 1 : 0),
        Laya.timer.once(300, this, this.startInvite);
    }, i.prototype.onHide = function() {
      this._panel.btnClose.off(Laya.Event.MOUSE_UP, this, this.onClose), this._panel.btnInvite.off(Laya.Event.MOUSE_UP, this, this._onInvite);
    }, i.prototype.startInvite = function() {
      this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.INVITE_FRIEND, this, this.onSuccess, this.onFail, this.oncomplete);
    }, i.prototype._onInvite = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.INVITE_FRIEND, this, this.onSuccess, this.onFail, this.oncomplete);
    }, i.prototype.onSuccess = function(t) {
      console.log("share onSuccess", t);
    }, i.prototype.onFail = function(t) {
      console.log("share onFail", t);
    }, i.prototype.oncomplete = function(t) {
      console.log("share oncomplete", t);
    }, i.prototype.onClose = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.closeView(t.UIPanelID.INVITEFRIEND);
    }, i.prototype._updateItem = function(t, e) {
      t.onRender(t.dataSource);
    }, i.prototype._onSelect = function(t) {
      console.log("当前选择的索引：" + t);
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.IniviteFriendPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.InviteLoginUI()), this._panel;
    }, i.prototype.onShow = function() {
      this._playerUI = [], this._enough = !1;
      for (var e = 0; e < 3; e++) {
        a = new ui.panel.UICommonSlotUI();
        this._playerUI[e] = a, this._panel.content.addChild(a), a.pos(40 + 120 * e, 98);
      }
      this._socialModule = asgard.module.ModuleManager.getModule(t.MODULE_SOCIAL);
      for (var i = this._socialModule.inviteFriend.getAddFriend(), n = 0, s = 0; s < i.length; s++) {
        var r = i[s];
        if (r && r.shareType == t.ShareType.INVITE_LOGIN) {
          var a;
          if ((a = this._playerUI[n]).Icon.skin = r.iconUrl, ++n >= this._playerUI.length) {
            this._enough = !0;
            break;
          }
        }
      }
      this._panel.closeBtn.on(Laya.Event.CLICK, this, this.onClose), this._panel.InviteBtn.on(Laya.Event.CLICK, this, this.onInvite),
        this._panel.drawBtn.on(Laya.Event.CLICK, this, this.onDraw), this._panel.drawBtn.gray = 1 == this._socialModule.inviteLoginDraw,
        1 == this._socialModule.inviteLoginDraw ? this._panel.drawLab.changeText("已领取") : this._enough ? this._panel.drawLab.changeText("领取") : this._panel.drawLab.changeText("求助好友");
    }, i.prototype.onClose = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.closeView(this._name);
    }, i.prototype.onInvite = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.INVITE_LOGIN, this, this.onSuccess, this.onFail, this.oncomplete);
    }, i.prototype.onSuccess = function(e) {
      t.CommonUI.Tips.show("邀请成功!");
    }, i.prototype.onFail = function() {
      console.log("share onFail"), t.CommonUI.Tips.show("邀请失败!");
    }, i.prototype.oncomplete = function() {
      console.log("share oncomplete");
    }, i.prototype.onDraw = function() {
      if (1 != this._socialModule.inviteLoginDraw)
        if (this._enough) {
          for (var e = this._socialModule.inviteFriend.getAddFriend(), i = 0, n = 0; n < e.length; n++) {
            var s = e[n];
            if (s && s.shareType == t.ShareType.INVITE_LOGIN && ++i >= this._playerUI.length) break;
          }
          if (i >= this._playerUI.length) {
            var r = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER),
              a = asgard.module.ModuleManager.getModule(t.MODULE_SLOT).perSecondCoin * t.GameConst.INVITE_LOGIN_REWARD_TIME;
            r.Player.showReward(t.PlayerInfo.REWARD_TYPE_COIN, a, this._name), asgard.ui.UIManager.closeView(this._name);
            asgard.module.ModuleManager.getModule(t.MODULE_SOCIAL).inviteLoginDraw = 1, t.GameData.Instance().postGameData();
          }
        } else t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.INVITE_LOGIN, this, this.onSuccess, this.onFail, this.oncomplete);
      else t.CommonUI.Tips.show("今日奖励已经领取!");
    }, i.prototype.onHide = function() {
      this._panel.closeBtn.off(Laya.Event.CLICK, this, this.onClose), this._panel.InviteBtn.off(Laya.Event.CLICK, this, this.onInvite),
        this._panel.drawBtn.off(Laya.Event.CLICK, this, this.onDraw);
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.InviteLogin = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i() {
      var i = e.call(this) || this;
      return asgard.events.EventsDispatcher.registerEventListener(t.GameEvents.EVENT_UPDATE_INVITE_DRAW, i, i._onUpdate),
        i.btndraw.on(Laya.Event.MOUSE_UP, i, i._btndraw), i.headbg.on(Laya.Event.MOUSE_UP, i, i._onShare),
        i;
    }
    return __extends(i, e), i.prototype._onShare = function() {
      this._data && !this._data.isEmpty || t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.INVITE_FRIEND, this, this.onSuccess, this.onFail, this.oncomplete);
    }, i.prototype.onSuccess = function(e) {
      t.CommonUI.Tips.show("分享成功");
    }, i.prototype.onFail = function(e) {
      t.CommonUI.Tips.show("分享失败");
    }, i.prototype.oncomplete = function(t) {
      console.log("share oncomplete", t);
    }, i.prototype._btndraw = function() {
      if (null != this._data && !this._data.isEmpty && 1 != this._data.isDraw) {
        t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1);
        asgard.module.ModuleManager.getModule(t.MODULE_SOCIAL).inviteFriend.drawReward(this._data.openId);
      }
    }, i.prototype._onUpdate = function() {
      if (null != this._data) {
        asgard.module.ModuleManager.getModule(t.MODULE_SOCIAL).inviteFriend.currDrawOpenId == this._data.openId && (this.drawImg.visible = !0,
          this.btndraw.visible = !1);
      }
    }, i.prototype.onRender = function(e) {
      if (this._data = e, this.namelab.text = e.name, this.diamonLab.text = t.IniviteFriendInfo.ADD_DIAMON_NUM + "",
        this.headicon.skin = e.iconUrl, e.isEmpty) {
        var i = new Laya.ColorFilter([.3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, 0, 0, 0, 1, 0]);
        this.btndraw.filters = [i], this.btndraw.visible = !0, this.drawImg.visible = !1;
      } else this.btndraw.filters = null, this.btndraw.visible = 1 != e.isDraw, this.drawImg.visible = 1 == e.isDraw;
    }, i;
  }(ui.panel.UIInviteGridUI);
  t.UIIniviteGrid = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      var n = e.call(this, t) || this;
      return n._isJump = !1, i.me = n, n;
    }
    return __extends(i, e), i.prototype.getDependenceRes = function() {
      return [{
        url: "bg/commonBtn.png",
        type: Laya.Loader.IMAGE
      }];
    }, i.setTip = function(t) {
      i.loginUI && i.loginUI.loadingTip;
    }, i.prototype.createView = function() {
      return this._loginUI || (this._loginUI = new ui.panel.LoadingUI(), this._floatGame = new t.FloatGameUI(this._loginUI.floatGame_img)),
        this._loginUI;
    }, i.prototype.onFrame = function(t, e) {
      e > 50 && (e = 50), this._delayTime > 0 && (this._delayTime -= e, this._delayTime <= 0 && (this._canLogin = !0)),
        this._floatGame && this._floatGame.onFrame(t, e);
    }, i.prototype.onShow = function() {
      i.loginUI = this._loginUI, this._canLogin = !0, this._delayTime = 0, this._isJump = !1,
        this._loginUI.versionLab.text = "Ver:" + t.GameConst.VERSION;
      var e = new Laya.Sprite();
      e.graphics.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#ffffff"), this._loginUI.addChild(e),
        this._loginUI.setChildIndex(e, 0), this._loginUI.loginBtn.on(Laya.Event.CLICK, this, this._onLogin),
        this._loginUI.loginBtn.visible = !1;
    }, i.prototype.showLoginbtn = function() {
      this._loginUI.loginBtn.visible = !0;
    }, i.prototype.showFloatGame = function() {
      this._floatGame && this._floatGame.onShow();
    }, i.prototype._onLogin = function() {
      Laya.Browser.onMiniGame && this._canLogin && (this._canLogin = !1, this._delayTime = 3e3,
        t.PlatForm.GetInstance().isMp() && t.ShareInfo.Instance().jumpBox && navigateToMiniProgram("wxd84c4af1e5b98fbe", "pages/game/index?channel=gd501&mp=mp&appid=wxce85269ca3e1d1b0"),
        asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_START_LOGIN));
    }, i.prototype.onHide = function() {
      i.loginUI = null;
    }, i.prototype.dispose = function() {
      i.me = null;
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.LoadingPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.getDependenceRes = function() {
      return [{
        url: t.CommonRes.UI_LOGIN_REWARD,
        type: Laya.Loader.ATLAS
      }];
    }, i.prototype.createView = function() {
      return this._loginPanel || (this._loginPanel = new ui.panel.DayLoginUI(), this._loginPanel.isRewardOne.visible = !1,
          this._loginPanel.isRewardTwo.visible = !1, this._loginPanel.isRewardThree.visible = !1,
          this._loginPanel.isRewardFour.visible = !1, this._loginPanel.isRewardFive.visible = !1,
          this._loginPanel.isRewardSix.visible = !1, this._loginPanel.dayPriceOne.text = "x " + i.rewardDiamonds[0],
          this._loginPanel.dayPriceTwo.text = "x " + i.rewardDiamonds[1], this._loginPanel.dayPriceThree.text = "x " + i.rewardDiamonds[2],
          this._loginPanel.dayPriceFour.text = "x " + i.rewardDiamonds[3], this._loginPanel.dayPriceFive.text = "x " + i.rewardDiamonds[4],
          this._loginPanel.dayPriceSix.text = "x " + i.rewardDiamonds[5], this._loginPanel.dayPriceSeven.text = "x " + i.rewardDiamonds[6]),
        this._loginPanel;
    }, i.prototype.onShow = function() {
      this._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER), this._loginPanel.dayClose.on(Laya.Event.MOUSE_UP, this, this._onClose),
        this._loginPanel.dayReward.on(Laya.Event.MOUSE_UP, this, this._onDoubleReward_btn),
        this._loginPanel.normaldraw_btn.on(Laya.Event.CLICK, this, this._onReward);
      var e = this._playerModule.Player.loginDays,
        i = this._playerModule.Player.loginRewardDays;
      switch (0 == e && (e = 1), this._loginPanel.dayClose.visible = e == i, this._loginPanel["title" + e] && (this._loginPanel["title" + e].text = "今日"),
        e) {
        case 1:
          if (this._initBtnStatus(e, i)) {
            this._loginPanel.dayOne.on(Laya.Event.MOUSE_UP, this, this._onReward);
            (n = this._loginPanel.dayOne.getChildByName("drawBg")).skin = "loginReward/drawbg.png";
          }
          break;

        case 2:
          if (this._initBtnStatus(e, i)) {
            this._loginPanel.dayTwo.on(Laya.Event.MOUSE_UP, this, this._onReward);
            (n = this._loginPanel.dayTwo.getChildByName("drawBg")).skin = "loginReward/drawbg.png";
          }
          break;

        case 3:
          if (this._initBtnStatus(e, i)) {
            this._loginPanel.dayThree.on(Laya.Event.MOUSE_UP, this, this._onReward);
            (n = this._loginPanel.dayThree.getChildByName("drawBg")).skin = "loginReward/drawbg.png";
          }
          break;

        case 4:
          if (this._initBtnStatus(e, i)) {
            this._loginPanel.dayFour.on(Laya.Event.MOUSE_UP, this, this._onReward);
            (n = this._loginPanel.dayFour.getChildByName("drawBg")).skin = "loginReward/drawbg.png";
          }
          break;

        case 5:
          if (this._initBtnStatus(e, i)) {
            this._loginPanel.dayFive.on(Laya.Event.MOUSE_UP, this, this._onReward);
            (n = this._loginPanel.dayFive.getChildByName("drawBg")).skin = "loginReward/drawbg.png";
          }
          break;

        case 6:
          if (this._initBtnStatus(e, i)) {
            this._loginPanel.daySix.on(Laya.Event.MOUSE_UP, this, this._onReward);
            (n = this._loginPanel.daySix.getChildByName("drawBg")).skin = "loginReward/drawbg.png";
          }
          break;

        case 7:
          if (this._initBtnStatus(e, i)) {
            this._loginPanel.daySeven.on(Laya.Event.MOUSE_UP, this, this._onReward);
            (n = this._loginPanel.daySeven.getChildByName("drawBg")).skin = "loginReward/drawbg.png";
          }
          break;

        default:
          if (this._initBtnStatus(1, 0)) {
            this._loginPanel.dayOne.on(Laya.Event.MOUSE_UP, this, this._onReward);
            var n = this._loginPanel.dayOne.getChildByName("drawBg");
            n.skin = "loginReward/drawbg.png";
          }
      }
    }, i.prototype._initBtnStatus = function(t, e) {
      for (var i = 1; i <= e; i++) this._updateHadReward(i);
      return t != e || (this._loginPanel.dayReward.gray = !0, this._loginPanel.dayReward.mouseEnabled = !1, !1);
    }, i.prototype._updateHadReward = function(t) {
      switch (t) {
        case 1:
          (e = this._loginPanel.dayOne.getChildByName("drawBg")).skin = "loginReward/bg.png",
            this._loginPanel.dayOne.mouseEnabled = !1, this._loginPanel.isRewardOne.visible = !0,
            this._loginPanel.dayOne.off(Laya.Event.MOUSE_DOWN, this, this._onReward);
          break;

        case 2:
          (e = this._loginPanel.dayTwo.getChildByName("drawBg")).skin = "loginReward/bg.png",
            this._loginPanel.dayTwo.mouseEnabled = !1, this._loginPanel.isRewardTwo.visible = !0,
            this._loginPanel.dayTwo.off(Laya.Event.MOUSE_DOWN, this, this._onReward);
          break;

        case 3:
          (e = this._loginPanel.dayThree.getChildByName("drawBg")).skin = "loginReward/bg.png",
            this._loginPanel.dayThree.mouseEnabled = !1, this._loginPanel.isRewardThree.visible = !0,
            this._loginPanel.dayThree.off(Laya.Event.MOUSE_DOWN, this, this._onReward);
          break;

        case 4:
          (e = this._loginPanel.dayFour.getChildByName("drawBg")).skin = "loginReward/bg.png",
            this._loginPanel.dayFour.mouseEnabled = !1, this._loginPanel.isRewardFour.visible = !0,
            this._loginPanel.dayFour.off(Laya.Event.MOUSE_DOWN, this, this._onReward);
          break;

        case 5:
          (e = this._loginPanel.dayFive.getChildByName("drawBg")).skin = "loginReward/bg.png",
            this._loginPanel.dayFive.mouseEnabled = !1, this._loginPanel.isRewardFive.visible = !0,
            this._loginPanel.dayFive.off(Laya.Event.MOUSE_DOWN, this, this._onReward);
          break;

        case 6:
          (e = this._loginPanel.daySix.getChildByName("drawBg")).skin = "loginReward/bg.png",
            this._loginPanel.daySix.mouseEnabled = !1, this._loginPanel.isRewardSix.visible = !0,
            this._loginPanel.daySix.off(Laya.Event.MOUSE_DOWN, this, this._onReward);
          break;

        case 7:
          var e = this._loginPanel.daySeven.getChildByName("drawBg");
          e.skin = "loginReward/bg.png", this._loginPanel.daySeven.mouseEnabled = !1, this._loginPanel.daySeven.off(Laya.Event.MOUSE_DOWN, this, this._onReward);
      }
    }, i.prototype._onReward = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1);
      var e = this._playerModule.Player.loginDays,
        n = this._playerModule.Player.loginRewardDays;
      console.log("logindays reward " + e + " rewardDays: " + n), e == n + 1 && (this._playerModule.getLoginReward(i.rewardDiamonds[n]),
        this._refreshBtmStatus(this._playerModule.Player.loginRewardDays), this._loginPanel.dayClose.visible = !0);
    }, i.prototype._doubleDraw = function() {
      var t = this._playerModule.Player.loginDays,
        e = this._playerModule.Player.loginRewardDays;
      t == e + 1 && (this._playerModule.getLoginReward(2 * i.rewardDiamonds[e]), this._refreshBtmStatus(this._playerModule.Player.loginRewardDays),
        this._loginPanel.dayClose.visible = !0);
    }, i.prototype._onVideoCallback = function(e) {
      asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_VIDEO_AD_CLOSE), "ok" == e ? this._doubleDraw() : t.CommonUI.Tips.show(t.GameConst.VIDEO_AD_FAILED_TIPS);
    }, i.prototype.onSuccess = function(e) {
      Laya.Browser.onPC ? this._doubleDraw() : this._shareConfig && (1 == this._shareConfig.Group ? e && e.shareTickets ? this._doubleDraw() : t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS) : this._doubleDraw());
    }, i.prototype.onFail = function(e) {
      t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS2);
    }, i.prototype._onDoubleReward_btn = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1);
      var e = t.ShareInfo.Instance().getBtnsConfig(this._name);
      e && (e.showVideo ? t.PlatForm.GetInstance().CreateRewardedVideoAd(t.GameConst.VIDEO_AD_REWARD, Laya.Handler.create(this, this._onVideoCallback)) : e.showShare && (this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.OFFLINE, this, this.onSuccess, this.onFail, null)));
    }, i.prototype._refreshBtmStatus = function(t) {
      t <= 0 || (this._updateHadReward(t), this._loginPanel.dayReward.gray = !0, this._loginPanel.dayReward.mouseEnabled = !1);
    }, i.prototype._onClose = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), this._loginPanel.normaldraw_btn.off(Laya.Event.CLICK, this, this._onReward),
        this._loginPanel.dayClose.off(Laya.Event.MOUSE_UP, this, this._onClose), this._loginPanel.dayReward.off(Laya.Event.MOUSE_UP, this, this._onDoubleReward_btn),
        asgard.ui.UIManager.closeView(t.UIPanelID.LOGINDAY);
    }, i.rewardDiamonds = [200, 500, 400, 600, 600, 600, 800], i;
  }(asgard.ui.BaseUIPanel);
  t.LoginDayPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.LuckyWheelUI()), this._panel;
    }, i.prototype.getDependenceRes = function() {
      return [{
        url: t.CommonRes.UI_DISK_BG,
        type: Laya.Loader.IMAGE
      }, {
        url: t.CommonRes.UI_DISK_MAIN,
        type: Laya.Loader.IMAGE
      }];
    }, i.prototype.onShow = function() {
      this._panel.disk_bg.skin = t.CommonRes.UI_DISK_BG, this._panel.arrowImg.skin = t.CommonRes.UI_DISK_MAIN,
        this._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER), this._panel.start_Btn.on(Laya.Event.CLICK, this, this._doDraw),
        this._panel.close_Btn.on(Laya.Event.CLICK, this, this._doClose), this._isPlaying = !1,
        this._luckyWheels = asgard.data.StaticDataManager.getSheetDatas(data.LuckWhreel.DATA_TYPE),
        this._updateTickets(), this._sum = 0;
      for (var e = 0; e < this._luckyWheels.length; e++) {
        var i = this._luckyWheels[e];
        this._sum += i.Value;
      }
      asgard.events.EventsDispatcher.registerEventListener(t.GameEvents.EVENT_UPDATE_LUCKY_TICKETS, this, this._updateTickets);
    }, i.prototype._updateTickets = function() {
      this._panel.tickets_Lab.text = "转盘券x" + this._playerModule.Player.luckyCount, this._playerModule.Player.luckyShareCount < t.GameConst.LUCKYWHEEL_GET_TICKETS_TIMES ? (this._panel.add_Btn.on(Laya.Event.CLICK, this, this._doAddTickets),
        this._panel.add_Btn.gray = !1) : this._panel.add_Btn.gray = !0;
    }, i.prototype._doAddTickets = function() {
      if (!(this._isPlaying || this._playerModule.Player.luckyShareCount >= t.GameConst.LUCKYWHEEL_GET_TICKETS_TIMES))
        if (this._playerModule.Player.luckyCount >= t.GameConst.LUCKYWHEEL_MAX_TICKETS) t.CommonUI.Tips.show("转盘券已达上限，赶快抽奖吧");
        else {
          t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1);
          var e = t.ShareInfo.Instance().getBtnsConfig(this._name);
          e && (e.update(), e.showVideo ? t.PlatForm.GetInstance().CreateRewardedVideoAd(t.GameConst.VIDEO_AD_REWARD, Laya.Handler.create(this, this._onVideoCallback)) : e.showShare && (this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.NO_COIN, this, this.onSuccess, this.onFail, this.oncomplete)));
        }
    }, i.prototype.onSuccess = function(e) {
      Laya.Browser.onPC ? this._playerModule.addLuckyTickets() : this._shareConfig && (1 == this._shareConfig.Group ? e && e.shareTickets ? this._playerModule.addLuckyTickets() : t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS) : this._playerModule.addLuckyTickets());
    }, i.prototype.onFail = function(e) {
      t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS2), console.log("share onFail", e);
    }, i.prototype.oncomplete = function(t) {
      console.log("share oncomplete", t);
    }, i.prototype._onVideoCallback = function(e) {
      asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_VIDEO_AD_CLOSE), "ok" == e ? this._playerModule.addLuckyTickets() : t.CommonUI.Tips.show(t.GameConst.VIDEO_AD_FAILED_TIPS);
    }, i.prototype.randomnum = function(t, e) {
      var i = e - t - 5,
        n = Math.random();
      return t + Math.round(n * i);
    }, i.prototype._doDraw = function() {
      if (!this._isPlaying)
        if (this._playerModule.Player.luckyCount <= 0) asgard.ui.UIManager.openView(t.UIPanelID.NOLUCKYTICKETS);
        else {
          Laya.Tween.to(this._panel.start_Btn, {
            scaleX: 1.1,
            scaleY: 1.1
          }, 300, Laya.Ease.elasticOut, Laya.Handler.create(null, function(t) {
            t.scaleX = 1, t.scaleY = 1;
          }, [this._panel.start_Btn]));
          for (var e = null, i = Math.random() * this._sum, n = 0; n < this._luckyWheels.length; n++) {
            var s = this._luckyWheels[n];
            if ((i -= s.Value) < 0) {
              e = s;
              break;
            }
          }
          this._playerModule.Player.luckyCount -= 1, this._updateTickets();
          var r = 360 / this._luckyWheels.length;
          this._panel.arrowImg.rotation = this._panel.arrowImg.rotation % 360;
          var a = this.randomnum((e.Id - 1) * r, e.Id * r);
          a = 360 - a, this._isPlaying = !0, Laya.Tween.to(this._panel.arrowImg, {
            rotation: 3600 + a
          }, 3e3, Laya.Ease.strongInOut, Laya.Handler.create(this, this._onRotationEnd, [e]));
        }
    }, i.prototype._onRotationEnd = function(e) {
      asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
      if (this._isPlaying = !1, e) {
        Math.random();
        var i = this._playerModule.Player.luckwheeldoubling;
        if (1 == e.Type) {
          var n = asgard.module.ModuleManager.getModule(t.MODULE_LIST).getCurrUnlockItem();
          if (n) {
            var s = Math.floor(e.Num * n.Price);
            this._playerModule.Player.showReward(t.PlayerInfo.REWARD_TYPE_COIN, s * i, this._name);
          }
          this._playerModule.Player.luckwheeldoubling > 1 && (this._playerModule.Player.luckwheeldoubling = 1);
        } else 2 == e.Type ? (this._playerModule.Player.showReward(t.PlayerInfo.REWARD_TYPE_DIAMON, e.Num * i, this._name),
          this._playerModule.Player.luckwheeldoubling > 1 && (this._playerModule.Player.luckwheeldoubling = 1)) : 3 == e.Type && asgard.ui.UIManager.openView(t.UIPanelID.MOONTIP, {
          num: e.Num
        });
      }
      t.HttpServer.Instance().postLuckWheel(this._playerModule.Player.luckyCount, this._playerModule.Player.luckyShareCount, this._playerModule.Player.luckyUpTime),
        t.GameData.Instance().saveLocalGameData();
    }, i.prototype.onHide = function() {
      this._panel.start_Btn.off(Laya.Event.CLICK, this, this._doDraw), this._panel.add_Btn.off(Laya.Event.CLICK, this, this._doAddTickets),
        this._panel.close_Btn.off(Laya.Event.CLICK, this, this._doClose), asgard.events.EventsDispatcher.unregisterEventListener(t.GameEvents.EVENT_UPDATE_LUCKY_TICKETS, this, this._updateTickets);
    }, i.prototype._doClose = function() {
      this._isPlaying || asgard.ui.UIManager.closeView(this._name);
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.LuckyWheelPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function() {
    return function(t, e, i, n, s) {
      this.msg = t, this.title = e, this.confirm = i, this.cancel = n, this.params = s;
    };
  }();
  t.MsgShowData = e;
  var i = function(t) {
    function e(e) {
      return t.call(this, e) || this;
    }
    return __extends(e, t), e.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.MsgBoxUI()), this._panel;
    }, e.prototype.onShow = function() {
      this._msgShowData = this._showData, this._panel.close_btn.on(Laya.Event.CLICK, this, this._onClose),
        this._panel.confirm_btn.on(Laya.Event.CLICK, this, this._onCofirm), this._panel.cancel_btn.on(Laya.Event.CLICK, this, this._onClose),
        this._panel.desc_Lab.text = this._msgShowData.msg, this._panel.title_Lab.text = this._msgShowData.title;
    }, e.prototype.onHide = function() {
      this._panel.close_btn.off(Laya.Event.CLICK, this, this._onClose), this._panel.confirm_btn.off(Laya.Event.CLICK, this, this._onCofirm),
        this._panel.cancel_btn.off(Laya.Event.CLICK, this, this._onClose);
    }, e.prototype._onClose = function() {
      this._msgShowData && this._msgShowData.cancel && this._msgShowData.cancel.method.apply(this._msgShowData.cancel.caller, [this._msgShowData.params]),
        asgard.ui.UIManager.closeView(this.getName());
    }, e.prototype._onCofirm = function() {
      this._msgShowData && this._msgShowData.confirm && this._msgShowData.confirm.method.apply(this._msgShowData.confirm.caller, [this._msgShowData.params]),
        asgard.ui.UIManager.closeView(this.getName());
    }, e;
  }(asgard.ui.BaseUIPanel);
  t.MsgBoxPanel = i;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.NewLevelTipsUI()), this._panel;
    }, i.prototype.onShow = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_REWARD, 1);
      var e = asgard.module.ModuleManager.getModule(t.MODULE_LIST);
      this._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER), this._canshare = !1,
        e.currOpenLevel > t.GameConst.NEW_LEVEL_SHARE ? (this._canshare = !0, this._panel.shareBtnLab.changeText("炫耀一下")) : this._panel.shareBtnLab.changeText("确定"),
        this._post = data.StaticDataFactory.findPost(e.currOpenLevel);
      var i = e.findItemByLevel(e.currOpenLevel);
      i && (this._panel.nameLab.text = i.Name), this._panel.icon.graphics.clear();
      var n = Laya.loader.getRes("icon/" + this._post.Icon);
      this._panel.icon.graphics.drawTexture(n, 0, 0, n.width, n.height), this._panel.closebtn.on(Laya.Event.MOUSE_UP, this, this._onClose),
        this._panel.confirm.on(Laya.Event.MOUSE_UP, this, this._onConfirm);
    }, i.prototype._onConfirm = function() {
      this._canshare ? this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.RANK_INVITE, this, this.onSuccess, this.onFail, this.oncomplete) : this.shareSuccessAdd();
    }, i.prototype.shareSuccessAdd = function() {
      this._post && this._playerModule && (this._playerModule.Player.showReward(t.PlayerInfo.REWARD_TYPE_DIAMON, this._post.Reward, this._name),
        asgard.ui.UIManager.closeView(t.UIPanelID.LEVELUPTIP));
    }, i.prototype.onSuccess = function(t) {
      this._shareConfig && this.shareSuccessAdd();
    }, i.prototype.onFail = function() {}, i.prototype.oncomplete = function() {}, i.prototype._onClose = function() {
      asgard.ui.UIManager.closeView(t.UIPanelID.LEVELUPTIP), this._playerModule.Player.showReward(t.PlayerInfo.REWARD_TYPE_DIAMON, this._post.Reward, this._name);
    }, i.prototype.onHide = function() {
      this._panel.closebtn.off(Laya.Event.MOUSE_UP, this, this._onClose), this._panel.confirm.off(Laya.Event.MOUSE_UP, this, this._onConfirm);
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.NewLevelTipsPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.RankPanelUI(), this._sprite = new Laya.Sprite(),
          this._sprite.pos(0, 0), this._panel.addChild(this._sprite), this._panel.setChildIndex(this._sprite, 3)),
        this._panel;
    }, i.prototype.onShow = function() {
      this.showShareCanvas(), WxShowRank(), WxGetFriendRankList(), this._panel.closeBtn.on(Laya.Event.MOUSE_UP, this, this._onBtnClose),
        this._panel.inviteBtn.on(Laya.Event.MOUSE_UP, this, this._onInvite), this._panel.friendGift.on(Laya.Event.MOUSE_UP, this, this._onFriendGift);
    }, i.prototype.onHide = function() {
      this._sprite.graphics.clear();
    }, i.prototype.showShareCanvas = function() {
      var t = window.sharedCanvas;
      if (t) {
        t.width = Laya.stage.width, t.height = Laya.stage.height, this._panel.width = Laya.stage.width,
          this._panel.height = Laya.stage.height;
        var e = new Laya.Texture(t);
        e.bitmap.alwaysChange = !0, this._sprite.graphics.clear(), this._sprite.graphics.drawTexture(e, 0, 0, e.width, e.height);
      }
    }, i.prototype._onFriendGift = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.openView(t.UIPanelID.ACHIVEMENT);
    }, i.prototype._onInvite = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.RANK_INVITE, this, this.onSuccess, this.onFail, this.oncomplete);
    }, i.prototype.onSuccess = function(e) {
      t.CommonUI.Tips.show("邀请成功");
    }, i.prototype.onFail = function(e) {
      t.CommonUI.Tips.show("邀请失败"), console.log("share onFail", e);
    }, i.prototype.oncomplete = function(t) {
      console.log("share oncomplete", t);
    }, i.prototype._onBtnClose = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.closeView(t.UIPanelID.RANKLIST),
        WxCloseRank();
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.RankListPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.ShopListUI(), this._panel.listpanel.itemRender = t.UIItemGrid,
          this._panel.listpanel.selectEnable = !0, this._panel.listpanel.vScrollBarSkin = "",
          this._panel.listpanel.selectHandler = new Laya.Handler(this, this._onSelect), this._panel.listpanel.renderHandler = new Laya.Handler(this, this._updateItem),
          this._panel.listpanel.repeatX = 1, this._panel.listpanel.spaceY = 5, this._panel.listpanel.repeatY = 6),
        this._panel;
    }, i.prototype.onShow = function() {
      this._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER), this._panel.closebtn.on(Laya.Event.MOUSE_UP, this, this.onClose),
        this._ItemListModule = asgard.module.ModuleManager.getModule(t.MODULE_LIST);
      var e = new Array();
      this._ItemListModule.ItemList.forEach(function(t) {
          null != t && e.push(t);
        }), this._panel.listpanel.array = e, asgard.events.EventsDispatcher.registerEventListener(t.GameEvents.EVENT_UPDATE_COIN, this, this._onUpdateCoin),
        this._onUpdateCoin();
    }, i.prototype._onUpdateCoin = function() {
      this._panel.coinlab.text = t.Utils.getCoinStr(this._playerModule.Player.Coin, 5);
    }, i.prototype.onClose = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.closeView(t.UIPanelID.HEROLIST);
    }, i.prototype._updateItem = function(t, e) {
      t.onRender(t.dataSource);
    }, i.prototype._onSelect = function(t) {
      console.log("当前选择的索引：" + t);
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.HeroListPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i() {
      var i = e.call(this) || this;
      return i.diamonBtn.on(Laya.Event.MOUSE_UP, i, i._onClickDiamonBtn), i.confirm.on(Laya.Event.MOUSE_UP, i, i._onClickBtn),
        i._slotModule = asgard.module.ModuleManager.getModule(t.MODULE_SLOT), asgard.events.EventsDispatcher.registerEventListener(t.GameEvents.EVENT_UPDATE_ITEM_BUY_COUNT, i, i._onAddSlot),
        i;
    }
    return __extends(i, e), i.prototype._onAddSlot = function() {
      this._data && this._slotModule.addSlotInfo && this._slotModule.addSlotInfo.Post.Id == this._data.Post.Id && (this.coinLabel.changeText(t.Utils.getCoinStr(this._data.Price, 4)),
        this.diamonLab.changeText(this._data.DiamonPrice + ""));
    }, i.prototype._onClickBtn = function(e) {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), this._data && !this._data.isCoinUnLock || this._slotModule.tryAdd2EmptySlot(this._data.Post.Id, t.AddSlotType.COIN);
    }, i.prototype._onClickDiamonBtn = function(e) {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), this._data && !this._data.isDiamonUnLock || this._slotModule.tryAdd2EmptySlot(this._data.Post.Id, t.AddSlotType.DIAMON);
    }, i.prototype.onRender = function(e) {
      if (this._data = e, this.itemName.changeText(e.Name), this.headIcon.skin = "icon/" + e.Post.Icon,
        this.levelLab.changeText(e.Level + ""), e.isUnlock) this.headIcon.filters = null,
        this.itemName.visible = !0;
      else {
        var i = new Laya.ColorFilter([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]);
        this.headIcon.filters = [i], this.itemName.visible = !1;
      }
      if (e.isUnlock && !e.isCoinUnLock && e.isDiamonUnLock && e.Post.Dprice > 0 ? (this.diamonBtn.visible = !0,
          this.diamonLab.changeText(e.DiamonPrice + "")) : this.diamonBtn.visible = !1, this.confirm.visible = e.isCoinUnLock,
        this.unlockBtn.visible = !e.isCoinUnLock, e.isCoinUnLock) {
        var n = e.Price;
        this.coinLabel.changeText(t.Utils.getCoinStr(n, 4));
      } else this.unlockLevel.changeText(e.Post.Lv + 4 + "");
    }, i;
  }(ui.panel.ShopGridUI);
  t.UIItemGrid = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.SpeedUpUI()), this._panel;
    }, i.prototype.onShow = function() {
      this._panel.btnfree.on(Laya.Event.MOUSE_UP, this, this._onBtnFree), this._panel.btnvideo.on(Laya.Event.MOUSE_UP, this, this._onBtnvideo),
        this._panel.btnshare.on(Laya.Event.MOUSE_UP, this, this._onBtnShare), this._panel.btnclose.on(Laya.Event.MOUSE_UP, this, this._onBtnClose),
        this._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER), this._panel.btnshare.visible = t.ShareInfo.Instance().speedUpShare;
    }, i.prototype._onBtnClose = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.closeView(t.UIPanelID.SPEEDUP);
    }, i.prototype._onBtnFree = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), this._playerModule.Player.Diamon < 10 ? asgard.ui.UIManager.openView(t.UIPanelID.NoCoinTip, new t.NoCoinTipInfo(2)) : (this._playerModule.Player.subDiamon(10),
        this._playerModule.Player.addSpeedTime(60), this._onBtnClose());
    }, i.prototype._onBtnvideo = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), 0 != t.GameData.Instance().isVideoAdCanPlay ? t.PlatForm.GetInstance().CreateRewardedVideoAd(t.GameConst.VIDEO_AD_REWARD, Laya.Handler.create(this, this._onVideoCallback)) : t.CommonUI.Tips.show("今日看视频次数达到上限!");
    }, i.prototype._onVideoCallback = function(e) {
      asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_VIDEO_AD_CLOSE), "ok" == e ? (this._playerModule.Player.addSpeedTime(200),
        asgard.ui.UIManager.closeView(this._name)) : t.CommonUI.Tips.show(t.GameConst.VIDEO_AD_FAILED_TIPS);
    }, i.prototype._onBtnShare = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.SPEEDUP, this, this.onSuccess, this.onFail, this.oncomplete);
    }, i.prototype.onSuccess = function(e) {
      this._shareConfig && (1 == this._shareConfig.Group ? e && e.shareTickets ? (this._playerModule.Player.addSpeedTime(300),
        asgard.ui.UIManager.closeView(t.UIPanelID.SPEEDUP)) : t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS) : (this._playerModule.Player.addSpeedTime(300),
        asgard.ui.UIManager.closeView(t.UIPanelID.SPEEDUP)));
    }, i.prototype.onFail = function() {
      console.log("share onFail"), t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS2);
    }, i.prototype.oncomplete = function() {
      console.log("share oncomplete");
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.SpeedUpPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.NoCoinTipsUI()), this._panel;
    }, i.prototype.onShow = function() {
      this._panel.closebtn.on(Laya.Event.MOUSE_UP, this, this._onClose), this._panel.videoBtn.on(Laya.Event.MOUSE_UP, this, this._onVideo),
        this._panel.shareBtn.on(Laya.Event.MOUSE_UP, this, this._onShare), this._panel.titleLab.changeText("获得免费宝箱"),
        this._panel.titleLab.fontSize = 55, this._panel.shareBtnLab.changeText("领取"), this._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
      var e = asgard.module.ModuleManager.getModule(t.MODULE_LIST),
        i = Laya.loader.getRes("common/cointree.png");
      i && (this._panel.iconImg.graphics.clear(), this._panel.iconImg.graphics.drawTexture(i, 0, 0, i.width, i.height),
        this._panel.iconImg.pivot(.5 * i.width, .5 * i.height));
      var n = this._panel.iconImg.parent;
      this._panel.iconImg.pos(.5 * n.width, .5 * n.height), this._currItem = e.getCurrUnlockItem(),
        this._addCoin = this._playerModule.Player.getShareCoin(this._currItem), this._panel.addCoin.text = "+" + t.Utils.getMainArenaCoinStr(this._addCoin) + "金币";
      var s = t.ShareInfo.Instance().getBtnsConfig(this._name);
      s ? this._setBtnStatus(s) : (this._panel.videoBtn.visible = !1, this._panel.shareBtn.visible = !1);
    }, i.prototype._setBtnStatus = function(t) {
      if (void 0 == t) return this._panel.shareBtn.visible = !1, this._panel.videoBtn.visible = !0,
        void this._panel.videoBtn.pos(132, 577);
      t.update(), 1 == t.showShare && 1 == t.showVideo ? (this._panel.shareBtn.visible = !0,
        this._panel.shareBtn.pos(13, 577), this._panel.videoBtn.visible = !0, this._panel.videoBtn.pos(256, 577)) : 1 == t.showShare && 0 == t.showVideo ? (this._panel.shareBtn.visible = !0,
        this._panel.shareBtn.pos(132, 577), this._panel.videoBtn.visible = !1) : 0 == t.showShare && 1 == t.showVideo ? (this._panel.shareBtn.visible = !1,
        this._panel.videoBtn.visible = !0, this._panel.videoBtn.pos(132, 577)) : (this._panel.shareBtn.visible = !1,
        this._panel.videoBtn.visible = !1);
    }, i.prototype.onFrame = function(e, i) {
      if (this.isResReady() && this._panel.videoBtn.visible) {
        var n = e - this._playerModule.viewADtime;
        n < t.GameConst.VIDEO_AD_CD ? (n = Math.ceil((t.GameConst.VIDEO_AD_CD - n) / 1e3),
          this._panel.videoTime.changeText(n + " 秒"), 0 == this._panel.videoTime.visible && (this._panel.videoTime.visible = !0),
          0 == this._panel.videoBtn.gray && (this._panel.videoBtn.gray = !0)) : (1 == this._panel.videoTime.visible && (this._panel.videoTime.visible = !1),
          1 == this._panel.videoBtn.gray && (this._panel.videoBtn.gray = !1));
      }
    }, i.prototype._onClose = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.closeView(this._name);
    }, i.prototype.onHide = function() {
      this._panel.closebtn.off(Laya.Event.MOUSE_UP, this, this._onClose), this._panel.videoBtn.off(Laya.Event.MOUSE_UP, this, this._onVideo),
        this._panel.shareBtn.off(Laya.Event.MOUSE_UP, this, this._onShare);
    }, i.prototype._onVideo = function() {
      this._panel.videoBtn.gray || (t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1),
        t.PlatForm.GetInstance().CreateRewardedVideoAd(t.GameConst.VIDEO_AD_BOX, Laya.Handler.create(this, this._onVideoCallback)));
    }, i.prototype._onVideoCallback = function(e) {
      asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_VIDEO_AD_CLOSE), "ok" == e ? (this._playerModule.Player.showReward(t.PlayerInfo.REWARD_TYPE_COIN, this._addCoin, this._name),
        this._playerModule.hideBox(), this._addCoin = 0, asgard.ui.UIManager.closeView(this._name)) : t.CommonUI.Tips.show(t.GameConst.VIDEO_AD_FAILED_TIPS);
    }, i.prototype._onShare = function() {
      this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.NO_COIN, this, this.onSuccess, this.onFail, this.oncomplete);
    }, i.prototype.onSuccess = function(e) {
      this._shareConfig && (1 == this._shareConfig.Group ? e && e.shareTickets ? (this._playerModule.Player.showReward(t.PlayerInfo.REWARD_TYPE_COIN, this._addCoin, this._name),
          this._playerModule.hideBox(), this._addCoin = 0, asgard.ui.UIManager.closeView(this._name)) : t.CommonUI.Tips.show("操作无效") : (this._playerModule.Player.showReward(t.PlayerInfo.REWARD_TYPE_COIN, this._addCoin, this._name),
          this._playerModule.hideBox(), this._addCoin = 0, asgard.ui.UIManager.closeView(this._name))),
        console.log("share onSuccess", e);
    }, i.prototype.onFail = function(e) {
      t.CommonUI.Tips.show("操作无效"), console.log("share onFail", e);
    }, i.prototype.oncomplete = function(t) {
      console.log("share oncomplete", t), this._shareConfig = null;
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.BoxRewardPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.FlyTipUI()), this._panel;
    }, i.prototype.onShow = function() {
      this._panel.clost_btn.on(Laya.Event.CLICK, this, this._onClose), this._panel.confirm_btn.on(Laya.Event.CLICK, this, this._onConfirm);
    }, i.prototype.onHide = function() {
      this._panel.clost_btn.off(Laya.Event.CLICK, this, this._onClose), this._panel.confirm_btn.off(Laya.Event.CLICK, this, this._onConfirm);
    }, i.prototype._onClose = function() {
      asgard.ui.UIManager.closeView(this.getName());
    }, i.prototype._onConfirm = function() {
      t.GameData.Instance().isCanFly() ? (asgard.ui.UIManager.closeView(this.getName()),
        asgard.ui.UIManager.openView(t.UIPanelID.MSGBOX, new t.MsgShowData("飞升后会清空当前数据，\n且不能恢复！", "飞升提示", Laya.Handler.create(null, function() {
          t.GameData.Instance().doFly();
        })))) : t.CommonUI.Tips.show("飞升需要3个无上皇");
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.FlyTipPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.getDependenceRes = function() {
      return [{
        url: t.CommonRes.UI_GUIDE_BEAUTY,
        type: Laya.Loader.IMAGE
      }];
    }, i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.GuideTipUI()), this._panel;
    }, i.prototype.onShow = function() {
      this._panel.on(Laya.Event.CLICK, this, this._onClose), this._panel.confirm_btn.on(Laya.Event.CLICK, this, this._onClose);
    }, i.prototype._onClose = function() {
      asgard.ui.UIManager.closeView(this._name);
    }, i.prototype.onHide = function() {
      this._panel.off(Laya.Event.CLICK, this, this._onClose), this._panel.confirm_btn.off(Laya.Event.CLICK, this, this._onClose);
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.GuideTipPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.getDependenceRes = function() {
      return [{
        url: "bg/guideBg.jpg",
        type: Laya.Loader.IMAGE
      }];
    }, i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.HowPlayUI()), this._panel;
    }, i.prototype.onShow = function() {
      this._panel.closebtn.on(Laya.Event.MOUSE_UP, this, this._onClose);
    }, i.prototype._onClose = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.closeView(this._name);
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.HowPlayPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.DoublingUI()), this._panel;
    }, i.prototype.onShow = function() {
      this._doublingNum = this._showData.num, this._panel.Close_btn.on(Laya.Event.CLICK, this, this._onClose),
        this._panel.draw_btn.on(Laya.Event.CLICK, this, this._onDraw), this._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER),
        this._panel.title_Lab.text = "发财啦~\n下次奖励翻" + this._doublingNum + "倍！！！", this._panel.desc_Lab.text = this._doublingNum + "倍";
    }, i.prototype._onDraw = function() {
      var e = t.ShareInfo.Instance().getBtnsConfig(this._name);
      e && (e.showVideo ? t.PlatForm.GetInstance().CreateRewardedVideoAd(t.GameConst.VIDEO_AD_REWARD, Laya.Handler.create(this, this._onVideoCallback)) : e.showShare && (this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.OFFLINE, this, this.onSuccess, this.onFail, null)));
    }, i.prototype._doubleDraw = function() {
      this._playerModule.Player.luckwheeldoubling = this._doublingNum, asgard.ui.UIManager.closeView(this.getName());
    }, i.prototype._onVideoCallback = function(e) {
      asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_VIDEO_AD_CLOSE), "ok" == e ? this._doubleDraw() : t.CommonUI.Tips.show(t.GameConst.VIDEO_AD_FAILED_TIPS);
    }, i.prototype.onSuccess = function(e) {
      Laya.Browser.onPC ? this._doubleDraw() : this._shareConfig && (1 == this._shareConfig.Group ? e && e.shareTickets ? this._doubleDraw() : t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS) : this._doubleDraw());
    }, i.prototype.onFail = function(e) {
      t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS2);
    }, i.prototype._onClose = function() {
      this._playerModule.Player.luckyCount++, asgard.ui.UIManager.closeView(t.UIPanelID.MOONTIP);
    }, i.prototype.onHide = function() {
      this._panel.draw_btn.off(Laya.Event.CLICK, this, this._onDraw), this._panel.Close_btn.off(Laya.Event.CLICK, this, this._onClose);
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.MoonTipPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function() {
    return function(t) {
      this.type = t;
    };
  }();
  t.NoCoinTipInfo = e;
  var i = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.NoCoinTipsUI()), this._panel;
    }, i.prototype.setIcon = function() {
      var t = "";
      2 == this._noCoinTipInfo.type ? t = "common/diamon2.png" : 1 == this._noCoinTipInfo.type && (t = "common/cointree.png");
      var e = Laya.loader.getRes(t);
      e && (this._panel.iconImg.graphics.clear(), this._panel.iconImg.graphics.drawTexture(e, 0, 0, e.width, e.height),
        this._panel.iconImg.pivot(.5 * e.width, .5 * e.height));
      var i = this._panel.iconImg.parent;
      this._panel.iconImg.pos(.5 * i.width, .5 * i.height);
    }, i.prototype.onShow = function() {
      if (this._noCoinTipInfo = this._showData, null != this._noCoinTipInfo) {
        this._panel.closebtn.on(Laya.Event.CLICK, this, this._onClose), this._panel.videoBtn.on(Laya.Event.CLICK, this, this._onVideo),
          this._panel.shareBtn.on(Laya.Event.CLICK, this, this._onShare), this.setIcon(),
          this._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
        var e = asgard.module.ModuleManager.getModule(t.MODULE_LIST);
        if (2 == this._noCoinTipInfo.type) this._addCoin = this._playerModule.Player.getShareDiamon(),
          this._panel.addCoin.text = "+" + this._addCoin + "钻石", this._panel.titleLab.text = "钻石不足",
          this._panel.shareBtnLab.changeText("我要钻石");
        else if (1 == this._noCoinTipInfo.type) {
          var i = e.getCurrUnlockItem();
          this._addCoin = this._playerModule.Player.getShareCoin(i), this._panel.addCoin.text = "+" + t.Utils.getMainArenaCoinStr(this._addCoin) + "金币",
            this._panel.titleLab.changeText("金币不足"), this._panel.shareBtnLab.changeText("我要金币");
        }
        var n = t.ShareInfo.Instance().getBtnsConfig(this._name);
        n ? this._setBtnStatus(n) : (this._panel.videoBtn.visible = !0, this._panel.shareBtn.visible = !1);
      } else console.error("_noCoinTipInfo null");
    }, i.prototype._setBtnStatus = function(t) {
      if (null == t) return this._panel.shareBtn.visible = !1, this._panel.videoBtn.visible = !0,
        void console.error("btnInfo null");
      t.update(), 1 == t.showShare && 1 == t.showVideo ? (this._panel.shareBtn.visible = !0,
        this._panel.shareBtn.pos(18, 579), this._panel.videoBtn.visible = !0, this._panel.videoBtn.pos(254, 579)) : 1 == t.showShare && 0 == t.showVideo ? (this._panel.shareBtn.visible = !0,
        this._panel.shareBtn.pos(132, 579), this._panel.videoBtn.visible = !1) : 0 == t.showShare && 1 == t.showVideo ? (this._panel.shareBtn.visible = !1,
        this._panel.videoBtn.visible = !0, this._panel.videoBtn.pos(132, 579)) : (this._panel.shareBtn.visible = !1,
        this._panel.videoBtn.visible = !0);
    }, i.prototype.onFrame = function(e, i) {
      if (this.isResReady() && this._panel.videoBtn.visible) {
        var n = e - this._playerModule.viewADtime;
        n < t.GameConst.VIDEO_AD_CD ? (n = Math.ceil((t.GameConst.VIDEO_AD_CD - n) / 1e3),
          this._panel.videoTime.changeText(n + " 秒"), 0 == this._panel.videoTime.visible && (this._panel.videoTime.visible = !0),
          0 == this._panel.videoBtn.gray && (this._panel.videoBtn.gray = !0)) : (1 == this._panel.videoTime.visible && (this._panel.videoTime.visible = !1),
          1 == this._panel.videoBtn.gray && (this._panel.videoBtn.gray = !1));
      }
    }, i.prototype._onClose = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.closeView(t.UIPanelID.NoCoinTip),
        asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_COLSE_NOCOIN);
    }, i.prototype.onHide = function() {
      this._addCoin = 0, this._shareConfig = null, this._panel.closebtn.off(Laya.Event.CLICK, this, this._onClose),
        this._panel.videoBtn.off(Laya.Event.CLICK, this, this._onVideo), this._panel.shareBtn.off(Laya.Event.CLICK, this, this._onShare);
    }, i.prototype._onShare = function() {
      this._noCoinTipInfo && (2 == this._noCoinTipInfo.type ? this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.NO_DIAMON, this, this.onSuccess, this.onFail, this.oncomplete) : 1 == this._noCoinTipInfo.type && (this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.NO_COIN, this, this.onSuccess, this.onFail, this.oncomplete)));
    }, i.prototype._onVideo = function() {
      this._panel.videoBtn.gray || (t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1),
        this._noCoinTipInfo && (1 == this._noCoinTipInfo.type ? t.PlatForm.GetInstance().CreateRewardedVideoAd(t.GameConst.VIDEO_AD_COIN, Laya.Handler.create(this, this._onVideoCallback)) : 2 == this._noCoinTipInfo.type && t.PlatForm.GetInstance().CreateRewardedVideoAd(t.GameConst.VIDEO_AD_DIAMON, Laya.Handler.create(this, this._onVideoCallback))));
    }, i.prototype._onVideoCallback = function(e) {
      asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_VIDEO_AD_CLOSE), "ok" == e ? this.onShowReward() : t.CommonUI.Tips.show(t.GameConst.VIDEO_AD_FAILED_TIPS);
    }, i.prototype.onShowReward = function() {
      this._noCoinTipInfo && (1 == this._noCoinTipInfo.type ? (this._playerModule.Player.showReward(t.PlayerInfo.REWARD_TYPE_COIN, this._addCoin, this._name),
        this._playerModule.Player.addShareCoinCount()) : 2 == this._noCoinTipInfo.type && (this._playerModule.Player.showReward(t.PlayerInfo.REWARD_TYPE_DIAMON, this._addCoin, this._name),
        this._playerModule.Player.addShareDiamonCount()), this._addCoin = 0, asgard.ui.UIManager.closeView(t.UIPanelID.NoCoinTip));
    }, i.prototype.onSuccess = function(e) {
      this._shareConfig && (1 == this._shareConfig.Group ? e && e.shareTickets ? this.onShowReward() : t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS) : this.onShowReward());
    }, i.prototype.onFail = function(e) {
      t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS2), console.log("share onFail", e);
    }, i.prototype.oncomplete = function(t) {
      console.log("share oncomplete", t);
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.NoCoinTipsPanel = i;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.NoTicketsTipUI()), this._panel;
    }, i.prototype.onShow = function() {
      this._panel.close_Btn.on(Laya.Event.CLICK, this, this._onClose), this._panel.confirm_btn.on(Laya.Event.CLICK, this, this._doAddTickets),
        this._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
    }, i.prototype.onHide = function() {
      this._panel.close_Btn.off(Laya.Event.CLICK, this, this._onClose), this._panel.confirm_btn.off(Laya.Event.CLICK, this, this._doAddTickets);
    }, i.prototype._onClose = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.closeView(this._name);
    }, i.prototype._doAddTickets = function() {
      if (this._playerModule.Player.luckyShareCount >= t.GameConst.LUCKYWHEEL_GET_TICKETS_TIMES) t.CommonUI.Tips.show("今日获取次数已达上线");
      else if (this._playerModule.Player.luckyCount >= t.GameConst.LUCKYWHEEL_MAX_TICKETS) t.CommonUI.Tips.show("转盘券已达上限，赶快抽奖吧");
      else {
        t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1);
        var e = t.ShareInfo.Instance().getBtnsConfig(t.UIPanelID.LUCKYWHEEL);
        e && (e.update(), e.showVideo ? t.PlatForm.GetInstance().CreateRewardedVideoAd(t.GameConst.VIDEO_AD_REWARD, Laya.Handler.create(this, this._onVideoCallback)) : e.showShare && (this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.NO_COIN, this, this.onSuccess, this.onFail, this.oncomplete)));
      }
    }, i.prototype._onVideoCallback = function(e) {
      asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_VIDEO_AD_CLOSE), "ok" == e ? (this._playerModule.addLuckyTickets(),
        asgard.ui.UIManager.closeView(this._name)) : t.CommonUI.Tips.show(t.GameConst.VIDEO_AD_FAILED_TIPS);
    }, i.prototype.onSuccess = function(e) {
      this._shareConfig && (1 == this._shareConfig.Group ? e && e.shareTickets ? (this._playerModule.addLuckyTickets(),
        asgard.ui.UIManager.closeView(this._name)) : t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS) : (this._playerModule.addLuckyTickets(),
        asgard.ui.UIManager.closeView(this._name)));
    }, i.prototype.onFail = function(e) {
      t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS2);
    }, i.prototype.oncomplete = function(t) {
      console.log("share oncomplete", t);
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.NoTicketsPanel = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.OfflineRewardUI()), this._panel;
    }, i.prototype._onVideoLoadFail = function() {
      var e = t.ShareInfo.Instance().getBtnsConfig(this._name);
      this._ShareBtnInfo = e, e ? (this._setBtnStatus(e), this._panel.shareBtnLab.changeText(t.RewardTipPanel.getShareBtnText(e.rwShareMul)),
        this._panel.videoBtnLab.changeText(t.RewardTipPanel.getVideoBtnText(e.rwVideoMul))) : (this._panel.share.visible = !1,
        this._panel.video.visible = !1, this._panel.confirm.visible = !0);
    }, i.prototype.onShow = function() {
      this._addCoin = 0, t.SystemHelper.playSound(t.CommonRes.SOUND_REWARD, 1);
      var e = asgard.module.ModuleManager.getModule(t.MODULE_SLOT);
      asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
      this._panel.getcoin.text = "+" + t.Utils.getMainArenaCoinStr(e.offlineCoin), this._addCoin = e.offlineCoin,
        e.isLeftOverMaxTime && t.CommonUI.Tips.show("离线收益上限为2小时"), this._panel.closeBtn.on(Laya.Event.MOUSE_UP, this, this._onCloseBtn),
        this._panel.confirm.on(Laya.Event.MOUSE_UP, this, this._onCloseBtn), this._panel.share.on(Laya.Event.MOUSE_UP, this, this._onShare),
        this._panel.video.on(Laya.Event.MOUSE_UP, this, this._onVideo);
      var i = t.ShareInfo.Instance().getBtnsConfig(this._name);
      this._ShareBtnInfo = i, i ? (this._setBtnStatus(i), this._panel.shareBtnLab.changeText(t.RewardTipPanel.getShareBtnText(i.rwShareMul)),
        this._panel.videoBtnLab.changeText(t.RewardTipPanel.getVideoBtnText(i.rwVideoMul))) : (this._panel.share.visible = !1,
        this._panel.video.visible = !1, this._panel.confirm.visible = !0), asgard.events.EventsDispatcher.registerEventListener(t.GameEvents.EVENT_VIDEO_AD_LOAD_FAIL, this, this._onVideoLoadFail);
    }, i.prototype._setBtnStatus = function(e) {
      if (null == e) return this._panel.share.visible = !1, this._panel.video.visible = !1,
        void(this._panel.confirm.visible = !0);
      e.update();
      t.GameData.Instance().isVideoAdCanPlay || (e.showVideo = !1), 1 == e.showShare && 1 == e.showVideo ? (this._panel.share.visible = !0,
        this._panel.share.pos(54, 581), this._panel.video.visible = !0, this._panel.video.pos(278, 581),
        this._panel.confirm.visible = !1) : 1 == e.showShare && 0 == e.showVideo ? (this._panel.share.visible = !0,
        this._panel.share.pos(this._panel.confirm.x, 581), this._panel.video.visible = !1,
        this._panel.confirm.visible = !1) : 0 == e.showShare && 1 == e.showVideo ? (this._panel.share.visible = !1,
        this._panel.video.visible = !0, this._panel.video.pos(this._panel.confirm.x, 581),
        this._panel.confirm.visible = !1) : (this._panel.share.visible = !1, this._panel.video.visible = !1,
        this._panel.confirm.visible = !0);
    }, i.prototype.leaveAddCoin = function() {
      var e = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
      this._addCoin > 0 && (console.log("playeModule.Player coin " + e.Player.Coin + " _addCoin " + this._addCoin),
          e.Player.addCoin(this._addCoin), console.log("playeModule.Player add coin " + e.Player.Coin)),
        this._addCoin = 0;
    }, i.prototype._onVideo = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), t.PlatForm.GetInstance().CreateRewardedVideoAd(t.GameConst.VIDEO_AD_OFFLINE, Laya.Handler.create(this, this._onVideoCallback));
    }, i.prototype._onVideoCallback = function(e) {
      if (asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_VIDEO_AD_CLOSE),
        "ok" == e) {
        if (this._ShareBtnInfo) {
          asgard.module.ModuleManager.getModule(t.MODULE_PLAYER).Player.showReward(t.PlayerInfo.REWARD_TYPE_COIN, this._addCoin * this._ShareBtnInfo.rwShareMul, this._name);
        } else console.error("this._ShareBtnInfo null");
        this._addCoin = 0, asgard.ui.UIManager.closeView(t.UIPanelID.OFFLINETIP);
      } else t.CommonUI.Tips.show(t.GameConst.VIDEO_AD_FAILED_TIPS);
    }, i.prototype._onShare = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.OFFLINE, this, this.onSuccess, this.onFail, this.oncomplete);
    }, i.prototype.onSuccess = function(e) {
      if (this._shareConfig)
        if (1 == this._shareConfig.Group)
          if (e && e.shareTickets && this._ShareBtnInfo) {
            (i = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER)).Player.showReward(t.PlayerInfo.REWARD_TYPE_COIN, this._addCoin * this._ShareBtnInfo.rwShareMul, this._name),
              this._addCoin = 0, asgard.ui.UIManager.closeView(t.UIPanelID.OFFLINETIP);
          } else t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS2);
      else if (this._ShareBtnInfo) {
        var i = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
        i.Player.showReward(t.PlayerInfo.REWARD_TYPE_COIN, this._addCoin * this._ShareBtnInfo.rwShareMul, this._name),
          this._addCoin = 0, asgard.ui.UIManager.closeView(t.UIPanelID.OFFLINETIP);
      }
    }, i.prototype.onFail = function() {
      t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS2);
    }, i.prototype.oncomplete = function() {
      console.log("share oncomplete");
    }, i.prototype.onHide = function() {
      this._panel.closeBtn.off(Laya.Event.MOUSE_UP, this, this._onCloseBtn), this._panel.confirm.off(Laya.Event.MOUSE_UP, this, this._onCloseBtn),
        this._panel.share.off(Laya.Event.MOUSE_UP, this, this._onShare), this._panel.video.off(Laya.Event.MOUSE_UP, this, this._onVideo),
        t.GameData.Instance().saveLocalGameData(), t.GameData.Instance().postGameData();
    }, i.prototype._onCloseBtn = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), this.leaveAddCoin(), asgard.ui.UIManager.closeView(t.UIPanelID.OFFLINETIP);
    }, i.prototype.onFrame = function(t, e) {
      0 == this._visible && console.error("this._visible false"), 0 == this.isVisible() && console.error("this.isVisible false");
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.OfflineReward = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(t) {
    function e() {
      var e = t.call(this) || this;
      return e.width = Laya.stage.width, e.height = Laya.stage.height, e._bg = new Laya.Image(),
        e._bg.skin = "common/zhezhao.jpg", e.addChild(e._bg), e._bg.alpha = .5, e._lable = new Laya.Label(),
        e._lable.font = "Arial", e._lable.fontSize = 30, e._lable.bold = !0, e._lable.color = "#eeb627",
        e.addChild(e._lable), e.visible = !1, e;
    }
    return __extends(e, t), e.prototype.show = function(t) {
      this.visible = !0, this._lable.text = t, this._lable.pivot(.5 * this._lable.displayWidth, .5 * this._lable.displayHeight),
        this._bg.width = this._lable.displayWidth + 20, this._bg.height = this._lable.height + 10,
        this._bg.pivot(.5 * this._bg.width, .5 * this._bg.height), this._bg.pos(.5 * Laya.stage.width, .5 * Laya.stage.height - 100),
        this._lable.pos(this._bg.x, this._bg.y), this.clearTimer(this, this.hide), this.timerOnce(1500, this, this.hide);
    }, e.prototype.hide = function() {
      this.visible = !1;
    }, e;
  }(Laya.Sprite);
  t.PopTips = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function() {
    return function(t, e, i) {
      this.rewardType = t, this.rewardNum = e, this.fromPanel = i;
    };
  }();
  t.RewardPanelInfo = e;
  var i = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.RewardTipUI()), this._panel;
    }, i.getShareBtnText = function(t) {
      return 2 == t ? "收益翻倍" : 3 == t ? "分享到群三倍" : "分享";
    }, i.getVideoBtnText = function(t) {
      return 2 == t ? "看视频翻倍" : 3 == t ? "看视频三倍" : "看视频";
    }, i.prototype.onShow = function() {
      if (this._shareSuccess = !1, this._rewardPanelInfo = this._showData, null == this._rewardPanelInfo) return asgard.ui.UIManager.closeView(this._name),
        void console.error("没有获得奖励数据来源");
      Laya.Browser.onPC && console.log("this._rewardPanelInfo ", this._rewardPanelInfo),
        t.SystemHelper.playSound(t.CommonRes.SOUND_REWARD, 1), this._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER),
        this._panel.shareBtn.on(Laya.Event.MOUSE_UP, this, this._onShare), this._panel.btnClose.on(Laya.Event.MOUSE_UP, this, this._onClose),
        this._panel.videoBtn.on(Laya.Event.MOUSE_UP, this, this._onVideo), this._panel.confirmBtn.on(Laya.Event.MOUSE_UP, this, this._onClose),
        this._setIcon(), this._panel.countLab.text = "+ " + t.Utils.getMainArenaCoinStr(this._rewardPanelInfo.rewardNum),
        this._shareBtnInfo = t.ShareInfo.Instance().getBtnsConfig(this._rewardPanelInfo.fromPanel),
        this._setBtnStatus(this._shareBtnInfo), this._shareBtnInfo && (Laya.Browser.onPC && console.log("this._shareBtnInfo ", this._shareBtnInfo),
          this._panel.shareBtnLab.text = i.getShareBtnText(this._shareBtnInfo.rwShareMul),
          this._panel.videoBtnLab.text = i.getVideoBtnText(this._shareBtnInfo.rwVideoMul)),
        asgard.events.EventsDispatcher.registerEventListener(t.GameEvents.EVENT_VIDEO_AD_LOAD_FAIL, this, this._onVideoLoadFail);
    }, i.prototype._onVideoLoadFail = function() {
      void 0 != this._rewardPanelInfo && null != this._rewardPanelInfo && (this._shareBtnInfo = t.ShareInfo.Instance().getBtnsConfig(this._rewardPanelInfo.fromPanel),
        this._setBtnStatus(this._shareBtnInfo), this._shareBtnInfo && (Laya.Browser.onPC && console.log("this._shareBtnInfo ", this._shareBtnInfo),
          this._panel.shareBtnLab.text = i.getShareBtnText(this._shareBtnInfo.rwShareMul),
          this._panel.videoBtnLab.text = i.getVideoBtnText(this._shareBtnInfo.rwVideoMul)));
    }, i.prototype.onFrame = function(e, i) {
      if (this.isResReady() && this._panel.videoBtn.visible) {
        var n = e - this._playerModule.viewADtime;
        n < t.GameConst.VIDEO_AD_CD ? (n = Math.ceil((t.GameConst.VIDEO_AD_CD - n) / 1e3),
          this._panel.videoTime.changeText(n + " 秒"), 0 == this._panel.videoTime.visible && (this._panel.videoTime.visible = !0),
          0 == this._panel.videoBtn.gray && (this._panel.videoBtn.gray = !0)) : (1 == this._panel.videoTime.visible && (this._panel.videoTime.visible = !1),
          1 == this._panel.videoBtn.gray && (this._panel.videoBtn.gray = !1));
      }
    }, i.prototype._setIcon = function() {
      var e = "";
      this._rewardPanelInfo.rewardType == t.PlayerInfo.REWARD_TYPE_COIN ? e = "common/cointree.png" : this._rewardPanelInfo.rewardType == t.PlayerInfo.REWARD_TYPE_DIAMON ? e = "common/diamon2.png" : this._rewardPanelInfo.rewardType == t.PlayerInfo.REWARD_TYPE_TICKETS && (e = "common/luckyTickets.png");
      var i = Laya.loader.getRes(e);
      i && (this._panel.iconImg.graphics.clear(), this._panel.iconImg.graphics.drawTexture(i, 0, 0, i.width, i.height),
        this._panel.iconImg.pivot(.5 * i.width, .5 * i.height));
      var n = this._panel.iconImg.parent;
      this._panel.iconImg.pos(.5 * n.width, .5 * n.height);
    }, i.prototype._setBtnStatus = function(t) {
      if (null == t || 0 == t.rwshowShare && 0 == t.rwshowVideo) return this._panel.shareBtn.visible = !1,
        this._panel.videoBtn.visible = !1, void(this._panel.confirmBtn.visible = !0);
      1 == t.rwshowShare && 1 == t.rwshowVideo ? (this._panel.shareBtn.visible = !0, this._panel.shareBtn.pos(10, 593),
        this._panel.videoBtn.visible = !0, this._panel.videoBtn.pos(257, 593), this._panel.confirmBtn.visible = !1) : 1 == t.rwshowShare && 0 == t.rwshowVideo ? (this._panel.shareBtn.visible = !0,
        this._panel.shareBtn.pos(132, 593), this._panel.videoBtn.visible = !1, this._panel.confirmBtn.visible = !1) : 0 == t.rwshowShare && 1 == t.rwshowVideo ? (this._panel.shareBtn.visible = !1,
        this._panel.videoBtn.visible = !0, this._panel.videoBtn.pos(132, 593), this._panel.confirmBtn.visible = !1) : (this._panel.shareBtn.visible = !1,
        this._panel.videoBtn.visible = !1, this._panel.confirmBtn.visible = !0);
    }, i.prototype._onVideo = function() {
      this._panel.videoBtn.gray || (t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1),
        t.PlatForm.GetInstance().CreateRewardedVideoAd(t.GameConst.VIDEO_AD_REWARD, Laya.Handler.create(this, this._onVideoCallback)));
    }, i.prototype._onVideoCallback = function(e) {
      if (asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_VIDEO_AD_CLOSE),
        "ok" == e) {
        if (this._panel.videoBtn.visible = !1, this._panel.shareBtn.visible = !1, this._panel.confirmBtn.visible = !0,
          null == this._rewardPanelInfo) return void console.error("this._rewardPanelInfo null");
        if (this._rewardPanelInfo.rewardType == t.PlayerInfo.REWARD_TYPE_COIN) {
          i = Math.floor(this._rewardPanelInfo.rewardNum * this._shareBtnInfo.rwVideoMul);
          this._panel.countLab.changeText("+ " + t.Utils.getMainArenaCoinStr(i)), this._playerModule.Player.addCoin(i);
        } else if (this._rewardPanelInfo.rewardType == t.PlayerInfo.REWARD_TYPE_DIAMON) {
          var i = Math.floor(this._rewardPanelInfo.rewardNum * this._shareBtnInfo.rwVideoMul);
          this._panel.countLab.changeText("+ " + i), this._playerModule.Player.addDiamon(i);
        }
        this._shareSuccess = !0;
      } else t.CommonUI.Tips.show(t.GameConst.VIDEO_AD_FAILED_TIPS);
    }, i.prototype.onHide = function() {
      if (this._rewardPanelInfo && this._rewardPanelInfo.fromPanel == t.UIPanelID.LOGINDAY && asgard.ui.UIManager.openView(t.UIPanelID.SUPRISE),
        this._panel.shareBtn.off(Laya.Event.MOUSE_UP, this, this._onShare), this._panel.btnClose.off(Laya.Event.MOUSE_UP, this, this._onClose),
        this._panel.videoBtn.off(Laya.Event.MOUSE_UP, this, this._onVideo), this._panel.confirmBtn.off(Laya.Event.MOUSE_UP, this, this._onClose),
        0 == this._shareSuccess && this._rewardPanelInfo)
        if (this._rewardPanelInfo.rewardType == t.PlayerInfo.REWARD_TYPE_COIN) {
          e = Math.floor(this._rewardPanelInfo.rewardNum);
          this._playerModule.Player.addCoin(e);
        } else if (this._rewardPanelInfo.rewardType == t.PlayerInfo.REWARD_TYPE_DIAMON) {
        var e = Math.floor(this._rewardPanelInfo.rewardNum);
        this._playerModule.Player.addDiamon(e);
      } else this._rewardPanelInfo.rewardType, t.PlayerInfo.REWARD_TYPE_TICKETS;
      this._rewardPanelInfo = null, asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_TRIGGER_GUIDE_NEXT),
        t.GameData.Instance().saveLocalGameData();
    }, i.prototype._onClose = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), asgard.ui.UIManager.closeView(t.UIPanelID.REWARDTIP);
    }, i.prototype._onShare = function() {
      t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1), this._rewardPanelInfo.fromPanel == t.UIPanelID.OFFLINETIP ? this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.OFFLINE, this, this.onSuccess, this.onFail, this.oncomplete) : this._rewardPanelInfo.fromPanel == t.UIPanelID.LEVELUPTIP ? this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.NEWLEVEL, this, this.onSuccess, this.onFail, this.oncomplete) : this._rewardPanelInfo.fromPanel == t.UIPanelID.NoCoinTip ? this._rewardPanelInfo.rewardType == t.PlayerInfo.REWARD_TYPE_COIN ? this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.NO_COIN, this, this.onSuccess, this.onFail, this.oncomplete) : this._rewardPanelInfo.rewardType == t.PlayerInfo.REWARD_TYPE_DIAMON && (this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.NO_DIAMON, this, this.onSuccess, this.onFail, this.oncomplete)) : this._rewardPanelInfo.fromPanel == t.UIPanelID.INVITEFRIEND ? this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.INVITE_FRIEND, this, this.onSuccess, this.onFail, this.oncomplete) : this._rewardPanelInfo.fromPanel == t.UIPanelID.LOGINDAY && (this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.INVITE_FRIEND, this, this.onSuccess, this.onFail, this.oncomplete));
    }, i.prototype.shareSuccessAdd = function() {
      if (this._panel.videoBtn.visible = !1, this._panel.shareBtn.visible = !1, this._panel.confirmBtn.visible = !0,
        null != this._rewardPanelInfo) {
        if (this._rewardPanelInfo.rewardType == t.PlayerInfo.REWARD_TYPE_COIN) {
          e = Math.floor(this._rewardPanelInfo.rewardNum * this._shareBtnInfo.rwShareMul);
          this._panel.countLab.changeText("+ " + t.Utils.getMainArenaCoinStr(e)), this._playerModule.Player.addCoin(e);
        } else if (this._rewardPanelInfo.rewardType == t.PlayerInfo.REWARD_TYPE_DIAMON) {
          var e = Math.floor(this._rewardPanelInfo.rewardNum * this._shareBtnInfo.rwShareMul);
          this._panel.countLab.changeText("+ " + e), this._playerModule.Player.addDiamon(e);
        }
        this._shareSuccess = !0;
      }
    }, i.prototype.onSuccess = function(e) {
      this._shareConfig ? 1 == this._shareConfig.Group ? e && e.shareTickets ? this.shareSuccessAdd() : t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS) : this.shareSuccessAdd() : (this._panel.videoBtn.visible = !1,
        this._panel.shareBtn.visible = !1, this._panel.confirmBtn.visible = !0, this._shareSuccess = !1);
    }, i.prototype.onFail = function(e) {
      t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS2);
    }, i.prototype.oncomplete = function(t) {
      console.log("share oncomplete", t);
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.RewardTipPanel = i;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
  var t = function(e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function(t, e) {
        t.__proto__ = e;
      } || function(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function(e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype,
      new n());
  };
}();

! function(t) {
  var e = function(e) {
    function i(t) {
      return e.call(this, t) || this;
    }
    return __extends(i, e), i.prototype.createView = function() {
      return this._panel || (this._panel = new ui.panel.SupriseUI()), this._panel;
    }, i.prototype.onShow = function() {
      this._panel.close_btn.on(Laya.Event.CLICK, this, this._onClose), this._panel.confirm_btn.on(Laya.Event.CLICK, this, this._onConfirm),
        this._panel.topclose_btn.on(Laya.Event.CLICK, this, this._onClose), this._playerModule = asgard.module.ModuleManager.getModule(t.MODULE_PLAYER);
      var e = this._playerModule.Player.loginRewardDays - 1;
      e >= 0 && e < t.LoginDayPanel.rewardDiamonds.length ? this._addDiamon = t.LoginDayPanel.rewardDiamonds[e] : this._addDiamon = 300,
        this._panel.diamon_Lab.text = "X" + this._addDiamon;
    }, i.prototype._onConfirm = function() {
      var e = t.ShareInfo.Instance().getBtnsConfig(this.getName());
      e && (e.showShare ? this._shareConfig = t.PlatForm.GetInstance().ShowShareMenu(t.ShareType.NO_DIAMON, this, this.onSuccess, this.onFail, null) : e.showVideo && (t.SystemHelper.playSound(t.CommonRes.SOUND_CLICK, 1),
        t.PlatForm.GetInstance().CreateRewardedVideoAd(t.GameConst.VIDEO_AD_REWARD, Laya.Handler.create(this, this._onVideoCallback))));
    }, i.prototype.onSuccess = function(e) {
      this._shareConfig && 1 == this._shareConfig.Group ? e && e.shareTickets ? this._showReward() : t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS) : this._showReward();
    }, i.prototype.onFail = function(e) {
      t.CommonUI.Tips.show(t.GameConst.SHARE_FAILED_TIPS2);
    }, i.prototype._showReward = function() {
      this._playerModule.Player.showReward(t.PlayerInfo.REWARD_TYPE_DIAMON, this._addDiamon, this.getName()),
        asgard.ui.UIManager.closeView(this.getName());
    }, i.prototype._onVideoCallback = function(e) {
      asgard.events.EventsDispatcher.eventNotify(t.GameEvents.EVENT_VIDEO_AD_CLOSE), "ok" == e ? this._showReward() : t.CommonUI.Tips.show(t.GameConst.VIDEO_AD_FAILED_TIPS);
    }, i.prototype._onClose = function() {
      asgard.ui.UIManager.closeView(this.getName());
    }, i.prototype.onHide = function() {
      this._panel.close_btn.off(Laya.Event.CLICK, this, this._onClose), this._panel.confirm_btn.off(Laya.Event.CLICK, this, this._onConfirm),
        this._panel.topclose_btn.off(Laya.Event.CLICK, this, this._onClose);
    }, i;
  }(asgard.ui.BaseUIPanel);
  t.SuprisePanel = e;
}(logic || (logic = {}));

var logic;

! function(t) {
  var e = function() {
    function t() {}
    return t.LOADING = "Loading", t.JOYSTICK = "JoyStick", t.MAINMENU = "Mainmenu",
      t.ARENAMAIN = "ArenaMain", t.HEROLIST = "HeroList", t.NoCoinTip = "NoCoinTip", t.LEVELUPTIP = "NewLevelTips",
      t.OFFLINETIP = "OfflineReward", t.RANKLIST = "RankList", t.LOGINDAY = "LoginDay",
      t.SPEEDUP = "SpeedUp", t.ACHIVEMENT = "FriendAchivemen", t.INVITEFRIEND = "InviteFriend",
      t.REWARDTIP = "RewardTip", t.FRIENDHELP = "FriendHelp", t.BOXREWARD = "BoxReward",
      t.HOWPLAY = "HowPlay", t.INVITELOGIN = "invitelogin", t.LUCKYWHEEL = "luckyWheel",
      t.NOLUCKYTICKETS = "NoLuckyTickets", t.MOREGAME = "Moregame", t.GUIDETIP = "GuideTip",
      t.SUPRISE = "Suprise", t.MOONTIP = "Moontip", t.MSGBOX = "MsgBox", t.FLYTIP = "FlyTip",
      t;
  }();
  t.UIPanelID = e;
  var i = function() {
    function i() {}
    return i.addGuidView = function() {
      i.guidePanel || (i.guidePanel = new t.GuidePanel(), asgard.ui.UIManager.addGuideView(i.guidePanel));
    }, i.prototype.getUI = function(i) {
      switch (i) {
        case e.LOADING:
          return new t.LoadingPanel(i);

        case e.ARENAMAIN:
          return new t.ArenaMainPanel(i);

        case e.HEROLIST:
          return new t.HeroListPanel(i);

        case e.NoCoinTip:
          return new t.NoCoinTipsPanel(i);

        case e.LEVELUPTIP:
          return new t.NewLevelTipsPanel(i);

        case e.OFFLINETIP:
          return new t.OfflineReward(i);

        case e.RANKLIST:
          return new t.RankListPanel(i);

        case e.LOGINDAY:
          return new t.LoginDayPanel(i);

        case e.SPEEDUP:
          return new t.SpeedUpPanel(i);

        case e.INVITEFRIEND:
          return new t.IniviteFriendPanel(i);

        case e.REWARDTIP:
          return new t.RewardTipPanel(i);

        case e.BOXREWARD:
          return new t.BoxRewardPanel(i);

        case e.HOWPLAY:
          return new t.HowPlayPanel(i);

        case e.INVITELOGIN:
          return new t.InviteLogin(i);

        case e.LUCKYWHEEL:
          return new t.LuckyWheelPanel(i);

        case e.NOLUCKYTICKETS:
          return new t.NoTicketsPanel(i);

        case e.MOREGAME:
          return new t.MoreGamePanel(i);

        case e.GUIDETIP:
          return new t.GuideTipPanel(i);

        case e.SUPRISE:
          return new t.SuprisePanel(i);

        case e.MOONTIP:
          return new t.MoonTipPanel(i);

        case e.MSGBOX:
          return new t.MsgBoxPanel(i);

        case e.FLYTIP:
          return new t.FlyTipPanel(i);
      }
      return null;
    }, i;
  }();
  t.UIFactory = i;
}(logic || (logic = {}));

var IsLongScreen = !1,
  GameEntry = function() {
    function t() {
      Laya.MiniAdpter.init(!0), Laya.Browser.__init__();
      var t = laya.utils.Browser;
      if (null != t && null != t.width && null != t.height) {
        var e = Math.min(t.width, t.height),
          i = Math.max(t.width, t.height);
        logic.GameConst.SCEEN_HEIGHT = 1280 * i / e, IsLongScreen = i / e > 2.075, console.log("e" + e + " i " + i + i / e);
      }
      var n = this;
      IsMiniGame() ? wx.getSystemInfo({
        success: function(t) {
          n._init(logic.GameConst.SCEEN_WIDTH, t.screenHeight / t.screenWidth * logic.GameConst.SCEEN_WIDTH);
        },
        fail: function() {
          n._init(logic.GameConst.SCEEN_WIDTH, logic.GameConst.SCEEN_HEIGHT);
        },
        complete: function() {}
      }) : n._init(logic.GameConst.SCEEN_WIDTH, logic.GameConst.SCEEN_HEIGHT);
    }
    return t.prototype._init = function(t, e) {
      Laya.init(t, e, laya.webgl.WebGL), console.log(t, e), Laya.stage.alignH = Laya.Stage.ALIGN_CENTER,
        Laya.stage.alignV = Laya.Stage.ALIGN_MIDDLE, Laya.stage.screenMode = Laya.Stage.SCREEN_VERTICAL,
        Laya.stage.scaleMode = Laya.Stage.SCALE_FIXED_WIDTH, logic.PlatForm.GetInstance().InitSDK(),
        logic.Utils.setverTimestamp = 0, logic.Utils.offsetTimestamp = 0, asgard.module.ModuleManager.init(new logic.ModuleFactory()),
        asgard.stage.StageManager.init(logic.STAGE_LOADING, new logic.StageFactory()), asgard.ui.UIManager.init(new logic.UIFactory()),
        Laya.timer.frameLoop(1, this, this.onUpdate);
    }, t.prototype.onUpdate = function() {
      var t = Laya.timer.currTimer,
        e = Laya.timer.delta;
      asgard.ui.UIManager.onFrame(t, e), asgard.stage.StageManager.onFrame(t, e);
    }, t;
  }(),
  gameEntry = new GameEntry();